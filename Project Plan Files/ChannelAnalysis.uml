<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Pq63kGdHEe24LcnSyvVffw" name="ChannelAnalysis">
    <eAnnotations xmi:id="_Q7JJUGdHEe24LcnSyvVffw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Q7JJUWdHEe24LcnSyvVffw" source="codegen">
        <details xmi:id="_Q7JwYGdHEe24LcnSyvVffw" key="codegenDirectory" value="/cs2820-fall22/src"/>
        <details xmi:id="_TQnL4GdHEe24LcnSyvVffw" key="AssociatedSourceCode" value="/cs2820-fall22/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall22/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1654804636/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelAnalysisTest.java;2224001854/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelVisualization.java;575630107/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelVisualizationTest.java;536848034/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Channels.java;105405152/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelsTest.java;3718395581/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall22/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FileManager.java;2522714670/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Flow.java;889275975/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall22/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Program.java;183186416/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramVisualization.java;867879725/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;384175461/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;2067458194/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1561738288/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationObject.java;823199562/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1981400958/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoad.java;727085344/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Warp.java;418770348/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadTest.java;2456256290/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_SAExEGdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_SAFYIGdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_SAFYIWdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_SAFYImdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_SAFYI2dHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_SAFYJGdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_SAFYJWdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_SAFYJmdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_SAF_MGdHEe24LcnSyvVffw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_R-ljUGdHEe24LcnSyvVffw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_R-ljUWdHEe24LcnSyvVffw" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_R-ljUmdHEe24LcnSyvVffw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_R-pNsGdHEe24LcnSyvVffw" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_R_NOYGdHEe24LcnSyvVffw" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_SX4NEGdHEe24LcnSyvVffw" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_SAOiEGdHEe24LcnSyvVffw" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_SYX8UGdHEe24LcnSyvVffw" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_SBJIEGdHEe24LcnSyvVffw" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_SY9LIGdHEe24LcnSyvVffw" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_SY9yMWdHEe24LcnSyvVffw" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SFYu4GdHEe24LcnSyvVffw" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_SZwcYGdHEe24LcnSyvVffw" general="_SXrYwGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SaxJAGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SaxJAWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScjRsGdHEe24LcnSyvVffw" name="AbstractMap" specification="_SFeOcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScjRsWdHEe24LcnSyvVffw" type="_SFYu4GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SFeOcGdHEe24LcnSyvVffw" name="AbstractMap" method="_ScjRsGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SFe1gGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SFe1gWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SFfckGdHEe24LcnSyvVffw" type="_SFYu4GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SFgqsGdHEe24LcnSyvVffw" name="Activation">
              <generalization xmi:id="_SXyGdGdHEe24LcnSyvVffw" general="_SLjBQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SaxwEGdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw" isReadOnly="true" association="_SeBRUGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SayXIWdHEe24LcnSyvVffw" name="edges" type="_SXtN8GdHEe24LcnSyvVffw" isReadOnly="true" association="_SeCfcWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Say-MWdHEe24LcnSyvVffw" name="additionalScheduleTimes" type="_SXtN8GdHEe24LcnSyvVffw" isReadOnly="true" association="_SeDGgWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SazlQWdHEe24LcnSyvVffw" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SazlQmdHEe24LcnSyvVffw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_SZxDc2dHEe24LcnSyvVffw" client="_SFgqsGdHEe24LcnSyvVffw" supplier="_SZxDcWdHEe24LcnSyvVffw" contract="_SZxDcWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scm8EGdHEe24LcnSyvVffw" name="Activation" specification="_SFjG8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scm8EWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scm8EmdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scm8E2dHEe24LcnSyvVffw" name="Activation" specification="_SXvDIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScnjIGdHEe24LcnSyvVffw" name="elem" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScnjIWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScnjImdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScnjI2dHEe24LcnSyvVffw" name="clone" specification="_SFk8IGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScnjJGdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScnjJWdHEe24LcnSyvVffw" name="getEdgesByReleaseTime" specification="_SFnYYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScnjJmdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScnjJ2dHEe24LcnSyvVffw" name="getEdgesByLatestReleaseTime" specification="_SFomgWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScnjKGdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoKMGdHEe24LcnSyvVffw" name="getEdgesByPeriod" specification="_SFrCwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoKMWdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoKMmdHEe24LcnSyvVffw" name="getEdgesByDeadline" specification="_SFs38GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoKM2dHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoKNGdHEe24LcnSyvVffw" name="getEdgesByPriority" specification="_SFutIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoKNWdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoKNmdHEe24LcnSyvVffw" name="addEdges" specification="_SZyRkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoKN2dHEe24LcnSyvVffw" name="edges" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoKOGdHEe24LcnSyvVffw" name="addEdge" specification="_SXvqNmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoKOWdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoKOmdHEe24LcnSyvVffw" name="increaseEdgePhases" specification="_SFwiUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoKO2dHEe24LcnSyvVffw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoxQGdHEe24LcnSyvVffw" name="updatePriorityAndRelease" specification="_SFxJYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoxQWdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoxQmdHEe24LcnSyvVffw" name="addConflict" specification="_SFxwcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoxQ2dHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoxRGdHEe24LcnSyvVffw" name="addConflicts" specification="_SZy4oWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoxRWdHEe24LcnSyvVffw" name="conflicts" type="_SXucEWdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoxRmdHEe24LcnSyvVffw" name="addCoordinator" specification="_SFyXgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoxR2dHEe24LcnSyvVffw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScoxSGdHEe24LcnSyvVffw" name="addCoordinators" specification="_SZzfsWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScoxSWdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScpYUGdHEe24LcnSyvVffw" name="addScheduleTimes" specification="_SZ0GwWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScpYUWdHEe24LcnSyvVffw" name="scheduleTime" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScpYUmdHEe24LcnSyvVffw" name="getNextScheduleTime" specification="_SFy-kGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScpYU2dHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScpYVGdHEe24LcnSyvVffw" type="_SJzU0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScpYVWdHEe24LcnSyvVffw" name="getMatchingEndTime" specification="_SFzloGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScpYVmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScpYV2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScpYWGdHEe24LcnSyvVffw" name="getNextStartTime" specification="_SF0zwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScpYWWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScpYWmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScpYW2dHEe24LcnSyvVffw" name="getNextEndTime" specification="_SF1a0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScpYXGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScpYXWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scp_YGdHEe24LcnSyvVffw" name="getNumEdges" specification="_SF1a02dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scp_YWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scp_YmdHEe24LcnSyvVffw" name="compareTo" specification="_SXwRQWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scp_Y2dHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Scp_ZGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scp_ZWdHEe24LcnSyvVffw" name="conflictExists" specification="_SXw4UmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scp_ZmdHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Scp_Z2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScqmcGdHEe24LcnSyvVffw" name="canCombine" specification="_SXw4VWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScqmcWdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScqmcmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scqmc2dHEe24LcnSyvVffw" name="getDelta" specification="_SF2o8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScqmdGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScqmdWdHEe24LcnSyvVffw" name="getExecutionDuration" specification="_SF3QAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScqmdmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scqmd2dHEe24LcnSyvVffw" name="getCombinedExecutionDuration" specification="_SXw4WGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScqmeGdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScqmeWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScqmemdHEe24LcnSyvVffw" name="printAll" specification="_SF33EGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scqme2dHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScrNgGdHEe24LcnSyvVffw" name="printAll" specification="_SF4eIGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScrNgWdHEe24LcnSyvVffw" name="printEdges" specification="_SXxfYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScrNgmdHEe24LcnSyvVffw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScrNg2dHEe24LcnSyvVffw" name="edges" type="_SJP7MGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScrNhGdHEe24LcnSyvVffw" name="printEdges" specification="_SXyGcWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScrNhWdHEe24LcnSyvVffw" name="edges" type="_SJP7MGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SFjG8GdHEe24LcnSyvVffw" name="Activation" visibility="package" method="_Scm8EGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SFjuAGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SFjuAWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SFjG8WdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SFjuAmdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFk8IGdHEe24LcnSyvVffw" name="clone" method="_ScnjI2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXvqMGdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFnYYGdHEe24LcnSyvVffw" name="getEdgesByReleaseTime" method="_ScnjJWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF0GdHEe24LcnSyvVffw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_SXvqMWdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFomgWdHEe24LcnSyvVffw" name="getEdgesByLatestReleaseTime" method="_ScnjJ2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF0WdHEe24LcnSyvVffw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_SXvqMmdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFrCwGdHEe24LcnSyvVffw" name="getEdgesByPeriod" method="_ScoKMGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF0mdHEe24LcnSyvVffw">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_SXvqM2dHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFs38GdHEe24LcnSyvVffw" name="getEdgesByDeadline" method="_ScoKMmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF02dHEe24LcnSyvVffw">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_SXvqNGdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFutIGdHEe24LcnSyvVffw" name="getEdgesByPriority" method="_ScoKNGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF1GdHEe24LcnSyvVffw">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_SXvqNWdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFwiUGdHEe24LcnSyvVffw" name="increaseEdgePhases" method="_ScoKOmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF1WdHEe24LcnSyvVffw">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_SFwiUWdHEe24LcnSyvVffw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SFxJYGdHEe24LcnSyvVffw" name="updatePriorityAndRelease" method="_ScoxQGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdfF1mdHEe24LcnSyvVffw">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_SFxJYWdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SFxwcGdHEe24LcnSyvVffw" name="addConflict" method="_ScoxQmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SFxwcWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SFyXgGdHEe24LcnSyvVffw" name="addCoordinator" method="_ScoxRmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SFyXgWdHEe24LcnSyvVffw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SFy-kGdHEe24LcnSyvVffw" name="getNextScheduleTime" method="_ScpYUmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs4WdHEe24LcnSyvVffw">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_SFy-kWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SXwRQGdHEe24LcnSyvVffw" type="_SJzU0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SFzloGdHEe24LcnSyvVffw" name="getMatchingEndTime" method="_ScpYVWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs4mdHEe24LcnSyvVffw">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_SFzloWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SF0MsGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF0zwGdHEe24LcnSyvVffw" name="getNextStartTime" method="_ScpYWGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs42dHEe24LcnSyvVffw">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_SF0zwWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SF0zwmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF1a0GdHEe24LcnSyvVffw" name="getNextEndTime" method="_ScpYW2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs5GdHEe24LcnSyvVffw">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_SF1a0WdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SF1a0mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF1a02dHEe24LcnSyvVffw" name="getNumEdges" method="_Scp_YGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SF2B4GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF2o8GdHEe24LcnSyvVffw" name="getDelta" method="_Scqmc2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs5WdHEe24LcnSyvVffw">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SF2o8WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF3QAGdHEe24LcnSyvVffw" name="getExecutionDuration" method="_ScqmdWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SF3QAWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF33EGdHEe24LcnSyvVffw" name="printAll" method="_ScqmemdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SF33EWdHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SF4eIGdHEe24LcnSyvVffw" name="printAll" method="_ScrNgGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SXvDIGdHEe24LcnSyvVffw" name="Activation" visibility="package" method="_Scm8E2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SXvDI2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SXvDJGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SXvDIWdHEe24LcnSyvVffw" name="elem" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SXvDImdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SXvDJWdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SXvqNmdHEe24LcnSyvVffw" name="addEdge" method="_ScoKOGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXvqN2dHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SXwRQWdHEe24LcnSyvVffw" name="compareTo" method="_Scp_YmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXwRQmdHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SXwRQ2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SXw4UmdHEe24LcnSyvVffw" name="conflictExists" method="_Scp_ZWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXw4U2dHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SXw4VGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SXw4VWdHEe24LcnSyvVffw" name="canCombine" method="_ScqmcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXw4VmdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SXw4V2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SXw4WGdHEe24LcnSyvVffw" name="getCombinedExecutionDuration" method="_Scqmd2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXw4WWdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SXw4WmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SXxfYGdHEe24LcnSyvVffw" name="printEdges" visibility="private" method="_ScrNgWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXxfYWdHEe24LcnSyvVffw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SXxfYmdHEe24LcnSyvVffw" name="edges" type="_SJP7MGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SXyGcWdHEe24LcnSyvVffw" name="printEdges" visibility="private" method="_ScrNhGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SXyGcmdHEe24LcnSyvVffw" name="edges" type="_SJP7MGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZyRkGdHEe24LcnSyvVffw" name="addEdges" method="_ScoKNmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZyRkWdHEe24LcnSyvVffw" name="edges" type="_SXtN8GdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZy4oWdHEe24LcnSyvVffw" name="addConflicts" method="_ScoxRGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZy4omdHEe24LcnSyvVffw" name="conflicts" type="_SXucEWdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZzfsWdHEe24LcnSyvVffw" name="addCoordinators" method="_ScoxSGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZzfsmdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZ0GwWdHEe24LcnSyvVffw" name="addScheduleTimes" method="_ScpYUGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs4GdHEe24LcnSyvVffw">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZ0GwmdHEe24LcnSyvVffw" name="scheduleTime" type="_SXtN8GdHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGC2MGdHEe24LcnSyvVffw" name="Activations">
              <generalization xmi:id="_SXz7oGdHEe24LcnSyvVffw" general="_SFYu4GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sa2BgGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sa2BgWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGEEUGdHEe24LcnSyvVffw" name="BasicPoset">
              <ownedComment xmi:id="_Sdfs5mdHEe24LcnSyvVffw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_SX1Jw2dHEe24LcnSyvVffw" general="_SIaNsGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScrNhmdHEe24LcnSyvVffw" name="BasicPoset" specification="_SX0isWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScrNh2dHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScrNiGdHEe24LcnSyvVffw" type="_SGEEUGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SX0isWdHEe24LcnSyvVffw" name="BasicPoset" visibility="package" method="_ScrNhmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX1JwGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX1JwWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SX0ismdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX1JwmdHEe24LcnSyvVffw" type="_SGEEUGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGFScGdHEe24LcnSyvVffw" name="ChannelAnalysis">
              <ownedComment xmi:id="_Sdfs52dHEe24LcnSyvVffw">
                <body>&lt;h1>Implementation of the ChannelAnalysis class&lt;/h1>&#xD;
Used to analyze either Program or WarpInterface by converting to program.&#xD;
Can be used to detect channel conflicts.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Sa2BgmdHEe24LcnSyvVffw" name="program" visibility="protected" type="_SItvsGdHEe24LcnSyvVffw" association="_SeDtkWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sa2okWdHEe24LcnSyvVffw" name="programTable" visibility="protected" type="_SJGxQGdHEe24LcnSyvVffw" association="_SeDtlGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sa3PoGdHEe24LcnSyvVffw" name="conflictExists" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sa32sGdHEe24LcnSyvVffw" name="channelAnalysisTable" visibility="protected" type="_SJGxQGdHEe24LcnSyvVffw" association="_SeEUoWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scr0kGdHEe24LcnSyvVffw" name="ChannelAnalysis" specification="_SX1JxGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scr0kWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Scr0kmdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this(warp.toProgram());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scr0k2dHEe24LcnSyvVffw" name="ChannelAnalysis" specification="_SX1w0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scr0lGdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Scr0lWdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
	buildChannelAnalysisTable();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scr0lmdHEe24LcnSyvVffw" name="isChannelConflict" specification="_SGHusGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scr0l2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scr0mGdHEe24LcnSyvVffw" name="buildChannelAnalysisTable" specification="_SGIVwWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>//TODO Implement this method to create proper visualization of channel allocations (See MethodIdeas.md).&#xD;
	  var numColumns = programTable.getNumRows();&#xD;
	  var numRows = program.getNumChannels();&#xD;
	  channelAnalysisTable = new ProgramSchedule(numRows,numColumns);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scr0mWdHEe24LcnSyvVffw" name="getChannelAnalysisTable" specification="_SGI80GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scr0mmdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return channelAnalysisTable;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SGHusGdHEe24LcnSyvVffw" name="isChannelConflict" method="_Scr0lmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs6mdHEe24LcnSyvVffw">
                  <body>Determines whether or not there is a channel conflict.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return boolean based on if there is a channel conflict or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGIVwGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SGIVwWdHEe24LcnSyvVffw" name="buildChannelAnalysisTable" method="_Scr0mGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdfs62dHEe24LcnSyvVffw">
                  <body>This method parses the programSchedule object, programTable, to create a channel analysis table.&#xD;
   * The Visualization() method within ChannelVisualization will then use this analysis table to&#xD;
   * create the desired visualization (similar to how ProgramVisualization uses the &quot;sourceCode&quot;&#xD;
   * variable to create the *dsl file visualization.&#xD;
   * Should be private.&#xD;
   * &#xD;
   * @author eborchard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_SGI80GdHEe24LcnSyvVffw" name="getChannelAnalysisTable" method="_Scr0mWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdgT8GdHEe24LcnSyvVffw">
                  <body>Method that retrieves the channel analysis table created in the buildChannelAnalysisTable() method.&#xD;
   * &#xD;
   * @author eborchard&#xD;
   * @return ProgramSchedule The completed channel analysis table.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SX1w1WdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX1JxGdHEe24LcnSyvVffw" name="ChannelAnalysis" visibility="package" method="_Scr0kGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX1JxmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX1Jx2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Sdfs6GdHEe24LcnSyvVffw">
                  <body>Constructor that takes in a WarpInterface and converts it to a a program, calls the other &#xD;
   * class constructor with the Program object parameter then sets the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_SX1JxWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX1JyGdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX1w0GdHEe24LcnSyvVffw" name="ChannelAnalysis" visibility="package" method="_Scr0k2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX1w0mdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX1w02dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Sdfs6WdHEe24LcnSyvVffw">
                  <body>Constructor to set the program and it's schedule. Builds channel analysis table.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param program The program to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_SX1w0WdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX1w1GdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGMnMGdHEe24LcnSyvVffw" name="ChannelAnalysisTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScsboGdHEe24LcnSyvVffw" name="test" specification="_SGNOQGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SGNOQGdHEe24LcnSyvVffw" name="test" visibility="package" method="_ScsboGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGOcYGdHEe24LcnSyvVffw" name="ChannelVisualization">
              <ownedComment xmi:id="_SdgT8WdHEe24LcnSyvVffw">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SX3mB2dHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sa4dwGdHEe24LcnSyvVffw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sa4dwWdHEe24LcnSyvVffw" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sa4dwmdHEe24LcnSyvVffw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sa4dw2dHEe24LcnSyvVffw" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sa5E0GdHEe24LcnSyvVffw" name="warp" visibility="private" type="_SKZKsGdHEe24LcnSyvVffw" association="_SeE7sWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sa5E0mdHEe24LcnSyvVffw" name="ca" visibility="private" type="_SGFScGdHEe24LcnSyvVffw" association="_SeFiwWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScsboWdHEe24LcnSyvVffw" name="ChannelVisualization" specification="_SX3mAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScsbomdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Scsbo2dHEe24LcnSyvVffw" type="_SGOcYGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScsbpGdHEe24LcnSyvVffw" name="visualization" specification="_SGQRkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScsbpWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 ProgramSchedule sourceCode = ca.getChannelAnalysisTable();&#xD;
&#xD;
 /* create schedule output header of column time slots in order (zero-indexed), with \t as separator */&#xD;
 String columnString = &quot;Channel/Time Slot &quot;;&#xD;
 /* loop through the time slots adding the number and tab */&#xD;
 for (Integer columnNumber = 0; columnNumber &lt; sourceCode.getNumColumns(); columnNumber++) {&#xD;
 	columnString += columnNumber.toString() + &quot;\t&quot;;&#xD;
 }&#xD;
 /* add \n at the end */&#xD;
 columnString += &quot;\n&quot;;&#xD;
 content.add(columnString);&#xD;
 &#xD;
 /* loop through each index of the program schedule table */&#xD;
 for (Integer rowIndex = 0; rowIndex &lt; sourceCode.getNumRows(); rowIndex++) {&#xD;
 	/* create new row string staring with the channel number */&#xD;
 	String rowString = rowIndex.toString();&#xD;
 	for (Integer columnIndex = 0; columnIndex &lt; sourceCode.getNumColumns(); columnIndex++) {&#xD;
     	var entry = sourceCode.get(rowIndex, columnIndex);&#xD;
     	/* if entry is null, append a tab and hyphen */&#xD;
 		if (entry == null) {&#xD;
 			rowString += &quot;\t-&quot;;&#xD;
 		/* else append a tab and the contents of the entry */&#xD;
 		} else {        &#xD;
 			rowString += &quot;\t&quot; + entry;&#xD;
 		}&#xD;
 		/* append new line character when last column index is reached */&#xD;
 		if (columnIndex == sourceCode.getNumColumns() - 1) {&#xD;
 			rowString += &quot;\n&quot;;&#xD;
 		}&#xD;
 	}&#xD;
 	/* add each row to content */&#xD;
 	content.add(rowString);&#xD;
   }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScsbpmdHEe24LcnSyvVffw" name="createHeader" specification="_SGRfsmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scsbp2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(String.format(OBJECT_NAME + &quot; for graph %s created with the following parameters:\n&quot;,&#xD;
     warp.getName()));&#xD;
 header.add(String.format(&quot;Scheduler Name:\t%s\n&quot;, warp.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (warp.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
   header.add(String.format(&quot;nTransmissions:\t%d\n&quot;, warp.getNumTransmissions()));&#xD;
 } else if (warp.getNumFaults() > 0) {&#xD;
   header.add(String.format(&quot;numFaults:\t%d\n&quot;, warp.getNumFaults()));&#xD;
 } else {&#xD;
   header.add(String.format(&quot;M:\t%s\n&quot;, String.valueOf(warp.getMinPacketReceptionRate())));&#xD;
   header.add(String.format(&quot;E2E:\t%s\n&quot;, String.valueOf(warp.getE2e())));&#xD;
   header.add(String.format(&quot;nChannels:\t%d\n&quot;, warp.getNumChannels()));&#xD;
 }&#xD;
 if (!warp.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
   header.add(&quot;Optimization Requested:\tFalse\n&quot;);&#xD;
 }&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SGQRkGdHEe24LcnSyvVffw" name="visualization" method="_ScsbpGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX3mBWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SGRfsmdHEe24LcnSyvVffw" name="createHeader" method="_ScsbpmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX3mBmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX3mAGdHEe24LcnSyvVffw" name="ChannelVisualization" visibility="package" method="_ScsboWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX3mAmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX3mA2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdgT8mdHEe24LcnSyvVffw">
                  <body>Constructor converts WarpInterface to ChannelAnalysis for visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to convert to ChannelAnalysis for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_SX3mAWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX3mBGdHEe24LcnSyvVffw" type="_SGOcYGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGT78GdHEe24LcnSyvVffw" name="ChannelVisualizationTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SctpxGdHEe24LcnSyvVffw" name="createChannelVisualization" specification="_SGY0cGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SctpxWdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SctpxmdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sctpx2dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SctpyGdHEe24LcnSyvVffw" type="_SGOcYGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>WorkLoad workload = new WorkLoad(numFaults, .9, .99, inputFile);&#xD;
		ScheduleChoices choice = ScheduleChoices.PRIORITY;&#xD;
		WarpInterface warp = new WarpSystem(workload, numChannels, choice);&#xD;
		ChannelVisualization channelVis = new ChannelVisualization(warp);&#xD;
		return channelVis;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ0GdHEe24LcnSyvVffw" name="createChannelVisualizationMod" specification="_SGZbgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScuQ0WdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScuQ0mdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScuQ02dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScuQ1GdHEe24LcnSyvVffw" type="_SGOcYGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>WorkLoad workload = new WorkLoad(numFaults, .9, .99, inputFile);&#xD;
		ScheduleChoices choice = ScheduleChoices.PRIORITY;&#xD;
		WarpInterface warp = new WarpSystemMod(workload, numChannels, choice);&#xD;
		ChannelVisualization channelVis = new ChannelVisualization(warp);&#xD;
		return channelVis;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ1WdHEe24LcnSyvVffw" name="createHeaderTestNumFaultsEqualsZero" specification="_SGaCkGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(0, &quot;ExampleX.txt&quot;, 16);&#xD;
		Description actual = channelVis.createHeader();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel Analysis for graph ExampleX created with the following parameters:\n&quot;);&#xD;
		expected.add(&quot;Scheduler Name:	Priority\n&quot;);&#xD;
		expected.add(&quot;M:\t0.9\n&quot;);&#xD;
	    expected.add(&quot;E2E:\t0.99\n&quot;);&#xD;
	    expected.add(&quot;nChannels:\t16\n&quot;);&#xD;
		&#xD;
	    //System.out.print(actual);&#xD;
	    //System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ1mdHEe24LcnSyvVffw" name="createHeaderTestExampleX" specification="_SGapo2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(1, &quot;ExampleX.txt&quot;, 16);&#xD;
		Description actual = channelVis.createHeader();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel Analysis for graph ExampleX created with the following parameters:\n&quot;);&#xD;
		expected.add(&quot;Scheduler Name:	Priority\n&quot;);&#xD;
		expected.add(&quot;numFaults:	1\n&quot;);&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ12dHEe24LcnSyvVffw" name="createHeaderTestExample" specification="_SGbQs2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(2, &quot;Example.txt&quot;, 16);&#xD;
		Description actual = channelVis.createHeader();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel Analysis for graph Example created with the following parameters:\n&quot;);&#xD;
		expected.add(&quot;Scheduler Name:	Priority\n&quot;);&#xD;
		expected.add(&quot;numFaults:	2\n&quot;);&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ2GdHEe24LcnSyvVffw" name="visualizationTestEmptyTableExampleX" specification="_SGb3w2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(1, &quot;ExampleX.txt&quot;, 16);&#xD;
		Description actual = channelVis.visualization();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel/Time Slot 0	1	2	3	4	5	6	7	8	9	\n&quot;);&#xD;
		for(int i = 0; i &lt; 16; i++) {&#xD;
			expected.add(String.format(&quot;%s	-	-	-	-	-	-	-	-	-	-\n&quot;, i));&#xD;
		}&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ2WdHEe24LcnSyvVffw" name="visualizationTestEmptyTableTestBug" specification="_SGce02dHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(1, &quot;TestBug.txt&quot;, 16);&#xD;
		Description actual = channelVis.visualization();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel/Time Slot 0	1	2	3	4	5	6	7	8	9	10	11	\n&quot;);&#xD;
		for(int i = 0; i &lt; 16; i++) {&#xD;
			expected.add(String.format(&quot;%s	-	-	-	-	-	-	-	-	-	-	-	-\n&quot;, i));&#xD;
		}&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ2mdHEe24LcnSyvVffw" name="visualizationTestOneChannelTestBug" specification="_SGdF4mdHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(1, &quot;TestBug.txt&quot;, 1);&#xD;
		Description actual = channelVis.visualization();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel/Time Slot 0	1	2	3	4	5	6	7	8	9	10	11	\n&quot;);&#xD;
		for(int i = 0; i &lt; 1; i++) {&#xD;
			expected.add(String.format(&quot;%s	-	-	-	-	-	-	-	-	-	-	-	-\n&quot;, i));&#xD;
		}&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ22dHEe24LcnSyvVffw" name="visualizationTestTwentyFiveChannelsExampleX" specification="_SGds8WdHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualization(1, &quot;ExampleX.txt&quot;, 25);&#xD;
		Description actual = channelVis.visualization();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel/Time Slot 0	1	2	3	4	5	6	7	8	9	\n&quot;);&#xD;
		for(int i = 0; i &lt; 25; i++) {&#xD;
			expected.add(String.format(&quot;%s	-	-	-	-	-	-	-	-	-	-\n&quot;, i));&#xD;
		}&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScuQ3GdHEe24LcnSyvVffw" name="visualizationTestNoTable" specification="_SGeUAGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>ChannelVisualization channelVis = createChannelVisualizationMod(1, &quot;ExampleX.txt&quot;, 16);&#xD;
		Description actual = channelVis.visualization();&#xD;
		&#xD;
		Description expected = new Description();&#xD;
		expected.add(&quot;Channel/Time Slot \n&quot;);&#xD;
		&#xD;
		//System.out.print(actual);&#xD;
		//System.out.print(expected);&#xD;
		assertTrue(expected.equals(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SGY0cGdHEe24LcnSyvVffw" name="createChannelVisualization" visibility="private" method="_SctpxGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SGY0cWdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGY0cmdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGY0c2dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SX5bOWdHEe24LcnSyvVffw" type="_SGOcYGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SGZbgGdHEe24LcnSyvVffw" name="createChannelVisualizationMod" visibility="private" method="_ScuQ0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SGZbgWdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGZbgmdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGZbg2dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SX5bOmdHEe24LcnSyvVffw" type="_SGOcYGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SGaCkGdHEe24LcnSyvVffw" name="createHeaderTestNumFaultsEqualsZero" visibility="package" method="_ScuQ1WdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGapo2dHEe24LcnSyvVffw" name="createHeaderTestExampleX" visibility="package" method="_ScuQ1mdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGbQs2dHEe24LcnSyvVffw" name="createHeaderTestExample" visibility="package" method="_ScuQ12dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGb3w2dHEe24LcnSyvVffw" name="visualizationTestEmptyTableExampleX" visibility="package" method="_ScuQ2GdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGce02dHEe24LcnSyvVffw" name="visualizationTestEmptyTableTestBug" visibility="package" method="_ScuQ2WdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGdF4mdHEe24LcnSyvVffw" name="visualizationTestOneChannelTestBug" visibility="package" method="_ScuQ2mdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGds8WdHEe24LcnSyvVffw" name="visualizationTestTwentyFiveChannelsExampleX" visibility="package" method="_ScuQ22dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGeUAGdHEe24LcnSyvVffw" name="visualizationTestNoTable" visibility="package" method="_ScuQ3GdHEe24LcnSyvVffw"/>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_SGUjAGdHEe24LcnSyvVffw" name="ChannelAnalysisMod" visibility="package">
                <eAnnotations xmi:id="_SGVKEGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SGVKEWdHEe24LcnSyvVffw" key="sameFile"/>
                </eAnnotations>
                <generalization xmi:id="_SX40KWdHEe24LcnSyvVffw" general="_SGFScGdHEe24LcnSyvVffw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SctCsGdHEe24LcnSyvVffw" name="ChannelAnalysisMod" specification="_SX4NEmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SctCsWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SctCsmdHEe24LcnSyvVffw" type="_SGUjAGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>this(warp.toProgram());&#xD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SctCs2dHEe24LcnSyvVffw" name="ChannelAnalysisMod" specification="_SX40JGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SctCtGdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SctCtWdHEe24LcnSyvVffw" type="_SGUjAGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>super(program);&#xD;
		buildEmptyChannelAnalysisTable();&#xD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SctCtmdHEe24LcnSyvVffw" name="buildEmptyChannelAnalysisTable" specification="_SGVxIGdHEe24LcnSyvVffw">
                  <language>java</language>
                  <body>var numColumns = 0;&#xD;
		var numRows = 0;&#xD;
		channelAnalysisTable = new ProgramSchedule(numRows,numColumns);&#xD;
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_SGVxIGdHEe24LcnSyvVffw" name="buildEmptyChannelAnalysisTable" visibility="private" method="_SctCtmdHEe24LcnSyvVffw"/>
                <ownedOperation xmi:id="_SX4NEmdHEe24LcnSyvVffw" name="ChannelAnalysisMod" visibility="package" method="_SctCsGdHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SX40IWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SX40ImdHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_SX40IGdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SX40I2dHEe24LcnSyvVffw" type="_SGUjAGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SX40JGdHEe24LcnSyvVffw" name="ChannelAnalysisMod" visibility="package" method="_SctCs2dHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SX40JmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SX40J2dHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_SX40JWdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SX40KGdHEe24LcnSyvVffw" type="_SGUjAGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_SGWYMGdHEe24LcnSyvVffw" name="WarpSystemMod" visibility="package">
                <eAnnotations xmi:id="_SGWYMWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SGWYMmdHEe24LcnSyvVffw" key="sameFile"/>
                </eAnnotations>
                <generalization xmi:id="_SX5bOGdHEe24LcnSyvVffw" general="_SKc1EGdHEe24LcnSyvVffw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SctCt2dHEe24LcnSyvVffw" name="WarpSystemMod" specification="_SX5bMGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SctCuGdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SctCuWdHEe24LcnSyvVffw" name="numChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SctpwGdHEe24LcnSyvVffw" name="choice" type="_SJ5bcGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SctpwWdHEe24LcnSyvVffw" type="_SGWYMGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>super(workLoad, numChannels, choice);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SctpwmdHEe24LcnSyvVffw" name="toChannelAnalysis" specification="_SGW_QGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_Sctpw2dHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>ChannelAnalysis ca = new ChannelAnalysisMod(this);&#xD;
		return ca;&#xD;
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_SGW_QGdHEe24LcnSyvVffw" name="toChannelAnalysis" method="_SctpwmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SX5bN2dHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SX5bMGdHEe24LcnSyvVffw" name="WarpSystemMod" method="_SctCt2dHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SX5bNGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SX5bNWdHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_SX5bMWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SX5bMmdHEe24LcnSyvVffw" name="numChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SX5bM2dHEe24LcnSyvVffw" name="choice" type="_SJ5bcGdHEe24LcnSyvVffw"/>
                  <ownedParameter xmi:id="_SX5bNmdHEe24LcnSyvVffw" type="_SGWYMGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGgwQGdHEe24LcnSyvVffw" name="Channels">
              <ownedComment xmi:id="_SdgT82dHEe24LcnSyvVffw">
                <body>&lt;h1>Implementation of the Channel class.&lt;/h1>&#xD;
 The Channel class allows the user to handle the amount of wireless channels that are available for&#xD;
 scheduling using the private sub class ChannelSet and methods that can add or remove channel sets or&#xD;
 channels individually.&lt;p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Sa6S8WdHEe24LcnSyvVffw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sa66AWdHEe24LcnSyvVffw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sa7hEGdHEe24LcnSyvVffw" name="channelsAvailable" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_SeGJ0GdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scu35WdHEe24LcnSyvVffw" name="Channels" specification="_SGjzkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scve8GdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scve8WdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scve8mdHEe24LcnSyvVffw" type="_SGgwQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scve82dHEe24LcnSyvVffw" name="getChannelSet" specification="_SGlBsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scve9GdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scve9WdHEe24LcnSyvVffw" type="_SXtN8mdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return null;&#xD;
 }&#xD;
&#xD;
 /* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scve9mdHEe24LcnSyvVffw" name="addNewChannelSet" specification="_SGlowWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scve92dHEe24LcnSyvVffw" name="isEmpty" specification="_SGlowmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scve-GdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scve-WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scve-mdHEe24LcnSyvVffw" name="removeChannel" specification="_SGmP0WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scve-2dHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scve_GdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scve_WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
&#xD;
 if(!checkIfChannelExists(channels, channel)){&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel removal failed, channel '%s' does not exist\n&quot;, channel);&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scve_mdHEe24LcnSyvVffw" name="addChannel" specification="_SGm24WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scve_2dHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScvfAGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScvfAWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
&#xD;
 if(checkIfChannelExists(channels, channel)){ // returns false if channel exists&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel add failed, channel '%s' already exists\n&quot;, channel);&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScvfAmdHEe24LcnSyvVffw" name="getNumChannels" specification="_SGnd8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScvfA2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwGAGdHEe24LcnSyvVffw" name="checkIfTimeslotIsOutOfBounds" specification="_SGnd8mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScwGAWdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScwGAmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(timeSlot &lt; 0 || timeSlot >= channelsAvailable.size()){&#xD;
   if (verbose)&#xD;
     System.err.printf(&quot;Time slot '%d' does not exist\n&quot;, timeSlot);&#xD;
   return true;&#xD;
 }&#xD;
&#xD;
 return false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwGA2dHEe24LcnSyvVffw" name="checkIfChannelExists" specification="_SX6CQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScwGBGdHEe24LcnSyvVffw" name="channels" type="_SGhXUGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScwGBWdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScwGBmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return channels.contains(channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SGjzkGdHEe24LcnSyvVffw" name="Channels" visibility="package" method="_Scu35WdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SGkaoGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SGkaoWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdgT92dHEe24LcnSyvVffw">
                  <body>Constructor that takes in number of channels and verbose flag.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param nChannels amount of channels&#xD;
   * @param verbose if true, prints data to the screen</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGjzkWdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGjzkmdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGkaomdHEe24LcnSyvVffw" type="_SGgwQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SGlBsGdHEe24LcnSyvVffw" name="getChannelSet" method="_Scve82dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdgT-GdHEe24LcnSyvVffw">
                  <body>Gets the channel set for selected timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to retrieve channel set for&#xD;
   * @return HashSet of channels based on timeslot</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGlBsWdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZ178WdHEe24LcnSyvVffw" type="_SXtN8mdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SGlowWdHEe24LcnSyvVffw" name="addNewChannelSet" method="_Scve9mdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdgT-WdHEe24LcnSyvVffw">
                  <body>Adds a new channel set to available channels.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_SGlowmdHEe24LcnSyvVffw" name="isEmpty" method="_Scve92dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7AGdHEe24LcnSyvVffw">
                  <body>Checks if the channelSet is empty with the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to check channelSet&#xD;
   * @return boolean value based on if the channelSet at the given timeSlot is empty</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGlow2dHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGmP0GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SGmP0WdHEe24LcnSyvVffw" name="removeChannel" method="_Scve-mdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7AWdHEe24LcnSyvVffw">
                  <body>Removes channel from available channels at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to get channelSet&#xD;
   * @param channel Channel to remove&#xD;
   * @return boolean value based on the success of the channel removal at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGmP0mdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGmP02dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGm24GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SGm24WdHEe24LcnSyvVffw" name="addChannel" method="_Scve_mdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7AmdHEe24LcnSyvVffw">
                  <body>Adds channel at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to add channel at&#xD;
   * @param channel the channel to add&#xD;
   * @return boolean value based on success of channel being added at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGm24mdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGm242dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGm25GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SGnd8GdHEe24LcnSyvVffw" name="getNumChannels" method="_ScvfAmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7A2dHEe24LcnSyvVffw">
                  <body>Gets the number of channels.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return Integer representing the number of channels</body>
                </ownedComment>
                <ownedParameter xmi:id="_SGnd8WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SGnd8mdHEe24LcnSyvVffw" name="checkIfTimeslotIsOutOfBounds" visibility="private" method="_ScwGAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SGnd82dHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SGnd9GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SX6CQGdHEe24LcnSyvVffw" name="checkIfChannelExists" visibility="private" method="_ScwGA2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX6CQWdHEe24LcnSyvVffw" name="channels" type="_SGhXUGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX6pUGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SX6pUWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_SGhXUGdHEe24LcnSyvVffw" name="ChannelSet" visibility="private">
                <ownedComment xmi:id="_SdgT9GdHEe24LcnSyvVffw">
                  <body>Private class that extends a string HashSet to keep track of channels as a set.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
                <generalization xmi:id="_SZ1U4GdHEe24LcnSyvVffw" general="_SXtN8mdHEe24LcnSyvVffw"/>
                <ownedAttribute xmi:id="_Sa5r4WdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sa6S8GdHEe24LcnSyvVffw" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scu34GdHEe24LcnSyvVffw" name="ChannelSet" specification="_SGh-YGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_Scu34WdHEe24LcnSyvVffw" type="_SGhXUGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scu34mdHEe24LcnSyvVffw" name="ChannelSet" specification="_SGilcGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_Scu342dHEe24LcnSyvVffw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Scu35GdHEe24LcnSyvVffw" type="_SGhXUGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_SGh-YGdHEe24LcnSyvVffw" name="ChannelSet" visibility="private" method="_Scu34GdHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SGh-YWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SGh-YmdHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_SdgT9WdHEe24LcnSyvVffw">
                    <body>Default Constructor&#xD;
     * &#xD;
     * @author sgoddard</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_SGh-Y2dHEe24LcnSyvVffw" type="_SGhXUGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SGilcGdHEe24LcnSyvVffw" name="ChannelSet" visibility="private" method="_Scu34mdHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SGilcmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SGilc2dHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_SdgT9mdHEe24LcnSyvVffw">
                    <body>Constructor that takes in a channel amount on creation.&#xD;
     * &#xD;
     * @author sgoddard&#xD;
     * @param nChannels number of channels to add</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_SGilcWdHEe24LcnSyvVffw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SGjMgGdHEe24LcnSyvVffw" type="_SGhXUGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGp6MGdHEe24LcnSyvVffw" name="ChannelsTest" visibility="package">
              <ownedAttribute xmi:id="_Sa8vMGdHEe24LcnSyvVffw" name="channelSize" visibility="package" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sa9WQGdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtEGdHEe24LcnSyvVffw" name="testGetChannelSetByChannelSetSize" specification="_SGqhQGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>final var size = 10; // How many channelSets to be added.&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
&#xD;
		// Loop creates 'size' amount of channel sets, each timeSlot get i amount of channels added.&#xD;
		// timeSlot 0 = channelSet size of 0, timeSlot 1 = channelSet size of 1, ...timeSlot n = channelSet size of n&#xD;
		for(int i = 0; i &lt; size; i++){&#xD;
			channels.addNewChannelSet();&#xD;
			for(int j = 0; j &lt; i; j++) {&#xD;
				channels.addChannel(i,Integer.toString(j)); //add j as a filler channel&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Checks if getChannelSet works by comparing the timeSlot with channel size which should be equal from above loop&#xD;
		for(var i = 0; i &lt; size; i++){&#xD;
			var channelSet = channels.getChannelSet(i);&#xD;
			System.out.println(channelSet.size());&#xD;
			assertEquals(i, channelSet.size(), &quot;Error in getChannelSet returning correct Channel&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtEWdHEe24LcnSyvVffw" name="testGetChannelSetByChannel" specification="_SGrIUmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		channels.addChannel(0, &quot;Test 0&quot;);&#xD;
		channels.addChannel(1, &quot;Test 1&quot;);&#xD;
&#xD;
		assertTrue(channels.getChannelSet(0).contains(&quot;Test 0&quot;));&#xD;
		assertTrue(channels.getChannelSet(1).contains(&quot;Test 1&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtEmdHEe24LcnSyvVffw" name="testAddNewChannelSetBySize" specification="_SGsWcGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		final var channelSetSize = 10;&#xD;
&#xD;
		// Checks if initial size is 0&#xD;
		assertEquals(0, channels.channelsAvailable.size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
&#xD;
		for(int i = 0; i &lt; channelSetSize; i++){ // Adds the channelSets&#xD;
			channels.addNewChannelSet();&#xD;
		}&#xD;
&#xD;
		// Checks if the channelSet count is accurate&#xD;
		assertEquals(channelSetSize, channels.channelsAvailable.size(), &quot;ChannelSet size error&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtE2dHEe24LcnSyvVffw" name="testIsEmptyWhenCreatingEmptyChannels" specification="_SGsWdGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.isEmpty(0), &quot;IsEmpty failed on zero ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtFGdHEe24LcnSyvVffw" name="testIsEmptyWhenChannelsStartAboveZero" specification="_SGs9g2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertFalse(channels.isEmpty(0), &quot;IsEmpty retuned true on an non empty ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtFWdHEe24LcnSyvVffw" name="testEmptyAfterAdd" specification="_SGtkk2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
&#xD;
		assertTrue(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
		assertFalse(channels.isEmpty(0), &quot;ChannelSet empty after adding channel&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtFmdHEe24LcnSyvVffw" name="testEmptyAfterRemove" specification="_SGuLo2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>final var channelSize = 1;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created is not empty&#xD;
		assertFalse(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.removeChannel(0, &quot;0&quot;);&#xD;
&#xD;
		// Checks if removal of the only channel makes an empty ChannelSet&#xD;
		assertTrue(channels.isEmpty(0), &quot;ChannelSet not empty after channel removal&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtF2dHEe24LcnSyvVffw" name="testRemoveChannel" specification="_SGuysmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created channelSet is 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if channel was added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
&#xD;
		// Checks if removeChannel returns true&#xD;
		assertTrue(channels.removeChannel(0, &quot;Test&quot;), &quot;Channel removal failed&quot;);&#xD;
&#xD;
		// Checks if channel was removed by size&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Channel removal failed&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScwtGGdHEe24LcnSyvVffw" name="testAddChannelTimeSlots" specification="_SGvZwmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true); // Creates a channels class with no channels&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if channelSet is indeed 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;); //Adds a test channel&#xD;
&#xD;
		// Checks if the channel count increased for timeSlot 0 channelSet&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScxUIGdHEe24LcnSyvVffw" name="testAddChannelDuplicates" specification="_SGwA02dHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, false);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if initial is zero&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if adding channel worked&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Confirms duplicate channels aren't added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Error, channel duplicate added&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScxUIWdHEe24LcnSyvVffw" name="testAddChannel" specification="_SGwn4mdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.addChannel(0, &quot;Test&quot;), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScxUImdHEe24LcnSyvVffw" name="testGetNumChannelsNew" specification="_SGxO8mdHEe24LcnSyvVffw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		assertEquals(channelSize, channels.getNumChannels(), &quot;NumChannels has incorrect size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScxUI2dHEe24LcnSyvVffw" name="testGetNumChannelsNChannels" specification="_SGx2AmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
		// getNumChannels returns nChannels, so this should never fail&#xD;
		assertEquals(channels.nChannels, channels.getNumChannels(), &quot;GetNumChannels does not equal nChannels&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SGqhQGdHEe24LcnSyvVffw" name="testGetChannelSetByChannelSetSize" visibility="package" method="_ScwtEGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGrIUmdHEe24LcnSyvVffw" name="testGetChannelSetByChannel" visibility="package" method="_ScwtEWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGsWcGdHEe24LcnSyvVffw" name="testAddNewChannelSetBySize" visibility="package" method="_ScwtEmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGsWdGdHEe24LcnSyvVffw" name="testIsEmptyWhenCreatingEmptyChannels" visibility="package" method="_ScwtE2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGs9g2dHEe24LcnSyvVffw" name="testIsEmptyWhenChannelsStartAboveZero" visibility="package" method="_ScwtFGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGtkk2dHEe24LcnSyvVffw" name="testEmptyAfterAdd" visibility="package" method="_ScwtFWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGuLo2dHEe24LcnSyvVffw" name="testEmptyAfterRemove" visibility="package" method="_ScwtFmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGuysmdHEe24LcnSyvVffw" name="testRemoveChannel" visibility="package" method="_ScwtF2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGvZwmdHEe24LcnSyvVffw" name="testAddChannelTimeSlots" visibility="package" method="_ScwtGGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGwA02dHEe24LcnSyvVffw" name="testAddChannelDuplicates" visibility="package" method="_ScxUIGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGwn4mdHEe24LcnSyvVffw" name="testAddChannel" visibility="package" method="_ScxUIWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGxO8mdHEe24LcnSyvVffw" name="testGetNumChannelsNew" visibility="package" method="_ScxUImdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SGx2AmdHEe24LcnSyvVffw" name="testGetNumChannelsNChannels" visibility="package" method="_ScxUI2dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SGzEIGdHEe24LcnSyvVffw" name="CodeFragment">
              <ownedAttribute xmi:id="_Sa-kYGdHEe24LcnSyvVffw" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sa-kYWdHEe24LcnSyvVffw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sa-kYmdHEe24LcnSyvVffw" name="edges" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_SeGJ02dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sa_ygWdHEe24LcnSyvVffw" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbAZkWdHEe24LcnSyvVffw" name="codeFragment" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_SeGw4WdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbBnsGdHEe24LcnSyvVffw" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbBnsmdHEe24LcnSyvVffw" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScxUJGdHEe24LcnSyvVffw" name="CodeFragment" specification="_SG0SQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScxUJWdHEe24LcnSyvVffw" type="_SGzEIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScxUJmdHEe24LcnSyvVffw" name="CodeFragment" specification="_SZ2jAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScxUJ2dHEe24LcnSyvVffw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScxUKGdHEe24LcnSyvVffw" name="edges" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScxUKWdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_ScxUKmdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScxUK2dHEe24LcnSyvVffw" type="_SGzEIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scx7MGdHEe24LcnSyvVffw" name="getCoordinator" specification="_SG2HcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scx7MWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scx7MmdHEe24LcnSyvVffw" name="instructions" specification="_SG2HcmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scx7M2dHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scx7NGdHEe24LcnSyvVffw" name="size" specification="_SG3VkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scx7NWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scx7NmdHEe24LcnSyvVffw" name="generateCodeFragment" specification="_SG3VkmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scx7N2dHEe24LcnSyvVffw" name="getBaseInstruction" specification="_SG38oGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scx7OGdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scx7OWdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scx7OmdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scx7O2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Scx7PGdHEe24LcnSyvVffw" name="push" specification="_SG4jsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Scx7PWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scx7PmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scx7P2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Scx7QGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScyiQGdHEe24LcnSyvVffw" name="pull" specification="_SG5KwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScyiQWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiQmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiQ2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiRGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScyiRWdHEe24LcnSyvVffw" name="ifHas" specification="_SG5x0mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScyiRmdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiR2dHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiSGdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiSWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScyiSmdHEe24LcnSyvVffw" name="ifNotHas" specification="_SG6Y42dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScyiS2dHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiTGdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiTWdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiTmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScyiT2dHEe24LcnSyvVffw" name="wait" specification="_SG6_8mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScyiUGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ScyiUWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScyiUmdHEe24LcnSyvVffw" name="sleep" specification="_SG7nAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScyiU2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ScyiVGdHEe24LcnSyvVffw" name="reportIfDifferentCoordinators" specification="_SZ3xImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_ScyiVWdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczJUGdHEe24LcnSyvVffw" name="multipleCoordinators" specification="_SZ4YMWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczJUWdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczJUmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SG0SQGdHEe24LcnSyvVffw" name="CodeFragment" visibility="package" method="_ScxUJGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SG05UGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SG05UWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Sdg7BGdHEe24LcnSyvVffw">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SG05UmdHEe24LcnSyvVffw" type="_SGzEIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SG2HcGdHEe24LcnSyvVffw" name="getCoordinator" method="_Scx7MGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7BmdHEe24LcnSyvVffw">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_SG2HcWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG2HcmdHEe24LcnSyvVffw" name="instructions" method="_Scx7MmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7B2dHEe24LcnSyvVffw">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZ3xIWdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SG3VkGdHEe24LcnSyvVffw" name="size" method="_Scx7NGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdg7CGdHEe24LcnSyvVffw">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_SG3VkWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG3VkmdHEe24LcnSyvVffw" name="generateCodeFragment" visibility="private" method="_Scx7NmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SG38oGdHEe24LcnSyvVffw" name="getBaseInstruction" visibility="private" method="_Scx7N2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG38oWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG38omdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG38o2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG38pGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG4jsGdHEe24LcnSyvVffw" name="push" visibility="private" method="_Scx7PGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG4jsWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG4jsmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG4js2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG4jtGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG5KwGdHEe24LcnSyvVffw" name="pull" visibility="private" method="_ScyiQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG5KwWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG5KwmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG5x0GdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG5x0WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG5x0mdHEe24LcnSyvVffw" name="ifHas" visibility="private" method="_ScyiRWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG5x02dHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6Y4GdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6Y4WdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6Y4mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG6Y42dHEe24LcnSyvVffw" name="ifNotHas" visibility="private" method="_ScyiSmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG6Y5GdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6Y5WdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6_8GdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6_8WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG6_8mdHEe24LcnSyvVffw" name="wait" method="_ScyiT2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG6_82dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG6_9GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SG7nAGdHEe24LcnSyvVffw" name="sleep" isStatic="true" method="_ScyiUmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SG7nAWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZ2jAGdHEe24LcnSyvVffw" name="CodeFragment" visibility="package" method="_ScxUJmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZ3KEWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZ3KEmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Sdg7BWdHEe24LcnSyvVffw">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZ2jAWdHEe24LcnSyvVffw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZ2jAmdHEe24LcnSyvVffw" name="edges" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZ2jA2dHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZ3KEGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZ3KE2dHEe24LcnSyvVffw" type="_SGzEIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZ3xImdHEe24LcnSyvVffw" name="reportIfDifferentCoordinators" visibility="private" method="_ScyiVGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZ3xI2dHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZ4YMWdHEe24LcnSyvVffw" name="multipleCoordinators" visibility="private" method="_SczJUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZ4YMmdHEe24LcnSyvVffw" name="coordinators" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZ4YM2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SG-qUGdHEe24LcnSyvVffw" name="CombinedActivation">
              <generalization xmi:id="_SX-TsmdHEe24LcnSyvVffw" general="_SFgqsGdHEe24LcnSyvVffw"/>
              <interfaceRealization xmi:id="_SZ5mUGdHEe24LcnSyvVffw" client="_SG-qUGdHEe24LcnSyvVffw" supplier="_SZxDcWdHEe24LcnSyvVffw" contract="_SZxDcWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczJU2dHEe24LcnSyvVffw" name="CombinedActivation" specification="_SG_4cGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczJVGdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SczJVWdHEe24LcnSyvVffw" type="_SG-qUGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczJVmdHEe24LcnSyvVffw" name="CombinedActivation" specification="_SX9FkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczJV2dHEe24LcnSyvVffw" name="elem" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczJWGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SczJWWdHEe24LcnSyvVffw" type="_SG-qUGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczJWmdHEe24LcnSyvVffw" name="CombinedActivation" specification="_SX9FlmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczJW2dHEe24LcnSyvVffw" name="priorEntry" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczJXGdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczJXWdHEe24LcnSyvVffw" type="_SG-qUGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczJXmdHEe24LcnSyvVffw" name="canCombine" specification="_SX9spWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczJX2dHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczJYGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SG_4cGdHEe24LcnSyvVffw" name="CombinedActivation" visibility="package" method="_SczJU2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SG_4cmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SG_4c2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SG_4cWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SG_4dGdHEe24LcnSyvVffw" type="_SG-qUGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX9FkGdHEe24LcnSyvVffw" name="CombinedActivation" visibility="package" method="_SczJVmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX9Fk2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX9FlGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SX9FkWdHEe24LcnSyvVffw" name="elem" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX9FkmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SX9FlWdHEe24LcnSyvVffw" type="_SG-qUGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX9FlmdHEe24LcnSyvVffw" name="CombinedActivation" visibility="package" method="_SczJWmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX9somdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX9so2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SX9soGdHEe24LcnSyvVffw" name="priorEntry" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX9soWdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX9spGdHEe24LcnSyvVffw" type="_SG-qUGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX9spWdHEe24LcnSyvVffw" name="canCombine" method="_SczJXmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX9spmdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX9sp2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHBtoGdHEe24LcnSyvVffw" name="CommunicationGraph">
              <ownedComment xmi:id="_Sdg7CWdHEe24LcnSyvVffw">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SX_h0mdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbDc4GdHEe24LcnSyvVffw" name="wfm" visibility="package" type="_SHXE0GdHEe24LcnSyvVffw" association="_SeGw5GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbED8WdHEe24LcnSyvVffw" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbErAWdHEe24LcnSyvVffw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbErA2dHEe24LcnSyvVffw" name="workLoad" visibility="package" type="_SKqQcGdHEe24LcnSyvVffw" association="_SeHX8WdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczwYGdHEe24LcnSyvVffw" name="CommunicationGraph" specification="_SX-6wGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwYWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczwYmdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczwY2dHEe24LcnSyvVffw" type="_SHBtoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczwZGdHEe24LcnSyvVffw" name="CommunicationGraph" specification="_SX-6xmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwZWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczwZmdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SczwZ2dHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SczwaGdHEe24LcnSyvVffw" type="_SHBtoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczwaWdHEe24LcnSyvVffw" name="createHeader" specification="_SHDi0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwamdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sczwa2dHEe24LcnSyvVffw" name="createFooter" specification="_SHEJ4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwbGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczwbWdHEe24LcnSyvVffw" name="visualization" specification="_SHEw8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwbmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sczwb2dHEe24LcnSyvVffw" name="createWarpFileContent" specification="_SHFYAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwcGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SHDi0GdHEe24LcnSyvVffw" name="createHeader" method="_SczwaWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX-6zWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHEJ4WdHEe24LcnSyvVffw" name="createFooter" method="_Sczwa2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX_h0GdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHEw8GdHEe24LcnSyvVffw" name="visualization" method="_SczwbWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SX_h0WdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHFYAGdHEe24LcnSyvVffw" name="createWarpFileContent" method="_Sczwb2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHFYAWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SX-6wGdHEe24LcnSyvVffw" name="CommunicationGraph" method="_SczwYGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX-6w2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX-6xGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SX-6wWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX-6wmdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX-6xWdHEe24LcnSyvVffw" type="_SHBtoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX-6xmdHEe24LcnSyvVffw" name="CommunicationGraph" method="_SczwZGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX-6ymdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX-6y2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SX-6x2dHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX-6yGdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SX-6yWdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SX-6zGdHEe24LcnSyvVffw" type="_SHBtoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHHNMGdHEe24LcnSyvVffw" name="ConnectivityPoset">
              <ownedComment xmi:id="_Sdg7CmdHEe24LcnSyvVffw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_SYAI4WdHEe24LcnSyvVffw" general="_SIaNsGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SczwcWdHEe24LcnSyvVffw" name="ConnectivityPoset" specification="_SX_h02dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SczwcmdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sczwc2dHEe24LcnSyvVffw" type="_SHHNMGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0XcGdHEe24LcnSyvVffw" name="findCoordinator" specification="_SZ6NYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0XcWdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc0XcmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SX_h02dHEe24LcnSyvVffw" name="ConnectivityPoset" visibility="package" method="_SczwcWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SX_h1WdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SX_h1mdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SX_h1GdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYAI4GdHEe24LcnSyvVffw" type="_SHHNMGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZ6NYGdHEe24LcnSyvVffw" name="findCoordinator" visibility="protected" method="_Sc0XcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZ6NYWdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZ6NYmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHJCYGdHEe24LcnSyvVffw" name="DeadlineComparator">
              <interfaceRealization xmi:id="_SZ60c2dHEe24LcnSyvVffw" client="_SHJCYGdHEe24LcnSyvVffw" supplier="_SYAI4mdHEe24LcnSyvVffw" contract="_SYAI4mdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0Xc2dHEe24LcnSyvVffw" name="compare" specification="_SZ8CkWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0XdGdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc0XdWdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc0XdmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SZ8CkWdHEe24LcnSyvVffw" name="compare" method="_Sc0Xc2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZ8CkmdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZ8Ck2dHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZ8ClGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHLeoGdHEe24LcnSyvVffw" name="Description">
              <ownedComment xmi:id="_SdhiEGdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SZ8po2dHEe24LcnSyvVffw" general="_SXtN8GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbF5IGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbF5IWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0Xd2dHEe24LcnSyvVffw" name="Description" specification="_SHMFsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0XeGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0XeWdHEe24LcnSyvVffw" name="Description" specification="_SHMsw2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0XemdHEe24LcnSyvVffw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0Xe2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0XfGdHEe24LcnSyvVffw" name="toString" specification="_SHNT02dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0XfWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SHMFsGdHEe24LcnSyvVffw" name="Description" method="_Sc0Xd2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHMswGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHMswWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SHMswmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHMsw2dHEe24LcnSyvVffw" name="Description" method="_Sc0XeWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHNT0GdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHNT0WdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SHMsxGdHEe24LcnSyvVffw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHNT0mdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHNT02dHEe24LcnSyvVffw" name="toString" method="_Sc0XfGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHN64GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHPJAGdHEe24LcnSyvVffw" name="Edge">
              <generalization xmi:id="_SYB-E2dHEe24LcnSyvVffw" general="_SLjBQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbGgMGdHEe24LcnSyvVffw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbHHQGdHEe24LcnSyvVffw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbHHQWdHEe24LcnSyvVffw" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbHHQmdHEe24LcnSyvVffw" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbHuUGdHEe24LcnSyvVffw" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbHuUWdHEe24LcnSyvVffw" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbHuUmdHEe24LcnSyvVffw" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbHuU2dHEe24LcnSyvVffw" name="state" type="_SHQXIGdHEe24LcnSyvVffw" association="_SdiJIGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbIVYGdHEe24LcnSyvVffw" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_SZ9QsWdHEe24LcnSyvVffw" client="_SHPJAGdHEe24LcnSyvVffw" supplier="_SZxDcWdHEe24LcnSyvVffw" contract="_SZxDcWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0-gGdHEe24LcnSyvVffw" name="Edge" specification="_SHQ-M2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0-gWdHEe24LcnSyvVffw" type="_SHPJAGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc0-gmdHEe24LcnSyvVffw" name="Edge" specification="_SHRlQ2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc0-g2dHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-hGdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-hWdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-hmdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-h2dHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-iGdHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-iWdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-imdHEe24LcnSyvVffw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc0-i2dHEe24LcnSyvVffw" type="_SHPJAGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc1lkGdHEe24LcnSyvVffw" name="compareTo" specification="_SYBXAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc1lkWdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc1lkmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc1lk2dHEe24LcnSyvVffw" name="toString" specification="_SHSzYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc1llGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc1llWdHEe24LcnSyvVffw" name="print" specification="_SHTac2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc1llmdHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc1ll2dHEe24LcnSyvVffw" name="print" specification="_SHUokGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SHQ-M2dHEe24LcnSyvVffw" name="Edge" visibility="package" method="_Sc0-gGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHRlQGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHRlQWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SHRlQmdHEe24LcnSyvVffw" type="_SHPJAGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHRlQ2dHEe24LcnSyvVffw" name="Edge" visibility="package" method="_Sc0-gmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHSMVmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHSMV2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SHRlRGdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHRlRWdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMUGdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMUWdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMUmdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMU2dHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMVGdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMVWdHEe24LcnSyvVffw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHSMWGdHEe24LcnSyvVffw" type="_SHPJAGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHSzYGdHEe24LcnSyvVffw" name="toString" method="_Sc1lk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHSzYWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHTac2dHEe24LcnSyvVffw" name="print" method="_Sc1llWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHUBgGdHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHUokGdHEe24LcnSyvVffw" name="print" method="_Sc1ll2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SYBXAGdHEe24LcnSyvVffw" name="compareTo" method="_Sc1lkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYBXAWdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYBXAmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_SHQXIGdHEe24LcnSyvVffw" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_SHQ-MGdHEe24LcnSyvVffw" name="RELEASED"/>
                <ownedLiteral xmi:id="_SHQ-MWdHEe24LcnSyvVffw" name="EXECUTING"/>
                <ownedLiteral xmi:id="_SHQ-MmdHEe24LcnSyvVffw" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHXE0GdHEe24LcnSyvVffw" name="FileManager">
              <ownedComment xmi:id="_SdiJImdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SbI8cGdHEe24LcnSyvVffw" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbJjgGdHEe24LcnSyvVffw" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbJjgWdHEe24LcnSyvVffw" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbJjgmdHEe24LcnSyvVffw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc1lmGdHEe24LcnSyvVffw" name="FileManager" specification="_SHYS8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc1lmWdHEe24LcnSyvVffw" type="_SHXE0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class	&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2MoGdHEe24LcnSyvVffw" name="FileManager" specification="_SHYS9GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2MoWdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2MomdHEe24LcnSyvVffw" type="_SHXE0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2Mo2dHEe24LcnSyvVffw" name="getDocumentsDirectory" specification="_SHY6BGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2MpGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
		String documentsDirectory;&#xD;
		if ( OSValidator.isWindows() ) {&#xD;
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
		} else if ( OSValidator.isMac() ) {&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;&#xD;
		} else { // for all other Unix systems&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)&#xD;
		}&#xD;
		return documentsDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2MpWdHEe24LcnSyvVffw" name="getCurrentDirectory" specification="_SHY6BmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2MpmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2Mp2dHEe24LcnSyvVffw" name="createFile" specification="_SHZhEWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2MqGdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2MqWdHEe24LcnSyvVffw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2MqmdHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2Mq2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to&#xD;
		 * this routine really just creates the file name ;-)&#xD;
		 */&#xD;
		Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix&#xD;
		}&#xD;
		/* fileString has no suffix at this point (removed if it existed)&#xD;
		 * Now add file name extension and suffix&#xD;
		 */&#xD;
		fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2zsGdHEe24LcnSyvVffw" name="createFile" specification="_SHaIIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2zsWdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2zsmdHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2zs2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix&#xD;
		}&#xD;
		// fileString has no suffix at this point (removed if it existed)&#xD;
		// Now add file name extension and suffix&#xD;
		fileString = fileString + suffix;&#xD;
		// we don't actually create the file...it will be created when written to&#xD;
		// this routine really just creates the file name ;-)&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2ztGdHEe24LcnSyvVffw" name="createDirectory" specification="_SHavMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2ztWdHEe24LcnSyvVffw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2ztmdHEe24LcnSyvVffw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2zt2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; &#xD;
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided&#xD;
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.&#xD;
		} else { // subDirectory has relative path, so just append&#xD;
			newDirectory = directory + File.separator + subDirectory;&#xD;
		}&#xD;
		try {&#xD;
			Path path = Paths.get(newDirectory);&#xD;
			Files.createDirectories(path);&#xD;
			if (verbose) {&#xD;
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
			newDirectory = directory;  // in case of error, just use the initial directory&#xD;
		}&#xD;
		return newDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2zuGdHEe24LcnSyvVffw" name="writeFile" specification="_SHbWQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2zuWdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2zumdHEe24LcnSyvVffw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);&#xD;
		Path fileName = Path.of(file);&#xD;
		try {&#xD;
			Files.writeString(fileName, tag.sign(fileContents));&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc2zu2dHEe24LcnSyvVffw" name="readFile" specification="_SHb9UGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc2zvGdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc2zvWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
		Path fileName = Path.of(file);&#xD;
		String contents = null;&#xD;
		try {&#xD;
			contents = Files.readString(fileName);&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
		return contents;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SHYS8GdHEe24LcnSyvVffw" name="FileManager" method="_Sc1lmGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHYS8WdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHYS8mdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdiJI2dHEe24LcnSyvVffw">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHYS82dHEe24LcnSyvVffw" type="_SHXE0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHYS9GdHEe24LcnSyvVffw" name="FileManager" method="_Sc2MoGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHY6AWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHY6AmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SHY6AGdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHY6A2dHEe24LcnSyvVffw" type="_SHXE0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHY6BGdHEe24LcnSyvVffw" name="getDocumentsDirectory" method="_Sc2Mo2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHY6BWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHY6BmdHEe24LcnSyvVffw" name="getCurrentDirectory" method="_Sc2MpWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHZhEGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHZhEWdHEe24LcnSyvVffw" name="createFile" method="_Sc2Mp2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiJJGdHEe24LcnSyvVffw">
                  <body>Build the name extension used for all files created by this tool.&#xD;
	 * The nameExtension will be added to the base input file name&#xD;
	 * so that all of the output files can be associated with the input file&#xD;
	 * The file naming pattern is:&#xD;
	 * baseFileNameFileType-NonDefaultParameterList&#xD;
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray&#xD;
	 * Default parameters are not identified in the NameExtension&#xD;
	 * All parameters used to create the file, should be listed near the top&#xD;
	 * of the file in the Parameter Section, followed by the file contents.&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHZhEmdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHZhE2dHEe24LcnSyvVffw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHZhFGdHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHZhFWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHaIIGdHEe24LcnSyvVffw" name="createFile" method="_Sc2zsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHaIIWdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHaIImdHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHaII2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHavMGdHEe24LcnSyvVffw" name="createDirectory" method="_Sc2ztGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHavMWdHEe24LcnSyvVffw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHavMmdHEe24LcnSyvVffw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHavM2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHbWQGdHEe24LcnSyvVffw" name="writeFile" method="_Sc2zuGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHbWQWdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHbWQmdHEe24LcnSyvVffw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHb9UGdHEe24LcnSyvVffw" name="readFile" method="_Sc2zu2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHb9UWdHEe24LcnSyvVffw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHb9UmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHdygGdHEe24LcnSyvVffw" name="Flow">
              <ownedComment xmi:id="_SdiJJWdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYHdpGdHEe24LcnSyvVffw" general="_SLjBQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbKKkGdHEe24LcnSyvVffw" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbKKkWdHEe24LcnSyvVffw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbKxoGdHEe24LcnSyvVffw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbKxoWdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbKxomdHEe24LcnSyvVffw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbKxo2dHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbKxpGdHEe24LcnSyvVffw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbKxpWdHEe24LcnSyvVffw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbLYsGdHEe24LcnSyvVffw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbLYsWdHEe24LcnSyvVffw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbLYsmdHEe24LcnSyvVffw" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbLYs2dHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbLYtGdHEe24LcnSyvVffw" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbLYtWdHEe24LcnSyvVffw" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbL_wGdHEe24LcnSyvVffw" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbL_wmdHEe24LcnSyvVffw" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbL_xGdHEe24LcnSyvVffw" name="nodes" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_SeH_AWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbNN4GdHEe24LcnSyvVffw" name="linkTxAndTotalCost" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_SeH_BGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbN08WdHEe24LcnSyvVffw" name="edges" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_SeImEWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbPqIWdHEe24LcnSyvVffw" name="nodePredecessor" visibility="package" type="_SIKWEGdHEe24LcnSyvVffw" association="_SeJNIWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbQRMWdHEe24LcnSyvVffw" name="edgePredecessor" visibility="package" type="_SHPJAGdHEe24LcnSyvVffw" association="_SeJNJGdHEe24LcnSyvVffw"/>
              <interfaceRealization xmi:id="_SZ_F4GdHEe24LcnSyvVffw" client="_SHdygGdHEe24LcnSyvVffw" supplier="_SZxDcWdHEe24LcnSyvVffw" contract="_SZxDcWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3awGdHEe24LcnSyvVffw" name="Flow" specification="_SHfnsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc3awWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc3awmdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc3aw2dHEe24LcnSyvVffw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc3axGdHEe24LcnSyvVffw" type="_SHdygGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3axWdHEe24LcnSyvVffw" name="Flow" specification="_SHgOwWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc3axmdHEe24LcnSyvVffw" type="_SHdygGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3ax2dHEe24LcnSyvVffw" name="getInitialPriority" specification="_SHg10GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc3ayGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3ayWdHEe24LcnSyvVffw" name="getIndex" specification="_SHg10mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc3aymdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3ay2dHEe24LcnSyvVffw" name="getNumTxPerLink" specification="_SHg11GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc3azGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3azWdHEe24LcnSyvVffw" name="getNodes" specification="_SHhc4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc3azmdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc3az2dHEe24LcnSyvVffw" name="getEdges" specification="_SHiD8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B0GdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B0WdHEe24LcnSyvVffw" name="addEdge" specification="_SYG2kGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B0mdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B02dHEe24LcnSyvVffw" name="addNode" specification="_SYG2kmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B1GdHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B1WdHEe24LcnSyvVffw" name="getLinkTxAndTotalCost" specification="_SHirAWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B1mdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B12dHEe24LcnSyvVffw" name="setInitialPriority" specification="_SHj5IWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B2GdHEe24LcnSyvVffw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B2WdHEe24LcnSyvVffw" name="setIndex" specification="_SHkgMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B2mdHEe24LcnSyvVffw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B22dHEe24LcnSyvVffw" name="setNumTxPerLink" specification="_SHlHQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B3GdHEe24LcnSyvVffw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B3WdHEe24LcnSyvVffw" name="setNodes" specification="_SaAUAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B3mdHEe24LcnSyvVffw" name="nodes" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B32dHEe24LcnSyvVffw" name="setLinkTxAndTotalCost" specification="_SaAUA2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B4GdHEe24LcnSyvVffw" name="linkTxAndTotalCost" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4B4WdHEe24LcnSyvVffw" name="compareTo" specification="_SYG2lGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4B4mdHEe24LcnSyvVffw" name="flow" type="_SHdygGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc4B42dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc4o4GdHEe24LcnSyvVffw" name="toString" specification="_SHluUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc4o4WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SHfnsGdHEe24LcnSyvVffw" name="Flow" visibility="package" method="_Sc3awGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHfntGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHfntWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdiwMGdHEe24LcnSyvVffw">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHfnsWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHfnsmdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHfns2dHEe24LcnSyvVffw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHgOwGdHEe24LcnSyvVffw" type="_SHdygGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHgOwWdHEe24LcnSyvVffw" name="Flow" visibility="package" method="_Sc3axWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SHgOwmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SHgOw2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdiwMWdHEe24LcnSyvVffw">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHgOxGdHEe24LcnSyvVffw" type="_SHdygGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHg10GdHEe24LcnSyvVffw" name="getInitialPriority" method="_Sc3ax2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwMmdHEe24LcnSyvVffw">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHg10WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHg10mdHEe24LcnSyvVffw" name="getIndex" method="_Sc3ayWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwM2dHEe24LcnSyvVffw">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHg102dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHg11GdHEe24LcnSyvVffw" name="getNumTxPerLink" method="_Sc3ay2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwNGdHEe24LcnSyvVffw">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHg11WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHhc4GdHEe24LcnSyvVffw" name="getNodes" method="_Sc3azWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwNWdHEe24LcnSyvVffw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZ_s8GdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHiD8GdHEe24LcnSyvVffw" name="getEdges" method="_Sc3az2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwNmdHEe24LcnSyvVffw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZ_s8WdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHirAWdHEe24LcnSyvVffw" name="getLinkTxAndTotalCost" method="_Sc4B1WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwOWdHEe24LcnSyvVffw">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZ_s8mdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHj5IWdHEe24LcnSyvVffw" name="setInitialPriority" method="_Sc4B12dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwOmdHEe24LcnSyvVffw">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHj5ImdHEe24LcnSyvVffw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHkgMGdHEe24LcnSyvVffw" name="setIndex" method="_Sc4B2WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwO2dHEe24LcnSyvVffw">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHkgMWdHEe24LcnSyvVffw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHlHQGdHEe24LcnSyvVffw" name="setNumTxPerLink" method="_Sc4B22dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwPGdHEe24LcnSyvVffw">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHlHQWdHEe24LcnSyvVffw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHluUGdHEe24LcnSyvVffw" name="toString" method="_Sc4o4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHmVYGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYG2kGdHEe24LcnSyvVffw" name="addEdge" method="_Sc4B0WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwN2dHEe24LcnSyvVffw">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYG2kWdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYG2kmdHEe24LcnSyvVffw" name="addNode" method="_Sc4B02dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwOGdHEe24LcnSyvVffw">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYG2k2dHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYG2lGdHEe24LcnSyvVffw" name="compareTo" method="_Sc4B4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYG2lWdHEe24LcnSyvVffw" name="flow" type="_SHdygGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYHdoGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SaAUAGdHEe24LcnSyvVffw" name="setNodes" method="_Sc4B3WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwPWdHEe24LcnSyvVffw">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaAUAWdHEe24LcnSyvVffw" name="nodes" type="_SXtN8GdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaAUA2dHEe24LcnSyvVffw" name="setLinkTxAndTotalCost" method="_Sc4B32dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdiwPmdHEe24LcnSyvVffw">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaAUBGdHEe24LcnSyvVffw" name="linkTxAndTotalCost" type="_SXtN8GdHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHscAGdHEe24LcnSyvVffw" name="FlowMap">
              <ownedComment xmi:id="_SdjXQGdHEe24LcnSyvVffw">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYJS0GdHEe24LcnSyvVffw" general="_SFYu4GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbSGYGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbSGYWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHtDEGdHEe24LcnSyvVffw" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_SdjXQWdHEe24LcnSyvVffw">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYJS0mdHEe24LcnSyvVffw" general="_SFYu4GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbSGYmdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbStcGdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SHtqIGdHEe24LcnSyvVffw" name="GraphViz">
              <ownedComment xmi:id="_SdjXQmdHEe24LcnSyvVffw">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYLIA2dHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbStcWdHEe24LcnSyvVffw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbStcmdHEe24LcnSyvVffw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbStc2dHEe24LcnSyvVffw" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbTUgGdHEe24LcnSyvVffw" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbTUgWdHEe24LcnSyvVffw" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbT7kGdHEe24LcnSyvVffw" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbT7kmdHEe24LcnSyvVffw" name="wfm" visibility="package" type="_SHXE0GdHEe24LcnSyvVffw" association="_SeJ0MWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbUioWdHEe24LcnSyvVffw" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbVJsWdHEe24LcnSyvVffw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbVJs2dHEe24LcnSyvVffw" name="gv" visibility="package" type="_SHtqIGdHEe24LcnSyvVffw" association="_SeKbQWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc5P8GdHEe24LcnSyvVffw" name="GraphViz" specification="_SYKg8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc5P8WdHEe24LcnSyvVffw" name="wfm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc5P8mdHEe24LcnSyvVffw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc5P82dHEe24LcnSyvVffw" type="_SHtqIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc5P9GdHEe24LcnSyvVffw" name="GraphViz" specification="_SYKg9mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc5P9WdHEe24LcnSyvVffw" name="wfm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc5P9mdHEe24LcnSyvVffw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc5P92dHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc5P-GdHEe24LcnSyvVffw" type="_SHtqIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc5P-WdHEe24LcnSyvVffw" name="visualization" specification="_SHvfUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc5P-mdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc5P-2dHEe24LcnSyvVffw" name="initializeGraphVizContent" specification="_SHwGYWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc5P_GdHEe24LcnSyvVffw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc53AGdHEe24LcnSyvVffw" name="finalizeGraphVizContent" specification="_SHwGY2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc53AWdHEe24LcnSyvVffw" name="getGraphVizContent" specification="_SHwtcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc53AmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc53A2dHEe24LcnSyvVffw" name="createGraphVizContent" specification="_SHwtcmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc53BGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc53BWdHEe24LcnSyvVffw" name="addFlowToGraphViz" specification="_SHxUgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc53BmdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc53B2dHEe24LcnSyvVffw" name="addSrcNodeToGraphViz" specification="_SHxUgmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc53CGdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc53CWdHEe24LcnSyvVffw" name="addSnkNodeToGraphViz" specification="_SHx7kGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc53CmdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc6eEGdHEe24LcnSyvVffw" name="finalizeCurrentFlowInGraphViz" specification="_SHx7kmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc6eEWdHEe24LcnSyvVffw" name="addNodeName" specification="_SHyioGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc6eEmdHEe24LcnSyvVffw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc6eE2dHEe24LcnSyvVffw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SHvfUGdHEe24LcnSyvVffw" name="visualization" method="_Sc5P-WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYLIAmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SHwGYWdHEe24LcnSyvVffw" name="initializeGraphVizContent" method="_Sc5P-2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHwGYmdHEe24LcnSyvVffw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHwGY2dHEe24LcnSyvVffw" name="finalizeGraphVizContent" method="_Sc53AGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SHwtcGdHEe24LcnSyvVffw" name="getGraphVizContent" method="_Sc53AWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdjXQ2dHEe24LcnSyvVffw">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_SHwtcWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHwtcmdHEe24LcnSyvVffw" name="createGraphVizContent" method="_Sc53A2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHwtc2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHxUgGdHEe24LcnSyvVffw" name="addFlowToGraphViz" method="_Sc53BWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHxUgWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHxUgmdHEe24LcnSyvVffw" name="addSrcNodeToGraphViz" method="_Sc53B2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHxUg2dHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHx7kGdHEe24LcnSyvVffw" name="addSnkNodeToGraphViz" method="_Sc53CWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHx7kWdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SHx7kmdHEe24LcnSyvVffw" name="finalizeCurrentFlowInGraphViz" method="_Sc6eEGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SHyioGdHEe24LcnSyvVffw" name="addNodeName" visibility="private" method="_Sc6eEWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SHyioWdHEe24LcnSyvVffw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SHyiomdHEe24LcnSyvVffw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYKg8GdHEe24LcnSyvVffw" name="GraphViz" visibility="package" method="_Sc5P8GdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYKg82dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYKg9GdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYKg8WdHEe24LcnSyvVffw" name="wfm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYKg8mdHEe24LcnSyvVffw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYKg9WdHEe24LcnSyvVffw" type="_SHtqIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYKg9mdHEe24LcnSyvVffw" name="GraphViz" visibility="package" method="_Sc5P9GdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYKg-mdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYLIAGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYKg92dHEe24LcnSyvVffw" name="wfm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYKg-GdHEe24LcnSyvVffw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYKg-WdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYLIAWdHEe24LcnSyvVffw" type="_SHtqIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SH0-4GdHEe24LcnSyvVffw" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_SdjXRGdHEe24LcnSyvVffw">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_SaCJMGdHEe24LcnSyvVffw" general="_SYM9M2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbWX0GdHEe24LcnSyvVffw" name="gv" visibility="package" type="_SHtqIGdHEe24LcnSyvVffw" association="_SeLCUWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc6eFGdHEe24LcnSyvVffw" name="GraphVizListener" specification="_SYOLUWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc6eFWdHEe24LcnSyvVffw" name="gv" type="_SHtqIGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc6eFmdHEe24LcnSyvVffw" type="_SH0-4GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc6eF2dHEe24LcnSyvVffw" name="buildGraphViz" specification="_SYOyYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc6eGGdHEe24LcnSyvVffw" name="gv" type="_SHtqIGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7FIGdHEe24LcnSyvVffw" name="enterWarpName" specification="_SYOyZGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7FIWdHEe24LcnSyvVffw" name="ctx" type="_SYOyYmdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7FImdHEe24LcnSyvVffw" name="exitWarp" specification="_SYQAgWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7FI2dHEe24LcnSyvVffw" name="ctx" type="_SYPZc2dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7FJGdHEe24LcnSyvVffw" name="enterFlowName" specification="_SYQnkmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7FJWdHEe24LcnSyvVffw" name="ctx" type="_SYQnkGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7FJmdHEe24LcnSyvVffw" name="exitSrcNode" specification="_SYR1sWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7FJ2dHEe24LcnSyvVffw" name="ctx" type="_SYROpGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7FKGdHEe24LcnSyvVffw" name="exitSnkNode" specification="_SYScwmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7FKWdHEe24LcnSyvVffw" name="ctx" type="_SYScwGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7FKmdHEe24LcnSyvVffw" name="exitFlow" specification="_SYTD1WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7FK2dHEe24LcnSyvVffw" name="ctx" type="_SYTD02dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SYOLUWdHEe24LcnSyvVffw" name="GraphVizListener" visibility="private" method="_Sc6eFGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYOLU2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYOLVGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYOLUmdHEe24LcnSyvVffw" name="gv" type="_SHtqIGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYOLVWdHEe24LcnSyvVffw" type="_SH0-4GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYOyYGdHEe24LcnSyvVffw" name="buildGraphViz" isStatic="true" method="_Sc6eF2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYOyYWdHEe24LcnSyvVffw" name="gv" type="_SHtqIGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYOyZGdHEe24LcnSyvVffw" name="enterWarpName" method="_Sc7FIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYOyZWdHEe24LcnSyvVffw" name="ctx" type="_SYOyYmdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYQAgWdHEe24LcnSyvVffw" name="exitWarp" method="_Sc7FImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYQAgmdHEe24LcnSyvVffw" name="ctx" type="_SYPZc2dHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYQnkmdHEe24LcnSyvVffw" name="enterFlowName" method="_Sc7FJGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYROoGdHEe24LcnSyvVffw" name="ctx" type="_SYQnkGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYR1sWdHEe24LcnSyvVffw" name="exitSrcNode" method="_Sc7FJmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYR1smdHEe24LcnSyvVffw" name="ctx" type="_SYROpGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYScwmdHEe24LcnSyvVffw" name="exitSnkNode" method="_Sc7FKGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYScw2dHEe24LcnSyvVffw" name="ctx" type="_SYScwGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYTD1WdHEe24LcnSyvVffw" name="exitFlow" method="_Sc7FKmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYTq4GdHEe24LcnSyvVffw" name="ctx" type="_SYTD02dHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SH4CMGdHEe24LcnSyvVffw" name="InputGraphFile">
              <ownedComment xmi:id="_SdjXRWdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SbW-4WdHEe24LcnSyvVffw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbXl8GdHEe24LcnSyvVffw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbXl8WdHEe24LcnSyvVffw" name="wfm" visibility="private" type="_SHXE0GdHEe24LcnSyvVffw" association="_SeLCVGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbXl82dHEe24LcnSyvVffw" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbYNAGdHEe24LcnSyvVffw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbYNAmdHEe24LcnSyvVffw" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbYNA2dHEe24LcnSyvVffw" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sMGdHEe24LcnSyvVffw" name="InputGraphFile" specification="_SYVgEWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sMWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc7sMmdHEe24LcnSyvVffw" type="_SH4CMGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sM2dHEe24LcnSyvVffw" name="InputGraphFile" specification="_SYWHImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sNGdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc7sNWdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc7sNmdHEe24LcnSyvVffw" type="_SH4CMGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sN2dHEe24LcnSyvVffw" name="setGraphFileName" specification="_SH53YGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sOGdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sOWdHEe24LcnSyvVffw" name="verifyGraphFileName" specification="_SH6ecGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sOmdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sO2dHEe24LcnSyvVffw" name="readGraphFile" specification="_SH6ecmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sPGdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc7sPWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sPmdHEe24LcnSyvVffw" name="getInputGraphFileName" specification="_SH7FgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sP2dHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc7sQGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc7sQWdHEe24LcnSyvVffw" name="readGraphFileContents" specification="_SH7skGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc7sQmdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc7sQ2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc8TQGdHEe24LcnSyvVffw" name="printVerboseMessage" specification="_SH8ToGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc8TQWdHEe24LcnSyvVffw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc8TQmdHEe24LcnSyvVffw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc8TQ2dHEe24LcnSyvVffw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SH53YGdHEe24LcnSyvVffw" name="setGraphFileName" visibility="private" method="_Sc7sN2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SH53YWdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SH6ecGdHEe24LcnSyvVffw" name="verifyGraphFileName" visibility="private" method="_Sc7sOWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SH6ecWdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SH6ecmdHEe24LcnSyvVffw" name="readGraphFile" method="_Sc7sO2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SH6ec2dHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH6edGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SH7FgGdHEe24LcnSyvVffw" name="getInputGraphFileName" visibility="private" method="_Sc7sPmdHEe24LcnSyvVffw" raisedException="_SaCwQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SH7FgWdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH7FgmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SH7skGdHEe24LcnSyvVffw" name="readGraphFileContents" visibility="private" method="_Sc7sQWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SH7skWdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH7skmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SH8ToGdHEe24LcnSyvVffw" name="printVerboseMessage" visibility="private" method="_Sc8TQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SH8ToWdHEe24LcnSyvVffw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH8TomdHEe24LcnSyvVffw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH8To2dHEe24LcnSyvVffw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYVgEWdHEe24LcnSyvVffw" name="InputGraphFile" method="_Sc7sMGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYVgE2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYWHIGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYVgEmdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYWHIWdHEe24LcnSyvVffw" type="_SH4CMGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYWHImdHEe24LcnSyvVffw" name="InputGraphFile" method="_Sc7sM2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYWHJWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYWHJmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYWHI2dHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYWHJGdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYWHJ2dHEe24LcnSyvVffw" type="_SH4CMGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SH-I0GdHEe24LcnSyvVffw" name="InstructionTimeSlot">
              <generalization xmi:id="_SYXVQGdHEe24LcnSyvVffw" general="_SJfLwGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbY0EWdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbY0EmdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc8TRGdHEe24LcnSyvVffw" name="InstructionTimeSlot" specification="_SH-v4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc8TRWdHEe24LcnSyvVffw" type="_SH-I0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc8TRmdHEe24LcnSyvVffw" name="InstructionTimeSlot" specification="_SH_W8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc8TR2dHEe24LcnSyvVffw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc8TSGdHEe24LcnSyvVffw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc8TSWdHEe24LcnSyvVffw" type="_SH-I0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc86UGdHEe24LcnSyvVffw" name="InstructionTimeSlot" specification="_SH_W9mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc86UWdHEe24LcnSyvVffw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sc86UmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc86U2dHEe24LcnSyvVffw" type="_SH-I0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SH-v4GdHEe24LcnSyvVffw" name="InstructionTimeSlot" method="_Sc8TRGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SH-v4WdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SH-v4mdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SH-v42dHEe24LcnSyvVffw" type="_SH-I0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SH_W8GdHEe24LcnSyvVffw" name="InstructionTimeSlot" visibility="package" method="_Sc8TRmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SH_W82dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SH_W9GdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SH_W8WdHEe24LcnSyvVffw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH_W8mdHEe24LcnSyvVffw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH_W9WdHEe24LcnSyvVffw" type="_SH-I0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SH_W9mdHEe24LcnSyvVffw" name="InstructionTimeSlot" visibility="package" method="_Sc86UGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SH_-AGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SH_-AWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SH_W92dHEe24LcnSyvVffw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SH_-A2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SH_-AmdHEe24LcnSyvVffw" type="_SH-I0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIAlEGdHEe24LcnSyvVffw" name="LatencyAnalysis">
              <ownedComment xmi:id="_SdjXRmdHEe24LcnSyvVffw">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SbZbIGdHEe24LcnSyvVffw" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbZbIWdHEe24LcnSyvVffw" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbaCMWdHEe24LcnSyvVffw" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbapQWdHEe24LcnSyvVffw" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbapQmdHEe24LcnSyvVffw" name="latencyReport" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeLpYWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbbQUWdHEe24LcnSyvVffw" name="program" visibility="private" type="_SItvsGdHEe24LcnSyvVffw" association="_SeMQcGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbb3YGdHEe24LcnSyvVffw" name="workload" visibility="private" type="_SKqQcGdHEe24LcnSyvVffw" association="_SeMQc2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbb3YmdHEe24LcnSyvVffw" name="programTable" visibility="private" type="_SJGxQGdHEe24LcnSyvVffw" association="_SeM3gWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbb3ZGdHEe24LcnSyvVffw" name="nodeIndex" visibility="private" type="_SXrYwGdHEe24LcnSyvVffw" association="_SeNekGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc86VGdHEe24LcnSyvVffw" name="LatencyAnalysis" specification="_SYYjYWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc86VWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc86VmdHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc86V2dHEe24LcnSyvVffw" name="LatencyAnalysis" specification="_SYZKc2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc86WGdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc86WWdHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc86WmdHEe24LcnSyvVffw" name="latencyReport" specification="_SIBzMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc86W2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc86XGdHEe24LcnSyvVffw" name="numMatchingTx" specification="_SICaQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc86XWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc86XmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc86X2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc86YGdHEe24LcnSyvVffw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc86YWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SIBzMGdHEe24LcnSyvVffw" name="latencyReport" method="_Sc86WmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYZKeGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SICaQGdHEe24LcnSyvVffw" name="numMatchingTx" method="_Sc86XGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SICaQWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SICaQmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SICaQ2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SICaRGdHEe24LcnSyvVffw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIDBUGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYYjYWdHEe24LcnSyvVffw" name="LatencyAnalysis" visibility="package" method="_Sc86VGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYZKcGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYZKcWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYYjYmdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYZKcmdHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYZKc2dHEe24LcnSyvVffw" name="LatencyAnalysis" visibility="package" method="_Sc86V2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYZKdWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYZKdmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYZKdGdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYZKd2dHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIFdkGdHEe24LcnSyvVffw" name="LatencyVisualization">
              <ownedComment xmi:id="_SdjXR2dHEe24LcnSyvVffw">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYaYlWdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbdFgWdHEe24LcnSyvVffw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbdskGdHEe24LcnSyvVffw" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbdskWdHEe24LcnSyvVffw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbdskmdHEe24LcnSyvVffw" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbdsk2dHEe24LcnSyvVffw" name="warp" visibility="private" type="_SKZKsGdHEe24LcnSyvVffw" association="_SeNek2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbe6sGdHEe24LcnSyvVffw" name="la" visibility="private" type="_SIAlEGdHEe24LcnSyvVffw" association="_SeOFoWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc9hYGdHEe24LcnSyvVffw" name="LatencyVisualization" specification="_SYaYkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc9hYWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc9hYmdHEe24LcnSyvVffw" type="_SIFdkGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SYaYkGdHEe24LcnSyvVffw" name="LatencyVisualization" visibility="package" method="_Sc9hYGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYaYkmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYaYk2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYaYkWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYaYlGdHEe24LcnSyvVffw" type="_SIFdkGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIGrsGdHEe24LcnSyvVffw" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_SaElcGdHEe24LcnSyvVffw" client="_SIGrsGdHEe24LcnSyvVffw" supplier="_SYAI4mdHEe24LcnSyvVffw" contract="_SYAI4mdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc9hY2dHEe24LcnSyvVffw" name="compare" specification="_SaFMgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc9hZGdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc9hZWdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc9hZmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SaFMgGdHEe24LcnSyvVffw" name="compare" method="_Sc9hY2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaFMgWdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaFMgmdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaFMg2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIIg4GdHEe24LcnSyvVffw" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_SaFzkmdHEe24LcnSyvVffw" client="_SIIg4GdHEe24LcnSyvVffw" supplier="_SYAI4mdHEe24LcnSyvVffw" contract="_SYAI4mdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc9hZ2dHEe24LcnSyvVffw" name="compare" specification="_SaGaoGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc9haGdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc9haWdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc9hamdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SaGaoGdHEe24LcnSyvVffw" name="compare" method="_Sc9hZ2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaGaoWdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaGaomdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaGao2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIKWEGdHEe24LcnSyvVffw" name="Node">
              <generalization xmi:id="_SYcNxWdHEe24LcnSyvVffw" general="_SLjBQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbfhwWdHEe24LcnSyvVffw" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbgI0GdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbgI0WdHEe24LcnSyvVffw" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbgv4GdHEe24LcnSyvVffw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbgv4WdHEe24LcnSyvVffw" name="edges" type="_SXtN8GdHEe24LcnSyvVffw" isReadOnly="true" association="_SeOssWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbhW8WdHEe24LcnSyvVffw" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sbh-AGdHEe24LcnSyvVffw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_SaHBsGdHEe24LcnSyvVffw" client="_SIKWEGdHEe24LcnSyvVffw" supplier="_SZxDcWdHEe24LcnSyvVffw" contract="_SZxDcWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc9ha2dHEe24LcnSyvVffw" name="Node" specification="_SIMLQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc9hbGdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc9hbWdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc9hbmdHEe24LcnSyvVffw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc9hb2dHEe24LcnSyvVffw" type="_SIKWEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc9hcGdHEe24LcnSyvVffw" name="compareTo" specification="_SYbmsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc9hcWdHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc9hcmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc9hc2dHEe24LcnSyvVffw" name="toString" specification="_SIMyUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc9hdGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IcGdHEe24LcnSyvVffw" name="addEdge" specification="_SYcNw2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-IcWdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IcmdHEe24LcnSyvVffw" name="addConflict" specification="_SIOAcmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-Ic2dHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IdGdHEe24LcnSyvVffw" name="numEdges" specification="_SIOngGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-IdWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IdmdHEe24LcnSyvVffw" name="print" specification="_SIOngmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-Id2dHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IeGdHEe24LcnSyvVffw" name="print" specification="_SIP1oGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SIMLQGdHEe24LcnSyvVffw" name="Node" visibility="package" method="_Sc9ha2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SIMLRGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SIMLRWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SIMLQWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIMLQmdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIMLQ2dHEe24LcnSyvVffw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIMLRmdHEe24LcnSyvVffw" type="_SIKWEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SIMyUGdHEe24LcnSyvVffw" name="toString" method="_Sc9hc2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SINZYGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIOAcmdHEe24LcnSyvVffw" name="addConflict" method="_Sc-IcmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIOAc2dHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIOngGdHEe24LcnSyvVffw" name="numEdges" method="_Sc-IdGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIOngWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIOngmdHEe24LcnSyvVffw" name="print" method="_Sc-IdmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIOng2dHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIP1oGdHEe24LcnSyvVffw" name="print" method="_Sc-IeGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SYbmsGdHEe24LcnSyvVffw" name="compareTo" method="_Sc9hcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYbmsWdHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYbmsmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYcNw2dHEe24LcnSyvVffw" name="addEdge" method="_Sc-IcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYcNxGdHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SISR4GdHEe24LcnSyvVffw" name="NodeMap">
              <ownedComment xmi:id="_Sdj-UGdHEe24LcnSyvVffw">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYc00GdHEe24LcnSyvVffw" general="_SFYu4GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbh-AWdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbilEGdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIS48GdHEe24LcnSyvVffw" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_Sdj-UWdHEe24LcnSyvVffw">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYeC82dHEe24LcnSyvVffw" general="_SJlSYGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IeWdHEe24LcnSyvVffw" name="NonPreemptiveSchedule" specification="_SYdb4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-IemdHEe24LcnSyvVffw" name="poset" type="_SIaNsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc-Ie2dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc-IfGdHEe24LcnSyvVffw" type="_SIS48GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SYdb4WdHEe24LcnSyvVffw" name="NonPreemptiveSchedule" visibility="package" method="_Sc-IeWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYeC8GdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYeC8WdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYdb4mdHEe24LcnSyvVffw" name="poset" type="_SIaNsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYdb42dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYeC8mdHEe24LcnSyvVffw" type="_SIS48GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIUHEGdHEe24LcnSyvVffw" name="NotImplentedVisualization">
              <generalization xmi:id="_SYeC9WdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbilEWdHEe24LcnSyvVffw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbilEmdHEe24LcnSyvVffw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbilE2dHEe24LcnSyvVffw" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbjMIGdHEe24LcnSyvVffw" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbjMIWdHEe24LcnSyvVffw" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbjMImdHEe24LcnSyvVffw" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-IfWdHEe24LcnSyvVffw" name="NotImplentedVisualization" specification="_SIVVMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-IfmdHEe24LcnSyvVffw" type="_SIUHEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-vgGdHEe24LcnSyvVffw" name="NotImplentedVisualization" specification="_SIV8QGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vgWdHEe24LcnSyvVffw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc-vgmdHEe24LcnSyvVffw" type="_SIUHEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-vg2dHEe24LcnSyvVffw" name="visualization" specification="_SIV8RWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vhGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SIVVMGdHEe24LcnSyvVffw" name="NotImplentedVisualization" visibility="package" method="_Sc-IfWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SIVVMWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SIVVMmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SIVVM2dHEe24LcnSyvVffw" type="_SIUHEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SIV8QGdHEe24LcnSyvVffw" name="NotImplentedVisualization" visibility="package" method="_Sc-vgGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SIV8QmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SIV8Q2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SIV8QWdHEe24LcnSyvVffw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIV8RGdHEe24LcnSyvVffw" type="_SIUHEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SIV8RWdHEe24LcnSyvVffw" name="visualization" method="_Sc-vg2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYeC9GdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIYYgGdHEe24LcnSyvVffw" name="PeriodComparator">
              <interfaceRealization xmi:id="_SaHowGdHEe24LcnSyvVffw" client="_SIYYgGdHEe24LcnSyvVffw" supplier="_SYAI4mdHEe24LcnSyvVffw" contract="_SYAI4mdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-vhWdHEe24LcnSyvVffw" name="compare" specification="_SaIP0WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vhmdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc-vh2dHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc-viGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SaIP0WdHEe24LcnSyvVffw" name="compare" method="_Sc-vhWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaIP0mdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaIP02dHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaIP1GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIaNsGdHEe24LcnSyvVffw" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_Sdj-UmdHEe24LcnSyvVffw">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SbjMI2dHEe24LcnSyvVffw" name="activations" visibility="private" type="_SGC2MGdHEe24LcnSyvVffw" association="_SeOstGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbkaQGdHEe24LcnSyvVffw" name="workload" visibility="private" type="_SKqQcGdHEe24LcnSyvVffw" association="_SePTwWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbkaQmdHEe24LcnSyvVffw" name="flows" visibility="protected" type="_SHdygGdHEe24LcnSyvVffw" association="_SeP60GdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SblBUWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SblBUmdHEe24LcnSyvVffw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SblBUGdHEe24LcnSyvVffw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbloYWdHEe24LcnSyvVffw" name="nodes" visibility="private" type="_SIKWEGdHEe24LcnSyvVffw" association="_SeP602dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SbmPcGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SbmPcWdHEe24LcnSyvVffw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SbloYmdHEe24LcnSyvVffw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbmPc2dHEe24LcnSyvVffw" name="nodeMap" visibility="private" type="_SISR4GdHEe24LcnSyvVffw" association="_SeQh4WdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbm2gWdHEe24LcnSyvVffw" name="priorityQueue" visibility="private" type="_SJRJVGdHEe24LcnSyvVffw" association="_SeRI8WdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbndkWdHEe24LcnSyvVffw" name="nodeConnectivityMap" visibility="protected" type="_SXrYwGdHEe24LcnSyvVffw" association="_SeRI9GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SborsWdHEe24LcnSyvVffw" name="activationMap" visibility="package" type="_SHtDEGdHEe24LcnSyvVffw" association="_SeRwAWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-viWdHEe24LcnSyvVffw" name="Poset" specification="_SYfREWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vimdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc-vi2dHEe24LcnSyvVffw" type="_SIaNsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-vjGdHEe24LcnSyvVffw" name="getNodeConnectivity" specification="_SIcC4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vjWdHEe24LcnSyvVffw" type="_SXrYwGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-vjmdHEe24LcnSyvVffw" name="getNodeNames" specification="_SIdRAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vj2dHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc-vkGdHEe24LcnSyvVffw" name="getNodesNamesOrderedAlphabetically" specification="_SId4EWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc-vkWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sc-vkmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WkGdHEe24LcnSyvVffw" name="buildPosetOfActivations" specification="_SIefImdHEe24LcnSyvVffw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WkWdHEe24LcnSyvVffw" name="createEdgeLists" specification="_SIfGMGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WkmdHEe24LcnSyvVffw" name="createConflictLists" specification="_SIfGMWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_Wk2dHEe24LcnSyvVffw" name="createGlobalConflictLists" specification="_SIfGMmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WlGdHEe24LcnSyvVffw" name="createLocalConflictLists" specification="_SIfGM2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WlWdHEe24LcnSyvVffw" name="findCoordinator" specification="_SaJd8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_WlmdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc_Wl2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WmGdHEe24LcnSyvVffw" name="buildTxArray" specification="_SaJd9GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_WmWdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc_WmmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sc_Wm2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WnGdHEe24LcnSyvVffw" name="createInitialActivations" specification="_SIftQGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_WnWdHEe24LcnSyvVffw" name="getMaxTx" specification="_SYf4ImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_WnmdHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc_Wn2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9oGdHEe24LcnSyvVffw" name="getActivation" specification="_SYf4JWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_9oWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sc_9omdHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sc_9o2dHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9pGdHEe24LcnSyvVffw" name="getHyperPeriod" specification="_SIg7YGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_9pWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9pmdHEe24LcnSyvVffw" name="getMaxPhase" specification="_SIg7YmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_9p2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9qGdHEe24LcnSyvVffw" name="orderActivations" specification="_SIhicGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9qWdHEe24LcnSyvVffw" name="getNextActivation" specification="_SIhicWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_9qmdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9q2dHEe24LcnSyvVffw" name="addActivation" specification="_SYgfMmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_9rGdHEe24LcnSyvVffw" name="activation" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sc_9rWdHEe24LcnSyvVffw" name="findBaseStation" specification="_SIiJgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sc_9rmdHEe24LcnSyvVffw" type="_SIKWEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SIcC4GdHEe24LcnSyvVffw" name="getNodeConnectivity" visibility="private" method="_Sc-vjGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaI24mdHEe24LcnSyvVffw" type="_SXrYwGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SIdRAGdHEe24LcnSyvVffw" name="getNodeNames" method="_Sc-vjmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaI242dHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SId4EWdHEe24LcnSyvVffw" name="getNodesNamesOrderedAlphabetically" method="_Sc-vkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SId4EmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SIefIGdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIefImdHEe24LcnSyvVffw" name="buildPosetOfActivations" method="_Sc_WkGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIfGMGdHEe24LcnSyvVffw" name="createEdgeLists" visibility="private" method="_Sc_WkWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIfGMWdHEe24LcnSyvVffw" name="createConflictLists" visibility="private" method="_Sc_WkmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIfGMmdHEe24LcnSyvVffw" name="createGlobalConflictLists" visibility="private" method="_Sc_Wk2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIfGM2dHEe24LcnSyvVffw" name="createLocalConflictLists" visibility="private" method="_Sc_WlGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIftQGdHEe24LcnSyvVffw" name="createInitialActivations" visibility="private" method="_Sc_WnGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIg7YGdHEe24LcnSyvVffw" name="getHyperPeriod" method="_Sc_9pGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIg7YWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIg7YmdHEe24LcnSyvVffw" name="getMaxPhase" method="_Sc_9pmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIg7Y2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIhicGdHEe24LcnSyvVffw" name="orderActivations" method="_Sc_9qGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIhicWdHEe24LcnSyvVffw" name="getNextActivation" method="_Sc_9qWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdj-VWdHEe24LcnSyvVffw">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYgfMWdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SIiJgGdHEe24LcnSyvVffw" name="findBaseStation" visibility="protected" method="_Sc_9rWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdj-V2dHEe24LcnSyvVffw">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYgfNGdHEe24LcnSyvVffw" type="_SIKWEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYfREWdHEe24LcnSyvVffw" name="Poset" visibility="package" method="_Sc-viWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYfRE2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYf4IGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Sdj-U2dHEe24LcnSyvVffw">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYfREmdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYf4IWdHEe24LcnSyvVffw" type="_SIaNsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYf4ImdHEe24LcnSyvVffw" name="getMaxTx" visibility="private" method="_Sc_WnWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYf4I2dHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYf4JGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYf4JWdHEe24LcnSyvVffw" name="getActivation" visibility="private" method="_Sc_9oGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYf4JmdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYf4J2dHEe24LcnSyvVffw" name="node" type="_SIKWEGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYgfMGdHEe24LcnSyvVffw" type="_SFgqsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYgfMmdHEe24LcnSyvVffw" name="addActivation" method="_Sc_9q2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdj-VmdHEe24LcnSyvVffw">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYgfM2dHEe24LcnSyvVffw" name="activation" type="_SFgqsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaJd8GdHEe24LcnSyvVffw" name="findCoordinator" visibility="protected" method="_Sc_WlWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdj-VGdHEe24LcnSyvVffw">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaJd8WdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaJd8mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SaJd9GdHEe24LcnSyvVffw" name="buildTxArray" visibility="private" method="_Sc_WmGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaJd9WdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaJd9mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SaJd92dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SInpEGdHEe24LcnSyvVffw" name="PreemptiveSchedule">
              <ownedComment xmi:id="_Sdj-WGdHEe24LcnSyvVffw">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SYkwpGdHEe24LcnSyvVffw" general="_SJlSYGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdAksGdHEe24LcnSyvVffw" name="PreemptiveSchedule" specification="_SYhtUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdAksWdHEe24LcnSyvVffw" name="poset" type="_SIaNsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdAksmdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdAks2dHEe24LcnSyvVffw" type="_SInpEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdAktGdHEe24LcnSyvVffw" name="continueSearch" specification="_SYhtVmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdAktWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdAktmdHEe24LcnSyvVffw" name="activation" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdAkt2dHEe24LcnSyvVffw" type="_SaKsEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdAkuGdHEe24LcnSyvVffw" name="toProgram" specification="_SIoQIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdAkuWdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdAkumdHEe24LcnSyvVffw" name="findPreeptiveChannelAndTime" specification="_SYiUZmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdAku2dHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdAkvGdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdAkvWdHEe24LcnSyvVffw" type="_SaKsEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdAkvmdHEe24LcnSyvVffw" name="findAdditionalTime" specification="_SYi7cmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdAkv2dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdAkwGdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdAkwWdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdAkwmdHEe24LcnSyvVffw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdAkw2dHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdAkxGdHEe24LcnSyvVffw" name="findMaxTimeAvailable" specification="_SYjigWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBLwGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBLwWdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBLwmdHEe24LcnSyvVffw" type="_SaKsEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBLw2dHEe24LcnSyvVffw" name="availableTime" specification="_SYjihGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBLxGdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBLxWdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBLxmdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBLx2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBLyGdHEe24LcnSyvVffw" name="addToSchedule" specification="_SYkJk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBLyWdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBLymdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBLy2dHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBLzGdHEe24LcnSyvVffw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBLzWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBLzmdHEe24LcnSyvVffw" name="addToSchedule" specification="_SYkJmWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBLz2dHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBL0GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SIoQIGdHEe24LcnSyvVffw" name="toProgram" method="_SdAkuGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYiUZWdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYhtUGdHEe24LcnSyvVffw" name="PreemptiveSchedule" visibility="package" method="_SdAksGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYhtU2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYhtVGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYhtUWdHEe24LcnSyvVffw" name="poset" type="_SIaNsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYhtUmdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYhtVWdHEe24LcnSyvVffw" type="_SInpEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYhtVmdHEe24LcnSyvVffw" name="continueSearch" visibility="protected" method="_SdAktGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYiUYGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYiUYWdHEe24LcnSyvVffw" name="activation" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaKsEmdHEe24LcnSyvVffw" type="_SaKsEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYiUZmdHEe24LcnSyvVffw" name="findPreeptiveChannelAndTime" visibility="private" method="_SdAkumdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYi7cGdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYi7cWdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaLTIGdHEe24LcnSyvVffw" type="_SaKsEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYi7cmdHEe24LcnSyvVffw" name="findAdditionalTime" visibility="private" method="_SdAkvmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYi7c2dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYi7dGdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYi7dWdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYi7dmdHEe24LcnSyvVffw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaLTIWdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYjigWdHEe24LcnSyvVffw" name="findMaxTimeAvailable" visibility="private" method="_SdAkxGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYjigmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYjig2dHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaLTImdHEe24LcnSyvVffw" type="_SaKsEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYjihGdHEe24LcnSyvVffw" name="availableTime" visibility="private" method="_SdBLw2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYjihWdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYkJkGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYkJkWdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYkJkmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYkJk2dHEe24LcnSyvVffw" name="addToSchedule" visibility="private" method="_SdBLyGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYkJlGdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYkJlWdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYkJlmdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYkJl2dHEe24LcnSyvVffw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYkJmGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYkJmWdHEe24LcnSyvVffw" name="addToSchedule" visibility="protected" method="_SdBLzmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYkJmmdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYkwoGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SIshkGdHEe24LcnSyvVffw" name="PriorityComparator">
              <interfaceRealization xmi:id="_SaLTI2dHEe24LcnSyvVffw" client="_SIshkGdHEe24LcnSyvVffw" supplier="_SYAI4mdHEe24LcnSyvVffw" contract="_SYAI4mdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBL0WdHEe24LcnSyvVffw" name="compare" specification="_SaL6MWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBL0mdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBL02dHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBL1GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SaL6MWdHEe24LcnSyvVffw" name="compare" method="_SdBL0WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaL6MmdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaL6M2dHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaL6NGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SItvsGdHEe24LcnSyvVffw" name="Program">
              <ownedComment xmi:id="_Sdj-WWdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SbpSwGdHEe24LcnSyvVffw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbpSwWdHEe24LcnSyvVffw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbp50GdHEe24LcnSyvVffw" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sbp50WdHEe24LcnSyvVffw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbp50mdHEe24LcnSyvVffw" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sbp502dHEe24LcnSyvVffw" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbp51GdHEe24LcnSyvVffw" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sbqg4GdHEe24LcnSyvVffw" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbqg4WdHEe24LcnSyvVffw" name="workLoad" visibility="package" type="_SKqQcGdHEe24LcnSyvVffw" association="_SeSXEWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbqg42dHEe24LcnSyvVffw" name="scheduleBuilt" visibility="package" type="_SJGxQGdHEe24LcnSyvVffw" association="_SeS-IGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbrH8WdHEe24LcnSyvVffw" name="SchedulerSelected" visibility="package" type="_SaMhQ2dHEe24LcnSyvVffw" association="_SeS-I2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbrH82dHEe24LcnSyvVffw" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbrvAWdHEe24LcnSyvVffw" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbrvA2dHEe24LcnSyvVffw" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbsWEWdHEe24LcnSyvVffw" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbsWE2dHEe24LcnSyvVffw" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbs9IWdHEe24LcnSyvVffw" name="channelsAvailable" visibility="package" type="_SGgwQGdHEe24LcnSyvVffw" association="_SeTlMWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbs9I2dHEe24LcnSyvVffw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbtkMGdHEe24LcnSyvVffw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbtkMmdHEe24LcnSyvVffw" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbuLQGdHEe24LcnSyvVffw" name="deadlineMisses" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeUMQWdHEe24LcnSyvVffw"/>
              <interfaceRealization xmi:id="_SYq3QGdHEe24LcnSyvVffw" client="_SItvsGdHEe24LcnSyvVffw" supplier="_SJ40YGdHEe24LcnSyvVffw" contract="_SJ40YGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy0GdHEe24LcnSyvVffw" name="Program" specification="_SaNvYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy0WdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBy0mdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy02dHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBy1GdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy1WdHEe24LcnSyvVffw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy1mdHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy12dHEe24LcnSyvVffw" name="Program" specification="_SaNvaWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy2GdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBy2WdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy2mdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBy22dHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy3GdHEe24LcnSyvVffw" name="setDefaultParameters" specification="_SYsFYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy3WdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdBy3mdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy32dHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy4GdHEe24LcnSyvVffw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy4WdHEe24LcnSyvVffw" name="toWorkLoad" specification="_SIxaEGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy4mdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy42dHEe24LcnSyvVffw" name="buildProgram" specification="_SaOWc2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy5GdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy5WdHEe24LcnSyvVffw" name="buildOriginalProgram" specification="_SIyBIGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy5mdHEe24LcnSyvVffw" name="waitInstruction" specification="_SIyBIWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy52dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy6GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdBy6WdHEe24LcnSyvVffw" name="elseWaitInstruction" specification="_SIyBJGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdBy6mdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdBy62dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdCZ4GdHEe24LcnSyvVffw" name="elsePullClause" specification="_SIyoMmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdCZ4WdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ4mdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ42dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ5GdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ5WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdCZ5mdHEe24LcnSyvVffw" name="hasPushInstruction" specification="_SIzPQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdCZ52dHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ6GdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ6WdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ6mdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ62dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdCZ7GdHEe24LcnSyvVffw" name="pushInstruction" specification="_SIz2UGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdCZ7WdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ7mdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ72dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ8GdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ8WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdCZ8mdHEe24LcnSyvVffw" name="getFirstChannelInInstruction" specification="_SI0dYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdCZ82dHEe24LcnSyvVffw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ9GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdCZ9WdHEe24LcnSyvVffw" name="findNextAvailableInstructionTimeSlot" specification="_SYsFZmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdCZ9mdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdCZ92dHEe24LcnSyvVffw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ-GdHEe24LcnSyvVffw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ-WdHEe24LcnSyvVffw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ-mdHEe24LcnSyvVffw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ-2dHEe24LcnSyvVffw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdCZ_GdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ_WdHEe24LcnSyvVffw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdCZ_mdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCZ_2dHEe24LcnSyvVffw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCaAGdHEe24LcnSyvVffw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCaAWdHEe24LcnSyvVffw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCaAmdHEe24LcnSyvVffw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCaA2dHEe24LcnSyvVffw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdCaBGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDA8GdHEe24LcnSyvVffw" name="slotIsAvailable" specification="_SYtTgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdDA8WdHEe24LcnSyvVffw" name="currentInstructionTimeSlot" type="_SH-I0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdDA8mdHEe24LcnSyvVffw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDA82dHEe24LcnSyvVffw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDA9GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDA9WdHEe24LcnSyvVffw" name="findNextAvailableChannel" specification="_SYtThWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdDA9mdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdDA92dHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDA-GdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDA-WdHEe24LcnSyvVffw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDA-mdHEe24LcnSyvVffw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDA-2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>HashSet&lt;String> workingAvailableChannels = channelsAvailable.getChannelSet(currentTime);&#xD;
	  &#xD;
	  //find the channels used in the prior schedule time slot as they should not be used&#xD;
	  if (currentTime > 0)&#xD;
	  {&#xD;
		  Integer priorTime = currentTime - 1;&#xD;
		  &#xD;
		  //remove previous channels from working list for both srcNode and snkNode&#xD;
		  this.extractChannels(schedule, workingAvailableChannels, srcNodeIndex, priorTime);&#xD;
		  this.extractChannels(schedule, workingAvailableChannels, snkNodeIndex, priorTime);&#xD;
	  }&#xD;
	 &#xD;
	  //get the last used channel for the node&#xD;
	  Integer lastUsedChannel = workLoad.getNodeChannel(nodeName);&#xD;
	  &#xD;
	  //increment channel as we don't use the same channel in consecutive time slots&#xD;
	  Integer workingChannel = this.advanceChannel(lastUsedChannel);&#xD;
	  &#xD;
	  //search for next available channel from working set&#xD;
	  boolean channelFound = false;&#xD;
	  while (!channelFound &amp;&amp; !workingAvailableChannels.isEmpty())&#xD;
	  {&#xD;
		  String foundChannelName = workingChannel.toString();&#xD;
		  //channelRemoved is true if the channel removed from the working set,&#xD;
		  //making it a valid channel to use&#xD;
		  boolean channelRemoved = workingAvailableChannels.remove(foundChannelName);&#xD;
		  &#xD;
		  //if found a valid channel, return that channel, else continue searching&#xD;
		  if (channelRemoved)&#xD;
		  {&#xD;
			  return foundChannelName;&#xD;
		  }&#xD;
		  //setup next channel for loop&#xD;
		  else&#xD;
		  {&#xD;
			  workingChannel = this.advanceChannel(workingChannel);&#xD;
		  }&#xD;
	  }&#xD;
	  //return UNKNOWN to indicate no channel found. This should never happen.&#xD;
	  return UNKNOWN;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoAGdHEe24LcnSyvVffw" name="extractChannels" specification="_SaOWdWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdDoAWdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdDoAmdHEe24LcnSyvVffw" name="workingChannelSet" type="_SXtN8mdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdDoA2dHEe24LcnSyvVffw" name="nodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDoBGdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>//create for parsing instructions&#xD;
	  WarpDSL dsl = new WarpDSL();&#xD;
	  &#xD;
	  String priorInstruction = schedule.get(timeSlot).get(nodeIndex);&#xD;
&#xD;
	  //get the parameters from the instruction in the node's prior time slot&#xD;
	  ArrayList&lt;InstructionParameters> instructionParametersList = dsl.getInstructionParameters(priorInstruction); &#xD;
  	&#xD;
	  for (int i = 0; i &lt; instructionParametersList.size(); i++) {&#xD;
		  //get a copy of the parameters&#xD;
		  InstructionParameters instructionParameters = instructionParametersList.get(i);&#xD;
		  &#xD;
		  //remove parameters from channels&#xD;
  		  workingChannelSet.remove(instructionParameters.getChannel());&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoBWdHEe24LcnSyvVffw" name="advanceChannel" specification="_SI2SkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdDoBmdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdDoB2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (channel &lt; getNumChannels())&#xD;
		  return (channel + 1);&#xD;
	  return 0;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoCGdHEe24LcnSyvVffw" name="selectPriority" specification="_SI25oWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoCWdHEe24LcnSyvVffw" name="selectRM" specification="_SI25omdHEe24LcnSyvVffw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoCmdHEe24LcnSyvVffw" name="selectDM" specification="_SI25o2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoC2dHEe24LcnSyvVffw" name="selectRtHART" specification="_SI3gsGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoDGdHEe24LcnSyvVffw" name="setScheduleSelected" specification="_SaPkkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdDoDWdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdDoDmdHEe24LcnSyvVffw" name="setSchedule" specification="_SYt6kGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdDoD2dHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPEGdHEe24LcnSyvVffw" name="getSchedule" specification="_SI3gsWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPEWdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPEmdHEe24LcnSyvVffw" name="getSchedulerName" specification="_SI3gsmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPE2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPFGdHEe24LcnSyvVffw" name="getSchChoice" specification="_SI4u0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPFWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPFmdHEe24LcnSyvVffw" name="getNumChannels" specification="_SI4u0mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPF2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPGGdHEe24LcnSyvVffw" name="getNumTransmissions" specification="_SI5V5GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPGWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPGmdHEe24LcnSyvVffw" name="getRealTimeHartFlag" specification="_SI589GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPG2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPHGdHEe24LcnSyvVffw" name="setRealTimeHartFlag" specification="_SI6kAWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPHWdHEe24LcnSyvVffw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdEPHmdHEe24LcnSyvVffw" name="getMinPacketReceptionRate" specification="_SI7LEGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdEPH2dHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdE2IGdHEe24LcnSyvVffw" name="getE2e" specification="_SI7yImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdE2IWdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdE2ImdHEe24LcnSyvVffw" name="getName" specification="_SI8ZM2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdE2I2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdE2JGdHEe24LcnSyvVffw" name="getOptimizationFlag" specification="_SI9ARGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdE2JWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdE2JmdHEe24LcnSyvVffw" name="deadlineMisses" specification="_SI9nU2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdE2J2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdE2KGdHEe24LcnSyvVffw" name="getNumFaults" specification="_SI-OYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdE2KWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdE2KmdHEe24LcnSyvVffw" name="getNodeMapIndex" specification="_SI-1cGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdE2K2dHEe24LcnSyvVffw" type="_SXrYwGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SIxaEGdHEe24LcnSyvVffw" name="toWorkLoad" method="_SdBy4WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdj-WmdHEe24LcnSyvVffw">
                  <body>Returns the WorkLoad attribute of the Program object.&#xD;
@return workLoad.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYsFZWdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SIyBIGdHEe24LcnSyvVffw" name="buildOriginalProgram" method="_SdBy5WdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SIyBIWdHEe24LcnSyvVffw" name="waitInstruction" visibility="private" method="_SdBy5mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIyBImdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIyBI2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIyBJGdHEe24LcnSyvVffw" name="elseWaitInstruction" visibility="private" method="_SdBy6WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIyoMGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIyoMWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIyoMmdHEe24LcnSyvVffw" name="elsePullClause" visibility="private" method="_SdCZ4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIyoM2dHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIyoNGdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIyoNWdHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIyoNmdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIyoN2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIzPQGdHEe24LcnSyvVffw" name="hasPushInstruction" visibility="private" method="_SdCZ5mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIzPQWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIzPQmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIzPQ2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIzPRGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIzPRWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SIz2UGdHEe24LcnSyvVffw" name="pushInstruction" visibility="private" method="_SdCZ7GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SIz2UWdHEe24LcnSyvVffw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIz2UmdHEe24LcnSyvVffw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIz2U2dHEe24LcnSyvVffw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIz2VGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SIz2VWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI0dYGdHEe24LcnSyvVffw" name="getFirstChannelInInstruction" visibility="private" method="_SdCZ8mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI0dYWdHEe24LcnSyvVffw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SI0dYmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI2SkGdHEe24LcnSyvVffw" name="advanceChannel" visibility="private" method="_SdDoBWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdklYmdHEe24LcnSyvVffw">
                  <body>Returns the next channel, rolling over to zero when channel reaches channel length.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param channel, an Integer of the given channel&#xD;
   * @return The next channel with rollover.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SI2SkWdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SI25oGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI25oWdHEe24LcnSyvVffw" name="selectPriority" method="_SdDoCGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SI25omdHEe24LcnSyvVffw" name="selectRM" method="_SdDoCWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SI25o2dHEe24LcnSyvVffw" name="selectDM" method="_SdDoCmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SI3gsGdHEe24LcnSyvVffw" name="selectRtHART" method="_SdDoC2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SI3gsWdHEe24LcnSyvVffw" name="getSchedule" method="_SdEPEGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdklY2dHEe24LcnSyvVffw">
                  <body>Returns the ProgramSchedule attribute of the Program object.&#xD;
   * @return scheduleBuilt.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYt6kmdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SI3gsmdHEe24LcnSyvVffw" name="getSchedulerName" method="_SdEPEmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI4HwGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI4u0GdHEe24LcnSyvVffw" name="getSchChoice" method="_SdEPFGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI4u0WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI4u0mdHEe24LcnSyvVffw" name="getNumChannels" method="_SdEPFmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI5V4GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI5V5GdHEe24LcnSyvVffw" name="getNumTransmissions" method="_SdEPGGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI588GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI589GdHEe24LcnSyvVffw" name="getRealTimeHartFlag" visibility="private" method="_SdEPGmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI6kAGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI6kAWdHEe24LcnSyvVffw" name="setRealTimeHartFlag" visibility="private" method="_SdEPHGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI6kAmdHEe24LcnSyvVffw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI7LEGdHEe24LcnSyvVffw" name="getMinPacketReceptionRate" method="_SdEPHmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaQLoGdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SI7yImdHEe24LcnSyvVffw" name="getE2e" method="_SdE2IGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaQLoWdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SI8ZM2dHEe24LcnSyvVffw" name="getName" method="_SdE2ImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI9AQGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI9ARGdHEe24LcnSyvVffw" name="getOptimizationFlag" method="_SdE2JGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI9ARWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI9nU2dHEe24LcnSyvVffw" name="deadlineMisses" method="_SdE2JmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYt6k2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SI-OYGdHEe24LcnSyvVffw" name="getNumFaults" method="_SdE2KGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SI-OYWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SI-1cGdHEe24LcnSyvVffw" name="getNodeMapIndex" method="_SdE2KmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdklZGdHEe24LcnSyvVffw">
                  <body>Creates a new mapping from node names (sorted alphabetically) to their index in the&#xD;
   * schedule table and returns the mapping.&#xD;
   * &#xD;
   * @return A HashMap of the node to index mapping.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaQLomdHEe24LcnSyvVffw" type="_SXrYwGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYsFYGdHEe24LcnSyvVffw" name="setDefaultParameters" visibility="private" method="_SdBy3GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYsFYWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYsFYmdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsFY2dHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsFZGdHEe24LcnSyvVffw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYsFZmdHEe24LcnSyvVffw" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_SdCZ9WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYssfGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsscGdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYsscWdHEe24LcnSyvVffw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsscmdHEe24LcnSyvVffw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYssc2dHEe24LcnSyvVffw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYssdGdHEe24LcnSyvVffw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYssdWdHEe24LcnSyvVffw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SYssfWdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYssdmdHEe24LcnSyvVffw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SYssfmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYssd2dHEe24LcnSyvVffw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsseGdHEe24LcnSyvVffw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsseWdHEe24LcnSyvVffw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYssemdHEe24LcnSyvVffw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYsse2dHEe24LcnSyvVffw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYtTgGdHEe24LcnSyvVffw" name="slotIsAvailable" visibility="private" method="_SdDA8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYtTgWdHEe24LcnSyvVffw" name="currentInstructionTimeSlot" type="_SH-I0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYtTgmdHEe24LcnSyvVffw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYtTg2dHEe24LcnSyvVffw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYtThGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYtThWdHEe24LcnSyvVffw" name="findNextAvailableChannel" visibility="private" method="_SdDA9WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdklYGdHEe24LcnSyvVffw">
                  <body>For a given a node, returns the best channel to be used next in the schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param schedule, the ProgramSchedule to get the prior time slot&#xD;
   * @param nodeName, a String of the name of the node&#xD;
   * @param currentTime, an Integer of the current time&#xD;
   * @param srcNodeIndex, an Integer of the source node index value&#xD;
   * @param snkNodeIndex, an Integer of the sink node index value&#xD;
   * @return UNKNOWN (a string) to indicate no channel found.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYtThmdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYtTh2dHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYtTiGdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYtTiWdHEe24LcnSyvVffw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYtTimdHEe24LcnSyvVffw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SYtTi2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYt6kGdHEe24LcnSyvVffw" name="setSchedule" visibility="private" method="_SdDoDmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYt6kWdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaNvYGdHEe24LcnSyvVffw" name="Program" visibility="package" method="_SdBy0GdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaNvZmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaNvZ2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaNvYWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaNvYmdHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaNvY2dHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaNvZGdHEe24LcnSyvVffw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaNvZWdHEe24LcnSyvVffw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaNvaGdHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaNvaWdHEe24LcnSyvVffw" name="Program" visibility="package" method="_SdBy12dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaOWcGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaOWcWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaNvamdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaNva2dHEe24LcnSyvVffw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaNvbGdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaOWcmdHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaOWc2dHEe24LcnSyvVffw" name="buildProgram" method="_SdBy42dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaOWdGdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaOWdWdHEe24LcnSyvVffw" name="extractChannels" visibility="private" method="_SdDoAGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdklYWdHEe24LcnSyvVffw">
                  <body>Helper method for findNextAvailableChannel(...). Finds the channels from&#xD;
   * the given node and time slot and removes it from the workingChannelSet. &lt;br> &lt;br>&#xD;
   * &#xD;
   * NOTE: Calls methods and modifies the @param workingChannelSet.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param schedule, the ProgramSchedule to get prior instruction&#xD;
   * @param workingChannelSet, a String HashSet of channels that are potentially viable&#xD;
   * @param nodeIndex, an Integer representing the node&#xD;
   * @param timeSlot, an Integer representing the time slot</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaOWdmdHEe24LcnSyvVffw" name="schedule" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaOWd2dHEe24LcnSyvVffw" name="workingChannelSet" type="_SXtN8mdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaO9gGdHEe24LcnSyvVffw" name="nodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaO9gWdHEe24LcnSyvVffw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SaPkkGdHEe24LcnSyvVffw" name="setScheduleSelected" visibility="private" method="_SdDoDGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaPkkWdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJGxQGdHEe24LcnSyvVffw" name="ProgramSchedule">
              <generalization xmi:id="_SYwW0GdHEe24LcnSyvVffw" general="_SJ9F0GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbuyUGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbuyUWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdFdMGdHEe24LcnSyvVffw" name="ProgramSchedule" specification="_SJHYUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdFdMWdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdFdMmdHEe24LcnSyvVffw" name="ProgramSchedule" specification="_SJH_Y2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdFdM2dHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdFdNGdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdFdNWdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJHYUGdHEe24LcnSyvVffw" name="ProgramSchedule" method="_SdFdMGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJH_YGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJH_YWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJH_YmdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJH_Y2dHEe24LcnSyvVffw" name="ProgramSchedule" visibility="package" method="_SdFdMmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJImcGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJImcWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJH_ZGdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJH_ZWdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJImcmdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJJNgGdHEe24LcnSyvVffw" name="ProgramVisualization">
              <ownedComment xmi:id="_SdklZWdHEe24LcnSyvVffw">
                <body>&lt;h1>Implementation of Program Visualization.&lt;/h1>&#xD;
&lt;p>The ProgramVisualization class allows a warp Interface to be converted to program and visualized.&lt;/p>&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.2</body>
              </ownedComment>
              <generalization xmi:id="_SYxk8WdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbvZYGdHEe24LcnSyvVffw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbvZYWdHEe24LcnSyvVffw" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbvZYmdHEe24LcnSyvVffw" name="sourceCode" visibility="private" type="_SJGxQGdHEe24LcnSyvVffw" association="_SeUMRGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbvZZGdHEe24LcnSyvVffw" name="program" visibility="private" type="_SItvsGdHEe24LcnSyvVffw" association="_SeUzUWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbwAcWdHEe24LcnSyvVffw" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdFdNmdHEe24LcnSyvVffw" name="ProgramVisualization" specification="_SYw94GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdFdN2dHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdFdOGdHEe24LcnSyvVffw" type="_SJJNgGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdFdOWdHEe24LcnSyvVffw" name="visualization" specification="_SJKboGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdFdOmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
&#xD;
 /* create schedule output header of column node names in order, with \t as separator */&#xD;
 String nodeString = &quot;Time Slot\t&quot;;&#xD;
 /* loop through the node names, stopping just before last name */&#xD;
 for (int i = 0; i &lt; orderedNodes.length - 1; i++) {&#xD;
   /* add each name to the string, with \t between each name */&#xD;
   nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);&#xD;
 }&#xD;
 /* add the last name with \n instead of \t at the end */&#xD;
 nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length - 1]);&#xD;
 content.add(nodeString);&#xD;
&#xD;
 for (int rowIndex = 0; rowIndex &lt; sourceCode.size(); rowIndex++) {&#xD;
   ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);&#xD;
   var row = rowArrayList.toArray(new String[rowArrayList.size()]);&#xD;
   String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
   content.add(rowString);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGEQGdHEe24LcnSyvVffw" name="createHeader" specification="_SJLCsmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGEQWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(String.format(&quot;WARP system for graph %s created with the following parameters:\n&quot;,&#xD;
     program.getName()));&#xD;
 header.add(String.format(&quot;Scheduler Name:\t%s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
   header.add(String.format(&quot;nTransmissions:\t%d\n&quot;, program.getNumTransmissions()));&#xD;
 } else if (program.getNumFaults() > 0) {&#xD;
   header.add(String.format(&quot;numFaults:\t%d\n&quot;, program.getNumFaults()));&#xD;
 } else {&#xD;
   header.add(String.format(&quot;M:\t%s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
   header.add(String.format(&quot;E2E:\t%s\n&quot;, String.valueOf(program.getE2e())));&#xD;
   header.add(String.format(&quot;nChannels:\t%d\n&quot;, program.getNumChannels()));&#xD;
 }&#xD;
 if (!program.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
   header.add(&quot;Optimization Requested:\tFalse\n&quot;);&#xD;
 }&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGEQmdHEe24LcnSyvVffw" name="createFooter" specification="_SJLpwmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGEQ2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJKboGdHEe24LcnSyvVffw" name="visualization" method="_SdFdOWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYw95WdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJLCsmdHEe24LcnSyvVffw" name="createHeader" method="_SdGEQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYw95mdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJLpwmdHEe24LcnSyvVffw" name="createFooter" method="_SdGEQmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SYxk8GdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYw94GdHEe24LcnSyvVffw" name="ProgramVisualization" visibility="package" method="_SdFdNmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYw94mdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYw942dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdklZmdHEe24LcnSyvVffw">
                  <body>Constructor converts WarpInterface to Program for visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to convert to program for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_SYw94WdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYw95GdHEe24LcnSyvVffw" type="_SJJNgGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJOtEGdHEe24LcnSyvVffw" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_SaRZwGdHEe24LcnSyvVffw" client="_SJOtEGdHEe24LcnSyvVffw" supplier="_SYAI4mdHEe24LcnSyvVffw" contract="_SYAI4mdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGERGdHEe24LcnSyvVffw" name="compare" specification="_SaSA0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGERWdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdGERmdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdGER2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SaSA0GdHEe24LcnSyvVffw" name="compare" method="_SdGERGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaSA0WdHEe24LcnSyvVffw" name="obj1" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaSA0mdHEe24LcnSyvVffw" name="obj2" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaSA02dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJP7MGdHEe24LcnSyvVffw" name="ReleaseTimeQueue">
              <generalization xmi:id="_SJSXcGdHEe24LcnSyvVffw" general="_SJRJVGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbwAc2dHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbwngGdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGESGdHEe24LcnSyvVffw" name="ReleaseTimeQueue" specification="_SJRJUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGESWdHEe24LcnSyvVffw" type="_SJP7MGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGESmdHEe24LcnSyvVffw" name="ReleaseTimeQueue" specification="_SYyMAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGES2dHEe24LcnSyvVffw" name="schedulableObjects" type="_SYeqAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdGETGdHEe24LcnSyvVffw" type="_SJP7MGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJRJUGdHEe24LcnSyvVffw" name="ReleaseTimeQueue" visibility="package" method="_SdGESGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJRJUWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJRJUmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJRJU2dHEe24LcnSyvVffw" type="_SJP7MGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SYyMAGdHEe24LcnSyvVffw" name="ReleaseTimeQueue" visibility="package" method="_SdGESmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYyMAmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYyMA2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYyMAWdHEe24LcnSyvVffw" name="schedulableObjects" type="_SYeqAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYyMBGdHEe24LcnSyvVffw" type="_SJP7MGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJS-gGdHEe24LcnSyvVffw" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_SdklZ2dHEe24LcnSyvVffw">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in WarpTester.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGETWdHEe24LcnSyvVffw" name="ReliabilityAnalysis" specification="_SYyzEGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGETmdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdGET2dHEe24LcnSyvVffw" type="_SJS-gGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrUGdHEe24LcnSyvVffw" name="verifyReliabilities" specification="_SJUMoGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrUWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJUMoGdHEe24LcnSyvVffw" name="verifyReliabilities" method="_SdGrUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SJUMoWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SYyzEGdHEe24LcnSyvVffw" name="ReliabilityAnalysis" method="_SdGETWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SYyzEmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SYyzE2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SYyzEWdHEe24LcnSyvVffw" name="program" type="_SItvsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SYyzFGdHEe24LcnSyvVffw" type="_SJS-gGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_SJUzsGdHEe24LcnSyvVffw" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_SdklaGdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_SJVawGdHEe24LcnSyvVffw" name="minPacketReceptionRate" type="_SaPkkmdHEe24LcnSyvVffw" isReadOnly="true"/>
              <ownedAttribute xmi:id="_SJVawWdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJWB0GdHEe24LcnSyvVffw" name="ReliabilityRow">
              <generalization xmi:id="_SYyzFWdHEe24LcnSyvVffw" general="_SJfLwGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbwngWdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbwngmdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrUmdHEe24LcnSyvVffw" name="ReliabilityRow" specification="_SJWo4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrU2dHEe24LcnSyvVffw" type="_SJWB0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrVGdHEe24LcnSyvVffw" name="ReliabilityRow" specification="_SaSn4mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrVWdHEe24LcnSyvVffw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdGrVmdHEe24LcnSyvVffw" name="element" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdGrV2dHEe24LcnSyvVffw" type="_SJWB0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrWGdHEe24LcnSyvVffw" name="ReliabilityRow" specification="_SaTO8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrWWdHEe24LcnSyvVffw" name="rowArray" type="_SaPkkmdHEe24LcnSyvVffw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdGrWmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdGrW2dHEe24LcnSyvVffw" type="_SJWB0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJWo4GdHEe24LcnSyvVffw" name="ReliabilityRow" method="_SdGrUmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJWo4WdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJWo4mdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJWo42dHEe24LcnSyvVffw" type="_SJWB0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaSn4mdHEe24LcnSyvVffw" name="ReliabilityRow" visibility="package" method="_SdGrVGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaSn5WdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaSn5mdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaSn42dHEe24LcnSyvVffw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaSn5GdHEe24LcnSyvVffw" name="element" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaSn52dHEe24LcnSyvVffw" type="_SJWB0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaTO8GdHEe24LcnSyvVffw" name="ReliabilityRow" visibility="package" method="_SdGrWGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaTO8mdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaTO82dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaTO8WdHEe24LcnSyvVffw" name="rowArray" type="_SaPkkmdHEe24LcnSyvVffw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SaTO9WdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaTO9GdHEe24LcnSyvVffw" type="_SJWB0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJX3AGdHEe24LcnSyvVffw" name="ReliabilityTable">
              <generalization xmi:id="_SYzaIWdHEe24LcnSyvVffw" general="_SJ9F0GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbxOkGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbxOkWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrXGdHEe24LcnSyvVffw" name="ReliabilityTable" specification="_SJYeEGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrXWdHEe24LcnSyvVffw" type="_SJX3AGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrXmdHEe24LcnSyvVffw" name="ReliabilityTable" specification="_SJZFIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrX2dHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdGrYGdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdGrYWdHEe24LcnSyvVffw" type="_SJX3AGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJYeEGdHEe24LcnSyvVffw" name="ReliabilityTable" method="_SdGrXGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJYeEWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJYeEmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJYeE2dHEe24LcnSyvVffw" type="_SJX3AGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJZFIGdHEe24LcnSyvVffw" name="ReliabilityTable" visibility="package" method="_SdGrXmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJZFI2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJZFJGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJZFIWdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJZFImdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJZFJWdHEe24LcnSyvVffw" type="_SJX3AGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJZsMGdHEe24LcnSyvVffw" name="ReliabilityVisualization">
              <ownedComment xmi:id="_SdklaWdHEe24LcnSyvVffw">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to create&#xD;
the file visualization that is requested in WarpTester.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SY0BNmdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbxOkmdHEe24LcnSyvVffw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbxOk2dHEe24LcnSyvVffw" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SbxOlGdHEe24LcnSyvVffw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbxOlWdHEe24LcnSyvVffw" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbx1oGdHEe24LcnSyvVffw" name="warp" visibility="private" type="_SKZKsGdHEe24LcnSyvVffw" association="_SeVaYWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbx1omdHEe24LcnSyvVffw" name="ra" visibility="private" type="_SJS-gGdHEe24LcnSyvVffw" association="_SeVaZGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdGrYmdHEe24LcnSyvVffw" name="ReliabilityVisualization" specification="_SY0BMWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdGrY2dHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdGrZGdHEe24LcnSyvVffw" type="_SJZsMGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SY0BMWdHEe24LcnSyvVffw" name="ReliabilityVisualization" visibility="package" method="_SdGrYmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SY0BM2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SY0BNGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SY0BMmdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY0BNWdHEe24LcnSyvVffw" type="_SJZsMGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJcIcGdHEe24LcnSyvVffw" name="ReportVisualization">
              <generalization xmi:id="_SY1PUWdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbycsWdHEe24LcnSyvVffw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_SbycsmdHEe24LcnSyvVffw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbycs2dHEe24LcnSyvVffw" name="content" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeWBcWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbzDwWdHEe24LcnSyvVffw" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdHSYGdHEe24LcnSyvVffw" name="ReportVisualization" specification="_SY0oQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdHSYWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdHSYmdHEe24LcnSyvVffw" name="warp" type="_SJ40YGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdHSY2dHEe24LcnSyvVffw" name="content" type="_SHLeoGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdHSZGdHEe24LcnSyvVffw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdHSZWdHEe24LcnSyvVffw" type="_SJcIcGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdHSZmdHEe24LcnSyvVffw" name="visualization" specification="_SJcvgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdHSZ2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdHSaGdHEe24LcnSyvVffw" name="createReport" specification="_SJdWkmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdHSaWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJcvgGdHEe24LcnSyvVffw" name="visualization" method="_SdHSZmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY0oSGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJdWkmdHEe24LcnSyvVffw" name="createReport" visibility="private" method="_SdHSaGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY1PUGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY0oQGdHEe24LcnSyvVffw" name="ReportVisualization" visibility="package" method="_SdHSYGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SY0oRWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SY0oRmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SY0oQWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY0oQmdHEe24LcnSyvVffw" name="warp" type="_SJ40YGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY0oQ2dHEe24LcnSyvVffw" name="content" type="_SHLeoGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY0oRGdHEe24LcnSyvVffw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY0oR2dHEe24LcnSyvVffw" type="_SJcIcGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJfLwGdHEe24LcnSyvVffw" name="Row">
              <generalization xmi:id="_SaUdEGdHEe24LcnSyvVffw" general="_SXtN8GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_SbzDw2dHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sbzq0GdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdHSamdHEe24LcnSyvVffw" name="Row" specification="_SJfy0WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdHSa2dHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdHSbGdHEe24LcnSyvVffw" name="Row" specification="_SaT2AGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdHSbWdHEe24LcnSyvVffw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdHSbmdHEe24LcnSyvVffw" name="element" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdHSb2dHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdHScGdHEe24LcnSyvVffw" name="Row" specification="_SaT2BmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdHScWdHEe24LcnSyvVffw" name="rowArray" type="_SZ7bgWdHEe24LcnSyvVffw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdHScmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdHSc2dHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5cGdHEe24LcnSyvVffw" name="Row" specification="_SJhA8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdH5cWdHEe24LcnSyvVffw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdH5cmdHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJfy0WdHEe24LcnSyvVffw" name="Row" method="_SdHSamdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJgZ4GdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJgZ4WdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJgZ4mdHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJhA8GdHEe24LcnSyvVffw" name="Row" visibility="package" method="_SdH5cGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJhA8mdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJhoAGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJhA8WdHEe24LcnSyvVffw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJhoAWdHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaT2AGdHEe24LcnSyvVffw" name="Row" visibility="package" method="_SdHSbGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaT2A2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaT2BGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaT2AWdHEe24LcnSyvVffw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaT2AmdHEe24LcnSyvVffw" name="element" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaT2BWdHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaT2BmdHEe24LcnSyvVffw" name="Row" visibility="package" method="_SdHScGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaT2CGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaT2CWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaT2B2dHEe24LcnSyvVffw" name="rowArray" type="_SZ7bgWdHEe24LcnSyvVffw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SaT2C2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaT2CmdHEe24LcnSyvVffw" type="_SJfLwGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJiPEGdHEe24LcnSyvVffw" name="SchedulableObjectQueue">
              <generalization xmi:id="_SJkEQGdHEe24LcnSyvVffw" general="_SJRJVGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sbzq0WdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sbzq0mdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5c2dHEe24LcnSyvVffw" name="SchedulableObjectQueue" specification="_SaUdEmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdH5dGdHEe24LcnSyvVffw" name="comparitor" type="_SYAI4mdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdH5dWdHEe24LcnSyvVffw" type="_SJiPEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5dmdHEe24LcnSyvVffw" name="SchedulableObjectQueue" specification="_SaVEJWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdH5d2dHEe24LcnSyvVffw" name="comparitor" type="_SYAI4mdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdH5eGdHEe24LcnSyvVffw" name="schedulableObjects" type="_SYeqAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdH5eWdHEe24LcnSyvVffw" type="_SJiPEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SaUdEmdHEe24LcnSyvVffw" name="SchedulableObjectQueue" visibility="package" method="_SdH5c2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaVEIWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaVEImdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaVEIGdHEe24LcnSyvVffw" name="comparitor" type="_SYAI4mdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaVEI2dHEe24LcnSyvVffw" type="_SJiPEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaVEJWdHEe24LcnSyvVffw" name="SchedulableObjectQueue" visibility="package" method="_SdH5dmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaVrMmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaVrM2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SaVrMGdHEe24LcnSyvVffw" name="comparitor" type="_SYAI4mdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaVrMWdHEe24LcnSyvVffw" name="schedulableObjects" type="_SYeqAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaVrNGdHEe24LcnSyvVffw" type="_SJiPEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJlSYGdHEe24LcnSyvVffw" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_SdklamdHEe24LcnSyvVffw">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Sbzq02dHEe24LcnSyvVffw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sbzq1GdHEe24LcnSyvVffw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sbzq1WdHEe24LcnSyvVffw" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb0R4WdHEe24LcnSyvVffw" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb0R42dHEe24LcnSyvVffw" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb0R5GdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb048WdHEe24LcnSyvVffw" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb0482dHEe24LcnSyvVffw" name="schedule" visibility="protected" type="_SJyGsGdHEe24LcnSyvVffw" association="_SeWogWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb049WdHEe24LcnSyvVffw" name="poset" visibility="protected" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeWohGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5emdHEe24LcnSyvVffw" name="Schedule" specification="_SY12YGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdH5e2dHEe24LcnSyvVffw" name="poset" type="_SIaNsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdH5fGdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdH5fWdHEe24LcnSyvVffw" type="_SJlSYGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIggmdHEe24LcnSyvVffw" name="getSchedule" specification="_SJo8wGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIgg2dHEe24LcnSyvVffw" type="_SJyGsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIghGdHEe24LcnSyvVffw" name="buildSchedule" specification="_SJo8wWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIghWdHEe24LcnSyvVffw" name="toProgram" specification="_SJpj0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIghmdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIgh2dHEe24LcnSyvVffw" name="replaceNullWithSleep" specification="_SY2dd2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIgiGdHEe24LcnSyvVffw" name="program" type="_SJGxQGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIgiWdHEe24LcnSyvVffw" name="fakeSchedulingToTestRest" specification="_SY3EgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIgimdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIgi2dHEe24LcnSyvVffw" name="getChannelAndSetStartTime" specification="_SY3EgmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIgjGdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdIgjWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIgjmdHEe24LcnSyvVffw" name="findChannelAndTime" specification="_SY3EhWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIgj2dHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdIgkGdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdIgkWdHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIgkmdHEe24LcnSyvVffw" name="continueSearch" specification="_SY3EiWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdIgk2dHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdIglGdHEe24LcnSyvVffw" name="activation" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdIglWdHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJHkGdHEe24LcnSyvVffw" name="noOtherChannelConflicts" specification="_SY3rk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJHkWdHEe24LcnSyvVffw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHkmdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJHk2dHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHlGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJHlWdHEe24LcnSyvVffw" name="conflictsExist" specification="_SY3rmGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJHlmdHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJHl2dHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHmGdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHmWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJHmmdHEe24LcnSyvVffw" name="freeOfCoordinatorConflicts" specification="_SY4SoGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJHm2dHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJHnGdHEe24LcnSyvVffw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHnWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHnmdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHn2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJHoGdHEe24LcnSyvVffw" name="isAvailable" specification="_SY4SpmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJHoWdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJHomdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHo2dHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHpGdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHpWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJHpmdHEe24LcnSyvVffw" name="isAvailable" specification="_SY4SrGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJHp2dHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJHqGdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHqWdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJHqmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJuoGdHEe24LcnSyvVffw" name="timeRemaining" specification="_SJrZAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJuoWdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJuomdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJuo2dHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJupGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJupWdHEe24LcnSyvVffw" name="canCombineEntriesInPlace" specification="_SY45tGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJupmdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJup2dHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJuqGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJuqWdHEe24LcnSyvVffw" name="combinedEntriesInPlace" specification="_SY5gwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJuqmdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJuq2dHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJurGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdJurWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJurmdHEe24LcnSyvVffw" name="addToSchedule" specification="_SY5gxWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJur2dHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdJusGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJusWdHEe24LcnSyvVffw" name="reportNotSchedulable" specification="_SY5gyGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdJusmdHEe24LcnSyvVffw" name="object" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJus2dHEe24LcnSyvVffw" name="printVerbose" specification="_SJsnIGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdJutGdHEe24LcnSyvVffw" name="print" specification="_SJsnIWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJo8wGdHEe24LcnSyvVffw" name="getSchedule" method="_SdIggmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMcWdHEe24LcnSyvVffw">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_SY2ddWdHEe24LcnSyvVffw" type="_SJyGsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJo8wWdHEe24LcnSyvVffw" name="buildSchedule" visibility="private" method="_SdIghGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SJpj0GdHEe24LcnSyvVffw" name="toProgram" method="_SdIghWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY2ddmdHEe24LcnSyvVffw" type="_SJGxQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJrZAGdHEe24LcnSyvVffw" name="timeRemaining" visibility="protected" method="_SdJuoGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMd2dHEe24LcnSyvVffw">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_SJrZAWdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJrZAmdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJrZA2dHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJrZBGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SJsnIGdHEe24LcnSyvVffw" name="printVerbose" method="_SdJus2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SJsnIWdHEe24LcnSyvVffw" name="print" method="_SdJutGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SY12YGdHEe24LcnSyvVffw" name="Schedule" visibility="package" method="_SdH5emdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SY2dcmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SY2dc2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SY2dcGdHEe24LcnSyvVffw" name="poset" type="_SIaNsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY2dcWdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY2ddGdHEe24LcnSyvVffw" type="_SJlSYGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY2dd2dHEe24LcnSyvVffw" name="replaceNullWithSleep" visibility="private" method="_SdIgh2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMcmdHEe24LcnSyvVffw">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_SY2deGdHEe24LcnSyvVffw" name="program" type="_SJGxQGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY3EgGdHEe24LcnSyvVffw" name="fakeSchedulingToTestRest" visibility="private" method="_SdIgiWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY3EgWdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY3EgmdHEe24LcnSyvVffw" name="getChannelAndSetStartTime" visibility="protected" method="_SdIgi2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMc2dHEe24LcnSyvVffw">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_SY3Eg2dHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY3EhGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY3EhWdHEe24LcnSyvVffw" name="findChannelAndTime" visibility="protected" method="_SdIgjmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY3EhmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY3Eh2dHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY3EiGdHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY3EiWdHEe24LcnSyvVffw" name="continueSearch" visibility="protected" method="_SdIgkmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMdGdHEe24LcnSyvVffw">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_SY3rkGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY3rkWdHEe24LcnSyvVffw" name="activation" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY3rkmdHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY3rk2dHEe24LcnSyvVffw" name="noOtherChannelConflicts" visibility="protected" method="_SdJHkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY3rlGdHEe24LcnSyvVffw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY3rlWdHEe24LcnSyvVffw" name="schedulableObject" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY3rlmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY3rl2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY3rmGdHEe24LcnSyvVffw" name="conflictsExist" visibility="protected" method="_SdJHlWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY3rmWdHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY3rmmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY3rm2dHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY3rnGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY4SoGdHEe24LcnSyvVffw" name="freeOfCoordinatorConflicts" visibility="protected" method="_SdJHmmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY4SoWdHEe24LcnSyvVffw" name="obj" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY4SomdHEe24LcnSyvVffw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY4So2dHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY4SpGdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY4SpWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY4SpmdHEe24LcnSyvVffw" name="isAvailable" visibility="protected" method="_SdJHoGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMdWdHEe24LcnSyvVffw">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_SY4Sp2dHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY4SqGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY4SqWdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY4SqmdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY4Sq2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY4SrGdHEe24LcnSyvVffw" name="isAvailable" visibility="protected" method="_SdJHpmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlMdmdHEe24LcnSyvVffw">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_SY45sGdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY45sWdHEe24LcnSyvVffw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY45smdHEe24LcnSyvVffw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY45s2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY45tGdHEe24LcnSyvVffw" name="canCombineEntriesInPlace" visibility="private" method="_SdJupWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY45tWdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY45tmdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY45t2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY5gwGdHEe24LcnSyvVffw" name="combinedEntriesInPlace" visibility="private" method="_SdJuqWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY5gwWdHEe24LcnSyvVffw" name="a1" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY5gwmdHEe24LcnSyvVffw" name="a2" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY5gw2dHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY5gxGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY5gxWdHEe24LcnSyvVffw" name="addToSchedule" visibility="protected" method="_SdJurmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY5gxmdHEe24LcnSyvVffw" name="next" type="_SFgqsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY5gx2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SY5gyGdHEe24LcnSyvVffw" name="reportNotSchedulable" visibility="private" method="_SdJusWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY6H0GdHEe24LcnSyvVffw" name="object" type="_SFgqsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_SJmggGdHEe24LcnSyvVffw" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_Sb1gAWdHEe24LcnSyvVffw" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Sb1gA2dHEe24LcnSyvVffw" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5fmdHEe24LcnSyvVffw" name="ScheduleLocation" specification="_SJnHkGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdH5f2dHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5gGdHEe24LcnSyvVffw" name="ScheduleLocation" specification="_SJnuoGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdH5gWdHEe24LcnSyvVffw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SdH5gmdHEe24LcnSyvVffw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SdH5g2dHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdH5hGdHEe24LcnSyvVffw" name="getChannel" specification="_SJoVsGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdH5hWdHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdIggGdHEe24LcnSyvVffw" name="getTime" specification="_SJoVsmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdIggWdHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_SJnHkGdHEe24LcnSyvVffw" name="ScheduleLocation" visibility="package" method="_SdH5fmdHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SJnHkWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SJnHkmdHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_SJnHk2dHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SJnuoGdHEe24LcnSyvVffw" name="ScheduleLocation" visibility="package" method="_SdH5gGdHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SJnuo2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SJnupGdHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_SJnuoWdHEe24LcnSyvVffw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SJnuomdHEe24LcnSyvVffw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_SJnupWdHEe24LcnSyvVffw" type="_SJmggGdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SJoVsGdHEe24LcnSyvVffw" name="getChannel" visibility="protected" method="_SdH5hGdHEe24LcnSyvVffw">
                  <ownedComment xmi:id="_Sdkla2dHEe24LcnSyvVffw">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_SJoVsWdHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SJoVsmdHEe24LcnSyvVffw" name="getTime" visibility="protected" method="_SdIggGdHEe24LcnSyvVffw">
                  <ownedComment xmi:id="_SdlMcGdHEe24LcnSyvVffw">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_SJoVs2dHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJyGsGdHEe24LcnSyvVffw" name="ScheduleTable">
              <generalization xmi:id="_SY6u4GdHEe24LcnSyvVffw" general="_SJ9F0GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb2HEGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb2HEWdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdKVsGdHEe24LcnSyvVffw" name="ScheduleTable" specification="_SJyGsWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdKVsWdHEe24LcnSyvVffw" type="_SJyGsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdKVsmdHEe24LcnSyvVffw" name="ScheduleTable" specification="_SJytw2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdKVs2dHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdKVtGdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdKVtWdHEe24LcnSyvVffw" type="_SJyGsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJyGsWdHEe24LcnSyvVffw" name="ScheduleTable" visibility="package" method="_SdKVsGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJytwGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJytwWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJytwmdHEe24LcnSyvVffw" type="_SJyGsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJytw2dHEe24LcnSyvVffw" name="ScheduleTable" visibility="package" method="_SdKVsmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJytxmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJytx2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJytxGdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJytxWdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJytyGdHEe24LcnSyvVffw" type="_SJyGsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJzU0GdHEe24LcnSyvVffw" name="ScheduleTime">
              <ownedAttribute xmi:id="_Sb2uIGdHEe24LcnSyvVffw" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb2uIWdHEe24LcnSyvVffw" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdKVtmdHEe24LcnSyvVffw" name="ScheduleTime" specification="_SJ0i8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdKVt2dHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdKVuGdHEe24LcnSyvVffw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdKVuWdHEe24LcnSyvVffw" type="_SJzU0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJ0i8GdHEe24LcnSyvVffw" name="ScheduleTime" visibility="package" method="_SdKVtmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJ1KAGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJ1KAWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJ0i8WdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJ0i8mdHEe24LcnSyvVffw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJ1KAmdHEe24LcnSyvVffw" type="_SJzU0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJ1xEGdHEe24LcnSyvVffw" name="SimulatorInput">
              <ownedComment xmi:id="_SdlMeGdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJ2YIGdHEe24LcnSyvVffw" name="SortedPeriodQueue">
              <generalization xmi:id="_SJ3mRGdHEe24LcnSyvVffw" general="_SJRJVGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb2uImdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb2uI2dHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdKVumdHEe24LcnSyvVffw" name="SortedPeriodQueue" specification="_SJ3mQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdKVu2dHEe24LcnSyvVffw" type="_SJ2YIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdKVvGdHEe24LcnSyvVffw" name="SortedPeriodQueue" specification="_SY79AGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdKVvWdHEe24LcnSyvVffw" name="schedulableObjects" type="_SYeqAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdKVvmdHEe24LcnSyvVffw" type="_SJ2YIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJ3mQGdHEe24LcnSyvVffw" name="SortedPeriodQueue" visibility="package" method="_SdKVumdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJ3mQWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJ3mQmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJ3mQ2dHEe24LcnSyvVffw" type="_SJ2YIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY79AGdHEe24LcnSyvVffw" name="SortedPeriodQueue" visibility="package" method="_SdKVvGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SY79AmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SY79A2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SY79AWdHEe24LcnSyvVffw" name="schedulableObjects" type="_SYeqAGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY79BGdHEe24LcnSyvVffw" type="_SJ2YIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_SJ40YGdHEe24LcnSyvVffw" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_SY8kEGdHEe24LcnSyvVffw" general="_SJUzsGdHEe24LcnSyvVffw"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_SJ5bcGdHEe24LcnSyvVffw" name="ScheduleChoices">
                <ownedLiteral xmi:id="_SJ5bcmdHEe24LcnSyvVffw" name="PRIORITY"/>
                <ownedLiteral xmi:id="_SJ5bc2dHEe24LcnSyvVffw" name="RM"/>
                <ownedLiteral xmi:id="_SJ5bdGdHEe24LcnSyvVffw" name="DM"/>
                <ownedLiteral xmi:id="_SJ5bdWdHEe24LcnSyvVffw" name="RTHART"/>
                <ownedLiteral xmi:id="_SJ6CgGdHEe24LcnSyvVffw" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_SJ6CgWdHEe24LcnSyvVffw" name="POSET_RM"/>
                <ownedLiteral xmi:id="_SJ6CgmdHEe24LcnSyvVffw" name="POSET_DM"/>
                <ownedLiteral xmi:id="_SJ6Cg2dHEe24LcnSyvVffw" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_SJ6ChGdHEe24LcnSyvVffw" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_SJ6ChWdHEe24LcnSyvVffw" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_SJ6ChmdHEe24LcnSyvVffw" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_SJ6Ch2dHEe24LcnSyvVffw" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_SJ6pkGdHEe24LcnSyvVffw" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_SJ6pkWdHEe24LcnSyvVffw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SJ6pkmdHEe24LcnSyvVffw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SJ7QoGdHEe24LcnSyvVffw" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SJ7QoWdHEe24LcnSyvVffw" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SJ7QomdHEe24LcnSyvVffw" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_SJ7Qo2dHEe24LcnSyvVffw" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJ73sGdHEe24LcnSyvVffw" name="SystemFactory">
              <ownedComment xmi:id="_SdlMeWdHEe24LcnSyvVffw">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdK8wGdHEe24LcnSyvVffw" name="create" specification="_SY8kEWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdK8wWdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdK8wmdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdK8w2dHEe24LcnSyvVffw" name="choice" type="_SJ5bcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdK8xGdHEe24LcnSyvVffw" type="_SKZKsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SY8kEWdHEe24LcnSyvVffw" name="create" isStatic="true" method="_SdK8wGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY8kEmdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY8kE2dHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY8kFGdHEe24LcnSyvVffw" name="choice" type="_SJ5bcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY8kFWdHEe24LcnSyvVffw" type="_SKZKsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SJ9F0GdHEe24LcnSyvVffw" name="Table">
              <generalization xmi:id="_SaW5VWdHEe24LcnSyvVffw" general="_SXtN8GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb2uJGdHEe24LcnSyvVffw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb3VMGdHEe24LcnSyvVffw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdK8xWdHEe24LcnSyvVffw" name="Table" specification="_SJ9s4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdK8xmdHEe24LcnSyvVffw" type="_SJ9F0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdK8x2dHEe24LcnSyvVffw" name="Table" specification="_SJ-T8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdK8yGdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdK8yWdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdK8ymdHEe24LcnSyvVffw" type="_SJ9F0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdK8y2dHEe24LcnSyvVffw" name="getNumRows" specification="_SJ-T9mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdK8zGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdK8zWdHEe24LcnSyvVffw" name="getNumColumns" specification="_SJ-7AGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdK8zmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdK8z2dHEe24LcnSyvVffw" name="set" specification="_SaW5UGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdK80GdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdK80WdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdK80mdHEe24LcnSyvVffw" name="element" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdLj0GdHEe24LcnSyvVffw" name="get" specification="_SJ-7AmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdLj0WdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdLj0mdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdLj02dHEe24LcnSyvVffw" type="_SZ7bgWdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SJ9s4WdHEe24LcnSyvVffw" name="Table" method="_SdK8xWdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJ9s4mdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJ9s42dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJ9s5GdHEe24LcnSyvVffw" type="_SJ9F0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJ-T8GdHEe24LcnSyvVffw" name="Table" method="_SdK8x2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SJ-T82dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SJ-T9GdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SJ-T8WdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJ-T8mdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJ-T9WdHEe24LcnSyvVffw" type="_SJ9F0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SJ-T9mdHEe24LcnSyvVffw" name="getNumRows" method="_SdK8y2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SJ-T92dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SJ-7AGdHEe24LcnSyvVffw" name="getNumColumns" method="_SdK8zWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SJ-7AWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SJ-7AmdHEe24LcnSyvVffw" name="get" method="_SdLj0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SJ-7A2dHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SJ_iEGdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaW5VGdHEe24LcnSyvVffw" type="_SZ7bgWdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaW5UGdHEe24LcnSyvVffw" name="set" method="_SdK8z2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaW5UWdHEe24LcnSyvVffw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaW5UmdHEe24LcnSyvVffw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaW5U2dHEe24LcnSyvVffw" name="element" type="_SZ7bgWdHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_SKAJIGdHEe24LcnSyvVffw" name="Visualization">
              <ownedComment xmi:id="_SdlMemdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_SKAwMGdHEe24LcnSyvVffw" name="SystemChoices">
                <ownedLiteral xmi:id="_SKBXQWdHEe24LcnSyvVffw" name="SOURCE"/>
                <ownedLiteral xmi:id="_SKBXQmdHEe24LcnSyvVffw" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_SKBXQ2dHEe24LcnSyvVffw" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_SKBXRGdHEe24LcnSyvVffw" name="LATENCY"/>
                <ownedLiteral xmi:id="_SKBXRWdHEe24LcnSyvVffw" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_SKBXRmdHEe24LcnSyvVffw" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_SKBXR2dHEe24LcnSyvVffw" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_SKB-UGdHEe24LcnSyvVffw" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_SKB-UmdHEe24LcnSyvVffw" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_SKB-U2dHEe24LcnSyvVffw" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_SKB-VGdHEe24LcnSyvVffw" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_SKB-VWdHEe24LcnSyvVffw" name="toDisplay"/>
              <ownedOperation xmi:id="_SKClYGdHEe24LcnSyvVffw" name="toFile"/>
              <ownedOperation xmi:id="_SKClYWdHEe24LcnSyvVffw" name="toString">
                <ownedParameter xmi:id="_SKClYmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKClY2dHEe24LcnSyvVffw" name="VisualizationFactory">
              <ownedComment xmi:id="_SdlMe2dHEe24LcnSyvVffw">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdLj1GdHEe24LcnSyvVffw" name="createProgramVisualization" specification="_SY9yM2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdLj1WdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj1mdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdLj12dHEe24LcnSyvVffw" name="choice" type="_SKAwMGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj2GdHEe24LcnSyvVffw" type="_SKAJIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdLj2WdHEe24LcnSyvVffw" name="createWorkLoadVisualization" specification="_SY-ZQ2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdLj2mdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj22dHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdLj3GdHEe24LcnSyvVffw" name="choice" type="_SKB-UGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj3WdHEe24LcnSyvVffw" type="_SKAJIGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SY9yM2dHEe24LcnSyvVffw" name="createProgramVisualization" isStatic="true" method="_SdLj1GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY9yNGdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY-ZQGdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY-ZQWdHEe24LcnSyvVffw" name="choice" type="_SKAwMGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY-ZQmdHEe24LcnSyvVffw" type="_SKAJIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SY-ZQ2dHEe24LcnSyvVffw" name="createWorkLoadVisualization" isStatic="true" method="_SdLj2WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SY-ZRGdHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY-ZRWdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SY-ZRmdHEe24LcnSyvVffw" name="choice" type="_SKB-UGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SY-ZR2dHEe24LcnSyvVffw" type="_SKAJIGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKEakGdHEe24LcnSyvVffw" name="VisualizationImplementation">
              <ownedComment xmi:id="_SdlMfGdHEe24LcnSyvVffw">
                <body>&lt;h1>Implementation of the Visualization Interface.&lt;/h1>&#xD;
&lt;p>The VisualizationImplementation class allows the user to request visualizations of various aspects of the given file content in Description object.&#xD;
Methods to print Workload Descriptions to the console, write to a file, and create string are defined.&#xD;
Visualizations are created based on system choices of SOURCE, RELIABILITIES, SIMULATOR_INPUT, LATENCY, LATENCY_REPORT, &#xD;
DEADLINE_REPORT, and CHANNEL. Workload choices include INPUT_GRAPH, COMUNICATION_GRAPH, GRAPHVIZ.&lt;/p>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Sb3VMWdHEe24LcnSyvVffw" name="visualization" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeXPkWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb38QWdHEe24LcnSyvVffw" name="fileContent" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeX2oWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb38Q2dHEe24LcnSyvVffw" name="displayContent" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeYdsGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb4jUWdHEe24LcnSyvVffw" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb4jU2dHEe24LcnSyvVffw" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb5KYWdHEe24LcnSyvVffw" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb5KY2dHEe24LcnSyvVffw" name="fm" visibility="private" type="_SHXE0GdHEe24LcnSyvVffw" association="_SeZEwWdHEe24LcnSyvVffw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb5KZGdHEe24LcnSyvVffw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb5xcWdHEe24LcnSyvVffw" name="warp" visibility="private" type="_SKZKsGdHEe24LcnSyvVffw" association="_SeZExGdHEe24LcnSyvVffw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb5xcmdHEe24LcnSyvVffw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb5xdGdHEe24LcnSyvVffw" name="workLoad" visibility="private" type="_SKqQcGdHEe24LcnSyvVffw" association="_SeZr0WdHEe24LcnSyvVffw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb5xdWdHEe24LcnSyvVffw" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_SY-ZSGdHEe24LcnSyvVffw" client="_SKEakGdHEe24LcnSyvVffw" supplier="_SKAJIGdHEe24LcnSyvVffw" contract="_SKAJIGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdLj3mdHEe24LcnSyvVffw" name="VisualizationImplementation" specification="_SaYHcWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdLj32dHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj4GdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdLj4WdHEe24LcnSyvVffw" name="choice" type="_SaXgYWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj4mdHEe24LcnSyvVffw" type="_SKEakGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdLj42dHEe24LcnSyvVffw" name="VisualizationImplementation" specification="_SaYugmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdLj5GdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj5WdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdLj5mdHEe24LcnSyvVffw" name="choice" type="_SaYugGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdLj52dHEe24LcnSyvVffw" type="_SKEakGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdLj6GdHEe24LcnSyvVffw" name="toDisplay" specification="_SKFosGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>System.out.println(displayContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK4GdHEe24LcnSyvVffw" name="toFile" specification="_SKGPw2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK4WdHEe24LcnSyvVffw" name="toString" specification="_SKG20mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMK4mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK42dHEe24LcnSyvVffw" name="createVisualization" specification="_SaZVkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMK5GdHEe24LcnSyvVffw" name="choice" type="_SaXgYWdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK5WdHEe24LcnSyvVffw" name="createVisualization" specification="_SaZVkmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMK5mdHEe24LcnSyvVffw" name="choice" type="_SaYugGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK52dHEe24LcnSyvVffw" name="createVisualization" specification="_SaZVlGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMK6GdHEe24LcnSyvVffw" name="obj" type="_SZ7bgWdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 displayContent = obj.displayVisualization();&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK6WdHEe24LcnSyvVffw" name="createFileNameTemplate" specification="_SKHd4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMK6mdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMK62dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SKFosGdHEe24LcnSyvVffw" name="toDisplay" method="_SdLj6GdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SKGPw2dHEe24LcnSyvVffw" name="toFile" method="_SdMK4GdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SKG20mdHEe24LcnSyvVffw" name="toString" method="_SdMK4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKG202dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKHd4WdHEe24LcnSyvVffw" name="createFileNameTemplate" visibility="private" method="_SdMK6WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdlzg2dHEe24LcnSyvVffw">
                  <body>Creates the fileNameTemplate using the full output path and input filename.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param outputDirectory The output used to create a new directory.&#xD;
   * @return fileNameTemplate, a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKHd4mdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKHd42dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SaYHcWdHEe24LcnSyvVffw" name="VisualizationImplementation" method="_SdLj3mdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaYHdWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaYHdmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdlMfWdHEe24LcnSyvVffw">
                  <body>The first constructor method sets up the inputFileName and fileNameTemplate based on the WarpInterface&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The interface to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaYHcmdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaYHc2dHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaYHdGdHEe24LcnSyvVffw" name="choice" type="_SaXgYWdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaYHd2dHEe24LcnSyvVffw" type="_SKEakGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaYugmdHEe24LcnSyvVffw" name="VisualizationImplementation" method="_SdLj42dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SaYuhmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SaYuh2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdlzgGdHEe24LcnSyvVffw">
                  <body>The second constructor method sets up the inputFileName and fileNameTemplate based on the Workload&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The work load to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The work load visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaYug2dHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaYuhGdHEe24LcnSyvVffw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SaYuhWdHEe24LcnSyvVffw" name="choice" type="_SaYugGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SaYuiGdHEe24LcnSyvVffw" type="_SKEakGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaZVkGdHEe24LcnSyvVffw" name="createVisualization" visibility="private" method="_SdMK42dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlzgWdHEe24LcnSyvVffw">
                  <body>Given the SystemChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaZVkWdHEe24LcnSyvVffw" name="choice" type="_SaXgYWdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaZVkmdHEe24LcnSyvVffw" name="createVisualization" visibility="private" method="_SdMK5WdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlzgmdHEe24LcnSyvVffw">
                  <body>Given the WorkLoadChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The work load visualization selected.</body>
                </ownedComment>
                <ownedParameter xmi:id="_SaZVk2dHEe24LcnSyvVffw" name="choice" type="_SaYugGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaZVlGdHEe24LcnSyvVffw" name="createVisualization" visibility="private" method="_SdMK52dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SaZ8oGdHEe24LcnSyvVffw" name="obj" type="_SZ7bgWdHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKLIQGdHEe24LcnSyvVffw" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_SdlzhGdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Sb6YgWdHEe24LcnSyvVffw" name="fm" visibility="private" type="_SHXE0GdHEe24LcnSyvVffw" association="_SeZr1GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb6_kWdHEe24LcnSyvVffw" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb6_k2dHEe24LcnSyvVffw" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb7moWdHEe24LcnSyvVffw" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb7momdHEe24LcnSyvVffw" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMK7GdHEe24LcnSyvVffw" name="VisualizationObject" specification="_SZAOcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMK7WdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMK7mdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMK72dHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMK8GdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); &#xD;
		this.suffix = suffix; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMx8GdHEe24LcnSyvVffw" name="VisualizationObject" specification="_SZA1gGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMx8WdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMx8mdHEe24LcnSyvVffw" name="warp" type="_SJ40YGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMx82dHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMx9GdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()); &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()); &#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMx9WdHEe24LcnSyvVffw" name="VisualizationObject" specification="_SZA1h2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMx9mdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMx92dHEe24LcnSyvVffw" name="warp" type="_SJ40YGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMx-GdHEe24LcnSyvVffw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMx-WdHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMx-mdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()) + nameExtension; &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()) + nameExtension; &#xD;
		}&#xD;
		&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMx-2dHEe24LcnSyvVffw" name="VisualizationObject" specification="_SZBckGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMx_GdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMx_WdHEe24LcnSyvVffw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMx_mdHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMx_2dHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension; &#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMyAGdHEe24LcnSyvVffw" name="nameExtension" specification="_SaajsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMyAWdHEe24LcnSyvVffw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMyAmdHEe24LcnSyvVffw" name="m" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdMyA2dHEe24LcnSyvVffw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMyBGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,&#xD;
				schName,&#xD;
				String.valueOf(m),&#xD;
				String.valueOf(e2e)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdMyBWdHEe24LcnSyvVffw" name="nameExtension" specification="_SKM9cGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdMyBmdHEe24LcnSyvVffw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMyB2dHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdMyCGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,&#xD;
				schName,&#xD;
				String.valueOf(numFaults)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZAGdHEe24LcnSyvVffw" name="getFileManager" specification="_SKM9dGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZAWdHEe24LcnSyvVffw" type="_SHXE0GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZAmdHEe24LcnSyvVffw" name="visualization" specification="_SKNkgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZA2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		content.add(NOT_IMPLEMENTED);&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZBGdHEe24LcnSyvVffw" name="createFile" specification="_SKNkgWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZBWdHEe24LcnSyvVffw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdNZBmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZB2dHEe24LcnSyvVffw" name="fileVisualization" specification="_SKOLkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZCGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 	fileContent.addAll(visualization());&#xD;
 	fileContent.addAll(createFooter());&#xD;
 	return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZCWdHEe24LcnSyvVffw" name="displayVisualization" specification="_SKOLkWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZCmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return visualization();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZC2dHEe24LcnSyvVffw" name="createHeader" specification="_SKOLkmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZDGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdNZDWdHEe24LcnSyvVffw" name="createFooter" specification="_SKOLk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdNZDmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SKM9cGdHEe24LcnSyvVffw" name="nameExtension" visibility="private" method="_SdMyBWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKM9cWdHEe24LcnSyvVffw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKM9cmdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKM9c2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKM9dGdHEe24LcnSyvVffw" name="getFileManager" method="_SdNZAGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdlzhWdHEe24LcnSyvVffw">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZBcl2dHEe24LcnSyvVffw" type="_SHXE0GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKNkgGdHEe24LcnSyvVffw" name="visualization" method="_SdNZAmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZBcmGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKNkgWdHEe24LcnSyvVffw" name="createFile" method="_SdNZBGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKNkgmdHEe24LcnSyvVffw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKNkg2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKOLkGdHEe24LcnSyvVffw" name="fileVisualization" method="_SdNZB2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZBcmWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKOLkWdHEe24LcnSyvVffw" name="displayVisualization" method="_SdNZCWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZBcmmdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKOLkmdHEe24LcnSyvVffw" name="createHeader" method="_SdNZC2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZBcm2dHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKOLk2dHEe24LcnSyvVffw" name="createFooter" method="_SdNZDWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZCDoGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZAOcGdHEe24LcnSyvVffw" name="VisualizationObject" visibility="package" method="_SdMK7GdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZAOdGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZAOdWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SZAOcWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZAOcmdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZAOc2dHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZAOdmdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZA1gGdHEe24LcnSyvVffw" name="VisualizationObject" visibility="package" method="_SdMx8GdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZA1hGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZA1hWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SZA1gWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZA1gmdHEe24LcnSyvVffw" name="warp" type="_SJ40YGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZA1g2dHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZA1hmdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZA1h2dHEe24LcnSyvVffw" name="VisualizationObject" visibility="package" method="_SdMx9WdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZA1jGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZA1jWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SZA1iGdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZA1iWdHEe24LcnSyvVffw" name="warp" type="_SJ40YGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZA1imdHEe24LcnSyvVffw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZA1i2dHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZA1jmdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZBckGdHEe24LcnSyvVffw" name="VisualizationObject" visibility="package" method="_SdMx-2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZBclGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZBclWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SZBckWdHEe24LcnSyvVffw" name="fm" type="_SHXE0GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZBckmdHEe24LcnSyvVffw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZBck2dHEe24LcnSyvVffw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZBclmdHEe24LcnSyvVffw" type="_SKLIQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SaajsGdHEe24LcnSyvVffw" name="nameExtension" visibility="private" method="_SdMyAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SabKwGdHEe24LcnSyvVffw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SabKwWdHEe24LcnSyvVffw" name="m" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SabKwmdHEe24LcnSyvVffw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SabKw2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKRO4GdHEe24LcnSyvVffw" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_SdlzhmdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Sabx0GdHEe24LcnSyvVffw" general="_SYM9M2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb8NsGdHEe24LcnSyvVffw" name="workLoad" visibility="package" type="_SKqQcGdHEe24LcnSyvVffw" association="_SeaS4WdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb8NsmdHEe24LcnSyvVffw" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAEGdHEe24LcnSyvVffw" name="WorkLoadListener" specification="_SZCqsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAEWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdOAEmdHEe24LcnSyvVffw" type="_SKRO4GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAE2dHEe24LcnSyvVffw" name="buildNodesAndFlows" specification="_SZCqtWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAFGdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAFWdHEe24LcnSyvVffw" name="testPrintStdOut" specification="_SKR18GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAFmdHEe24LcnSyvVffw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAF2dHEe24LcnSyvVffw" name="enterWarpName" specification="_SZCqt2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAGGdHEe24LcnSyvVffw" name="ctx" type="_SYOyYmdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAGWdHEe24LcnSyvVffw" name="enterFlowName" specification="_SZDRw2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAGmdHEe24LcnSyvVffw" name="ctx" type="_SYQnkGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAG2dHEe24LcnSyvVffw" name="exitPriority" specification="_SZD41GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAHGdHEe24LcnSyvVffw" name="ctx" type="_SZD40mdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAHWdHEe24LcnSyvVffw" name="exitPeriod" specification="_SZEf5GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAHmdHEe24LcnSyvVffw" name="ctx" type="_SZEf4mdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOAH2dHEe24LcnSyvVffw" name="exitDeadline" specification="_SZFuAWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOAIGdHEe24LcnSyvVffw" name="ctx" type="_SZFG82dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOnIGdHEe24LcnSyvVffw" name="exitPhase" specification="_SZGVEWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOnIWdHEe24LcnSyvVffw" name="ctx" type="_SZFuBmdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOnImdHEe24LcnSyvVffw" name="exitSrcNode" specification="_SZGVFmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOnI2dHEe24LcnSyvVffw" name="ctx" type="_SYROpGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOnJGdHEe24LcnSyvVffw" name="exitSnkNode" specification="_SZG8JGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOnJWdHEe24LcnSyvVffw" name="ctx" type="_SYScwGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOnJmdHEe24LcnSyvVffw" name="exitFlow" specification="_SZHjMmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOnJ2dHEe24LcnSyvVffw" name="ctx" type="_SYTD02dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SKR18GdHEe24LcnSyvVffw" name="testPrintStdOut" method="_SdOAFWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKSdAGdHEe24LcnSyvVffw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZCqsGdHEe24LcnSyvVffw" name="WorkLoadListener" visibility="private" method="_SdOAEGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZCqsmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZCqs2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SZCqsWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZCqtGdHEe24LcnSyvVffw" type="_SKRO4GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZCqtWdHEe24LcnSyvVffw" name="buildNodesAndFlows" isStatic="true" method="_SdOAE2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZCqtmdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZCqt2dHEe24LcnSyvVffw" name="enterWarpName" method="_SdOAF2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZCquGdHEe24LcnSyvVffw" name="ctx" type="_SYOyYmdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZDRw2dHEe24LcnSyvVffw" name="enterFlowName" method="_SdOAGWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZDRxGdHEe24LcnSyvVffw" name="ctx" type="_SYQnkGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZD41GdHEe24LcnSyvVffw" name="exitPriority" method="_SdOAG2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZD41WdHEe24LcnSyvVffw" name="ctx" type="_SZD40mdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZEf5GdHEe24LcnSyvVffw" name="exitPeriod" method="_SdOAHWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZEf5WdHEe24LcnSyvVffw" name="ctx" type="_SZEf4mdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZFuAWdHEe24LcnSyvVffw" name="exitDeadline" method="_SdOAH2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZFuAmdHEe24LcnSyvVffw" name="ctx" type="_SZFG82dHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZGVEWdHEe24LcnSyvVffw" name="exitPhase" method="_SdOnIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZGVEmdHEe24LcnSyvVffw" name="ctx" type="_SZFuBmdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZGVFmdHEe24LcnSyvVffw" name="exitSrcNode" method="_SdOnImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZG8IGdHEe24LcnSyvVffw" name="ctx" type="_SYROpGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZG8JGdHEe24LcnSyvVffw" name="exitSnkNode" method="_SdOnJGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZG8JWdHEe24LcnSyvVffw" name="ctx" type="_SYScwGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZHjMmdHEe24LcnSyvVffw" name="exitFlow" method="_SdOnJmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZHjM2dHEe24LcnSyvVffw" name="ctx" type="_SYTD02dHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKU5QGdHEe24LcnSyvVffw" name="WorkLoadDescription">
              <ownedComment xmi:id="_Sdlzh2dHEe24LcnSyvVffw">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_SZIKQmdHEe24LcnSyvVffw" general="_SKLIQGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb80wWdHEe24LcnSyvVffw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb80wmdHEe24LcnSyvVffw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb9b0GdHEe24LcnSyvVffw" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Sb9b0WdHEe24LcnSyvVffw" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb9b0mdHEe24LcnSyvVffw" name="description" visibility="private" type="_SHLeoGdHEe24LcnSyvVffw" association="_SeaS5GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb9b1GdHEe24LcnSyvVffw" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Sb-C4WdHEe24LcnSyvVffw" name="fm" visibility="private" type="_SHXE0GdHEe24LcnSyvVffw" association="_Sea58WdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb-p8GdHEe24LcnSyvVffw" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOnKGdHEe24LcnSyvVffw" name="WorkLoadDescription" specification="_SKWHYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOnKWdHEe24LcnSyvVffw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdOnKmdHEe24LcnSyvVffw" type="_SKU5QGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdOnK2dHEe24LcnSyvVffw" name="visualization" specification="_SKWHZWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdOnLGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdPOMGdHEe24LcnSyvVffw" name="fileVisualization" specification="_SKWucmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdPOMWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdPOMmdHEe24LcnSyvVffw" name="toString" specification="_SKXVgmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdPOM2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdPONGdHEe24LcnSyvVffw" name="initialize" specification="_SKX8kGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdPONWdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SKWHYGdHEe24LcnSyvVffw" name="WorkLoadDescription" visibility="package" method="_SdOnKGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SKWHYmdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SKWHY2dHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SKWHYWdHEe24LcnSyvVffw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKWHZGdHEe24LcnSyvVffw" type="_SKU5QGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKWHZWdHEe24LcnSyvVffw" name="visualization" method="_SdOnK2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZIKQGdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKWucmdHEe24LcnSyvVffw" name="fileVisualization" method="_SdPOMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZIKQWdHEe24LcnSyvVffw" type="_SHLeoGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKXVgmdHEe24LcnSyvVffw" name="toString" method="_SdPOMmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKXVg2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKX8kGdHEe24LcnSyvVffw" name="initialize" visibility="private" method="_SdPONGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKX8kWdHEe24LcnSyvVffw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_SKZKsGdHEe24LcnSyvVffw" name="WarpInterface">
              <ownedComment xmi:id="_SdlziGdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_SZIxUGdHEe24LcnSyvVffw" general="_SJ40YGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SKZxwGdHEe24LcnSyvVffw" name="toWorkload">
                <ownedParameter xmi:id="_SZIxUWdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKZxwWdHEe24LcnSyvVffw" name="toProgram">
                <ownedParameter xmi:id="_SZIxUmdHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKZxwmdHEe24LcnSyvVffw" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_SZIxU2dHEe24LcnSyvVffw" type="_SJS-gGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKaY0GdHEe24LcnSyvVffw" name="toSimulator">
                <ownedParameter xmi:id="_SZIxVGdHEe24LcnSyvVffw" type="_SJ1xEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKaY0WdHEe24LcnSyvVffw" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_SZJYYGdHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKaY0mdHEe24LcnSyvVffw" name="toChannelAnalysis">
                <ownedParameter xmi:id="_SZJYYWdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKaY02dHEe24LcnSyvVffw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_SKaY1GdHEe24LcnSyvVffw" name="reliabilitiesMet">
                <ownedParameter xmi:id="_SKaY1WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKa_4GdHEe24LcnSyvVffw" name="deadlinesMet">
                <ownedParameter xmi:id="_SKa_4WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKbm8GdHEe24LcnSyvVffw" name="WarpPoset">
              <ownedComment xmi:id="_SdlziWdHEe24LcnSyvVffw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_SZJYZ2dHEe24LcnSyvVffw" general="_SIaNsGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdPONmdHEe24LcnSyvVffw" name="WarpPoset" specification="_SZJYYmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdPON2dHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdPOOGdHEe24LcnSyvVffw" type="_SKbm8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdPOOWdHEe24LcnSyvVffw" name="findCoordinator" specification="_Sabx0WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdPOOmdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdPOO2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SZJYYmdHEe24LcnSyvVffw" name="WarpPoset" visibility="package" method="_SdPONmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZJYZGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZJYZWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SZJYY2dHEe24LcnSyvVffw" name="workload" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZJYZmdHEe24LcnSyvVffw" type="_SKbm8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Sabx0WdHEe24LcnSyvVffw" name="findCoordinator" visibility="protected" method="_SdPOOWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SacY4GdHEe24LcnSyvVffw" name="nodesInFlow" type="_SXtN8GdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SacY4WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKc1EGdHEe24LcnSyvVffw" name="WarpSystem">
              <ownedComment xmi:id="_SdlzimdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Sb-p8WdHEe24LcnSyvVffw" name="program" visibility="private" type="_SItvsGdHEe24LcnSyvVffw" association="_SebhAGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb_RAWdHEe24LcnSyvVffw" name="workLoad" visibility="private" type="_SKqQcGdHEe24LcnSyvVffw" association="_SebhA2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb_RA2dHEe24LcnSyvVffw" name="ra" visibility="private" type="_SJS-gGdHEe24LcnSyvVffw" association="_SecIEWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb_4EWdHEe24LcnSyvVffw" name="la" visibility="private" type="_SIAlEGdHEe24LcnSyvVffw" association="_SecIFGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_Sb_4E2dHEe24LcnSyvVffw" name="ca" visibility="private" type="_SGFScGdHEe24LcnSyvVffw" association="_SecvIWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScAfIWdHEe24LcnSyvVffw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScBtQmdHEe24LcnSyvVffw" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScBtQ2dHEe24LcnSyvVffw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScBtRWdHEe24LcnSyvVffw" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScCUUGdHEe24LcnSyvVffw" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_SZJ_cGdHEe24LcnSyvVffw" client="_SKc1EGdHEe24LcnSyvVffw" supplier="_SKZKsGdHEe24LcnSyvVffw" contract="_SKZKsGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1QGdHEe24LcnSyvVffw" name="WarpSystem" specification="_Sac_8mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1QWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdP1QmdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdP1Q2dHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdP1RGdHEe24LcnSyvVffw" type="_SKc1EGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1RWdHEe24LcnSyvVffw" name="toWorkload" specification="_SKeqQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1RmdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1R2dHEe24LcnSyvVffw" name="toProgram" specification="_SKeqRGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1SGdHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1SWdHEe24LcnSyvVffw" name="toReliabilityAnalysis" specification="_SKfRU2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1SmdHEe24LcnSyvVffw" type="_SJS-gGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1S2dHEe24LcnSyvVffw" name="toSimulator" specification="_SKf4Y2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1TGdHEe24LcnSyvVffw" type="_SJ1xEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1TWdHEe24LcnSyvVffw" name="toLatencyAnalysis" specification="_SKgfcmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1TmdHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1T2dHEe24LcnSyvVffw" name="toChannelAnalysis" specification="_SKhGgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1UGdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdP1UWdHEe24LcnSyvVffw" name="reliabilitiesMet" specification="_SKhGhGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdP1UmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcUGdHEe24LcnSyvVffw" name="deadlinesMet" specification="_SKhtk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcUWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcUmdHEe24LcnSyvVffw" name="createProgram" specification="_SadnA2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcU2dHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdQcVGdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdQcVWdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcVmdHEe24LcnSyvVffw" name="getNumFaults" specification="_SKiUomdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcV2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcWGdHEe24LcnSyvVffw" name="getMinPacketReceptionRate" specification="_SKi7smdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcWWdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcWmdHEe24LcnSyvVffw" name="getE2e" specification="_SKjiwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcW2dHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcXGdHEe24LcnSyvVffw" name="getName" specification="_SKkJ0WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcXWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcXmdHEe24LcnSyvVffw" name="getSchedulerName" specification="_SKkw4mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcX2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdQcYGdHEe24LcnSyvVffw" name="getNumTransmissions" specification="_SKlX82dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdQcYWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRDYGdHEe24LcnSyvVffw" name="getOptimizationFlag" specification="_SKl_A2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRDYWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SKeqQGdHEe24LcnSyvVffw" name="toWorkload" method="_SdP1RWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZJ_cWdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKeqRGdHEe24LcnSyvVffw" name="toProgram" method="_SdP1R2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZKmgGdHEe24LcnSyvVffw" type="_SItvsGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKfRU2dHEe24LcnSyvVffw" name="toReliabilityAnalysis" method="_SdP1SWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZKmgWdHEe24LcnSyvVffw" type="_SJS-gGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKf4Y2dHEe24LcnSyvVffw" name="toSimulator" method="_SdP1S2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZKmgmdHEe24LcnSyvVffw" type="_SJ1xEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKgfcmdHEe24LcnSyvVffw" name="toLatencyAnalysis" method="_SdP1TWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZKmg2dHEe24LcnSyvVffw" type="_SIAlEGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKhGgGdHEe24LcnSyvVffw" name="toChannelAnalysis" method="_SdP1T2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZKmhGdHEe24LcnSyvVffw" type="_SGFScGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKhGhGdHEe24LcnSyvVffw" name="reliabilitiesMet" method="_SdP1UWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKhGhWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKhtk2dHEe24LcnSyvVffw" name="deadlinesMet" method="_SdQcUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKhtlGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKiUomdHEe24LcnSyvVffw" name="getNumFaults" method="_SdQcVmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKiUo2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKi7smdHEe24LcnSyvVffw" name="getMinPacketReceptionRate" method="_SdQcWGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SadnB2dHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKjiwGdHEe24LcnSyvVffw" name="getE2e" method="_SdQcWmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SadnCGdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKkJ0WdHEe24LcnSyvVffw" name="getName" method="_SdQcXGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKkJ0mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKkw4mdHEe24LcnSyvVffw" name="getSchedulerName" method="_SdQcXmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKkw42dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKlX82dHEe24LcnSyvVffw" name="getNumTransmissions" method="_SdQcYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKlX9GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKl_A2dHEe24LcnSyvVffw" name="getOptimizationFlag" method="_SdRDYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKl_BGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKmmE2dHEe24LcnSyvVffw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_Sac_8mdHEe24LcnSyvVffw" name="WarpSystem" method="_SdP1QGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SadnAGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SadnAWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Sac_82dHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sac_9GdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Sac_9WdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SadnAmdHEe24LcnSyvVffw" type="_SKc1EGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SadnA2dHEe24LcnSyvVffw" name="createProgram" visibility="private" method="_SdQcUmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SadnBGdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SadnBWdHEe24LcnSyvVffw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SadnBmdHEe24LcnSyvVffw" name="choice" type="_SaMhQ2dHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SKqQcGdHEe24LcnSyvVffw" name="WorkLoad">
              <ownedComment xmi:id="_SdmakGdHEe24LcnSyvVffw">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_SZPfAmdHEe24LcnSyvVffw" general="_SKU5QGdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScC7YGdHEe24LcnSyvVffw" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScC7YWdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScC7YmdHEe24LcnSyvVffw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScC7Y2dHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScDicGdHEe24LcnSyvVffw" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScDicWdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScDicmdHEe24LcnSyvVffw" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScDic2dHEe24LcnSyvVffw" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScDidGdHEe24LcnSyvVffw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScDidWdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScEJgGdHEe24LcnSyvVffw" name="minPacketReceptionRate" type="_SaPkkmdHEe24LcnSyvVffw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScEJgWdHEe24LcnSyvVffw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScEJgmdHEe24LcnSyvVffw" name="e2e" visibility="private" type="_SaPkkmdHEe24LcnSyvVffw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScEJg2dHEe24LcnSyvVffw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScEwkGdHEe24LcnSyvVffw" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScEwkWdHEe24LcnSyvVffw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScEwkmdHEe24LcnSyvVffw" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScEwk2dHEe24LcnSyvVffw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScFXoGdHEe24LcnSyvVffw" name="flows" type="_SHscAGdHEe24LcnSyvVffw" association="_SdmakWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScFXoWdHEe24LcnSyvVffw" name="nodes" type="_SISR4GdHEe24LcnSyvVffw" association="_Sdmak2dHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScFXomdHEe24LcnSyvVffw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScF-sWdHEe24LcnSyvVffw" name="flowNamesInOriginalOrder" type="_SXtN8GdHEe24LcnSyvVffw" association="_SecvJGdHEe24LcnSyvVffw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScF-s2dHEe24LcnSyvVffw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScGlwGdHEe24LcnSyvVffw" name="flowNamesInPriorityOrder" type="_SXtN8GdHEe24LcnSyvVffw" association="_SedWMWdHEe24LcnSyvVffw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScHM0GdHEe24LcnSyvVffw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_SZNCw2dHEe24LcnSyvVffw" client="_SKqQcGdHEe24LcnSyvVffw" supplier="_SJUzsGdHEe24LcnSyvVffw" contract="_SJUzsGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRDYmdHEe24LcnSyvVffw" name="WorkLoad" specification="_SafcMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRDY2dHEe24LcnSyvVffw" name="m" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdRDZGdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdRDZWdHEe24LcnSyvVffw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdRDZmdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRDZ2dHEe24LcnSyvVffw" name="WorkLoad" specification="_SafcN2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRDaGdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdRDaWdHEe24LcnSyvVffw" name="m" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdRDamdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdRDa2dHEe24LcnSyvVffw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdRDbGdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqcGdHEe24LcnSyvVffw" name="setDefaultParameters" specification="_SKsssGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqcWdHEe24LcnSyvVffw" name="getE2e" specification="_SKtTwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqcmdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqc2dHEe24LcnSyvVffw" name="getIntForFlowNames" specification="_SKtTwWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqdGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqdWdHEe24LcnSyvVffw" name="getName" specification="_SKt60GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqdmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqd2dHEe24LcnSyvVffw" name="setMinPacketReceptionRate" specification="_SagDQWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqeGdHEe24LcnSyvVffw" name="minPacketReceptionRate" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqeWdHEe24LcnSyvVffw" name="getMaxPhase" specification="_SKt60mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqemdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqe2dHEe24LcnSyvVffw" name="getMinPeriod" specification="_SKuh4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqfGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqfWdHEe24LcnSyvVffw" name="setE2e" specification="_SagqUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqfmdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdRqf2dHEe24LcnSyvVffw" name="setIntForFlowNames" specification="_SKuh4mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdRqgGdHEe24LcnSyvVffw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRgGdHEe24LcnSyvVffw" name="setName" specification="_SKvI8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRgWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRgmdHEe24LcnSyvVffw" name="setNodeChannel" specification="_SKvwAGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRg2dHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdSRhGdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRhWdHEe24LcnSyvVffw" name="getNodeChannel" specification="_SKvwA2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRhmdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdSRh2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRiGdHEe24LcnSyvVffw" name="addFlow" specification="_SKwXEGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRiWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRimdHEe24LcnSyvVffw" name="isIntForNodeNames" specification="_SKwXEmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRi2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRjGdHEe24LcnSyvVffw" name="isIntForFlowNames" specification="_SKw-IGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRjWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRjmdHEe24LcnSyvVffw" name="addNodeToFlow" specification="_SKw-ImdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRj2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdSRkGdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRkWdHEe24LcnSyvVffw" name="getFlowPriority" specification="_SKxlMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRkmdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdSRk2dHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdSRlGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdSRlWdHEe24LcnSyvVffw" name="setFlowPriority" specification="_SKyMQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdSRlmdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdSRl2dHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4kGdHEe24LcnSyvVffw" name="setFlowPeriod" specification="_SKyzUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4kWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4kmdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4k2dHEe24LcnSyvVffw" name="setFlowDeadline" specification="_SKyzU2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4lGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4lWdHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4lmdHEe24LcnSyvVffw" name="setFlowPhase" specification="_SKzaYmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4l2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4mGdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4mWdHEe24LcnSyvVffw" name="getFlowIndex" specification="_SK0BcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4mmdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4m2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4nGdHEe24LcnSyvVffw" name="getFlowPriority" specification="_SK0ogGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4nWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4nmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4n2dHEe24LcnSyvVffw" name="getFlowPeriod" specification="_SK0og2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4oGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4oWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdS4omdHEe24LcnSyvVffw" name="getFlowDeadline" specification="_SK1PkGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdS4o2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdS4pGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfoGdHEe24LcnSyvVffw" name="getFlowPhase" specification="_SK1Pk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdTfoWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdTfomdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfo2dHEe24LcnSyvVffw" name="getFlowTxAttemptsPerLink" specification="_SK12omdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdTfpGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdTfpWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfpmdHEe24LcnSyvVffw" name="setFlowsInPriorityOrder" specification="_SK2dsGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfp2dHEe24LcnSyvVffw" name="setFlowsInDMorder" specification="_SK2dsWdHEe24LcnSyvVffw">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfqGdHEe24LcnSyvVffw" name="setFlowsInRMorder" specification="_SK2dsmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfqWdHEe24LcnSyvVffw" name="setFlowsInRealTimeHARTorder" specification="_SK2ds2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfqmdHEe24LcnSyvVffw" name="finalizeCurrentFlow" specification="_SK3EwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdTfq2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfrGdHEe24LcnSyvVffw" name="nextReleaseTime" specification="_SK3r0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdTfrWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdTfrmdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdTfr2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTfsGdHEe24LcnSyvVffw" name="nextAbsoluteDeadline" specification="_SK3r1GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdTfsWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdTfsmdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdTfs2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdTftGdHEe24LcnSyvVffw" name="finalizeFlowWithE2eParameters" specification="_SK4S4WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdTftWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGsGdHEe24LcnSyvVffw" name="finalizeFlowWithFixedFaultTolerance" specification="_SK4S42dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGsWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGsmdHEe24LcnSyvVffw" name="getFixedTxPerLinkAndTotalTxCost" specification="_SZOQ4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGs2dHEe24LcnSyvVffw" name="flow" type="_SHdygGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdUGtGdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGtWdHEe24LcnSyvVffw" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_SahRYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGtmdHEe24LcnSyvVffw" name="flow" type="_SHdygGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdUGt2dHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdUGuGdHEe24LcnSyvVffw" name="M" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdUGuWdHEe24LcnSyvVffw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUGumdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGu2dHEe24LcnSyvVffw" name="getNodeNamesOrderedAlphabetically" specification="_SK458GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGvGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdUGvWdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGvmdHEe24LcnSyvVffw" name="getFlow" specification="_SK5hA2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGv2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUGwGdHEe24LcnSyvVffw" type="_SHdygGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGwWdHEe24LcnSyvVffw" name="getFlowNames" specification="_SK6IEWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGwmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdUGw2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUGxGdHEe24LcnSyvVffw" name="getNodeIndex" specification="_SK6vIWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUGxWdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUGxmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUtwGdHEe24LcnSyvVffw" name="getNodesInFlow" specification="_SK7WMGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUtwWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUtwmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdUtw2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUtxGdHEe24LcnSyvVffw" name="getHyperPeriod" specification="_SK7WNWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUtxWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUtxmdHEe24LcnSyvVffw" name="getTotalTxAttemptsInFlow" specification="_SK79QWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUtx2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUtyGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUtyWdHEe24LcnSyvVffw" name="getNumTxAttemptsPerLink" specification="_SK79RGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUtymdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUty2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdUtzGdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUtzWdHEe24LcnSyvVffw" name="addEdge" specification="_SZO38WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUtzmdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdUtz2dHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUt0GdHEe24LcnSyvVffw" name="maxFlowLength" specification="_SK9LYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUt0WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUt0mdHEe24LcnSyvVffw" name="parser" specification="_SZO39GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUt02dHEe24LcnSyvVffw" name="wkldDesc" type="_SHLeoGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdUt1GdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// loops through the workload description to find the flow name&#xD;
	  // that matches a specific flow name passed as the second input parameter.&#xD;
	  // prints the matching flow line&#xD;
	  for (String flowLine : wkldDesc) {&#xD;
		  if (flowLine.startsWith(flowName + ' ') || &#xD;
				  flowLine.startsWith(flowName + ':')) {   //accounts for .txt files where a colon follows flow name&#xD;
			  System.out.print(flowLine);&#xD;
		  }&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdUt1WdHEe24LcnSyvVffw" name="main" specification="_SK9LYmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdUt1mdHEe24LcnSyvVffw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdUt12dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	  System.out.println(wkld.name);&#xD;
	  wkld.setFlowsInDMorder();&#xD;
	  // loops through the sorted ArrayList of flow names calling parser &#xD;
	  // to match each flow name with associated workload description&#xD;
	  for (String flowName : wkld.getFlowNamesInPriorityOrder()) {&#xD;
		  parser(wkld.visualization(), flowName);&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SKsssGdHEe24LcnSyvVffw" name="setDefaultParameters" visibility="private" method="_SdRqcGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SKtTwGdHEe24LcnSyvVffw" name="getE2e" method="_SdRqcWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBomdHEe24LcnSyvVffw">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_SagDQGdHEe24LcnSyvVffw" type="_SaPkkmdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SKtTwWdHEe24LcnSyvVffw" name="getIntForFlowNames" method="_SdRqc2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBo2dHEe24LcnSyvVffw">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKtTwmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKt60GdHEe24LcnSyvVffw" name="getName" method="_SdRqdWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBpGdHEe24LcnSyvVffw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKt60WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKt60mdHEe24LcnSyvVffw" name="getMaxPhase" method="_SdRqeWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBpmdHEe24LcnSyvVffw">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKt602dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKuh4GdHEe24LcnSyvVffw" name="getMinPeriod" method="_SdRqe2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBp2dHEe24LcnSyvVffw">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKuh4WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKuh4mdHEe24LcnSyvVffw" name="setIntForFlowNames" method="_SdRqf2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBqWdHEe24LcnSyvVffw">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKuh42dHEe24LcnSyvVffw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKvI8GdHEe24LcnSyvVffw" name="setName" method="_SdSRgGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBqmdHEe24LcnSyvVffw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKvI8WdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKvwAGdHEe24LcnSyvVffw" name="setNodeChannel" method="_SdSRgmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBq2dHEe24LcnSyvVffw">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKvwAWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKvwAmdHEe24LcnSyvVffw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKvwA2dHEe24LcnSyvVffw" name="getNodeChannel" method="_SdSRhWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBrGdHEe24LcnSyvVffw">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKvwBGdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKvwBWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKwXEGdHEe24LcnSyvVffw" name="addFlow" method="_SdSRiGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKwXEWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKwXEmdHEe24LcnSyvVffw" name="isIntForNodeNames" method="_SdSRimdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKwXE2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKw-IGdHEe24LcnSyvVffw" name="isIntForFlowNames" method="_SdSRjGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKw-IWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKw-ImdHEe24LcnSyvVffw" name="addNodeToFlow" method="_SdSRjmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKw-I2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKw-JGdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKxlMGdHEe24LcnSyvVffw" name="getFlowPriority" method="_SdSRkWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBrWdHEe24LcnSyvVffw">
                  <body>Iterates through the given flow to find the input node name. When found,&#xD;
   * gets the node's priority and returns it.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param nodeName&#xD;
   * @return priority (Integer value) of input node</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKxlMWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKxlMmdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKxlM2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKyMQGdHEe24LcnSyvVffw" name="setFlowPriority" method="_SdSRlWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnosGdHEe24LcnSyvVffw">
                  <body>Method to set a given flow name to a new passed in priority value.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_SKyMQWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKyMQmdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKyzUGdHEe24LcnSyvVffw" name="setFlowPeriod" method="_SdS4kGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKyzUWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKyzUmdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKyzU2dHEe24LcnSyvVffw" name="setFlowDeadline" method="_SdS4k2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKzaYGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKzaYWdHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SKzaYmdHEe24LcnSyvVffw" name="setFlowPhase" method="_SdS4lmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SKzaY2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SKzaZGdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK0BcGdHEe24LcnSyvVffw" name="getFlowIndex" method="_SdS4mWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK0BcWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK0BcmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK0ogGdHEe24LcnSyvVffw" name="getFlowPriority" method="_SdS4nGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK0ogWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK0ogmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK0og2dHEe24LcnSyvVffw" name="getFlowPeriod" method="_SdS4n2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK0ohGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK0ohWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK1PkGdHEe24LcnSyvVffw" name="getFlowDeadline" method="_SdS4omdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnosWdHEe24LcnSyvVffw">
                  <body>Method to return the deadline value (Integer) of the flow name passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return deadline Integer value of flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_SK1PkWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK1PkmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK1Pk2dHEe24LcnSyvVffw" name="getFlowPhase" method="_SdTfoGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK12oGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK12oWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK12omdHEe24LcnSyvVffw" name="getFlowTxAttemptsPerLink" method="_SdTfo2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK12o2dHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK12pGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK2dsGdHEe24LcnSyvVffw" name="setFlowsInPriorityOrder" method="_SdTfpmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SK2dsWdHEe24LcnSyvVffw" name="setFlowsInDMorder" method="_SdTfp2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnosmdHEe24LcnSyvVffw">
                  <body>This method creates a list of Flow objects from the FlowMap using the stream interface, sorts by a&#xD;
   * secondary key, then sorts by a primary key. Finally, it creates a new flowNamesInPriorityOrder that&#xD;
   * contains the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_SK2dsmdHEe24LcnSyvVffw" name="setFlowsInRMorder" method="_SdTfqGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdnos2dHEe24LcnSyvVffw">
                  <body>This setter method creates a list of Flow objects from the FlowMap using the stream interface,&#xD;
   * sorting by a secondary key and primary key. Then it creates a new flowNamesInPriorityOrder that contains &#xD;
   * the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_SK2ds2dHEe24LcnSyvVffw" name="setFlowsInRealTimeHARTorder" method="_SdTfqWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SK3EwGdHEe24LcnSyvVffw" name="finalizeCurrentFlow" method="_SdTfqmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK3EwWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK3r0GdHEe24LcnSyvVffw" name="nextReleaseTime" method="_SdTfrGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK3r0WdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK3r0mdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK3r02dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK3r1GdHEe24LcnSyvVffw" name="nextAbsoluteDeadline" method="_SdTfsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK3r1WdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK3r1mdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK4S4GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK4S4WdHEe24LcnSyvVffw" name="finalizeFlowWithE2eParameters" visibility="private" method="_SdTftGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK4S4mdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK4S42dHEe24LcnSyvVffw" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_SdUGsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK4S5GdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK458GdHEe24LcnSyvVffw" name="getNodeNamesOrderedAlphabetically" method="_SdUGu2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK5hAGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK5hAWdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK5hA2dHEe24LcnSyvVffw" name="getFlow" visibility="private" method="_SdUGvmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK6IEGdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZO38GdHEe24LcnSyvVffw" type="_SHdygGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SK6IEWdHEe24LcnSyvVffw" name="getFlowNames" method="_SdUGwWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK6IEmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK6IE2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK6vIWdHEe24LcnSyvVffw" name="getNodeIndex" method="_SdUGxGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK6vImdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK6vI2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK7WMGdHEe24LcnSyvVffw" name="getNodesInFlow" method="_SdUtwGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnotGdHEe24LcnSyvVffw">
                  <body>This method creates a String array of the node names from the input parameter flowName&#xD;
   * in the same order as they exist in the flow specification.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return Array of String node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_SK7WMWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK7WMmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK7WM2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK7WNWdHEe24LcnSyvVffw" name="getHyperPeriod" method="_SdUtxGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK79QGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK79QWdHEe24LcnSyvVffw" name="getTotalTxAttemptsInFlow" method="_SdUtxmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK79QmdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK79Q2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK79RGdHEe24LcnSyvVffw" name="getNumTxAttemptsPerLink" method="_SdUtyWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK79RWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SK8kUGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK8kUWdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK9LYGdHEe24LcnSyvVffw" name="maxFlowLength" method="_SdUt0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK9LYWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SK9LYmdHEe24LcnSyvVffw" name="main" isStatic="true" method="_SdUt1WdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SK9LY2dHEe24LcnSyvVffw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SK9LZGdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZOQ4GdHEe24LcnSyvVffw" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_SdUGsmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZOQ4WdHEe24LcnSyvVffw" name="flow" type="_SHdygGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SagqUmdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZO38WdHEe24LcnSyvVffw" name="addEdge" method="_SdUtzWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZO38mdHEe24LcnSyvVffw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZO382dHEe24LcnSyvVffw" name="edge" type="_SHPJAGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZO39GdHEe24LcnSyvVffw" name="parser" visibility="private" isStatic="true" method="_SdUt0mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZPfAGdHEe24LcnSyvVffw" name="wkldDesc" type="_SHLeoGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZPfAWdHEe24LcnSyvVffw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SafcMGdHEe24LcnSyvVffw" name="WorkLoad" visibility="package" method="_SdRDYmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SafcNGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SafcNWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdnBoGdHEe24LcnSyvVffw">
                  <body>The first constructor calls the parent class to set up file information. m and e2e are then initialized.&#xD;
   * Then it creates the listener object, which will read the workLoad description and then build the node and &#xD;
   * flow objects that instantiates the workLoad.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_SafcMWdHEe24LcnSyvVffw" name="m" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SafcMmdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SafcM2dHEe24LcnSyvVffw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SafcNmdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SafcN2dHEe24LcnSyvVffw" name="WorkLoad" visibility="package" method="_SdRDZ2dHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SafcPGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SafcPWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_SdnBoWdHEe24LcnSyvVffw">
                  <body>The second constructor is identical to the first with the exception of initializing the optional&#xD;
   * numFaults input parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_SafcOGdHEe24LcnSyvVffw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SafcOWdHEe24LcnSyvVffw" name="m" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SafcOmdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SafcO2dHEe24LcnSyvVffw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SafcPmdHEe24LcnSyvVffw" type="_SKqQcGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SagDQWdHEe24LcnSyvVffw" name="setMinPacketReceptionRate" method="_SdRqd2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBpWdHEe24LcnSyvVffw">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SagDQmdHEe24LcnSyvVffw" name="minPacketReceptionRate" type="_SaPkkmdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SagqUGdHEe24LcnSyvVffw" name="setE2e" method="_SdRqfWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdnBqGdHEe24LcnSyvVffw">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SagqUWdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SahRYGdHEe24LcnSyvVffw" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_SdUGtWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SahRYWdHEe24LcnSyvVffw" name="flow" type="_SHdygGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SahRYmdHEe24LcnSyvVffw" name="e2e" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SahRY2dHEe24LcnSyvVffw" name="M" type="_SaPkkmdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SahRZGdHEe24LcnSyvVffw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SahRZmdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SLFHMGdHEe24LcnSyvVffw" name="WarpDSL">
              <ownedComment xmi:id="_SdnotWdHEe24LcnSyvVffw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ScHz4GdHEe24LcnSyvVffw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScHz4WdHEe24LcnSyvVffw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScIa8GdHEe24LcnSyvVffw" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScIa8WdHEe24LcnSyvVffw" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScIa8mdHEe24LcnSyvVffw" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScIa82dHEe24LcnSyvVffw" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi82dHEe24LcnSyvVffw" name="getInstructionParameters" specification="_SLJ_sGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdWi9GdHEe24LcnSyvVffw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdWi9WdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SLJ_sGdHEe24LcnSyvVffw" name="getInstructionParameters" method="_SdWi82dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SLJ_sWdHEe24LcnSyvVffw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SajtoGdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_SLFuQGdHEe24LcnSyvVffw" name="InstructionParameters">
                <ownedAttribute xmi:id="_ScIa9GdHEe24LcnSyvVffw" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScIa9WdHEe24LcnSyvVffw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScIa9mdHEe24LcnSyvVffw" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScIa92dHEe24LcnSyvVffw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScIa-GdHEe24LcnSyvVffw" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScIa-WdHEe24LcnSyvVffw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScJCAGdHEe24LcnSyvVffw" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScJCAWdHEe24LcnSyvVffw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScJCAmdHEe24LcnSyvVffw" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScJCA2dHEe24LcnSyvVffw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScJCBGdHEe24LcnSyvVffw" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScJCBWdHEe24LcnSyvVffw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScJpEGdHEe24LcnSyvVffw" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScJpEWdHEe24LcnSyvVffw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdVU0GdHEe24LcnSyvVffw" name="getCoordinator" specification="_SLG8YGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdVU0WdHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdV74GdHEe24LcnSyvVffw" name="setCoordinator" specification="_SLG8YmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdV74WdHEe24LcnSyvVffw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdV74mdHEe24LcnSyvVffw" name="setName" specification="_SLHjcGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdV742dHEe24LcnSyvVffw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdV75GdHEe24LcnSyvVffw" name="setFlow" specification="_SLHjcmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdV75WdHEe24LcnSyvVffw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdV75mdHEe24LcnSyvVffw" name="setSrc" specification="_SLIKgGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdV752dHEe24LcnSyvVffw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdV76GdHEe24LcnSyvVffw" name="setSnk" specification="_SLIKgmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdV76WdHEe24LcnSyvVffw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdV76mdHEe24LcnSyvVffw" name="setChannel" specification="_SLIxkGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi8GdHEe24LcnSyvVffw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi8WdHEe24LcnSyvVffw" name="unused" specification="_SLIxkmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi8mdHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_SLG8YGdHEe24LcnSyvVffw" name="getCoordinator" method="_SdVU0GdHEe24LcnSyvVffw">
                  <ownedComment xmi:id="_SdnotmdHEe24LcnSyvVffw">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_SLG8YWdHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLG8YmdHEe24LcnSyvVffw" name="setCoordinator" method="_SdV74GdHEe24LcnSyvVffw">
                  <ownedComment xmi:id="_SdoPwGdHEe24LcnSyvVffw">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_SLG8Y2dHEe24LcnSyvVffw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLHjcGdHEe24LcnSyvVffw" name="setName" visibility="private" method="_SdV74mdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SLHjcWdHEe24LcnSyvVffw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLHjcmdHEe24LcnSyvVffw" name="setFlow" visibility="private" method="_SdV75GdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SLHjc2dHEe24LcnSyvVffw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLIKgGdHEe24LcnSyvVffw" name="setSrc" visibility="private" method="_SdV75mdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SLIKgWdHEe24LcnSyvVffw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLIKgmdHEe24LcnSyvVffw" name="setSnk" visibility="private" method="_SdV76GdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SLIKg2dHEe24LcnSyvVffw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLIxkGdHEe24LcnSyvVffw" name="setChannel" visibility="private" method="_SdV76mdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SLIxkWdHEe24LcnSyvVffw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_SLIxkmdHEe24LcnSyvVffw" name="unused" method="_SdWi8WdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SLIxk2dHEe24LcnSyvVffw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_SLKmwWdHEe24LcnSyvVffw" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_SakUsmdHEe24LcnSyvVffw" general="_SajtoWdHEe24LcnSyvVffw"/>
                <ownedAttribute xmi:id="_ScJpEmdHEe24LcnSyvVffw" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ScKQIWdHEe24LcnSyvVffw" name="instructionParametersArrayList" visibility="package" type="_SXtN8GdHEe24LcnSyvVffw" association="_Sed9QWdHEe24LcnSyvVffw"/>
                <ownedAttribute xmi:id="_ScK3MmdHEe24LcnSyvVffw" name="instructionParameters" visibility="package" type="_SLFuQGdHEe24LcnSyvVffw" association="_Sed9RGdHEe24LcnSyvVffw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi9mdHEe24LcnSyvVffw" name="ListenerDsl" specification="_SLLN0GdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi92dHEe24LcnSyvVffw" type="_SLKmwWdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi-GdHEe24LcnSyvVffw" name="getInstructionParameters" specification="_SLL04GdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi-WdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi-mdHEe24LcnSyvVffw" name="enterAction" specification="_SZTJYGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi-2dHEe24LcnSyvVffw" name="ctx" type="_SZSiUGdHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi_GdHEe24LcnSyvVffw" name="exitAction" specification="_SZTJZWdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi_WdHEe24LcnSyvVffw" name="ctx" type="_SZSiUGdHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdWi_mdHEe24LcnSyvVffw" name="exitFlowName" specification="_SZTwdWdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdWi_2dHEe24LcnSyvVffw" name="ctx" type="_SZTwc2dHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXKAGdHEe24LcnSyvVffw" name="exitCmd" specification="_SZUXhWdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdXKAWdHEe24LcnSyvVffw" name="ctx" type="_SZUXg2dHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXKAmdHEe24LcnSyvVffw" name="exitSrcNode" specification="_SZVloWdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdXKA2dHEe24LcnSyvVffw" name="ctx" type="_SZU-k2dHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXKBGdHEe24LcnSyvVffw" name="exitSnkNode" specification="_SZWzwWdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdXKBWdHEe24LcnSyvVffw" name="ctx" type="_SZWMs2dHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXKBmdHEe24LcnSyvVffw" name="exitChannel" specification="_SZYB4WdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SdXKB2dHEe24LcnSyvVffw" name="ctx" type="_SZXa02dHEe24LcnSyvVffw"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_SLLN0GdHEe24LcnSyvVffw" name="ListenerDsl" visibility="package" method="_SdWi9mdHEe24LcnSyvVffw">
                  <eAnnotations xmi:id="_SLLN0WdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_SLLN0mdHEe24LcnSyvVffw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_SLLN02dHEe24LcnSyvVffw" type="_SLKmwWdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SLL04GdHEe24LcnSyvVffw" name="getInstructionParameters" method="_SdWi-GdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SakUsWdHEe24LcnSyvVffw" type="_SXtN8GdHEe24LcnSyvVffw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZTJYGdHEe24LcnSyvVffw" name="enterAction" method="_SdWi-mdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZTJYWdHEe24LcnSyvVffw" name="ctx" type="_SZSiUGdHEe24LcnSyvVffw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZTJZWdHEe24LcnSyvVffw" name="exitAction" method="_SdWi_GdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZTJZmdHEe24LcnSyvVffw" name="ctx" type="_SZSiUGdHEe24LcnSyvVffw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZTwdWdHEe24LcnSyvVffw" name="exitFlowName" method="_SdWi_mdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZTwdmdHEe24LcnSyvVffw" name="ctx" type="_SZTwc2dHEe24LcnSyvVffw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZUXhWdHEe24LcnSyvVffw" name="exitCmd" method="_SdXKAGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZUXhmdHEe24LcnSyvVffw" name="ctx" type="_SZUXg2dHEe24LcnSyvVffw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZVloWdHEe24LcnSyvVffw" name="exitSrcNode" method="_SdXKAmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZVlomdHEe24LcnSyvVffw" name="ctx" type="_SZU-k2dHEe24LcnSyvVffw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZWzwWdHEe24LcnSyvVffw" name="exitSnkNode" method="_SdXKBGdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZWzwmdHEe24LcnSyvVffw" name="ctx" type="_SZWMs2dHEe24LcnSyvVffw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_SZYB4WdHEe24LcnSyvVffw" name="exitChannel" method="_SdXKBmdHEe24LcnSyvVffw">
                  <ownedParameter xmi:id="_SZYB4mdHEe24LcnSyvVffw" name="ctx" type="_SZXa02dHEe24LcnSyvVffw"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SLQtYGdHEe24LcnSyvVffw" name="Warp">
              <ownedComment xmi:id="_SdoPwWdHEe24LcnSyvVffw">
                <body>&lt;h1>This is the main Java class for the Warp project.&lt;/h1>&#xD;
&lt;p>Takes an input file and creates either a WorkLoad or WarpInterface to process the file based&#xD;
on the arguments given on runtime. Outputs a file with visualization.&lt;/p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ScMFUGdHEe24LcnSyvVffw" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScMFUWdHEe24LcnSyvVffw" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScMFUmdHEe24LcnSyvVffw" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_SaPkkmdHEe24LcnSyvVffw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScMFU2dHEe24LcnSyvVffw" value="1.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScMFVGdHEe24LcnSyvVffw" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_SaPkkmdHEe24LcnSyvVffw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScMFVWdHEe24LcnSyvVffw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScMsYGdHEe24LcnSyvVffw" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScMsYWdHEe24LcnSyvVffw" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScMsYmdHEe24LcnSyvVffw" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_SJ5bcGdHEe24LcnSyvVffw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScMsY2dHEe24LcnSyvVffw" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScMsZGdHEe24LcnSyvVffw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScMsZWdHEe24LcnSyvVffw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScNTcGdHEe24LcnSyvVffw" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScNTcmdHEe24LcnSyvVffw" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScN6gWdHEe24LcnSyvVffw" name="minLQ" visibility="private" isStatic="true" type="_SaPkkmdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScN6g2dHEe24LcnSyvVffw" name="e2e" visibility="private" isStatic="true" type="_SaPkkmdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScOhkWdHEe24LcnSyvVffw" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScOhk2dHEe24LcnSyvVffw" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScPIoWdHEe24LcnSyvVffw" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScPIo2dHEe24LcnSyvVffw" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScPvsWdHEe24LcnSyvVffw" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScPvs2dHEe24LcnSyvVffw" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScQWwWdHEe24LcnSyvVffw" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScQWw2dHEe24LcnSyvVffw" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScQ90WdHEe24LcnSyvVffw" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScQ902dHEe24LcnSyvVffw" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScQ91GdHEe24LcnSyvVffw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScRk4WdHEe24LcnSyvVffw" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScRk42dHEe24LcnSyvVffw" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScSL8WdHEe24LcnSyvVffw" name="schedulerSelected" visibility="private" isStatic="true" type="_SJ5bcGdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxEGdHEe24LcnSyvVffw" name="main" specification="_SLSikGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdXxEWdHEe24LcnSyvVffw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdXxEmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxE2dHEe24LcnSyvVffw" name="visualize" specification="_SZcTUGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdXxFGdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdXxFWdHEe24LcnSyvVffw" name="choice" type="_SKB-UGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxFmdHEe24LcnSyvVffw" name="visualize" specification="_SZc6YGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdXxF2dHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdXxGGdHEe24LcnSyvVffw" name="choice" type="_SKAwMGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxGWdHEe24LcnSyvVffw" name="verifyPerformanceRequirements" specification="_SZc6Y2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdXxGmdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxG2dHEe24LcnSyvVffw" name="verifyReliabilities" specification="_SZc6ZWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdXxHGdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxHWdHEe24LcnSyvVffw" name="verifyDeadlines" specification="_SZc6Z2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdXxHmdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdXxH2dHEe24LcnSyvVffw" name="verifyNoChannelConflicts" specification="_SZdhcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdYYIGdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYIWdHEe24LcnSyvVffw" name="setWarpParameters" specification="_SLTwsGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdYYImdHEe24LcnSyvVffw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SdYYI2dHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYJGdHEe24LcnSyvVffw" name="printWarpParameters" specification="_SLTws2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SLSikGdHEe24LcnSyvVffw" name="main" isStatic="true" method="_SdXxEGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPwmdHEe24LcnSyvVffw">
                  <body>The main method of Warp.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments passed in at runtime</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLSikWdHEe24LcnSyvVffw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLTJoGdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLTwsGdHEe24LcnSyvVffw" name="setWarpParameters" visibility="private" isStatic="true" method="_SdYYIWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPyWdHEe24LcnSyvVffw">
                  <body>Sets the class variables based on the arguments given at runtime.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments from the main method</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLTwsWdHEe24LcnSyvVffw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SLTwsmdHEe24LcnSyvVffw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLTws2dHEe24LcnSyvVffw" name="printWarpParameters" visibility="private" isStatic="true" method="_SdYYJGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPymdHEe24LcnSyvVffw">
                  <body>Prints all system configuration parameters to the screen.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_SZcTUGdHEe24LcnSyvVffw" name="visualize" visibility="private" isStatic="true" method="_SdXxE2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPw2dHEe24LcnSyvVffw">
                  <body>Outputs a file with a visual representation of the WorkLoad based on the choice parameter.&lt;br>&#xD;
   * If verbose mode is enabled it will also print the results to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The WorkLoad to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off WorkLoadChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZcTUWdHEe24LcnSyvVffw" name="workLoad" type="_SKqQcGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZcTUmdHEe24LcnSyvVffw" name="choice" type="_SKB-UGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZc6YGdHEe24LcnSyvVffw" name="visualize" visibility="private" isStatic="true" method="_SdXxFmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPxGdHEe24LcnSyvVffw">
                  <body>Outputs a file with visual representation of the WarpInterface based on the choice parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off SystemChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZc6YWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZc6YmdHEe24LcnSyvVffw" name="choice" type="_SKAwMGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZc6Y2dHEe24LcnSyvVffw" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_SdXxGWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPxWdHEe24LcnSyvVffw">
                  <body>Verifies the Deadlines, Reliabilities, and Channel Conflicts with their respective method calls.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZc6ZGdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZc6ZWdHEe24LcnSyvVffw" name="verifyReliabilities" visibility="private" isStatic="true" method="_SdXxG2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPxmdHEe24LcnSyvVffw">
                  <body>Verifies that the WarpInterface reliabilities are met. If the WarpInterface fails to meet the reliabilities&#xD;
   * a system error will be printed out.&lt;br>&#xD;
   * If verbose mode is enabled and reliabilities are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZc6ZmdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZc6Z2dHEe24LcnSyvVffw" name="verifyDeadlines" visibility="private" isStatic="true" method="_SdXxHWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPx2dHEe24LcnSyvVffw">
                  <body>Verifies that the WarpInterface meets all deadlines. If the WarpInterface fails to meet the deadlines&#xD;
   * a system error will be printed out as well as a visualization of the WarpInterface based on the&#xD;
   * DEADLINE_REPORT of SystemChoices enum.&lt;br>&#xD;
   * If verbose is enabled and deadlines are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZc6aGdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZdhcGdHEe24LcnSyvVffw" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_SdXxH2dHEe24LcnSyvVffw">
                <ownedComment xmi:id="_SdoPyGdHEe24LcnSyvVffw">
                  <body>Verifies that the WarpInterface has no channel conflicts. If there is a channel conflict a system error&#xD;
   * will be printed to the screen along with a visualization of the WarpInterface based on CHANNEL of SystemChoice enum.&lt;br>&#xD;
   * If verbose mode is enabled and there are no channel conflicts verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to check for channel conflicts</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZdhcWdHEe24LcnSyvVffw" name="warp" type="_SKZKsGdHEe24LcnSyvVffw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SLYpMGdHEe24LcnSyvVffw" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYJWdHEe24LcnSyvVffw" name="testSetFlowsInDMorder_StressTest" specification="_SLZQQGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInDMorder&#xD;
		wkld.setFlowsInDMorder();&#xD;
		ArrayList&lt;String> DMorder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of DM order flow array&#xD;
		int DMorderLength = DMorder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, DMorderLength, &quot;Length after setting flows in DM Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the DM order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (DMorder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;Number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, DMorder, &quot;Check if setting in DM order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYJmdHEe24LcnSyvVffw" name="testGetFlowNamesInPriorityOrder_NotEmpty" specification="_SLZ3UmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if getter retrieved the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYJ2dHEe24LcnSyvVffw" name="testGetFlowNamesInPriorityOrder_Empty" specification="_SLZ3VmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if getter retrieved the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYKGdHEe24LcnSyvVffw" name="testGetNodeChannel_ValidNode" specification="_SLaeY2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//The expected value of the node channel before setting to anything should be zero&#xD;
		int actualWithoutSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(0, actualWithoutSet, &quot;Node channel prior to setting:&quot;);&#xD;
		&#xD;
		//check to see if getter retrieves correct new value after setting&#xD;
		wkld.setNodeChannel(&quot;A&quot;, 44);&#xD;
		int actualWithSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(44, actualWithSet, &quot;Node channel after setting:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYKWdHEe24LcnSyvVffw" name="testGetNodeChannel_InvalidNode" specification="_SLbFcmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>assertThrows(NullPointerException.class,&#xD;
	            ()->{&#xD;
	            	WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	            	//if given an input that isn't a valid node, should throw NullPointerException&#xD;
	            	wkld.getNodeChannel(&quot;&quot;);&#xD;
	            });&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYKmdHEe24LcnSyvVffw" name="testGetNodesInFlow_ValidFlow" specification="_SLbFdmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with a correct flow name&#xD;
		String[] actual = wkld.getNodesInFlow(&quot;F9&quot;);&#xD;
		String actualWithCorrectInput = Arrays.toString(actual);&#xD;
		//hard code of the expected string&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		//Test to see if we got the node names in the same order as they exist in the flow specification&#xD;
		assertEquals(expected, actualWithCorrectInput, &quot;Order of nodes of flow F9 in StressTest.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYK2dHEe24LcnSyvVffw" name="testGetNodesInFlow_InvalidFlow" specification="_SLbsg2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with incorrect flow name&#xD;
		String[] actual2 = wkld.getNodesInFlow(&quot;test&quot;);&#xD;
		String actualWithIncorrectInput = Arrays.toString(actual2);&#xD;
		//hard code of the expected string&#xD;
		String expectedEmpty = &quot;[]&quot;;&#xD;
		//Test to see if we correctly went to the else case in getNodesInFlow&#xD;
		assertEquals(expectedEmpty, actualWithIncorrectInput, &quot;Check if using a non-valid flow name correctly returns empty array:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdYYLGdHEe24LcnSyvVffw" name="testSetFlowNamesInOriginalOrder_NotEmpty" specification="_SLcTk2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list for setFlowNamesInOriginalOrder. Test array list is arbitrary&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from setter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if setter created the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_MGdHEe24LcnSyvVffw" name="testSetFlowNamesInOriginalOrder_Empty" specification="_SLc6omdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list for setFlowNamesInOriginalOrder&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if setter created the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_MWdHEe24LcnSyvVffw" name="testSetFlowsInPriorityOrder" specification="_SLc6pmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInPriorityorder&#xD;
		wkld.setFlowsInPriorityOrder();&#xD;
		ArrayList&lt;String> priorityOrder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of priority order flow array&#xD;
		int priorityOrderLength = priorityOrder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, priorityOrderLength, &quot;length after setting flows in Priority Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the priority order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (priorityOrder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, priorityOrder, &quot;Check if setting in Priority order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_MmdHEe24LcnSyvVffw" name="testGetMinPeriod_Unique" specification="_SLdhs2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected minimum period in StreesTest.txt is 20&#xD;
		int testPeriod = wkld.getMinPeriod();&#xD;
		assertEquals(20, testPeriod, &quot;Minimum period gotten from StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_M2dHEe24LcnSyvVffw" name="testGetMinPeriod_Default" specification="_SLdht2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default period which is 100&#xD;
		int testPeriodDefault = wkld2.getMinPeriod();&#xD;
		assertEquals(100, testPeriodDefault, &quot;Minimum period gotten from Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_NGdHEe24LcnSyvVffw" name="testMaxFlowLength_StressTest" specification="_SLeIw2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		int actual = wkld.maxFlowLength();&#xD;
		assertEquals(8, actual, &quot;Max flow length for StressTest.txt&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_NWdHEe24LcnSyvVffw" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" specification="_SLev0mdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(5, actual2, &quot;Max flow length for WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_NmdHEe24LcnSyvVffw" name="testMaxFlowLength_LongChain" specification="_SLev1mdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(26, actual2, &quot;Max flow length for LongChain.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_N2dHEe24LcnSyvVffw" name="testGetFlowDeadline_Unique" specification="_SLfW42dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected deadline of flow F9 in StressTest.txt is 100&#xD;
		int testDeadline = wkld.getFlowDeadline(&quot;F9&quot;);&#xD;
		assertEquals(100, testDeadline, &quot;deadline gotten for flow F9 in StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_OGdHEe24LcnSyvVffw" name="testGetFlowDeadline_Default" specification="_SLf98GdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default deadline which is 100&#xD;
		int testDeadlineDefault = wkld2.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(100, testDeadlineDefault, &quot;deadline gotten for flow F0 in Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_OWdHEe24LcnSyvVffw" name="testGetFlowDeadline_InvalidInput" specification="_SLf99GdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//Test the &quot;Bad situation&quot; where the flow name given does not exist&#xD;
		//Should give the default of 100&#xD;
		int testDeadlineFlowNameDNE = wkld3.getFlowDeadline(&quot;&quot;);&#xD;
		assertEquals(100, testDeadlineFlowNameDNE, &quot;check for a flow name that does not exist:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_OmdHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" specification="_SLglAmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld1 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String[] alphaOrder1 = wkld1.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual1 = Arrays.toString(alphaOrder1); &#xD;
		String expected1 = &quot;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, Y]&quot;;&#xD;
		assertEquals(expected1, alphaOrderActual1, &quot;check if the node names in StressTest.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_O2dHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" specification="_SLglBmdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		String[] alphaOrder2 = wkld2.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual2 = Arrays.toString(alphaOrder2);&#xD;
		String expected2 = &quot;[A, B, C, D, E, F, G, H, I, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a]&quot;;&#xD;
		assertEquals(expected2, alphaOrderActual2, &quot;check if the node names in LongChain.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_PGdHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" specification="_SLhME2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		String[] alphaOrder3 = wkld3.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual3 = Arrays.toString(alphaOrder3);&#xD;
		String expected3 = &quot;[0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, &quot;&#xD;
				+ &quot;38, 40, 41, 42, 48, 52, 53, 54, 55, 56, 58, 59, 64, 66, 68, 71, 72, 73, 74, 76, 80, 82, 83, 84]&quot;;&#xD;
		assertEquals(expected3, alphaOrderActual3, &#xD;
				&quot;check if the node names in WARP_MIX_Schedule0-WarpInput.txt were ordered alphabetically (numerically):&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdY_PWdHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" specification="_SLhzImdHEe24LcnSyvVffw">
                <language>java</language>
                <body>WorkLoad wkld4 = new WorkLoad(1, 0.9, 0.99, &quot;SeeSpray.txt&quot;);&#xD;
		String[] alphaOrder4 = wkld4.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual4 = Arrays.toString(alphaOrder4);&#xD;
		String expected4 = &quot;[B1, B2, B3, B4, B5, B6, B7, B8, C1, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C2, C20, C21, &quot;&#xD;
				+ &quot;C22, C23, C24, C25, C26, C27, C28, C29, C3, C30, C4, C5, C6, C7, C8, C9]&quot;;&#xD;
		assertEquals(expected4, alphaOrderActual4, &quot;check if the node names in SeeSpray.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SLZQQGdHEe24LcnSyvVffw" name="testSetFlowsInDMorder_StressTest" visibility="package" method="_SdYYJWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLZ3UmdHEe24LcnSyvVffw" name="testGetFlowNamesInPriorityOrder_NotEmpty" visibility="package" method="_SdYYJmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLZ3VmdHEe24LcnSyvVffw" name="testGetFlowNamesInPriorityOrder_Empty" visibility="package" method="_SdYYJ2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLaeY2dHEe24LcnSyvVffw" name="testGetNodeChannel_ValidNode" visibility="package" method="_SdYYKGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLbFcmdHEe24LcnSyvVffw" name="testGetNodeChannel_InvalidNode" method="_SdYYKWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLbFdmdHEe24LcnSyvVffw" name="testGetNodesInFlow_ValidFlow" visibility="package" method="_SdYYKmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLbsg2dHEe24LcnSyvVffw" name="testGetNodesInFlow_InvalidFlow" visibility="package" method="_SdYYK2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLcTk2dHEe24LcnSyvVffw" name="testSetFlowNamesInOriginalOrder_NotEmpty" visibility="package" method="_SdYYLGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLc6omdHEe24LcnSyvVffw" name="testSetFlowNamesInOriginalOrder_Empty" visibility="package" method="_SdY_MGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLc6pmdHEe24LcnSyvVffw" name="testSetFlowsInPriorityOrder" visibility="package" method="_SdY_MWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLdhs2dHEe24LcnSyvVffw" name="testGetMinPeriod_Unique" visibility="package" method="_SdY_MmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLdht2dHEe24LcnSyvVffw" name="testGetMinPeriod_Default" visibility="package" method="_SdY_M2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLeIw2dHEe24LcnSyvVffw" name="testMaxFlowLength_StressTest" visibility="package" method="_SdY_NGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLev0mdHEe24LcnSyvVffw" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" visibility="package" method="_SdY_NWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLev1mdHEe24LcnSyvVffw" name="testMaxFlowLength_LongChain" visibility="package" method="_SdY_NmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLfW42dHEe24LcnSyvVffw" name="testGetFlowDeadline_Unique" visibility="package" method="_SdY_N2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLf98GdHEe24LcnSyvVffw" name="testGetFlowDeadline_Default" visibility="package" method="_SdY_OGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLf99GdHEe24LcnSyvVffw" name="testGetFlowDeadline_InvalidInput" visibility="package" method="_SdY_OWdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLglAmdHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" visibility="package" method="_SdY_OmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLglBmdHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" visibility="package" method="_SdY_O2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLhME2dHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" visibility="package" method="_SdY_PGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLhzImdHEe24LcnSyvVffw" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" visibility="package" method="_SdY_PWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SLjBQGdHEe24LcnSyvVffw" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_ScSzAGdHEe24LcnSyvVffw" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScSzAWdHEe24LcnSyvVffw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScTaEGdHEe24LcnSyvVffw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScTaEWdHEe24LcnSyvVffw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScTaEmdHEe24LcnSyvVffw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScTaE2dHEe24LcnSyvVffw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScTaFGdHEe24LcnSyvVffw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScUBIGdHEe24LcnSyvVffw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScUBIWdHEe24LcnSyvVffw" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScUBImdHEe24LcnSyvVffw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScUBI2dHEe24LcnSyvVffw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScUoMWdHEe24LcnSyvVffw" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScUoMmdHEe24LcnSyvVffw" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScUoM2dHEe24LcnSyvVffw" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScVPQGdHEe24LcnSyvVffw" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScVPQmdHEe24LcnSyvVffw" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScV2UWdHEe24LcnSyvVffw" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScWdYWdHEe24LcnSyvVffw" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScWdYmdHEe24LcnSyvVffw" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ScWdY2dHEe24LcnSyvVffw" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ScXEcGdHEe24LcnSyvVffw" name="predecessor" type="_SLjBQGdHEe24LcnSyvVffw" association="_Sdo20GdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScXEcWdHEe24LcnSyvVffw" name="endTimes" visibility="private" type="_SJRJVGdHEe24LcnSyvVffw" association="_SeekUWdHEe24LcnSyvVffw"/>
              <ownedAttribute xmi:id="_ScXrgWdHEe24LcnSyvVffw" name="subObjects" type="_SZfWomdHEe24LcnSyvVffw" isReadOnly="true" association="_SefLYWdHEe24LcnSyvVffw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdZmQGdHEe24LcnSyvVffw" name="SchedulableObject" specification="_SLkPYGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdZmQWdHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdZmQmdHEe24LcnSyvVffw" name="SchedulableObject" specification="_SZgkwGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdZmQ2dHEe24LcnSyvVffw" name="obj" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdZmRGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmRWdHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdZmRmdHEe24LcnSyvVffw" name="SchedulableObject" specification="_SLldgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdZmR2dHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmSGdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmSWdHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmSmdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmS2dHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdZmTGdHEe24LcnSyvVffw" name="SchedulableObject" specification="_SLmEk2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdZmTWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmTmdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmT2dHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmUGdHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmUWdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdZmUmdHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNUGdHEe24LcnSyvVffw" name="setDefaultParameters" specification="_SLmrqGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNUWdHEe24LcnSyvVffw" name="getAllEndTimes" specification="_SLmrqWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNUmdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNU2dHEe24LcnSyvVffw" name="addToEndTimes" specification="_SLn5wGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNVGdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNVWdHEe24LcnSyvVffw" name="peekEndTimes" specification="_SLn5wmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNVmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNV2dHEe24LcnSyvVffw" name="pollEndTimes" specification="_SLn5xGdHEe24LcnSyvVffw">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNWGdHEe24LcnSyvVffw" name="addSubObject" specification="_SZgkx2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNWWdHEe24LcnSyvVffw" name="obj" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNWmdHEe24LcnSyvVffw" name="getName" specification="_SLog0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNW2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNXGdHEe24LcnSyvVffw" name="setName" specification="_SLog0mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNXWdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNXmdHEe24LcnSyvVffw" name="getReleaseTime" specification="_SLog1GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNX2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNYGdHEe24LcnSyvVffw" name="getPhase" specification="_SLpH4GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNYWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNYmdHEe24LcnSyvVffw" name="getStartTime" specification="_SLpH4mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNY2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdaNZGdHEe24LcnSyvVffw" name="setEndTime" specification="_SLpu8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdaNZWdHEe24LcnSyvVffw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0YGdHEe24LcnSyvVffw" name="setStartTime" specification="_SLpu8mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0YWdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0YmdHEe24LcnSyvVffw" name="setReleaseTime" specification="_SLqWAWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0Y2dHEe24LcnSyvVffw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0ZGdHEe24LcnSyvVffw" name="setPeriod" specification="_SLqWA2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0ZWdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0ZmdHEe24LcnSyvVffw" name="setPhase" specification="_SLq9EGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0Z2dHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0aGdHEe24LcnSyvVffw" name="setNextReleaseTime" specification="_SLq9EmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0aWdHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0amdHEe24LcnSyvVffw" name="maxPhaseComparison" specification="_SZhL0GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0a2dHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sda0bGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0bWdHEe24LcnSyvVffw" name="maxPhaseComparison" specification="_SZhL02dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0bmdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sda0b2dHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sda0cGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sda0cWdHEe24LcnSyvVffw" name="deadlineComparison" specification="_SZhL12dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sda0cmdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sda0c2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdbbcGdHEe24LcnSyvVffw" name="deadlineComparison" specification="_SZhy4mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdbbcWdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbcmdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sdbbc2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdbbdGdHEe24LcnSyvVffw" name="periodComparison" specification="_SZhy5mdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdbbdWdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbdmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sdbbd2dHEe24LcnSyvVffw" name="periodComparison" specification="_SZiZ8GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdbbeGdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbeWdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbemdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Sdbbe2dHEe24LcnSyvVffw" name="priorityComparison" specification="_SZiZ9GdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdbbfGdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbfWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdbbfmdHEe24LcnSyvVffw" name="priorityComparison" specification="_SZjBAWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sdbbf2dHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbgGdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbgWdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdbbgmdHEe24LcnSyvVffw" name="releaseTimeComparison" specification="_SZjBBWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_Sdbbg2dHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbhGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdbbhWdHEe24LcnSyvVffw" name="releaseTimeComparison" specification="_SZjoEGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdbbhmdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sdbbh2dHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdbbiGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdbbiWdHEe24LcnSyvVffw" name="LatestReleaseTimeComparison" specification="_SZjoFGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdbbimdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_Sdbbi2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdcCgGdHEe24LcnSyvVffw" name="LatestReleaseTimeComparison" specification="_SZkPIGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdcCgWdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdcCgmdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SdcCg2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdcChGdHEe24LcnSyvVffw" name="compareAscendingOrder" specification="_SLsyQGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdcChWdHEe24LcnSyvVffw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdcChmdHEe24LcnSyvVffw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdcCh2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdcCiGdHEe24LcnSyvVffw" name="compareDescendingOrder" specification="_SLsyRGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdcCiWdHEe24LcnSyvVffw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdcCimdHEe24LcnSyvVffw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SdcCi2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdcCjGdHEe24LcnSyvVffw" name="print" specification="_SLtZUWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SdcCjWdHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SdcCjmdHEe24LcnSyvVffw" name="print" specification="_SLtZU2dHEe24LcnSyvVffw">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_SLkPYGdHEe24LcnSyvVffw" name="SchedulableObject" visibility="package" method="_SdZmQGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SLk2cGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SLk2cWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SLk2cmdHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SLldgGdHEe24LcnSyvVffw" name="SchedulableObject" visibility="package" method="_SdZmRmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SLmEkGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SLmEkWdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SLldgWdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLldgmdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLldg2dHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLldhGdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLmEkmdHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SLmEk2dHEe24LcnSyvVffw" name="SchedulableObject" visibility="package" method="_SdZmTGdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SLmrpWdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SLmrpmdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_SLmroGdHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLmroWdHEe24LcnSyvVffw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLmromdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLmro2dHEe24LcnSyvVffw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLmrpGdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLmrp2dHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SLmrqGdHEe24LcnSyvVffw" name="setDefaultParameters" visibility="private" method="_SdaNUGdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLmrqWdHEe24LcnSyvVffw" name="getAllEndTimes" method="_SdaNUWdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdo202dHEe24LcnSyvVffw">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZgkxmdHEe24LcnSyvVffw" type="_SJRJVGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SLn5wGdHEe24LcnSyvVffw" name="addToEndTimes" method="_SdaNU2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SLn5wWdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLn5wmdHEe24LcnSyvVffw" name="peekEndTimes" method="_SdaNVWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SLn5w2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLn5xGdHEe24LcnSyvVffw" name="pollEndTimes" method="_SdaNV2dHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SLog0GdHEe24LcnSyvVffw" name="getName" method="_SdaNWmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd4GdHEe24LcnSyvVffw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLog0WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLog0mdHEe24LcnSyvVffw" name="setName" method="_SdaNXGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd4WdHEe24LcnSyvVffw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLog02dHEe24LcnSyvVffw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLog1GdHEe24LcnSyvVffw" name="getReleaseTime" method="_SdaNXmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd4mdHEe24LcnSyvVffw">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLog1WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLpH4GdHEe24LcnSyvVffw" name="getPhase" method="_SdaNYGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd42dHEe24LcnSyvVffw">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLpH4WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLpH4mdHEe24LcnSyvVffw" name="getStartTime" method="_SdaNYmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd5GdHEe24LcnSyvVffw">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLpH42dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLpu8GdHEe24LcnSyvVffw" name="setEndTime" method="_SdaNZGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd5WdHEe24LcnSyvVffw">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLpu8WdHEe24LcnSyvVffw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLpu8mdHEe24LcnSyvVffw" name="setStartTime" method="_Sda0YGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd5mdHEe24LcnSyvVffw">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLqWAGdHEe24LcnSyvVffw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLqWAWdHEe24LcnSyvVffw" name="setReleaseTime" method="_Sda0YmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd52dHEe24LcnSyvVffw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLqWAmdHEe24LcnSyvVffw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLqWA2dHEe24LcnSyvVffw" name="setPeriod" method="_Sda0ZGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd6GdHEe24LcnSyvVffw">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLqWBGdHEe24LcnSyvVffw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLq9EGdHEe24LcnSyvVffw" name="setPhase" method="_Sda0ZmdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd6WdHEe24LcnSyvVffw">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLq9EWdHEe24LcnSyvVffw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLq9EmdHEe24LcnSyvVffw" name="setNextReleaseTime" method="_Sda0aGdHEe24LcnSyvVffw">
                <ownedComment xmi:id="_Sdpd6mdHEe24LcnSyvVffw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_SLq9E2dHEe24LcnSyvVffw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLsyQGdHEe24LcnSyvVffw" name="compareAscendingOrder" method="_SdcChGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SLsyQWdHEe24LcnSyvVffw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLsyQmdHEe24LcnSyvVffw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLsyQ2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLsyRGdHEe24LcnSyvVffw" name="compareDescendingOrder" method="_SdcCiGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SLsyRWdHEe24LcnSyvVffw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLsyRmdHEe24LcnSyvVffw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SLtZUGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLtZUWdHEe24LcnSyvVffw" name="print" method="_SdcCjGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SLtZUmdHEe24LcnSyvVffw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SLtZU2dHEe24LcnSyvVffw" name="print" method="_SdcCjmdHEe24LcnSyvVffw"/>
              <ownedOperation xmi:id="_SZgkwGdHEe24LcnSyvVffw" name="SchedulableObject" visibility="package" method="_SdZmQmdHEe24LcnSyvVffw">
                <eAnnotations xmi:id="_SZgkw2dHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_SZgkxGdHEe24LcnSyvVffw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Sdo20mdHEe24LcnSyvVffw">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_SZgkwWdHEe24LcnSyvVffw" name="obj" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZgkwmdHEe24LcnSyvVffw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_SZgkxWdHEe24LcnSyvVffw" type="_SLjBQGdHEe24LcnSyvVffw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZgkx2dHEe24LcnSyvVffw" name="addSubObject" method="_SdaNWGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZgkyGdHEe24LcnSyvVffw" name="obj" type="_SLjBQGdHEe24LcnSyvVffw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SZhL0GdHEe24LcnSyvVffw" name="maxPhaseComparison" method="_Sda0amdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZhL0WdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhL0mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZhL02dHEe24LcnSyvVffw" name="maxPhaseComparison" method="_Sda0bWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZhL1GdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhL1WdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhL1mdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZhL12dHEe24LcnSyvVffw" name="deadlineComparison" method="_Sda0cWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZhy4GdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhy4WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZhy4mdHEe24LcnSyvVffw" name="deadlineComparison" method="_SdbbcGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZhy42dHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhy5GdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhy5WdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZhy5mdHEe24LcnSyvVffw" name="periodComparison" method="_SdbbdGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZhy52dHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZhy6GdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZiZ8GdHEe24LcnSyvVffw" name="periodComparison" method="_Sdbbd2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZiZ8WdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZiZ8mdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZiZ82dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZiZ9GdHEe24LcnSyvVffw" name="priorityComparison" method="_Sdbbe2dHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZiZ9WdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjBAGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZjBAWdHEe24LcnSyvVffw" name="priorityComparison" method="_SdbbfmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZjBAmdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjBA2dHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjBBGdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZjBBWdHEe24LcnSyvVffw" name="releaseTimeComparison" method="_SdbbgmdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZjBBmdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjBB2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZjoEGdHEe24LcnSyvVffw" name="releaseTimeComparison" method="_SdbbhWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZjoEWdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjoEmdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjoE2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZjoFGdHEe24LcnSyvVffw" name="LatestReleaseTimeComparison" method="_SdbbiWdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZjoFWdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZjoFmdHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_SZkPIGdHEe24LcnSyvVffw" name="LatestReleaseTimeComparison" method="_SdcCgGdHEe24LcnSyvVffw">
                <ownedParameter xmi:id="_SZkPIWdHEe24LcnSyvVffw" name="obj1" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZkPImdHEe24LcnSyvVffw" name="obj2" type="_SLjBQGdHEe24LcnSyvVffw"/>
                <ownedParameter xmi:id="_SZkPI2dHEe24LcnSyvVffw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_SZ7bgWdHEe24LcnSyvVffw" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SaKsEGdHEe24LcnSyvVffw" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SaMhQ2dHEe24LcnSyvVffw" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SaXgYWdHEe24LcnSyvVffw" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SaYugGdHEe24LcnSyvVffw" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_SdiJIGdHEe24LcnSyvVffw" name="" memberEnd="_SbHuU2dHEe24LcnSyvVffw _SdiJIWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SdiJIWdHEe24LcnSyvVffw" name="" type="_SHPJAGdHEe24LcnSyvVffw" association="_SdiJIGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SdmakWdHEe24LcnSyvVffw" name="" memberEnd="_ScFXoGdHEe24LcnSyvVffw _SdmakmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SdmakmdHEe24LcnSyvVffw" name="" type="_SKqQcGdHEe24LcnSyvVffw" association="_SdmakWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Sdmak2dHEe24LcnSyvVffw" name="" memberEnd="_ScFXoWdHEe24LcnSyvVffw _SdmalGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SdmalGdHEe24LcnSyvVffw" name="" type="_SKqQcGdHEe24LcnSyvVffw" association="_Sdmak2dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Sdo20GdHEe24LcnSyvVffw" name="" memberEnd="_ScXEcGdHEe24LcnSyvVffw _Sdo20WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_Sdo20WdHEe24LcnSyvVffw" name="" type="_SLjBQGdHEe24LcnSyvVffw" association="_Sdo20GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeBRUGdHEe24LcnSyvVffw" name="" memberEnd="_SeBRUWdHEe24LcnSyvVffw _SaxwEGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeBRUWdHEe24LcnSyvVffw" name="" type="_SFgqsGdHEe24LcnSyvVffw" association="_SeBRUGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeCfcWdHEe24LcnSyvVffw" name="" memberEnd="_SeCfcmdHEe24LcnSyvVffw _SayXIWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeCfcmdHEe24LcnSyvVffw" name="" type="_SFgqsGdHEe24LcnSyvVffw" association="_SeCfcWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeDGgWdHEe24LcnSyvVffw" name="" memberEnd="_SeDGgmdHEe24LcnSyvVffw _Say-MWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeDGgmdHEe24LcnSyvVffw" name="" type="_SFgqsGdHEe24LcnSyvVffw" association="_SeDGgWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeDtkWdHEe24LcnSyvVffw" name="" memberEnd="_SeDtkmdHEe24LcnSyvVffw _Sa2BgmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeDtkmdHEe24LcnSyvVffw" name="" type="_SGFScGdHEe24LcnSyvVffw" association="_SeDtkWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeDtlGdHEe24LcnSyvVffw" name="" memberEnd="_SeDtlWdHEe24LcnSyvVffw _Sa2okWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeDtlWdHEe24LcnSyvVffw" name="" type="_SGFScGdHEe24LcnSyvVffw" association="_SeDtlGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeEUoWdHEe24LcnSyvVffw" name="" memberEnd="_SeEUomdHEe24LcnSyvVffw _Sa32sGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeEUomdHEe24LcnSyvVffw" name="" type="_SGFScGdHEe24LcnSyvVffw" association="_SeEUoWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeE7sWdHEe24LcnSyvVffw" name="" memberEnd="_SeE7smdHEe24LcnSyvVffw _Sa5E0GdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeE7smdHEe24LcnSyvVffw" name="" type="_SGOcYGdHEe24LcnSyvVffw" association="_SeE7sWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeFiwWdHEe24LcnSyvVffw" name="" memberEnd="_SeFiwmdHEe24LcnSyvVffw _Sa5E0mdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeFiwmdHEe24LcnSyvVffw" name="" type="_SGOcYGdHEe24LcnSyvVffw" association="_SeFiwWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeGJ0GdHEe24LcnSyvVffw" name="" memberEnd="_SeGJ0WdHEe24LcnSyvVffw _Sa7hEGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeGJ0WdHEe24LcnSyvVffw" name="" type="_SGgwQGdHEe24LcnSyvVffw" association="_SeGJ0GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeGJ02dHEe24LcnSyvVffw" name="" memberEnd="_SeGJ1GdHEe24LcnSyvVffw _Sa-kYmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeGJ1GdHEe24LcnSyvVffw" name="" type="_SGzEIGdHEe24LcnSyvVffw" association="_SeGJ02dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeGw4WdHEe24LcnSyvVffw" name="" memberEnd="_SeGw4mdHEe24LcnSyvVffw _SbAZkWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeGw4mdHEe24LcnSyvVffw" name="" type="_SGzEIGdHEe24LcnSyvVffw" association="_SeGw4WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeGw5GdHEe24LcnSyvVffw" name="" memberEnd="_SeGw5WdHEe24LcnSyvVffw _SbDc4GdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeGw5WdHEe24LcnSyvVffw" name="" type="_SHBtoGdHEe24LcnSyvVffw" association="_SeGw5GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeHX8WdHEe24LcnSyvVffw" name="" memberEnd="_SeHX8mdHEe24LcnSyvVffw _SbErA2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeHX8mdHEe24LcnSyvVffw" name="" type="_SHBtoGdHEe24LcnSyvVffw" association="_SeHX8WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeH_AWdHEe24LcnSyvVffw" name="" memberEnd="_SeH_AmdHEe24LcnSyvVffw _SbL_xGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeH_AmdHEe24LcnSyvVffw" name="" type="_SHdygGdHEe24LcnSyvVffw" association="_SeH_AWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeH_BGdHEe24LcnSyvVffw" name="" memberEnd="_SeH_BWdHEe24LcnSyvVffw _SbNN4GdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeH_BWdHEe24LcnSyvVffw" name="" type="_SHdygGdHEe24LcnSyvVffw" association="_SeH_BGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeImEWdHEe24LcnSyvVffw" name="" memberEnd="_SeImEmdHEe24LcnSyvVffw _SbN08WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeImEmdHEe24LcnSyvVffw" name="" type="_SHdygGdHEe24LcnSyvVffw" association="_SeImEWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeJNIWdHEe24LcnSyvVffw" name="" memberEnd="_SeJNImdHEe24LcnSyvVffw _SbPqIWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeJNImdHEe24LcnSyvVffw" name="" type="_SHdygGdHEe24LcnSyvVffw" association="_SeJNIWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeJNJGdHEe24LcnSyvVffw" name="" memberEnd="_SeJNJWdHEe24LcnSyvVffw _SbQRMWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeJNJWdHEe24LcnSyvVffw" name="" type="_SHdygGdHEe24LcnSyvVffw" association="_SeJNJGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeJ0MWdHEe24LcnSyvVffw" name="" memberEnd="_SeJ0MmdHEe24LcnSyvVffw _SbT7kmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeJ0MmdHEe24LcnSyvVffw" name="" type="_SHtqIGdHEe24LcnSyvVffw" association="_SeJ0MWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeKbQWdHEe24LcnSyvVffw" name="" memberEnd="_SeKbQmdHEe24LcnSyvVffw _SbVJs2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeKbQmdHEe24LcnSyvVffw" name="" type="_SHtqIGdHEe24LcnSyvVffw" association="_SeKbQWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeLCUWdHEe24LcnSyvVffw" name="" memberEnd="_SeLCUmdHEe24LcnSyvVffw _SbWX0GdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeLCUmdHEe24LcnSyvVffw" name="" type="_SH0-4GdHEe24LcnSyvVffw" association="_SeLCUWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeLCVGdHEe24LcnSyvVffw" name="" memberEnd="_SeLCVWdHEe24LcnSyvVffw _SbXl8WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeLCVWdHEe24LcnSyvVffw" name="" type="_SH4CMGdHEe24LcnSyvVffw" association="_SeLCVGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeLpYWdHEe24LcnSyvVffw" name="" memberEnd="_SeLpYmdHEe24LcnSyvVffw _SbapQmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeLpYmdHEe24LcnSyvVffw" name="" type="_SIAlEGdHEe24LcnSyvVffw" association="_SeLpYWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeMQcGdHEe24LcnSyvVffw" name="" memberEnd="_SeMQcWdHEe24LcnSyvVffw _SbbQUWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeMQcWdHEe24LcnSyvVffw" name="" type="_SIAlEGdHEe24LcnSyvVffw" association="_SeMQcGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeMQc2dHEe24LcnSyvVffw" name="" memberEnd="_SeMQdGdHEe24LcnSyvVffw _Sbb3YGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeMQdGdHEe24LcnSyvVffw" name="" type="_SIAlEGdHEe24LcnSyvVffw" association="_SeMQc2dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeM3gWdHEe24LcnSyvVffw" name="" memberEnd="_SeM3gmdHEe24LcnSyvVffw _Sbb3YmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeM3gmdHEe24LcnSyvVffw" name="" type="_SIAlEGdHEe24LcnSyvVffw" association="_SeM3gWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeNekGdHEe24LcnSyvVffw" name="" memberEnd="_SeNekWdHEe24LcnSyvVffw _Sbb3ZGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeNekWdHEe24LcnSyvVffw" name="" type="_SIAlEGdHEe24LcnSyvVffw" association="_SeNekGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeNek2dHEe24LcnSyvVffw" name="" memberEnd="_SeNelGdHEe24LcnSyvVffw _Sbdsk2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeNelGdHEe24LcnSyvVffw" name="" type="_SIFdkGdHEe24LcnSyvVffw" association="_SeNek2dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeOFoWdHEe24LcnSyvVffw" name="" memberEnd="_SeOFomdHEe24LcnSyvVffw _Sbe6sGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeOFomdHEe24LcnSyvVffw" name="" type="_SIFdkGdHEe24LcnSyvVffw" association="_SeOFoWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeOssWdHEe24LcnSyvVffw" name="" memberEnd="_SeOssmdHEe24LcnSyvVffw _Sbgv4WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeOssmdHEe24LcnSyvVffw" name="" type="_SIKWEGdHEe24LcnSyvVffw" association="_SeOssWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeOstGdHEe24LcnSyvVffw" name="" memberEnd="_SeOstWdHEe24LcnSyvVffw _SbjMI2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeOstWdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeOstGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SePTwWdHEe24LcnSyvVffw" name="" memberEnd="_SePTwmdHEe24LcnSyvVffw _SbkaQGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SePTwmdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SePTwWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeP60GdHEe24LcnSyvVffw" name="" memberEnd="_SeP60WdHEe24LcnSyvVffw _SbkaQmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeP60WdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeP60GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeP602dHEe24LcnSyvVffw" name="" memberEnd="_SeP61GdHEe24LcnSyvVffw _SbloYWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeP61GdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeP602dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeQh4WdHEe24LcnSyvVffw" name="" memberEnd="_SeQh4mdHEe24LcnSyvVffw _SbmPc2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeQh4mdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeQh4WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeRI8WdHEe24LcnSyvVffw" name="" memberEnd="_SeRI8mdHEe24LcnSyvVffw _Sbm2gWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeRI8mdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeRI8WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeRI9GdHEe24LcnSyvVffw" name="" memberEnd="_SeRI9WdHEe24LcnSyvVffw _SbndkWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeRI9WdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeRI9GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeRwAWdHEe24LcnSyvVffw" name="" memberEnd="_SeRwAmdHEe24LcnSyvVffw _SborsWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeRwAmdHEe24LcnSyvVffw" name="" type="_SIaNsGdHEe24LcnSyvVffw" association="_SeRwAWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeSXEWdHEe24LcnSyvVffw" name="" memberEnd="_SeSXEmdHEe24LcnSyvVffw _Sbqg4WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeSXEmdHEe24LcnSyvVffw" name="" type="_SItvsGdHEe24LcnSyvVffw" association="_SeSXEWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeS-IGdHEe24LcnSyvVffw" name="" memberEnd="_SeS-IWdHEe24LcnSyvVffw _Sbqg42dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeS-IWdHEe24LcnSyvVffw" name="" type="_SItvsGdHEe24LcnSyvVffw" association="_SeS-IGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeS-I2dHEe24LcnSyvVffw" name="" memberEnd="_SeS-JGdHEe24LcnSyvVffw _SbrH8WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeS-JGdHEe24LcnSyvVffw" name="" type="_SItvsGdHEe24LcnSyvVffw" association="_SeS-I2dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeTlMWdHEe24LcnSyvVffw" name="" memberEnd="_SeTlMmdHEe24LcnSyvVffw _Sbs9IWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeTlMmdHEe24LcnSyvVffw" name="" type="_SItvsGdHEe24LcnSyvVffw" association="_SeTlMWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeUMQWdHEe24LcnSyvVffw" name="" memberEnd="_SeUMQmdHEe24LcnSyvVffw _SbuLQGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeUMQmdHEe24LcnSyvVffw" name="" type="_SItvsGdHEe24LcnSyvVffw" association="_SeUMQWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeUMRGdHEe24LcnSyvVffw" name="" memberEnd="_SeUMRWdHEe24LcnSyvVffw _SbvZYmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeUMRWdHEe24LcnSyvVffw" name="" type="_SJJNgGdHEe24LcnSyvVffw" association="_SeUMRGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeUzUWdHEe24LcnSyvVffw" name="" memberEnd="_SeUzUmdHEe24LcnSyvVffw _SbvZZGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeUzUmdHEe24LcnSyvVffw" name="" type="_SJJNgGdHEe24LcnSyvVffw" association="_SeUzUWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeVaYWdHEe24LcnSyvVffw" name="" memberEnd="_SeVaYmdHEe24LcnSyvVffw _Sbx1oGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeVaYmdHEe24LcnSyvVffw" name="" type="_SJZsMGdHEe24LcnSyvVffw" association="_SeVaYWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeVaZGdHEe24LcnSyvVffw" name="" memberEnd="_SeVaZWdHEe24LcnSyvVffw _Sbx1omdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeVaZWdHEe24LcnSyvVffw" name="" type="_SJZsMGdHEe24LcnSyvVffw" association="_SeVaZGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeWBcWdHEe24LcnSyvVffw" name="" memberEnd="_SeWBcmdHEe24LcnSyvVffw _Sbycs2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeWBcmdHEe24LcnSyvVffw" name="" type="_SJcIcGdHEe24LcnSyvVffw" association="_SeWBcWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeWogWdHEe24LcnSyvVffw" name="" memberEnd="_SeWogmdHEe24LcnSyvVffw _Sb0482dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeWogmdHEe24LcnSyvVffw" name="" type="_SJlSYGdHEe24LcnSyvVffw" association="_SeWogWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeWohGdHEe24LcnSyvVffw" name="" memberEnd="_SeWohWdHEe24LcnSyvVffw _Sb049WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeWohWdHEe24LcnSyvVffw" name="" type="_SJlSYGdHEe24LcnSyvVffw" association="_SeWohGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeXPkWdHEe24LcnSyvVffw" name="" memberEnd="_SeXPkmdHEe24LcnSyvVffw _Sb3VMWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeXPkmdHEe24LcnSyvVffw" name="" type="_SKEakGdHEe24LcnSyvVffw" association="_SeXPkWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeX2oWdHEe24LcnSyvVffw" name="" memberEnd="_SeX2omdHEe24LcnSyvVffw _Sb38QWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeX2omdHEe24LcnSyvVffw" name="" type="_SKEakGdHEe24LcnSyvVffw" association="_SeX2oWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeYdsGdHEe24LcnSyvVffw" name="" memberEnd="_SeYdsWdHEe24LcnSyvVffw _Sb38Q2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeYdsWdHEe24LcnSyvVffw" name="" type="_SKEakGdHEe24LcnSyvVffw" association="_SeYdsGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeZEwWdHEe24LcnSyvVffw" name="" memberEnd="_SeZEwmdHEe24LcnSyvVffw _Sb5KY2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeZEwmdHEe24LcnSyvVffw" name="" type="_SKEakGdHEe24LcnSyvVffw" association="_SeZEwWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeZExGdHEe24LcnSyvVffw" name="" memberEnd="_SeZExWdHEe24LcnSyvVffw _Sb5xcWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeZExWdHEe24LcnSyvVffw" name="" type="_SKEakGdHEe24LcnSyvVffw" association="_SeZExGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeZr0WdHEe24LcnSyvVffw" name="" memberEnd="_SeZr0mdHEe24LcnSyvVffw _Sb5xdGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeZr0mdHEe24LcnSyvVffw" name="" type="_SKEakGdHEe24LcnSyvVffw" association="_SeZr0WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeZr1GdHEe24LcnSyvVffw" name="" memberEnd="_SeZr1WdHEe24LcnSyvVffw _Sb6YgWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeZr1WdHEe24LcnSyvVffw" name="" type="_SKLIQGdHEe24LcnSyvVffw" association="_SeZr1GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeaS4WdHEe24LcnSyvVffw" name="" memberEnd="_SeaS4mdHEe24LcnSyvVffw _Sb8NsGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeaS4mdHEe24LcnSyvVffw" name="" type="_SKRO4GdHEe24LcnSyvVffw" association="_SeaS4WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeaS5GdHEe24LcnSyvVffw" name="" memberEnd="_SeaS5WdHEe24LcnSyvVffw _Sb9b0mdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeaS5WdHEe24LcnSyvVffw" name="" type="_SKU5QGdHEe24LcnSyvVffw" association="_SeaS5GdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Sea58WdHEe24LcnSyvVffw" name="" memberEnd="_Sea58mdHEe24LcnSyvVffw _Sb-C4WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_Sea58mdHEe24LcnSyvVffw" name="" type="_SKU5QGdHEe24LcnSyvVffw" association="_Sea58WdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SebhAGdHEe24LcnSyvVffw" name="" memberEnd="_SebhAWdHEe24LcnSyvVffw _Sb-p8WdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SebhAWdHEe24LcnSyvVffw" name="" type="_SKc1EGdHEe24LcnSyvVffw" association="_SebhAGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SebhA2dHEe24LcnSyvVffw" name="" memberEnd="_SebhBGdHEe24LcnSyvVffw _Sb_RAWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SebhBGdHEe24LcnSyvVffw" name="" type="_SKc1EGdHEe24LcnSyvVffw" association="_SebhA2dHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SecIEWdHEe24LcnSyvVffw" name="" memberEnd="_SecIEmdHEe24LcnSyvVffw _Sb_RA2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SecIEmdHEe24LcnSyvVffw" name="" type="_SKc1EGdHEe24LcnSyvVffw" association="_SecIEWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SecIFGdHEe24LcnSyvVffw" name="" memberEnd="_SecIFWdHEe24LcnSyvVffw _Sb_4EWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SecIFWdHEe24LcnSyvVffw" name="" type="_SKc1EGdHEe24LcnSyvVffw" association="_SecIFGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SecvIWdHEe24LcnSyvVffw" name="" memberEnd="_SecvImdHEe24LcnSyvVffw _Sb_4E2dHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SecvImdHEe24LcnSyvVffw" name="" type="_SKc1EGdHEe24LcnSyvVffw" association="_SecvIWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SecvJGdHEe24LcnSyvVffw" name="" memberEnd="_SecvJWdHEe24LcnSyvVffw _ScF-sWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SecvJWdHEe24LcnSyvVffw" name="" type="_SKqQcGdHEe24LcnSyvVffw" association="_SecvJGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SedWMWdHEe24LcnSyvVffw" name="" memberEnd="_SedWMmdHEe24LcnSyvVffw _ScGlwGdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SedWMmdHEe24LcnSyvVffw" name="" type="_SKqQcGdHEe24LcnSyvVffw" association="_SedWMWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Sed9QWdHEe24LcnSyvVffw" name="" memberEnd="_Sed9QmdHEe24LcnSyvVffw _ScKQIWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_Sed9QmdHEe24LcnSyvVffw" name="" type="_SLKmwWdHEe24LcnSyvVffw" association="_Sed9QWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Sed9RGdHEe24LcnSyvVffw" name="" memberEnd="_Sed9RWdHEe24LcnSyvVffw _ScK3MmdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_Sed9RWdHEe24LcnSyvVffw" name="" type="_SLKmwWdHEe24LcnSyvVffw" association="_Sed9RGdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SeekUWdHEe24LcnSyvVffw" name="" memberEnd="_SeekUmdHEe24LcnSyvVffw _ScXEcWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SeekUmdHEe24LcnSyvVffw" name="" type="_SLjBQGdHEe24LcnSyvVffw" association="_SeekUWdHEe24LcnSyvVffw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SefLYWdHEe24LcnSyvVffw" name="" memberEnd="_SefLYmdHEe24LcnSyvVffw _ScXrgWdHEe24LcnSyvVffw">
              <ownedEnd xmi:id="_SefLYmdHEe24LcnSyvVffw" name="" type="_SLjBQGdHEe24LcnSyvVffw" association="_SefLYWdHEe24LcnSyvVffw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_R_zEQGdHEe24LcnSyvVffw" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_SYClIGdHEe24LcnSyvVffw" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SYlXsGdHEe24LcnSyvVffw" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_SADi8mdHEe24LcnSyvVffw" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_SYM9M2dHEe24LcnSyvVffw" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SYNkQWdHEe24LcnSyvVffw" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SYNkQ2dHEe24LcnSyvVffw" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SajtoWdHEe24LcnSyvVffw" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_R-nYgGdHEe24LcnSyvVffw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_R-n_kGdHEe24LcnSyvVffw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_R_gJUGdHEe24LcnSyvVffw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_SX7QYGdHEe24LcnSyvVffw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_SBlM8GdHEe24LcnSyvVffw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_SZNCwWdHEe24LcnSyvVffw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_SJRJVGdHEe24LcnSyvVffw" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SXrYwGdHEe24LcnSyvVffw" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SXtN8GdHEe24LcnSyvVffw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SXtN8mdHEe24LcnSyvVffw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SXt1AWdHEe24LcnSyvVffw" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SXucEWdHEe24LcnSyvVffw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SYAI4mdHEe24LcnSyvVffw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SYeqAGdHEe24LcnSyvVffw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SYl-wWdHEe24LcnSyvVffw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SZL0oGdHEe24LcnSyvVffw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SZMbsWdHEe24LcnSyvVffw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SZMbs2dHEe24LcnSyvVffw" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SZfWoGdHEe24LcnSyvVffw" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_SZfWomdHEe24LcnSyvVffw" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_R_zrUGdHEe24LcnSyvVffw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_SYDMMWdHEe24LcnSyvVffw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SYDzQWdHEe24LcnSyvVffw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SYUR8GdHEe24LcnSyvVffw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SYU5AWdHEe24LcnSyvVffw" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_R_zrUWdHEe24LcnSyvVffw" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_R_zrUmdHEe24LcnSyvVffw" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_SYEaUGdHEe24LcnSyvVffw" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_SYEaUmdHEe24LcnSyvVffw" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_SYFBYWdHEe24LcnSyvVffw" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_SZxDcGdHEe24LcnSyvVffw" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_SZxDcWdHEe24LcnSyvVffw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_SaCwQGdHEe24LcnSyvVffw" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_SaPkkmdHEe24LcnSyvVffw" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_R_Hu0GdHEe24LcnSyvVffw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_R_IV4GdHEe24LcnSyvVffw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_R_IV4WdHEe24LcnSyvVffw" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_R_IV4mdHEe24LcnSyvVffw" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_SX1w1mdHEe24LcnSyvVffw" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_SX2X4WdHEe24LcnSyvVffw" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_SAC74GdHEe24LcnSyvVffw" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_SAC74WdHEe24LcnSyvVffw" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_SADi8GdHEe24LcnSyvVffw" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_SADi8WdHEe24LcnSyvVffw" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_SYMWI2dHEe24LcnSyvVffw" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_SYM9MWdHEe24LcnSyvVffw" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_SYLvEGdHEe24LcnSyvVffw" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SYLvEmdHEe24LcnSyvVffw" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_SYMWIWdHEe24LcnSyvVffw" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_R_zrU2dHEe24LcnSyvVffw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_R_0SYGdHEe24LcnSyvVffw" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_SYFBY2dHEe24LcnSyvVffw" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_R_0SYWdHEe24LcnSyvVffw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_R_0SYmdHEe24LcnSyvVffw" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_R_0SY2dHEe24LcnSyvVffw" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_SYFocWdHEe24LcnSyvVffw" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SAGmQGdHEe24LcnSyvVffw" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_SYOyYmdHEe24LcnSyvVffw" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SYPZc2dHEe24LcnSyvVffw" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SYQnkGdHEe24LcnSyvVffw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SYROpGdHEe24LcnSyvVffw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SYScwGdHEe24LcnSyvVffw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SYTD02dHEe24LcnSyvVffw" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZD40mdHEe24LcnSyvVffw" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZEf4mdHEe24LcnSyvVffw" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZFG82dHEe24LcnSyvVffw" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZFuBmdHEe24LcnSyvVffw" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SB6kIGdHEe24LcnSyvVffw" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_SZSiUGdHEe24LcnSyvVffw" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZTwc2dHEe24LcnSyvVffw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZUXg2dHEe24LcnSyvVffw" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZU-k2dHEe24LcnSyvVffw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZWMs2dHEe24LcnSyvVffw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZXa02dHEe24LcnSyvVffw" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_SCDHAGdHEe24LcnSyvVffw" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_SZZ3EGdHEe24LcnSyvVffw" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZaeIGdHEe24LcnSyvVffw" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZaeImdHEe24LcnSyvVffw" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZbFMWdHEe24LcnSyvVffw" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_SZbsQWdHEe24LcnSyvVffw" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_Q7LlkGdHEe24LcnSyvVffw">
      <eAnnotations xmi:id="_Q7P3AGdHEe24LcnSyvVffw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Q7VWkGdHEe24LcnSyvVffw" base_Package="_Pq63kGdHEe24LcnSyvVffw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_SFbyMGdHEe24LcnSyvVffw" genericsValue="T,E" base_Element="_SFYu4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SFljMGdHEe24LcnSyvVffw" base_Element="_SFk8IGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SFmxUGdHEe24LcnSyvVffw" base_Element="_SFk8IGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SFmxUWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SFomgGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SFnYYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SFqbsGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SFomgWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SFrp0GdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SFrCwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SFtfAGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SFs38GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SFvUMGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SFutIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGN1UGdHEe24LcnSyvVffw" base_Element="_SGNOQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGN1UWdHEe24LcnSyvVffw" base_Element="_SGNOQGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGN1UmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGQ4oGdHEe24LcnSyvVffw" base_Element="_SGQRkGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGRfsGdHEe24LcnSyvVffw" base_Element="_SGQRkGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGRfsWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGSGwGdHEe24LcnSyvVffw" base_Element="_SGRfsmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGSGwWdHEe24LcnSyvVffw" base_Element="_SGRfsmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGSGwmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGXmUGdHEe24LcnSyvVffw" base_Element="_SGW_QGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGYNYGdHEe24LcnSyvVffw" base_Element="_SGW_QGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGYNYWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGapoGdHEe24LcnSyvVffw" base_Element="_SGaCkGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGapoWdHEe24LcnSyvVffw" base_Element="_SGaCkGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGapomdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGbQsGdHEe24LcnSyvVffw" base_Element="_SGapo2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGbQsWdHEe24LcnSyvVffw" base_Element="_SGapo2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGbQsmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGb3wGdHEe24LcnSyvVffw" base_Element="_SGbQs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGb3wWdHEe24LcnSyvVffw" base_Element="_SGbQs2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGb3wmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGce0GdHEe24LcnSyvVffw" base_Element="_SGb3w2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGce0WdHEe24LcnSyvVffw" base_Element="_SGb3w2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGce0mdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGce1GdHEe24LcnSyvVffw" base_Element="_SGce02dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGdF4GdHEe24LcnSyvVffw" base_Element="_SGce02dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGdF4WdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGdF42dHEe24LcnSyvVffw" base_Element="_SGdF4mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGdF5GdHEe24LcnSyvVffw" base_Element="_SGdF4mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGds8GdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGds8mdHEe24LcnSyvVffw" base_Element="_SGds8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGds82dHEe24LcnSyvVffw" base_Element="_SGds8WdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGds9GdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGeUAWdHEe24LcnSyvVffw" base_Element="_SGeUAGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGeUAmdHEe24LcnSyvVffw" base_Element="_SGeUAGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGeUA2dHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SGlowGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SGlBsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGqhQWdHEe24LcnSyvVffw" base_Element="_SGqhQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGrIUGdHEe24LcnSyvVffw" base_Element="_SGqhQGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGrIUWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGrvYGdHEe24LcnSyvVffw" base_Element="_SGrIUmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGrvYWdHEe24LcnSyvVffw" base_Element="_SGrIUmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGrvYmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGsWcWdHEe24LcnSyvVffw" base_Element="_SGsWcGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGsWcmdHEe24LcnSyvVffw" base_Element="_SGsWcGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGsWc2dHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGs9gGdHEe24LcnSyvVffw" base_Element="_SGsWdGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGs9gWdHEe24LcnSyvVffw" base_Element="_SGsWdGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGs9gmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGtkkGdHEe24LcnSyvVffw" base_Element="_SGs9g2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGtkkWdHEe24LcnSyvVffw" base_Element="_SGs9g2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGtkkmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGuLoGdHEe24LcnSyvVffw" base_Element="_SGtkk2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGuLoWdHEe24LcnSyvVffw" base_Element="_SGtkk2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGuLomdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGuLpGdHEe24LcnSyvVffw" base_Element="_SGuLo2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGuysGdHEe24LcnSyvVffw" base_Element="_SGuLo2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGuysWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGuys2dHEe24LcnSyvVffw" base_Element="_SGuysmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGvZwGdHEe24LcnSyvVffw" base_Element="_SGuysmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGvZwWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGwA0GdHEe24LcnSyvVffw" base_Element="_SGvZwmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGwA0WdHEe24LcnSyvVffw" base_Element="_SGvZwmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGwA0mdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGwA1GdHEe24LcnSyvVffw" base_Element="_SGwA02dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGwn4GdHEe24LcnSyvVffw" base_Element="_SGwA02dHEe24LcnSyvVffw">
    <annotations xmi:id="_SGwn4WdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGwn42dHEe24LcnSyvVffw" base_Element="_SGwn4mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGxO8GdHEe24LcnSyvVffw" base_Element="_SGwn4mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGxO8WdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGxO82dHEe24LcnSyvVffw" base_Element="_SGxO8mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGx2AGdHEe24LcnSyvVffw" base_Element="_SGxO8mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGx2AWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SGx2A2dHEe24LcnSyvVffw" base_Element="_SGx2AmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SGydEGdHEe24LcnSyvVffw" base_Element="_SGx2AmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SGydEWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SG2ugGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SG2HcmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHDi0WdHEe24LcnSyvVffw" base_Element="_SHDi0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHDi0mdHEe24LcnSyvVffw" base_Element="_SHDi0GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHEJ4GdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHEJ4mdHEe24LcnSyvVffw" base_Element="_SHEJ4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHEJ42dHEe24LcnSyvVffw" base_Element="_SHEJ4WdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHEJ5GdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHEw8WdHEe24LcnSyvVffw" base_Element="_SHEw8GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHEw8mdHEe24LcnSyvVffw" base_Element="_SHEw8GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHEw82dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SHKQgGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SHJCYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHN64WdHEe24LcnSyvVffw" base_Element="_SHNT02dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHOh8GdHEe24LcnSyvVffw" base_Element="_SHNT02dHEe24LcnSyvVffw">
    <annotations xmi:id="_SHOh8WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHQXIWdHEe24LcnSyvVffw" base_Element="_SHQXIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHTacGdHEe24LcnSyvVffw" base_Element="_SHSzYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHTacWdHEe24LcnSyvVffw" base_Element="_SHSzYGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHTacmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHUBgWdHEe24LcnSyvVffw" base_Element="_SHTac2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHUBgmdHEe24LcnSyvVffw" base_Element="_SHTac2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SHUBg2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHUokWdHEe24LcnSyvVffw" base_Element="_SHUokGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHUokmdHEe24LcnSyvVffw" base_Element="_SHUokGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHUok2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SHhc4WdHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SHhc4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SHirAGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SHiD8GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SHj5IGdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_SHirAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHmVYWdHEe24LcnSyvVffw" base_Element="_SHluUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHmVYmdHEe24LcnSyvVffw" base_Element="_SHluUGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHm8cGdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SHvfUWdHEe24LcnSyvVffw" base_Element="_SHvfUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SHvfUmdHEe24LcnSyvVffw" base_Element="_SHvfUGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SHwGYGdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SIHSwGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SIGrsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SIJH8GdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SIIg4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SINZYWdHEe24LcnSyvVffw" base_Element="_SIMyUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SIOAcGdHEe24LcnSyvVffw" base_Element="_SIMyUGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SIOAcWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SIPOkGdHEe24LcnSyvVffw" base_Element="_SIOngmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SIPOkWdHEe24LcnSyvVffw" base_Element="_SIOngmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SIPOkmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SIP1oWdHEe24LcnSyvVffw" base_Element="_SIP1oGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SIQcsGdHEe24LcnSyvVffw" base_Element="_SIP1oGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SIQcsWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SIWjUGdHEe24LcnSyvVffw" base_Element="_SIV8RWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SIWjUWdHEe24LcnSyvVffw" base_Element="_SIV8RWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SIXKYGdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SIY_kGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SIYYgGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SIcp8GdHEe24LcnSyvVffw" genericsValue="String, Integer" base_Element="_SIcC4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SId4EGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SIdRAGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Array xmi:id="_SIefIWdHEe24LcnSyvVffw" base_Element="_SId4EWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SIo3MGdHEe24LcnSyvVffw" base_Element="_SIoQIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SIo3MWdHEe24LcnSyvVffw" base_Element="_SIoQIGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SIo3MmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SIshkWdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SIshkGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI4HwWdHEe24LcnSyvVffw" base_Element="_SI3gsmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI4HwmdHEe24LcnSyvVffw" base_Element="_SI3gsmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI4Hw2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI5V4WdHEe24LcnSyvVffw" base_Element="_SI4u0mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI5V4mdHEe24LcnSyvVffw" base_Element="_SI4u0mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI5V42dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI588WdHEe24LcnSyvVffw" base_Element="_SI5V5GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI588mdHEe24LcnSyvVffw" base_Element="_SI5V5GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI5882dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI7LEWdHEe24LcnSyvVffw" base_Element="_SI7LEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI7yIGdHEe24LcnSyvVffw" base_Element="_SI7LEGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI7yIWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI8ZMGdHEe24LcnSyvVffw" base_Element="_SI7yImdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI8ZMWdHEe24LcnSyvVffw" base_Element="_SI7yImdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI8ZMmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI9AQWdHEe24LcnSyvVffw" base_Element="_SI8ZM2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI9AQmdHEe24LcnSyvVffw" base_Element="_SI8ZM2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SI9AQ2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI9nUGdHEe24LcnSyvVffw" base_Element="_SI9ARGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI9nUWdHEe24LcnSyvVffw" base_Element="_SI9ARGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI9nUmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SI-OYmdHEe24LcnSyvVffw" base_Element="_SI-OYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SI-OY2dHEe24LcnSyvVffw" base_Element="_SI-OYGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SI-OZGdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SI-1cWdHEe24LcnSyvVffw" genericsValue="String, Integer" base_Element="_SI-1cGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJKboWdHEe24LcnSyvVffw" base_Element="_SJKboGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SJLCsGdHEe24LcnSyvVffw" base_Element="_SJKboGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SJLCsWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJLCs2dHEe24LcnSyvVffw" base_Element="_SJLCsmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SJLpwGdHEe24LcnSyvVffw" base_Element="_SJLCsmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SJLpwWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJMQ0GdHEe24LcnSyvVffw" base_Element="_SJLpwmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SJMQ0WdHEe24LcnSyvVffw" base_Element="_SJLpwmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SJMQ0mdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SJPUIGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SJOtEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJQiQGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SJP7MGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SJRwYGdHEe24LcnSyvVffw" base_Element="_SJRJVGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJSXcWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SJSXcGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJcvgWdHEe24LcnSyvVffw" base_Element="_SJcvgGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SJdWkGdHEe24LcnSyvVffw" base_Element="_SJcvgGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SJdWkWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SJfy0GdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SJfLwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJi2IGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SJiPEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJkrUGdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SJkEQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJ2_MGdHEe24LcnSyvVffw" genericsValue="T extends SchedulableObject" base_Element="_SJ2YIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJ4NUGdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SJ3mRGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SJ5bcWdHEe24LcnSyvVffw" base_Element="_SJ5bcGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SJ9s4GdHEe24LcnSyvVffw" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_SJ9F0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKBXQGdHEe24LcnSyvVffw" base_Element="_SKAwMGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKB-UWdHEe24LcnSyvVffw" base_Element="_SKB-UGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKGPwGdHEe24LcnSyvVffw" base_Element="_SKFosGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKGPwWdHEe24LcnSyvVffw" base_Element="_SKFosGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKGPwmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKGPxGdHEe24LcnSyvVffw" base_Element="_SKGPw2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKG20GdHEe24LcnSyvVffw" base_Element="_SKGPw2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKG20WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKG21GdHEe24LcnSyvVffw" base_Element="_SKG20mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKG21WdHEe24LcnSyvVffw" base_Element="_SKG20mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKHd4GdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKWHZmdHEe24LcnSyvVffw" base_Element="_SKWHZWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKWucGdHEe24LcnSyvVffw" base_Element="_SKWHZWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKWucWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKWuc2dHEe24LcnSyvVffw" base_Element="_SKWucmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKXVgGdHEe24LcnSyvVffw" base_Element="_SKWucmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKXVgWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKXVhGdHEe24LcnSyvVffw" base_Element="_SKXVgmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKXVhWdHEe24LcnSyvVffw" base_Element="_SKXVgmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKXVhmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKeqQWdHEe24LcnSyvVffw" base_Element="_SKeqQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKeqQmdHEe24LcnSyvVffw" base_Element="_SKeqQGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKeqQ2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKfRUGdHEe24LcnSyvVffw" base_Element="_SKeqRGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKfRUWdHEe24LcnSyvVffw" base_Element="_SKeqRGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKfRUmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKf4YGdHEe24LcnSyvVffw" base_Element="_SKfRU2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKf4YWdHEe24LcnSyvVffw" base_Element="_SKfRU2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKf4YmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKf4ZGdHEe24LcnSyvVffw" base_Element="_SKf4Y2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKgfcGdHEe24LcnSyvVffw" base_Element="_SKf4Y2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKgfcWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKgfc2dHEe24LcnSyvVffw" base_Element="_SKgfcmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKgfdGdHEe24LcnSyvVffw" base_Element="_SKgfcmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKgfdWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKhGgWdHEe24LcnSyvVffw" base_Element="_SKhGgGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKhGgmdHEe24LcnSyvVffw" base_Element="_SKhGgGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKhGg2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKhtkGdHEe24LcnSyvVffw" base_Element="_SKhGhGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKhtkWdHEe24LcnSyvVffw" base_Element="_SKhGhGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKhtkmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKhtlWdHEe24LcnSyvVffw" base_Element="_SKhtk2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKiUoGdHEe24LcnSyvVffw" base_Element="_SKhtk2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKiUoWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKiUpGdHEe24LcnSyvVffw" base_Element="_SKiUomdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKi7sGdHEe24LcnSyvVffw" base_Element="_SKiUomdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKi7sWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKi7s2dHEe24LcnSyvVffw" base_Element="_SKi7smdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKi7tGdHEe24LcnSyvVffw" base_Element="_SKi7smdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKi7tWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKjiwWdHEe24LcnSyvVffw" base_Element="_SKjiwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKjiwmdHEe24LcnSyvVffw" base_Element="_SKjiwGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKkJ0GdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKkJ02dHEe24LcnSyvVffw" base_Element="_SKkJ0WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKkw4GdHEe24LcnSyvVffw" base_Element="_SKkJ0WdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKkw4WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKlX8GdHEe24LcnSyvVffw" base_Element="_SKkw4mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKlX8WdHEe24LcnSyvVffw" base_Element="_SKkw4mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SKlX8mdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKl_AGdHEe24LcnSyvVffw" base_Element="_SKlX82dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKl_AWdHEe24LcnSyvVffw" base_Element="_SKlX82dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKl_AmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKmmEGdHEe24LcnSyvVffw" base_Element="_SKl_A2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKmmEWdHEe24LcnSyvVffw" base_Element="_SKl_A2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKmmEmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SKmmFGdHEe24LcnSyvVffw" base_Element="_SKmmE2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SKmmFWdHEe24LcnSyvVffw" base_Element="_SKmmE2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SKmmFmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_SK5hAmdHEe24LcnSyvVffw" base_Element="_SK458GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Array xmi:id="_SK6vIGdHEe24LcnSyvVffw" base_Element="_SK6IEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Array xmi:id="_SK7WNGdHEe24LcnSyvVffw" base_Element="_SK7WMGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Array xmi:id="_SK8kUmdHEe24LcnSyvVffw" base_Element="_SK79RGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SLKmwGdHEe24LcnSyvVffw" genericsValue="InstructionParameters" base_Element="_SLJ_sGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SLL04WdHEe24LcnSyvVffw" genericsValue="InstructionParameters" base_Element="_SLL04GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Array xmi:id="_SLTJoWdHEe24LcnSyvVffw" base_Element="_SLSikWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLZQQWdHEe24LcnSyvVffw" base_Element="_SLZQQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLZ3UGdHEe24LcnSyvVffw" base_Element="_SLZQQGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLZ3UWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLZ3U2dHEe24LcnSyvVffw" base_Element="_SLZ3UmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLZ3VGdHEe24LcnSyvVffw" base_Element="_SLZ3UmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLZ3VWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLaeYGdHEe24LcnSyvVffw" base_Element="_SLZ3VmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLaeYWdHEe24LcnSyvVffw" base_Element="_SLZ3VmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLaeYmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLaeZGdHEe24LcnSyvVffw" base_Element="_SLaeY2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLbFcGdHEe24LcnSyvVffw" base_Element="_SLaeY2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLbFcWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLbFc2dHEe24LcnSyvVffw" base_Element="_SLbFcmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLbFdGdHEe24LcnSyvVffw" base_Element="_SLbFcmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLbFdWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLbsgGdHEe24LcnSyvVffw" base_Element="_SLbFdmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLbsgWdHEe24LcnSyvVffw" base_Element="_SLbFdmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLbsgmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLcTkGdHEe24LcnSyvVffw" base_Element="_SLbsg2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLcTkWdHEe24LcnSyvVffw" base_Element="_SLbsg2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLcTkmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLcTlGdHEe24LcnSyvVffw" base_Element="_SLcTk2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLc6oGdHEe24LcnSyvVffw" base_Element="_SLcTk2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLc6oWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLc6o2dHEe24LcnSyvVffw" base_Element="_SLc6omdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLc6pGdHEe24LcnSyvVffw" base_Element="_SLc6omdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLc6pWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLdhsGdHEe24LcnSyvVffw" base_Element="_SLc6pmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLdhsWdHEe24LcnSyvVffw" base_Element="_SLc6pmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLdhsmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLdhtGdHEe24LcnSyvVffw" base_Element="_SLdhs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLdhtWdHEe24LcnSyvVffw" base_Element="_SLdhs2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLdhtmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLeIwGdHEe24LcnSyvVffw" base_Element="_SLdht2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLeIwWdHEe24LcnSyvVffw" base_Element="_SLdht2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLeIwmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLeIxGdHEe24LcnSyvVffw" base_Element="_SLeIw2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLev0GdHEe24LcnSyvVffw" base_Element="_SLeIw2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLev0WdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLev02dHEe24LcnSyvVffw" base_Element="_SLev0mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLev1GdHEe24LcnSyvVffw" base_Element="_SLev0mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLev1WdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLfW4GdHEe24LcnSyvVffw" base_Element="_SLev1mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLfW4WdHEe24LcnSyvVffw" base_Element="_SLev1mdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLfW4mdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLfW5GdHEe24LcnSyvVffw" base_Element="_SLfW42dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLfW5WdHEe24LcnSyvVffw" base_Element="_SLfW42dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLfW5mdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLf98WdHEe24LcnSyvVffw" base_Element="_SLf98GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLf98mdHEe24LcnSyvVffw" base_Element="_SLf98GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLf982dHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLf99WdHEe24LcnSyvVffw" base_Element="_SLf99GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLglAGdHEe24LcnSyvVffw" base_Element="_SLf99GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLglAWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLglA2dHEe24LcnSyvVffw" base_Element="_SLglAmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLglBGdHEe24LcnSyvVffw" base_Element="_SLglAmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLglBWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLhMEGdHEe24LcnSyvVffw" base_Element="_SLglBmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLhMEWdHEe24LcnSyvVffw" base_Element="_SLglBmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLhMEmdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLhMFGdHEe24LcnSyvVffw" base_Element="_SLhME2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLhzIGdHEe24LcnSyvVffw" base_Element="_SLhME2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SLhzIWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SLhzI2dHEe24LcnSyvVffw" base_Element="_SLhzImdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SLhzJGdHEe24LcnSyvVffw" base_Element="_SLhzImdHEe24LcnSyvVffw">
    <annotations xmi:id="_SLhzJWdHEe24LcnSyvVffw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SLnSsGdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_SLmrqWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SXr_0GdHEe24LcnSyvVffw" base_Element="_SXrYwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SXtN8WdHEe24LcnSyvVffw" base_Element="_SXtN8GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SXt1AGdHEe24LcnSyvVffw" base_Element="_SXtN8mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SXucEGdHEe24LcnSyvVffw" base_Element="_SXt1AWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SXucEmdHEe24LcnSyvVffw" base_Element="_SXucEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SXwRRGdHEe24LcnSyvVffw" base_Element="_SXwRQWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SXw4UGdHEe24LcnSyvVffw" base_Element="_SXwRQWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SXw4UWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SXyGcGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SXxfYmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SXyGc2dHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SXyGcmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SX0isGdHEe24LcnSyvVffw" genericsValue="String, Activation" base_Element="_SXz7oGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SX2X4GdHEe24LcnSyvVffw" base_Element="_SX1w1mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SX2-8GdHEe24LcnSyvVffw" base_Element="_SX2X4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SX4NEWdHEe24LcnSyvVffw" base_Element="_SX4NEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SX73cGdHEe24LcnSyvVffw" base_Element="_SX7QYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SX9sqGdHEe24LcnSyvVffw" base_Element="_SX9spWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SX-TsGdHEe24LcnSyvVffw" base_Element="_SX9spWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SX-TsWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYAv8GdHEe24LcnSyvVffw" base_Element="_SYAI4mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYB-EGdHEe24LcnSyvVffw" base_Element="_SYBXAGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYB-EWdHEe24LcnSyvVffw" base_Element="_SYBXAGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYB-EmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYDMMGdHEe24LcnSyvVffw" base_Element="_SYClIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYDzQGdHEe24LcnSyvVffw" base_Element="_SYDMMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYDzQmdHEe24LcnSyvVffw" base_Element="_SYDzQWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYEaUWdHEe24LcnSyvVffw" base_Element="_SYEaUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYFBYGdHEe24LcnSyvVffw" base_Element="_SYEaUmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYFBYmdHEe24LcnSyvVffw" base_Element="_SYFBYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYFocGdHEe24LcnSyvVffw" base_Element="_SYFBY2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYFocmdHEe24LcnSyvVffw" base_Element="_SYFocWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYHdoWdHEe24LcnSyvVffw" base_Element="_SYG2lGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYHdomdHEe24LcnSyvVffw" base_Element="_SYG2lGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYHdo2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SYJS0WdHEe24LcnSyvVffw" genericsValue="String, Flow" base_Element="_SYJS0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SYJ54GdHEe24LcnSyvVffw" genericsValue="Node, Activation" base_Element="_SYJS0mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYLvEWdHEe24LcnSyvVffw" base_Element="_SYLvEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYMWIGdHEe24LcnSyvVffw" base_Element="_SYLvEmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYMWImdHEe24LcnSyvVffw" base_Element="_SYMWIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYM9MGdHEe24LcnSyvVffw" base_Element="_SYMWI2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYM9MmdHEe24LcnSyvVffw" base_Element="_SYM9MWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYNkQGdHEe24LcnSyvVffw" base_Element="_SYM9M2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYNkQmdHEe24LcnSyvVffw" base_Element="_SYNkQWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYOLUGdHEe24LcnSyvVffw" base_Element="_SYNkQ2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYOyY2dHEe24LcnSyvVffw" base_Element="_SYOyYmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYPZcGdHEe24LcnSyvVffw" base_Element="_SYOyZGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYPZcWdHEe24LcnSyvVffw" base_Element="_SYOyZGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYPZcmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYQAgGdHEe24LcnSyvVffw" base_Element="_SYPZc2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYQAg2dHEe24LcnSyvVffw" base_Element="_SYQAgWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYQAhGdHEe24LcnSyvVffw" base_Element="_SYQAgWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYQAhWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYQnkWdHEe24LcnSyvVffw" base_Element="_SYQnkGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYROoWdHEe24LcnSyvVffw" base_Element="_SYQnkmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYROomdHEe24LcnSyvVffw" base_Element="_SYQnkmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYROo2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYR1sGdHEe24LcnSyvVffw" base_Element="_SYROpGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYR1s2dHEe24LcnSyvVffw" base_Element="_SYR1sWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYR1tGdHEe24LcnSyvVffw" base_Element="_SYR1sWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYR1tWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYScwWdHEe24LcnSyvVffw" base_Element="_SYScwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYTD0GdHEe24LcnSyvVffw" base_Element="_SYScwmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYTD0WdHEe24LcnSyvVffw" base_Element="_SYScwmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYTD0mdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYTD1GdHEe24LcnSyvVffw" base_Element="_SYTD02dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYTq4WdHEe24LcnSyvVffw" base_Element="_SYTD1WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYTq4mdHEe24LcnSyvVffw" base_Element="_SYTD1WdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYTq42dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYU5AGdHEe24LcnSyvVffw" base_Element="_SYUR8GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYVgEGdHEe24LcnSyvVffw" base_Element="_SYU5AWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SYXVQWdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SYXVQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYYjYGdHEe24LcnSyvVffw" base_Element="_SYX8UGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYcNwGdHEe24LcnSyvVffw" base_Element="_SYbmsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYcNwWdHEe24LcnSyvVffw" base_Element="_SYbmsGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYcNwmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SYdb4GdHEe24LcnSyvVffw" genericsValue="String, Node" base_Element="_SYc00GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYfREGdHEe24LcnSyvVffw" base_Element="_SYeqAGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYiUYmdHEe24LcnSyvVffw" base_Element="_SYhtVmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYiUY2dHEe24LcnSyvVffw" base_Element="_SYhtVmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYiUZGdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SYjigGdHEe24LcnSyvVffw" genericsValue="ScheduleTime" base_Element="_SYi7cmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SYkwoWdHEe24LcnSyvVffw" base_Element="_SYkJmWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SYkwomdHEe24LcnSyvVffw" base_Element="_SYkJmWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SYkwo2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SYl-wGdHEe24LcnSyvVffw" base_Element="_SYlXsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SYl-wmdHEe24LcnSyvVffw" base_Element="_SYl-wWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SYwW0WdHEe24LcnSyvVffw" genericsValue="String,InstructionTimeSlot" base_Element="_SYwW0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SYyMBWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SYyMAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SYzaIGdHEe24LcnSyvVffw" genericsValue="Double" base_Element="_SYyzFWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SY0BMGdHEe24LcnSyvVffw" genericsValue="Double,ReliabilityRow" base_Element="_SYzaIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SY7V8GdHEe24LcnSyvVffw" genericsValue="Activation,Row&lt;Activation>" base_Element="_SY6u4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SY79BWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SY79AWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SY9yMGdHEe24LcnSyvVffw" base_Element="_SY9LIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SY9yMmdHEe24LcnSyvVffw" base_Element="_SY9yMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZDRwGdHEe24LcnSyvVffw" base_Element="_SZCqt2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZDRwWdHEe24LcnSyvVffw" base_Element="_SZCqt2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SZDRwmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZDRxWdHEe24LcnSyvVffw" base_Element="_SZDRw2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZD40GdHEe24LcnSyvVffw" base_Element="_SZDRw2dHEe24LcnSyvVffw">
    <annotations xmi:id="_SZD40WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZD402dHEe24LcnSyvVffw" base_Element="_SZD40mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZD41mdHEe24LcnSyvVffw" base_Element="_SZD41GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZEf4GdHEe24LcnSyvVffw" base_Element="_SZD41GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZEf4WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZEf42dHEe24LcnSyvVffw" base_Element="_SZEf4mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZFG8GdHEe24LcnSyvVffw" base_Element="_SZEf5GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZFG8WdHEe24LcnSyvVffw" base_Element="_SZEf5GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZFG8mdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZFuAGdHEe24LcnSyvVffw" base_Element="_SZFG82dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZFuA2dHEe24LcnSyvVffw" base_Element="_SZFuAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZFuBGdHEe24LcnSyvVffw" base_Element="_SZFuAWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZFuBWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZGVEGdHEe24LcnSyvVffw" base_Element="_SZFuBmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZGVE2dHEe24LcnSyvVffw" base_Element="_SZGVEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZGVFGdHEe24LcnSyvVffw" base_Element="_SZGVEWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZGVFWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZG8IWdHEe24LcnSyvVffw" base_Element="_SZGVFmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZG8ImdHEe24LcnSyvVffw" base_Element="_SZGVFmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZG8I2dHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZG8JmdHEe24LcnSyvVffw" base_Element="_SZG8JGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZHjMGdHEe24LcnSyvVffw" base_Element="_SZG8JGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZHjMWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZHjNGdHEe24LcnSyvVffw" base_Element="_SZHjMmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZHjNWdHEe24LcnSyvVffw" base_Element="_SZHjMmdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZHjNmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZMbsGdHEe24LcnSyvVffw" base_Element="_SZL0oGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZMbsmdHEe24LcnSyvVffw" base_Element="_SZMbsWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZNCwGdHEe24LcnSyvVffw" base_Element="_SZMbs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZNCwmdHEe24LcnSyvVffw" base_Element="_SZNCwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZOQ4mdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_SZOQ4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZSiUWdHEe24LcnSyvVffw" base_Element="_SZSiUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZTJYmdHEe24LcnSyvVffw" base_Element="_SZTJYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZTJY2dHEe24LcnSyvVffw" base_Element="_SZTJYGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZTJZGdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZTwcGdHEe24LcnSyvVffw" base_Element="_SZTJZWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZTwcWdHEe24LcnSyvVffw" base_Element="_SZTJZWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZTwcmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZTwdGdHEe24LcnSyvVffw" base_Element="_SZTwc2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZUXgGdHEe24LcnSyvVffw" base_Element="_SZTwdWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZUXgWdHEe24LcnSyvVffw" base_Element="_SZTwdWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZUXgmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZUXhGdHEe24LcnSyvVffw" base_Element="_SZUXg2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZU-kGdHEe24LcnSyvVffw" base_Element="_SZUXhWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZU-kWdHEe24LcnSyvVffw" base_Element="_SZUXhWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZU-kmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZVloGdHEe24LcnSyvVffw" base_Element="_SZU-k2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZWMsGdHEe24LcnSyvVffw" base_Element="_SZVloWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZWMsWdHEe24LcnSyvVffw" base_Element="_SZVloWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZWMsmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZWzwGdHEe24LcnSyvVffw" base_Element="_SZWMs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZXa0GdHEe24LcnSyvVffw" base_Element="_SZWzwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZXa0WdHEe24LcnSyvVffw" base_Element="_SZWzwWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZXa0mdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZYB4GdHEe24LcnSyvVffw" base_Element="_SZXa02dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZYB42dHEe24LcnSyvVffw" base_Element="_SZYB4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZYB5GdHEe24LcnSyvVffw" base_Element="_SZYB4WdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZYB5WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SZZ3EWdHEe24LcnSyvVffw" base_Element="_SZZ3EGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZaeIWdHEe24LcnSyvVffw" base_Element="_SZaeIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZbFMGdHEe24LcnSyvVffw" base_Element="_SZaeImdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZbsQGdHEe24LcnSyvVffw" base_Element="_SZbFMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZbsQmdHEe24LcnSyvVffw" base_Element="_SZbsQWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZfWoWdHEe24LcnSyvVffw" base_Element="_SZfWoGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZf9sGdHEe24LcnSyvVffw" base_Element="_SZfWomdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZwcYWdHEe24LcnSyvVffw" genericsValue="T, E" base_Element="_SZwcYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZxDcmdHEe24LcnSyvVffw" base_Element="_SZxDcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZxqgGdHEe24LcnSyvVffw" genericsValue="Activation" base_Element="_SZxDc2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZy4oGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SZyRkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZzfsGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZy4omdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ0GwGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZzfsmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ0Gw2dHEe24LcnSyvVffw" genericsValue="ScheduleTime" base_Element="_SZ0GwmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ178GdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZ1U4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ3KFGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SZ2jAmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ3xIGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZ2jA2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ4YMGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZ3xI2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ4_QGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZ4YMmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ5mUWdHEe24LcnSyvVffw" genericsValue="Activation" base_Element="_SZ5mUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZ6NY2dHEe24LcnSyvVffw" base_Element="_SZ6NYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ60cGdHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SZ6NYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZ60cWdHEe24LcnSyvVffw" base_Element="_SZ6NYGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZ60cmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SZ7bgGdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SZ60c2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SZ8CkGdHEe24LcnSyvVffw" base_Element="_SZ7bgWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SZ8poGdHEe24LcnSyvVffw" base_Element="_SZ8CkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SZ8poWdHEe24LcnSyvVffw" base_Element="_SZ8CkWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SZ8pomdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SZ9QsGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SZ8po2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ93wGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SZ9QsWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SZ_F4WdHEe24LcnSyvVffw" genericsValue="Flow" base_Element="_SZ_F4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaAUAmdHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SaAUAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaA7EGdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_SaAUBGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SaCwQWdHEe24LcnSyvVffw" base_Element="_SaCwQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaElcWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaElcGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SaFMhGdHEe24LcnSyvVffw" base_Element="_SaFMgGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SaFzkGdHEe24LcnSyvVffw" base_Element="_SaFMgGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SaFzkWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SaFzk2dHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaFzkmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SaGapGdHEe24LcnSyvVffw" base_Element="_SaGaoGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SaGapWdHEe24LcnSyvVffw" base_Element="_SaGaoGdHEe24LcnSyvVffw">
    <annotations xmi:id="_SaGapmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SaHBsWdHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SaHBsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaIP0GdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaHowGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SaIP1WdHEe24LcnSyvVffw" base_Element="_SaIP0WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SaI24GdHEe24LcnSyvVffw" base_Element="_SaIP0WdHEe24LcnSyvVffw">
    <annotations xmi:id="_SaI24WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SaJd82dHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SaJd8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Array xmi:id="_SaKFAGdHEe24LcnSyvVffw" base_Element="_SaJd9GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaKFAWdHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SaJd9WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SaKsEWdHEe24LcnSyvVffw" base_Element="_SaKsEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaL6MGdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaLTI2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SaMhQGdHEe24LcnSyvVffw" base_Element="_SaL6MWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SaMhQWdHEe24LcnSyvVffw" base_Element="_SaL6MWdHEe24LcnSyvVffw">
    <annotations xmi:id="_SaMhQmdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_SaNIUGdHEe24LcnSyvVffw" base_Element="_SaMhQ2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaO9gmdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SaOWd2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SaPkk2dHEe24LcnSyvVffw" base_Element="_SaPkkmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaRZwWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaRZwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SaSA1GdHEe24LcnSyvVffw" base_Element="_SaSA0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_SaSn4GdHEe24LcnSyvVffw" base_Element="_SaSA0GdHEe24LcnSyvVffw">
    <annotations xmi:id="_SaSn4WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SaUdEWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaUdEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaVEJGdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaVEIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaVrNWdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaVrMGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaWSQGdHEe24LcnSyvVffw" genericsValue="T" base_Element="_SaVrMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SaXgYGdHEe24LcnSyvVffw" genericsValue="E" base_Element="_SaW5VWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SaYHcGdHEe24LcnSyvVffw" base_Element="_SaXgYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SaYugWdHEe24LcnSyvVffw" base_Element="_SaYugGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_SaZ8oWdHEe24LcnSyvVffw" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_SaZVlGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SaZ8omdHEe24LcnSyvVffw" base_Element="_SaZVlGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SacY4mdHEe24LcnSyvVffw" base_Element="_Sabx0WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SacY42dHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SacY4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Annotations xmi:id="_Sac_8GdHEe24LcnSyvVffw" base_Element="_Sabx0WdHEe24LcnSyvVffw">
    <annotations xmi:id="_Sac_8WdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_SahRZWdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_SahRYGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SakUsGdHEe24LcnSyvVffw" base_Element="_SajtoWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SayXIGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SaxwEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_Say-MGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SayXIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SazlQGdHEe24LcnSyvVffw" genericsValue="ScheduleTime" base_Element="_Say-MWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa2okGdHEe24LcnSyvVffw" base_Element="_Sa2BgmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa2okmdHEe24LcnSyvVffw" base_Element="_Sa2okWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa3PoWdHEe24LcnSyvVffw" base_Element="_Sa3PoGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa32sWdHEe24LcnSyvVffw" base_Element="_Sa32sGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa5E0WdHEe24LcnSyvVffw" base_Element="_Sa5E0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa5r4GdHEe24LcnSyvVffw" base_Element="_Sa5E0mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa66AGdHEe24LcnSyvVffw" base_Element="_Sa6S8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa66AmdHEe24LcnSyvVffw" base_Element="_Sa66AWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_Sa7hEWdHEe24LcnSyvVffw" genericsValue="ChannelSet" base_Element="_Sa7hEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa8IIGdHEe24LcnSyvVffw" base_Element="_Sa7hEGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa9WQWdHEe24LcnSyvVffw" base_Element="_Sa8vMGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_Sa_LcGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_Sa-kYmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sa_ygGdHEe24LcnSyvVffw" base_Element="_Sa-kYmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbAZkGdHEe24LcnSyvVffw" base_Element="_Sa_ygWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbBAoGdHEe24LcnSyvVffw" genericsValue="String" base_Element="_SbAZkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbBAoWdHEe24LcnSyvVffw" base_Element="_SbAZkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbBnsWdHEe24LcnSyvVffw" base_Element="_SbBnsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbCOwGdHEe24LcnSyvVffw" base_Element="_SbBnsmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbED8GdHEe24LcnSyvVffw" base_Element="_SbDc4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbErAGdHEe24LcnSyvVffw" base_Element="_SbED8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbErAmdHEe24LcnSyvVffw" base_Element="_SbErAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbFSEGdHEe24LcnSyvVffw" base_Element="_SbErA2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbJjg2dHEe24LcnSyvVffw" base_Element="_SbJjgmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbLYtmdHEe24LcnSyvVffw" base_Element="_SbLYtGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbL_wWdHEe24LcnSyvVffw" base_Element="_SbL_wGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbL_w2dHEe24LcnSyvVffw" base_Element="_SbL_wmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbMm0GdHEe24LcnSyvVffw" genericsValue="Node" base_Element="_SbL_xGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbMm0WdHEe24LcnSyvVffw" base_Element="_SbL_xGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbNN4WdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_SbNN4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbN08GdHEe24LcnSyvVffw" base_Element="_SbNN4GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbOcAGdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_SbN08WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbPqIGdHEe24LcnSyvVffw" base_Element="_SbN08WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbQRMGdHEe24LcnSyvVffw" base_Element="_SbPqIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbQ4QGdHEe24LcnSyvVffw" base_Element="_SbQRMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbTUgmdHEe24LcnSyvVffw" base_Element="_SbTUgWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbT7kWdHEe24LcnSyvVffw" base_Element="_SbT7kGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbUioGdHEe24LcnSyvVffw" base_Element="_SbT7kmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbVJsGdHEe24LcnSyvVffw" base_Element="_SbUioWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbVJsmdHEe24LcnSyvVffw" base_Element="_SbVJsWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbVwwGdHEe24LcnSyvVffw" base_Element="_SbVJs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbW-4GdHEe24LcnSyvVffw" base_Element="_SbWX0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbXl8mdHEe24LcnSyvVffw" base_Element="_SbXl8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbYNAWdHEe24LcnSyvVffw" base_Element="_SbYNAGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbY0EGdHEe24LcnSyvVffw" base_Element="_SbYNAmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbaCMGdHEe24LcnSyvVffw" base_Element="_SbZbIGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbapQGdHEe24LcnSyvVffw" base_Element="_SbaCMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbbQUGdHEe24LcnSyvVffw" base_Element="_SbapQmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbbQUmdHEe24LcnSyvVffw" base_Element="_SbbQUWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbb3YWdHEe24LcnSyvVffw" base_Element="_Sbb3YGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbb3Y2dHEe24LcnSyvVffw" base_Element="_Sbb3YmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbcecGdHEe24LcnSyvVffw" genericsValue="String, Integer" base_Element="_Sbb3ZGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbdFgGdHEe24LcnSyvVffw" base_Element="_Sbb3ZGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbeToGdHEe24LcnSyvVffw" base_Element="_Sbdsk2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbfhwGdHEe24LcnSyvVffw" base_Element="_Sbe6sGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbhW8GdHEe24LcnSyvVffw" genericsValue="Edge" base_Element="_Sbgv4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbjzMGdHEe24LcnSyvVffw" base_Element="_SbjMI2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbkaQWdHEe24LcnSyvVffw" base_Element="_SbkaQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbloYGdHEe24LcnSyvVffw" base_Element="_SbkaQmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbmPcmdHEe24LcnSyvVffw" base_Element="_SbloYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbm2gGdHEe24LcnSyvVffw" base_Element="_SbmPc2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_Sbm2gmdHEe24LcnSyvVffw" genericsValue="Activation" base_Element="_Sbm2gWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbndkGdHEe24LcnSyvVffw" base_Element="_Sbm2gWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_SbndkmdHEe24LcnSyvVffw" genericsValue="String, Integer" base_Element="_SbndkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SborsGdHEe24LcnSyvVffw" base_Element="_SbndkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SborsmdHEe24LcnSyvVffw" base_Element="_SborsWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbqg4mdHEe24LcnSyvVffw" base_Element="_Sbqg4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbrH8GdHEe24LcnSyvVffw" base_Element="_Sbqg42dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbrH8mdHEe24LcnSyvVffw" base_Element="_SbrH8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbrvAGdHEe24LcnSyvVffw" base_Element="_SbrH82dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbrvAmdHEe24LcnSyvVffw" base_Element="_SbrvAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbsWEGdHEe24LcnSyvVffw" base_Element="_SbrvA2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbsWEmdHEe24LcnSyvVffw" base_Element="_SbsWEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbs9IGdHEe24LcnSyvVffw" base_Element="_SbsWE2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbs9ImdHEe24LcnSyvVffw" base_Element="_Sbs9IWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbs9JGdHEe24LcnSyvVffw" base_Element="_Sbs9I2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbtkMWdHEe24LcnSyvVffw" base_Element="_SbtkMGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbtkM2dHEe24LcnSyvVffw" base_Element="_SbtkMmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbuLQWdHEe24LcnSyvVffw" base_Element="_SbuLQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbvZY2dHEe24LcnSyvVffw" base_Element="_SbvZYmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbwAcGdHEe24LcnSyvVffw" base_Element="_SbvZZGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbwAcmdHEe24LcnSyvVffw" base_Element="_SbwAcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sbx1oWdHEe24LcnSyvVffw" base_Element="_Sbx1oGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbycsGdHEe24LcnSyvVffw" base_Element="_Sbx1omdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbzDwGdHEe24LcnSyvVffw" base_Element="_Sbycs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_SbzDwmdHEe24LcnSyvVffw" base_Element="_SbzDwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb0R4GdHEe24LcnSyvVffw" base_Element="_Sbzq1WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb0R4mdHEe24LcnSyvVffw" base_Element="_Sb0R4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb048GdHEe24LcnSyvVffw" base_Element="_Sb0R42dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb048mdHEe24LcnSyvVffw" base_Element="_Sb048WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb049GdHEe24LcnSyvVffw" base_Element="_Sb0482dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb1gAGdHEe24LcnSyvVffw" base_Element="_Sb049WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb1gAmdHEe24LcnSyvVffw" base_Element="_Sb1gAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb1gBGdHEe24LcnSyvVffw" base_Element="_Sb1gA2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb38QGdHEe24LcnSyvVffw" base_Element="_Sb3VMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb38QmdHEe24LcnSyvVffw" base_Element="_Sb38QWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb4jUGdHEe24LcnSyvVffw" base_Element="_Sb38Q2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb4jUmdHEe24LcnSyvVffw" base_Element="_Sb4jUWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb5KYGdHEe24LcnSyvVffw" base_Element="_Sb4jU2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb5KYmdHEe24LcnSyvVffw" base_Element="_Sb5KYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb5xcGdHEe24LcnSyvVffw" base_Element="_Sb5KY2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb5xc2dHEe24LcnSyvVffw" base_Element="_Sb5xcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb6YgGdHEe24LcnSyvVffw" base_Element="_Sb5xdGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb6_kGdHEe24LcnSyvVffw" base_Element="_Sb6YgWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb6_kmdHEe24LcnSyvVffw" base_Element="_Sb6_kWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb7moGdHEe24LcnSyvVffw" base_Element="_Sb6_k2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb8NsWdHEe24LcnSyvVffw" base_Element="_Sb8NsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb80wGdHEe24LcnSyvVffw" base_Element="_Sb8NsmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb9b02dHEe24LcnSyvVffw" base_Element="_Sb9b0mdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb-C4GdHEe24LcnSyvVffw" base_Element="_Sb9b1GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb-C4mdHEe24LcnSyvVffw" base_Element="_Sb-C4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb_RAGdHEe24LcnSyvVffw" base_Element="_Sb-p8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb_RAmdHEe24LcnSyvVffw" base_Element="_Sb_RAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb_4EGdHEe24LcnSyvVffw" base_Element="_Sb_RA2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Sb_4EmdHEe24LcnSyvVffw" base_Element="_Sb_4EWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScAfIGdHEe24LcnSyvVffw" base_Element="_Sb_4E2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScAfImdHEe24LcnSyvVffw" base_Element="_ScAfIWdHEe24LcnSyvVffw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ScBGMGdHEe24LcnSyvVffw" name="getNumChannels" method="_SdPOPGdHEe24LcnSyvVffw">
      <ownedParameter xmi:id="_ScBGMWdHEe24LcnSyvVffw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_ScBtQGdHEe24LcnSyvVffw" base_Element="_ScBGMGdHEe24LcnSyvVffw">
    <annotations xmi:id="_ScBtQWdHEe24LcnSyvVffw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScBtRGdHEe24LcnSyvVffw" base_Element="_ScBtQmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScCUUWdHEe24LcnSyvVffw" base_Element="_ScBtRWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScEJhGdHEe24LcnSyvVffw" base_Element="_ScEJgmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScEwlGdHEe24LcnSyvVffw" base_Element="_ScEwkmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScF-sGdHEe24LcnSyvVffw" base_Element="_ScFXomdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_ScF-smdHEe24LcnSyvVffw" genericsValue="String" base_Element="_ScF-sWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_ScGlwWdHEe24LcnSyvVffw" genericsValue="String" base_Element="_ScGlwGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScJCBmdHEe24LcnSyvVffw" base_Element="_ScJCBGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScKQIGdHEe24LcnSyvVffw" base_Element="_ScJpEmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_ScK3MGdHEe24LcnSyvVffw" genericsValue="InstructionParameters" base_Element="_ScKQIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScK3MWdHEe24LcnSyvVffw" base_Element="_ScKQIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScLeQGdHEe24LcnSyvVffw" base_Element="_ScK3MmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScNTcWdHEe24LcnSyvVffw" base_Element="_ScNTcGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScN6gGdHEe24LcnSyvVffw" base_Element="_ScNTcmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScN6gmdHEe24LcnSyvVffw" base_Element="_ScN6gWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScOhkGdHEe24LcnSyvVffw" base_Element="_ScN6g2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScOhkmdHEe24LcnSyvVffw" base_Element="_ScOhkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScPIoGdHEe24LcnSyvVffw" base_Element="_ScOhk2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScPIomdHEe24LcnSyvVffw" base_Element="_ScPIoWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScPvsGdHEe24LcnSyvVffw" base_Element="_ScPIo2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScPvsmdHEe24LcnSyvVffw" base_Element="_ScPvsWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScQWwGdHEe24LcnSyvVffw" base_Element="_ScPvs2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScQWwmdHEe24LcnSyvVffw" base_Element="_ScQWwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScQ90GdHEe24LcnSyvVffw" base_Element="_ScQWw2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScQ90mdHEe24LcnSyvVffw" base_Element="_ScQ90WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScRk4GdHEe24LcnSyvVffw" base_Element="_ScQ902dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScRk4mdHEe24LcnSyvVffw" base_Element="_ScRk4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScSL8GdHEe24LcnSyvVffw" base_Element="_ScRk42dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScSL8mdHEe24LcnSyvVffw" base_Element="_ScSL8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScUoMGdHEe24LcnSyvVffw" base_Element="_ScUBI2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScVPQWdHEe24LcnSyvVffw" base_Element="_ScVPQGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScV2UGdHEe24LcnSyvVffw" base_Element="_ScVPQmdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScWdYGdHEe24LcnSyvVffw" base_Element="_ScV2UWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_ScXEcmdHEe24LcnSyvVffw" genericsValue="Integer" base_Element="_ScXEcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ScXrgGdHEe24LcnSyvVffw" base_Element="_ScXEcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Generics xmi:id="_ScXrgmdHEe24LcnSyvVffw" genericsValue="SchedulableObject" base_Element="_ScXrgWdHEe24LcnSyvVffw"/>
  <uml:OpaqueBehavior xmi:id="_SdPOPGdHEe24LcnSyvVffw" name="getNumChannels" specification="_ScBGMGdHEe24LcnSyvVffw">
    <ownedParameter xmi:id="_SdPOPWdHEe24LcnSyvVffw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_SeCfcGdHEe24LcnSyvVffw" base_Element="_SeBRUGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeDGgGdHEe24LcnSyvVffw" base_Element="_SeCfcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeDtkGdHEe24LcnSyvVffw" base_Element="_SeDGgWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeDtk2dHEe24LcnSyvVffw" base_Element="_SeDtkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeEUoGdHEe24LcnSyvVffw" base_Element="_SeDtlGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeE7sGdHEe24LcnSyvVffw" base_Element="_SeEUoWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeFiwGdHEe24LcnSyvVffw" base_Element="_SeE7sWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeFiw2dHEe24LcnSyvVffw" base_Element="_SeFiwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeGJ0mdHEe24LcnSyvVffw" base_Element="_SeGJ0GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeGw4GdHEe24LcnSyvVffw" base_Element="_SeGJ02dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeGw42dHEe24LcnSyvVffw" base_Element="_SeGw4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeHX8GdHEe24LcnSyvVffw" base_Element="_SeGw5GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeH_AGdHEe24LcnSyvVffw" base_Element="_SeHX8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeH_A2dHEe24LcnSyvVffw" base_Element="_SeH_AWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeImEGdHEe24LcnSyvVffw" base_Element="_SeH_BGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeJNIGdHEe24LcnSyvVffw" base_Element="_SeImEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeJNI2dHEe24LcnSyvVffw" base_Element="_SeJNIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeJ0MGdHEe24LcnSyvVffw" base_Element="_SeJNJGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeKbQGdHEe24LcnSyvVffw" base_Element="_SeJ0MWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeLCUGdHEe24LcnSyvVffw" base_Element="_SeKbQWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeLCU2dHEe24LcnSyvVffw" base_Element="_SeLCUWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeLpYGdHEe24LcnSyvVffw" base_Element="_SeLCVGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeLpY2dHEe24LcnSyvVffw" base_Element="_SeLpYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeMQcmdHEe24LcnSyvVffw" base_Element="_SeMQcGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeM3gGdHEe24LcnSyvVffw" base_Element="_SeMQc2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeM3g2dHEe24LcnSyvVffw" base_Element="_SeM3gWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeNekmdHEe24LcnSyvVffw" base_Element="_SeNekGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeOFoGdHEe24LcnSyvVffw" base_Element="_SeNek2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeOssGdHEe24LcnSyvVffw" base_Element="_SeOFoWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeOss2dHEe24LcnSyvVffw" base_Element="_SeOssWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SePTwGdHEe24LcnSyvVffw" base_Element="_SeOstGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SePTw2dHEe24LcnSyvVffw" base_Element="_SePTwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeP60mdHEe24LcnSyvVffw" base_Element="_SeP60GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeQh4GdHEe24LcnSyvVffw" base_Element="_SeP602dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeRI8GdHEe24LcnSyvVffw" base_Element="_SeQh4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeRI82dHEe24LcnSyvVffw" base_Element="_SeRI8WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeRwAGdHEe24LcnSyvVffw" base_Element="_SeRI9GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeSXEGdHEe24LcnSyvVffw" base_Element="_SeRwAWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeSXE2dHEe24LcnSyvVffw" base_Element="_SeSXEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeS-ImdHEe24LcnSyvVffw" base_Element="_SeS-IGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeTlMGdHEe24LcnSyvVffw" base_Element="_SeS-I2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeUMQGdHEe24LcnSyvVffw" base_Element="_SeTlMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeUMQ2dHEe24LcnSyvVffw" base_Element="_SeUMQWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeUzUGdHEe24LcnSyvVffw" base_Element="_SeUMRGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeVaYGdHEe24LcnSyvVffw" base_Element="_SeUzUWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeVaY2dHEe24LcnSyvVffw" base_Element="_SeVaYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeWBcGdHEe24LcnSyvVffw" base_Element="_SeVaZGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeWogGdHEe24LcnSyvVffw" base_Element="_SeWBcWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeWog2dHEe24LcnSyvVffw" base_Element="_SeWogWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeXPkGdHEe24LcnSyvVffw" base_Element="_SeWohGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeX2oGdHEe24LcnSyvVffw" base_Element="_SeXPkWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeX2o2dHEe24LcnSyvVffw" base_Element="_SeX2oWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeZEwGdHEe24LcnSyvVffw" base_Element="_SeYdsGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeZEw2dHEe24LcnSyvVffw" base_Element="_SeZEwWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeZr0GdHEe24LcnSyvVffw" base_Element="_SeZExGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeZr02dHEe24LcnSyvVffw" base_Element="_SeZr0WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeaS4GdHEe24LcnSyvVffw" base_Element="_SeZr1GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeaS42dHEe24LcnSyvVffw" base_Element="_SeaS4WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_Sea58GdHEe24LcnSyvVffw" base_Element="_SeaS5GdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_Sea582dHEe24LcnSyvVffw" base_Element="_Sea58WdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SebhAmdHEe24LcnSyvVffw" base_Element="_SebhAGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SecIEGdHEe24LcnSyvVffw" base_Element="_SebhA2dHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SecIE2dHEe24LcnSyvVffw" base_Element="_SecIEWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SecvIGdHEe24LcnSyvVffw" base_Element="_SecIFGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SecvI2dHEe24LcnSyvVffw" base_Element="_SecvIWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SedWMGdHEe24LcnSyvVffw" base_Element="_SecvJGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_Sed9QGdHEe24LcnSyvVffw" base_Element="_SedWMWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_Sed9Q2dHEe24LcnSyvVffw" base_Element="_Sed9QWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SeekUGdHEe24LcnSyvVffw" base_Element="_Sed9RGdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SefLYGdHEe24LcnSyvVffw" base_Element="_SeekUWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Reference xmi:id="_SefLY2dHEe24LcnSyvVffw" base_Element="_SefLYWdHEe24LcnSyvVffw"/>
  <UMLLabProfile:Patch xmi:id="_TQkIkGdHEe24LcnSyvVffw" base_Element="_SHPJAGdHEe24LcnSyvVffw" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_TQlWsGdHEe24LcnSyvVffw" base_Element="_SIAlEGdHEe24LcnSyvVffw" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_TQl9wGdHEe24LcnSyvVffw" base_Element="_SJ40YGdHEe24LcnSyvVffw" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_TQmk0GdHEe24LcnSyvVffw" base_Element="_SKAJIGdHEe24LcnSyvVffw" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
