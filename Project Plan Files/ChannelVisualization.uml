<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_uPjBoF3-Ee2F0PVRnb5fbg" name="ChannelVisualization">
    <eAnnotations xmi:id="_wbnQkF3-Ee2F0PVRnb5fbg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_wbn3oF3-Ee2F0PVRnb5fbg" source="codegen">
        <details xmi:id="_wbn3oV3-Ee2F0PVRnb5fbg" key="codegenDirectory" value="/cs2820-fall22/src"/>
        <details xmi:id="_1k4QcF3-Ee2F0PVRnb5fbg" key="AssociatedSourceCode" value="/cs2820-fall22/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall22/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelAnalysis.java;2040859700/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Channels.java;105405152/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelsTest.java;3718395581/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall22/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FileManager.java;2522714670/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Flow.java;889275975/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall22/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Program.java;1200693028/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramVisualization.java;867879725/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;384175461/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;2067458194/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1561738288/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationObject.java;823199562/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoad.java;727085344/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1981400958/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Warp.java;418770348/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadTest.java;2456256290/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_yB2OkF3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_yB2OkV3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_yB2Okl3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_yB2Ok13-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_yB21oF3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_yB21oV3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_yB21ol3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_yB21o13-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_yB3csF3-Ee2F0PVRnb5fbg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_x_BkEF3-Ee2F0PVRnb5fbg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_x_CLIF3-Ee2F0PVRnb5fbg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_x_CLIV3-Ee2F0PVRnb5fbg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_x_KG8F3-Ee2F0PVRnb5fbg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_yCHUUF3-Ee2F0PVRnb5fbg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_ytOG0F3-Ee2F0PVRnb5fbg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_yD3n0F3-Ee2F0PVRnb5fbg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_yuqRQF3-Ee2F0PVRnb5fbg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_yD-VgF3-Ee2F0PVRnb5fbg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_yut7oF3-Ee2F0PVRnb5fbg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_yuuisV3-Ee2F0PVRnb5fbg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yJ7zkF3-Ee2F0PVRnb5fbg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_ywp1UF3-Ee2F0PVRnb5fbg" general="_yrnkUF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzbcgF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yzbcgV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2Z4AF3-Ee2F0PVRnb5fbg" name="AbstractMap" specification="_yKEWcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2afEF3-Ee2F0PVRnb5fbg" type="_yJ7zkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yKEWcF3-Ee2F0PVRnb5fbg" name="AbstractMap" method="_y2Z4AF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yKGLoF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yKGysF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yKGysV3-Ee2F0PVRnb5fbg" type="_yJ7zkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yKIn4F3-Ee2F0PVRnb5fbg" name="Activation">
              <generalization xmi:id="_yr7tYF3-Ee2F0PVRnb5fbg" general="_yT5n4F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzcDkF3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg" isReadOnly="true" association="_y5DjYF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzdRsF3-Ee2F0PVRnb5fbg" name="edges" type="_yrr1wF3-Ee2F0PVRnb5fbg" isReadOnly="true" association="_y5FYkF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzef0F3-Ee2F0PVRnb5fbg" name="additionalScheduleTimes" type="_yrr1wF3-Ee2F0PVRnb5fbg" isReadOnly="true" association="_y5GmsV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzfG4V3-Ee2F0PVRnb5fbg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yzft8F3-Ee2F0PVRnb5fbg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ywsRkF3-Ee2F0PVRnb5fbg" client="_yKIn4F3-Ee2F0PVRnb5fbg" supplier="_ywrDcV3-Ee2F0PVRnb5fbg" contract="_ywrDcV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2glsF3-Ee2F0PVRnb5fbg" name="Activation" specification="_yKLEIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2glsV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2glsl3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2hMwF3-Ee2F0PVRnb5fbg" name="Activation" specification="_yrwuQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2hMwV3-Ee2F0PVRnb5fbg" name="elem" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2hMwl3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2hMw13-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2hMxF3-Ee2F0PVRnb5fbg" name="clone" specification="_yKNgYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2hMxV3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2hz0F3-Ee2F0PVRnb5fbg" name="getEdgesByReleaseTime" specification="_yKRKwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2hz0V3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ia4F3-Ee2F0PVRnb5fbg" name="getEdgesByLatestReleaseTime" specification="_yKUOEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ia4V3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ia4l3-Ee2F0PVRnb5fbg" name="getEdgesByPeriod" specification="_yKX4cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ia413-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2jB8F3-Ee2F0PVRnb5fbg" name="getEdgesByDeadline" specification="_yKaUsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2jB8V3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2jB8l3-Ee2F0PVRnb5fbg" name="getEdgesByPriority" specification="_yKcw8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2jB813-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2jpAF3-Ee2F0PVRnb5fbg" name="addEdges" specification="_ywuGwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2jpAV3-Ee2F0PVRnb5fbg" name="edges" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2jpAl3-Ee2F0PVRnb5fbg" name="addEdge" specification="_yrzKgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2jpA13-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2jpBF3-Ee2F0PVRnb5fbg" name="increaseEdgePhases" specification="_yKf0QF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2jpBV3-Ee2F0PVRnb5fbg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2kQEF3-Ee2F0PVRnb5fbg" name="updatePriorityAndRelease" specification="_yKgbUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2kQEV3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2kQEl3-Ee2F0PVRnb5fbg" name="addConflict" specification="_yKhpcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2kQE13-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2k3IF3-Ee2F0PVRnb5fbg" name="addConflicts" specification="_ywvU4V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2k3IV3-Ee2F0PVRnb5fbg" name="conflicts" type="_yrvgIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2k3Il3-Ee2F0PVRnb5fbg" name="addCoordinator" specification="_yKiQgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2k3I13-Ee2F0PVRnb5fbg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2k3JF3-Ee2F0PVRnb5fbg" name="addCoordinators" specification="_ywwjAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2k3JV3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2leMF3-Ee2F0PVRnb5fbg" name="addScheduleTimes" specification="_ywxxIV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2leMV3-Ee2F0PVRnb5fbg" name="scheduleTime" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2leMl3-Ee2F0PVRnb5fbg" name="getNextScheduleTime" specification="_yKkswF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2leM13-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2leNF3-Ee2F0PVRnb5fbg" type="_yQzQkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2mFQF3-Ee2F0PVRnb5fbg" name="getMatchingEndTime" specification="_yKl64F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2mFQV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2mFQl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2mFQ13-Ee2F0PVRnb5fbg" name="getNextStartTime" specification="_yKmh8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2mFRF3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2mFRV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2mFRl3-Ee2F0PVRnb5fbg" name="getNextEndTime" specification="_yKnJAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2mFR13-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2msUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2msUV3-Ee2F0PVRnb5fbg" name="getNumEdges" specification="_yKnwEV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2msUl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2nTYF3-Ee2F0PVRnb5fbg" name="compareTo" specification="_yr0_sF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2nTYV3-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2nTYl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2nTY13-Ee2F0PVRnb5fbg" name="conflictExists" specification="_yr2N0l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2nTZF3-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2nTZV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2n6cF3-Ee2F0PVRnb5fbg" name="canCombine" specification="_yr204l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2n6cV3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2n6cl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2n6c13-Ee2F0PVRnb5fbg" name="getDelta" specification="_yKplQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2n6dF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2n6dV3-Ee2F0PVRnb5fbg" name="getExecutionDuration" specification="_yKqzYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ohgF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ohgV3-Ee2F0PVRnb5fbg" name="getCombinedExecutionDuration" specification="_yr3b8l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ohgl3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2ohg13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ohhF3-Ee2F0PVRnb5fbg" name="printAll" specification="_yKsBgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ohhV3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ohhl3-Ee2F0PVRnb5fbg" name="printAll" specification="_yKsokF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2pIkF3-Ee2F0PVRnb5fbg" name="printEdges" specification="_yr4DAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2pIkV3-Ee2F0PVRnb5fbg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2pIkl3-Ee2F0PVRnb5fbg" name="edges" type="_yPx84F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2pIk13-Ee2F0PVRnb5fbg" name="printEdges" specification="_yr54MV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2pIlF3-Ee2F0PVRnb5fbg" name="edges" type="_yPx84F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yKLEIF3-Ee2F0PVRnb5fbg" name="Activation" visibility="package" method="_y2glsF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yKMSQF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yKMSQV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yKLEIV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yKMSQl3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKNgYF3-Ee2F0PVRnb5fbg" name="clone" method="_y2hMxF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yrx8YF3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKRKwF3-Ee2F0PVRnb5fbg" name="getEdgesByReleaseTime" method="_y2hz0F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4KLgF3-Ee2F0PVRnb5fbg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yrx8YV3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKUOEF3-Ee2F0PVRnb5fbg" name="getEdgesByLatestReleaseTime" method="_y2ia4F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4KykF3-Ee2F0PVRnb5fbg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yrx8Yl3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKX4cF3-Ee2F0PVRnb5fbg" name="getEdgesByPeriod" method="_y2ia4l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4KykV3-Ee2F0PVRnb5fbg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_yryjcF3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKaUsF3-Ee2F0PVRnb5fbg" name="getEdgesByDeadline" method="_y2jB8F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Kykl3-Ee2F0PVRnb5fbg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_yryjcV3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKcw8F3-Ee2F0PVRnb5fbg" name="getEdgesByPriority" method="_y2jB8l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Kyk13-Ee2F0PVRnb5fbg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yryjcl3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKf0QF3-Ee2F0PVRnb5fbg" name="increaseEdgePhases" method="_y2jpBF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4KylF3-Ee2F0PVRnb5fbg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yKf0QV3-Ee2F0PVRnb5fbg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKgbUF3-Ee2F0PVRnb5fbg" name="updatePriorityAndRelease" method="_y2kQEF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4KylV3-Ee2F0PVRnb5fbg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_yKgbUV3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKhpcF3-Ee2F0PVRnb5fbg" name="addConflict" method="_y2kQEl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yKhpcV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKiQgF3-Ee2F0PVRnb5fbg" name="addCoordinator" method="_y2k3Il3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yKiQgV3-Ee2F0PVRnb5fbg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKkswF3-Ee2F0PVRnb5fbg" name="getNextScheduleTime" method="_y2leMl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Kyl13-Ee2F0PVRnb5fbg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yKkswV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yr0YoF3-Ee2F0PVRnb5fbg" type="_yQzQkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yKl64F3-Ee2F0PVRnb5fbg" name="getMatchingEndTime" method="_y2mFQF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4LZoF3-Ee2F0PVRnb5fbg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yKl64V3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yKl64l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKmh8F3-Ee2F0PVRnb5fbg" name="getNextStartTime" method="_y2mFQ13-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4LZoV3-Ee2F0PVRnb5fbg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yKmh8V3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yKnJAF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKnJAV3-Ee2F0PVRnb5fbg" name="getNextEndTime" method="_y2mFRl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4LZol3-Ee2F0PVRnb5fbg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yKnJAl3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yKnwEF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKnwEV3-Ee2F0PVRnb5fbg" name="getNumEdges" method="_y2msUV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yKnwEl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKplQF3-Ee2F0PVRnb5fbg" name="getDelta" method="_y2n6c13-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4LZo13-Ee2F0PVRnb5fbg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yKqMUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKqzYF3-Ee2F0PVRnb5fbg" name="getExecutionDuration" method="_y2n6dV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yKqzYV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKsBgF3-Ee2F0PVRnb5fbg" name="printAll" method="_y2ohhF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yKsBgV3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yKsokF3-Ee2F0PVRnb5fbg" name="printAll" method="_y2ohhl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yrwuQF3-Ee2F0PVRnb5fbg" name="Activation" visibility="package" method="_y2hMwF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yrwuQ13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yrxVUF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yrwuQV3-Ee2F0PVRnb5fbg" name="elem" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yrwuQl3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yrxVUV3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yrzKgF3-Ee2F0PVRnb5fbg" name="addEdge" method="_y2jpAl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yrzKgV3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yr0_sF3-Ee2F0PVRnb5fbg" name="compareTo" method="_y2nTYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yr0_sV3-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yr0_sl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yr2N0l3-Ee2F0PVRnb5fbg" name="conflictExists" method="_y2nTY13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yr204F3-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yr204V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yr204l3-Ee2F0PVRnb5fbg" name="canCombine" method="_y2n6cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yr3b8F3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yr3b8V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yr3b8l3-Ee2F0PVRnb5fbg" name="getCombinedExecutionDuration" method="_y2ohgV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yr3b813-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yr4DAF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yr4DAV3-Ee2F0PVRnb5fbg" name="printEdges" visibility="private" method="_y2pIkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yr4DAl3-Ee2F0PVRnb5fbg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yr4qEF3-Ee2F0PVRnb5fbg" name="edges" type="_yPx84F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yr54MV3-Ee2F0PVRnb5fbg" name="printEdges" visibility="private" method="_y2pIk13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yr54Ml3-Ee2F0PVRnb5fbg" name="edges" type="_yPx84F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ywuGwF3-Ee2F0PVRnb5fbg" name="addEdges" method="_y2jpAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywuGwV3-Ee2F0PVRnb5fbg" name="edges" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ywvU4V3-Ee2F0PVRnb5fbg" name="addConflicts" method="_y2k3IF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywvU4l3-Ee2F0PVRnb5fbg" name="conflicts" type="_yrvgIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ywwjAV3-Ee2F0PVRnb5fbg" name="addCoordinators" method="_y2k3JF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywwjAl3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ywxxIV3-Ee2F0PVRnb5fbg" name="addScheduleTimes" method="_y2leMF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Kyll3-Ee2F0PVRnb5fbg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_ywxxIl3-Ee2F0PVRnb5fbg" name="scheduleTime" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yK9uUF3-Ee2F0PVRnb5fbg" name="Activations">
              <generalization xmi:id="_yr_XwF3-Ee2F0PVRnb5fbg" general="_yJ7zkF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzixQF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yzixQV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yK_jgF3-Ee2F0PVRnb5fbg" name="BasicPoset">
              <ownedComment xmi:id="_y4LZpF3-Ee2F0PVRnb5fbg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ysBM8F3-Ee2F0PVRnb5fbg" general="_yOeVUF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2pvoF3-Ee2F0PVRnb5fbg" name="BasicPoset" specification="_ysAl4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2pvoV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2pvol3-Ee2F0PVRnb5fbg" type="_yK_jgF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ysAl4F3-Ee2F0PVRnb5fbg" name="BasicPoset" visibility="package" method="_y2pvoF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysAl4l3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysAl413-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysAl4V3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysAl5F3-Ee2F0PVRnb5fbg" type="_yK_jgF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yLB_wF3-Ee2F0PVRnb5fbg" name="ChannelAnalysis">
              <ownedComment xmi:id="_y4LZpV3-Ee2F0PVRnb5fbg">
                <body>&lt;h1>Implementation of the ChannelAnalysis class&lt;/h1>&#xD;
Used to analyze either Program or WarpInterface by converting to program.&#xD;
Can be used to detect channel conflicts.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yzjYUF3-Ee2F0PVRnb5fbg" name="program" visibility="private" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5Ib4V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzj_YV3-Ee2F0PVRnb5fbg" name="programTable" visibility="private" type="_yPiFQF3-Ee2F0PVRnb5fbg" association="_y5KREF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzkmcV3-Ee2F0PVRnb5fbg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2qWsF3-Ee2F0PVRnb5fbg" name="ChannelAnalysis" specification="_ysB0AF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2qWsV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2qWsl3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this(warp.toProgram());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2qWs13-Ee2F0PVRnb5fbg" name="ChannelAnalysis" specification="_ysCbEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2qWtF3-Ee2F0PVRnb5fbg" name="program" type="_yO6aMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2qWtV3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2qWtl3-Ee2F0PVRnb5fbg" name="isChannelConflict" specification="_yLGRMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2qWt13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yLEcAF3-Ee2F0PVRnb5fbg" name="getChannelAnalysisTable">
                <ownedComment xmi:id="_y4LZqF3-Ee2F0PVRnb5fbg">
                  <body>Method to be implemented that gets channelAnalysisTable.&#xD;
   * &#xD;
   * @author eborchard&#xD;
   * @return ProgramSchedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_ysCbFV3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yLGRMF3-Ee2F0PVRnb5fbg" name="isChannelConflict" method="_y2qWtl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4LZqV3-Ee2F0PVRnb5fbg">
                  <body>Determines whether or not there is a channel conflict.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return boolean based on if there is a channel conflict or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLG4QF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ysB0AF3-Ee2F0PVRnb5fbg" name="ChannelAnalysis" visibility="package" method="_y2qWsF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysB0Al3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysB0A13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4LZpl3-Ee2F0PVRnb5fbg">
                  <body>Constructor that takes in a WarpInterface and converts it to a a program, calls the other &#xD;
   * class constructor with the Program object parameter then sets the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_ysB0AV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysB0BF3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysCbEF3-Ee2F0PVRnb5fbg" name="ChannelAnalysis" visibility="package" method="_y2qWs13-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysCbEl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysCbE13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4LZp13-Ee2F0PVRnb5fbg">
                  <body>Constructor to set the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param program The program to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_ysCbEV3-Ee2F0PVRnb5fbg" name="program" type="_yO6aMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysCbFF3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yLJUgF3-Ee2F0PVRnb5fbg" name="ChannelVisualization">
              <ownedComment xmi:id="_y4LZql3-Ee2F0PVRnb5fbg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ysDpNF3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzl0kF3-Ee2F0PVRnb5fbg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yzl0kV3-Ee2F0PVRnb5fbg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yzmboF3-Ee2F0PVRnb5fbg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yzmboV3-Ee2F0PVRnb5fbg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yzmbol3-Ee2F0PVRnb5fbg" name="warp" visibility="private" type="_yRzWIF3-Ee2F0PVRnb5fbg" association="_y5LfMV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yznCsV3-Ee2F0PVRnb5fbg" name="ca" visibility="private" type="_yLB_wF3-Ee2F0PVRnb5fbg" association="_y5MGQV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2q9wF3-Ee2F0PVRnb5fbg" name="ChannelVisualization" specification="_ysDCIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2q9wV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2q9wl3-Ee2F0PVRnb5fbg" type="_yLJUgF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ysDCIF3-Ee2F0PVRnb5fbg" name="ChannelVisualization" visibility="package" method="_y2q9wF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysDpMV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysDpMl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysDpMF3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysDpM13-Ee2F0PVRnb5fbg" type="_yLJUgF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yLNl8F3-Ee2F0PVRnb5fbg" name="Channels">
              <ownedComment xmi:id="_y4MAsF3-Ee2F0PVRnb5fbg">
                <body>&lt;h1>Implementation of the Channel class.&lt;/h1>&#xD;
 The Channel class allows the user to handle the amount of wireless channels that are available for&#xD;
 scheduling using the private sub class ChannelSet and methods that can add or remove channel sets or&#xD;
 channels individually.&lt;p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yzo34F3-Ee2F0PVRnb5fbg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yzpe8F3-Ee2F0PVRnb5fbg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yzqGAV3-Ee2F0PVRnb5fbg" name="channelsAvailable" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y5NUYV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2sL4F3-Ee2F0PVRnb5fbg" name="Channels" specification="_yLSecF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2sL4V3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2sL4l3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2sL413-Ee2F0PVRnb5fbg" type="_yLNl8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2sL5F3-Ee2F0PVRnb5fbg" name="getChannelSet" specification="_yLTskF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2sL5V3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2sL5l3-Ee2F0PVRnb5fbg" type="_yrtD4V3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return null;&#xD;
 }&#xD;
&#xD;
 /* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2sL513-Ee2F0PVRnb5fbg" name="addNewChannelSet" specification="_yLVhwF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2sy8F3-Ee2F0PVRnb5fbg" name="isEmpty" specification="_yLWv4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2sy8V3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2sy8l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2uoIF3-Ee2F0PVRnb5fbg" name="removeChannel" specification="_yLXW8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2uoIV3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2uoIl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2uoI13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
&#xD;
 if(!checkIfChannelExists(channels, channel)){&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel removal failed, channel '%s' does not exist\n&quot;, channel);&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2uoJF3-Ee2F0PVRnb5fbg" name="addChannel" specification="_yLZMIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2uoJV3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2uoJl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2vPMF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
&#xD;
 if(checkIfChannelExists(channels, channel)){ // returns false if channel exists&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel add failed, channel '%s' already exists\n&quot;, channel);&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2vPMV3-Ee2F0PVRnb5fbg" name="getNumChannels" specification="_yLZzMl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2vPMl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2vPM13-Ee2F0PVRnb5fbg" name="checkIfTimeslotIsOutOfBounds" specification="_yLbBUV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2vPNF3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2vPNV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(timeSlot &lt; 0 || timeSlot >= channelsAvailable.size()){&#xD;
   if (verbose)&#xD;
     System.err.printf(&quot;Time slot '%d' does not exist\n&quot;, timeSlot);&#xD;
   return true;&#xD;
 }&#xD;
&#xD;
 return false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2v2QF3-Ee2F0PVRnb5fbg" name="checkIfChannelExists" specification="_ysGFcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2v2QV3-Ee2F0PVRnb5fbg" name="channels" type="_yLPbIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2v2Ql3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2v2Q13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return channels.contains(channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yLSecF3-Ee2F0PVRnb5fbg" name="Channels" visibility="package" method="_y2sL4F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yLTFgF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yLTFgV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4MAtF3-Ee2F0PVRnb5fbg">
                  <body>Constructor that takes in number of channels and verbose flag.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param nChannels amount of channels&#xD;
   * @param verbose if true, prints data to the screen</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLSecV3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLSecl3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLTFgl3-Ee2F0PVRnb5fbg" type="_yLNl8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yLTskF3-Ee2F0PVRnb5fbg" name="getChannelSet" method="_y2sL5F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4MAtV3-Ee2F0PVRnb5fbg">
                  <body>Gets the channel set for selected timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to retrieve channel set for&#xD;
   * @return HashSet of channels based on timeslot</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLTskV3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw33wF3-Ee2F0PVRnb5fbg" type="_yrtD4V3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yLVhwF3-Ee2F0PVRnb5fbg" name="addNewChannelSet" method="_y2sL513-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4MAtl3-Ee2F0PVRnb5fbg">
                  <body>Adds a new channel set to available channels.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yLWv4F3-Ee2F0PVRnb5fbg" name="isEmpty" method="_y2sy8F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4MAt13-Ee2F0PVRnb5fbg">
                  <body>Checks if the channelSet is empty with the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to check channelSet&#xD;
   * @return boolean value based on if the channelSet at the given timeSlot is empty</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLWv4V3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLWv4l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yLXW8F3-Ee2F0PVRnb5fbg" name="removeChannel" method="_y2uoIF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4MnwF3-Ee2F0PVRnb5fbg">
                  <body>Removes channel from available channels at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to get channelSet&#xD;
   * @param channel Channel to remove&#xD;
   * @return boolean value based on the success of the channel removal at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLX-AF3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLX-AV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLYlEF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yLZMIF3-Ee2F0PVRnb5fbg" name="addChannel" method="_y2uoJF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4MnwV3-Ee2F0PVRnb5fbg">
                  <body>Adds channel at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to add channel at&#xD;
   * @param channel the channel to add&#xD;
   * @return boolean value based on success of channel being added at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLZMIV3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLZzMF3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLZzMV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yLZzMl3-Ee2F0PVRnb5fbg" name="getNumChannels" method="_y2vPMV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Mnwl3-Ee2F0PVRnb5fbg">
                  <body>Gets the number of channels.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return Integer representing the number of channels</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLbBUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yLbBUV3-Ee2F0PVRnb5fbg" name="checkIfTimeslotIsOutOfBounds" visibility="private" method="_y2vPM13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yLbBUl3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yLboYF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ysGFcF3-Ee2F0PVRnb5fbg" name="checkIfChannelExists" visibility="private" method="_y2v2QF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysGFcV3-Ee2F0PVRnb5fbg" name="channels" type="_yLPbIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysGFcl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ysGFc13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yLPbIF3-Ee2F0PVRnb5fbg" name="ChannelSet" visibility="private">
                <ownedComment xmi:id="_y4MAsV3-Ee2F0PVRnb5fbg">
                  <body>Private class that extends a string HashSet to keep track of channels as a set.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
                <generalization xmi:id="_yw2CkF3-Ee2F0PVRnb5fbg" general="_yrtD4V3-Ee2F0PVRnb5fbg"/>
                <ownedAttribute xmi:id="_yzoQ0F3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yzoQ0V3-Ee2F0PVRnb5fbg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2q9w13-Ee2F0PVRnb5fbg" name="ChannelSet" specification="_yLQCMF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y2q9xF3-Ee2F0PVRnb5fbg" type="_yLPbIF3-Ee2F0PVRnb5fbg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2rk0F3-Ee2F0PVRnb5fbg" name="ChannelSet" specification="_yLQpQ13-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y2rk0V3-Ee2F0PVRnb5fbg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_y2rk0l3-Ee2F0PVRnb5fbg" type="_yLPbIF3-Ee2F0PVRnb5fbg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yLQCMF3-Ee2F0PVRnb5fbg" name="ChannelSet" visibility="private" method="_y2q9w13-Ee2F0PVRnb5fbg">
                  <eAnnotations xmi:id="_yLQpQF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yLQpQV3-Ee2F0PVRnb5fbg" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_y4MAsl3-Ee2F0PVRnb5fbg">
                    <body>Default Constructor&#xD;
     * &#xD;
     * @author sgoddard</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yLQpQl3-Ee2F0PVRnb5fbg" type="_yLPbIF3-Ee2F0PVRnb5fbg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yLQpQ13-Ee2F0PVRnb5fbg" name="ChannelSet" visibility="private" method="_y2rk0F3-Ee2F0PVRnb5fbg">
                  <eAnnotations xmi:id="_yLRQUV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yLRQUl3-Ee2F0PVRnb5fbg" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_y4MAs13-Ee2F0PVRnb5fbg">
                    <body>Constructor that takes in a channel amount on creation.&#xD;
     * &#xD;
     * @author sgoddard&#xD;
     * @param nChannels number of channels to add</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yLRQUF3-Ee2F0PVRnb5fbg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yLRQU13-Ee2F0PVRnb5fbg" type="_yLPbIF3-Ee2F0PVRnb5fbg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yLfSwF3-Ee2F0PVRnb5fbg" name="ChannelsTest" visibility="package">
              <ownedAttribute xmi:id="_yztwYF3-Ee2F0PVRnb5fbg" name="channelSize" visibility="package" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yztwYV3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2wdUF3-Ee2F0PVRnb5fbg" name="testGetChannelSetByChannelSetSize" specification="_yLhH8F3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>final var size = 10; // How many channelSets to be added.&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
&#xD;
		// Loop creates 'size' amount of channel sets, each timeSlot get i amount of channels added.&#xD;
		// timeSlot 0 = channelSet size of 0, timeSlot 1 = channelSet size of 1, ...timeSlot n = channelSet size of n&#xD;
		for(int i = 0; i &lt; size; i++){&#xD;
			channels.addNewChannelSet();&#xD;
			for(int j = 0; j &lt; i; j++) {&#xD;
				channels.addChannel(i,Integer.toString(j)); //add j as a filler channel&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Checks if getChannelSet works by comparing the timeSlot with channel size which should be equal from above loop&#xD;
		for(var i = 0; i &lt; size; i++){&#xD;
			var channelSet = channels.getChannelSet(i);&#xD;
			System.out.println(channelSet.size());&#xD;
			assertEquals(i, channelSet.size(), &quot;Error in getChannelSet returning correct Channel&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2wdUV3-Ee2F0PVRnb5fbg" name="testGetChannelSetByChannel" specification="_yLjkMF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		channels.addChannel(0, &quot;Test 0&quot;);&#xD;
		channels.addChannel(1, &quot;Test 1&quot;);&#xD;
&#xD;
		assertTrue(channels.getChannelSet(0).contains(&quot;Test 0&quot;));&#xD;
		assertTrue(channels.getChannelSet(1).contains(&quot;Test 1&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2wdUl3-Ee2F0PVRnb5fbg" name="testAddNewChannelSetBySize" specification="_yLkLQl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		final var channelSetSize = 10;&#xD;
&#xD;
		// Checks if initial size is 0&#xD;
		assertEquals(0, channels.channelsAvailable.size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
&#xD;
		for(int i = 0; i &lt; channelSetSize; i++){ // Adds the channelSets&#xD;
			channels.addNewChannelSet();&#xD;
		}&#xD;
&#xD;
		// Checks if the channelSet count is accurate&#xD;
		assertEquals(channelSetSize, channels.channelsAvailable.size(), &quot;ChannelSet size error&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2wdU13-Ee2F0PVRnb5fbg" name="testIsEmptyWhenCreatingEmptyChannels" specification="_yLmAcV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.isEmpty(0), &quot;IsEmpty failed on zero ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2wdVF3-Ee2F0PVRnb5fbg" name="testIsEmptyWhenChannelsStartAboveZero" specification="_yLnOkF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertFalse(channels.isEmpty(0), &quot;IsEmpty retuned true on an non empty ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xEYF3-Ee2F0PVRnb5fbg" name="testEmptyAfterAdd" specification="_yLn1ol3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
&#xD;
		assertTrue(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
		assertFalse(channels.isEmpty(0), &quot;ChannelSet empty after adding channel&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xEYV3-Ee2F0PVRnb5fbg" name="testEmptyAfterRemove" specification="_yLpq0F3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>final var channelSize = 1;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created is not empty&#xD;
		assertFalse(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.removeChannel(0, &quot;0&quot;);&#xD;
&#xD;
		// Checks if removal of the only channel makes an empty ChannelSet&#xD;
		assertTrue(channels.isEmpty(0), &quot;ChannelSet not empty after channel removal&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xEYl3-Ee2F0PVRnb5fbg" name="testRemoveChannel" specification="_yLq48l3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created channelSet is 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if channel was added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
&#xD;
		// Checks if removeChannel returns true&#xD;
		assertTrue(channels.removeChannel(0, &quot;Test&quot;), &quot;Channel removal failed&quot;);&#xD;
&#xD;
		// Checks if channel was removed by size&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Channel removal failed&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xEY13-Ee2F0PVRnb5fbg" name="testAddChannelTimeSlots" specification="_yLsHEl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true); // Creates a channels class with no channels&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if channelSet is indeed 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;); //Adds a test channel&#xD;
&#xD;
		// Checks if the channel count increased for timeSlot 0 channelSet&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xEZF3-Ee2F0PVRnb5fbg" name="testAddChannelDuplicates" specification="_yLtVMl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, false);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if initial is zero&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if adding channel worked&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Confirms duplicate channels aren't added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Error, channel duplicate added&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xrcF3-Ee2F0PVRnb5fbg" name="testAddChannel" specification="_yLujUl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.addChannel(0, &quot;Test&quot;), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xrcV3-Ee2F0PVRnb5fbg" name="testGetNumChannelsNew" specification="_yLvxcF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		assertEquals(channelSize, channels.getNumChannels(), &quot;NumChannels has incorrect size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2xrcl3-Ee2F0PVRnb5fbg" name="testGetNumChannelsNChannels" specification="_yLwYgl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
		// getNumChannels returns nChannels, so this should never fail&#xD;
		assertEquals(channels.nChannels, channels.getNumChannels(), &quot;GetNumChannels does not equal nChannels&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yLhH8F3-Ee2F0PVRnb5fbg" name="testGetChannelSetByChannelSetSize" visibility="package" method="_y2wdUF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLjkMF3-Ee2F0PVRnb5fbg" name="testGetChannelSetByChannel" visibility="package" method="_y2wdUV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLkLQl3-Ee2F0PVRnb5fbg" name="testAddNewChannelSetBySize" visibility="package" method="_y2wdUl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLmAcV3-Ee2F0PVRnb5fbg" name="testIsEmptyWhenCreatingEmptyChannels" visibility="package" method="_y2wdU13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLnOkF3-Ee2F0PVRnb5fbg" name="testIsEmptyWhenChannelsStartAboveZero" visibility="package" method="_y2wdVF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLn1ol3-Ee2F0PVRnb5fbg" name="testEmptyAfterAdd" visibility="package" method="_y2xEYF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLpq0F3-Ee2F0PVRnb5fbg" name="testEmptyAfterRemove" visibility="package" method="_y2xEYV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLq48l3-Ee2F0PVRnb5fbg" name="testRemoveChannel" visibility="package" method="_y2xEYl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLsHEl3-Ee2F0PVRnb5fbg" name="testAddChannelTimeSlots" visibility="package" method="_y2xEY13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLtVMl3-Ee2F0PVRnb5fbg" name="testAddChannelDuplicates" visibility="package" method="_y2xEZF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLujUl3-Ee2F0PVRnb5fbg" name="testAddChannel" visibility="package" method="_y2xrcF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLvxcF3-Ee2F0PVRnb5fbg" name="testGetNumChannelsNew" visibility="package" method="_y2xrcV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yLwYgl3-Ee2F0PVRnb5fbg" name="testGetNumChannelsNChannels" visibility="package" method="_y2xrcl3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yLxmoF3-Ee2F0PVRnb5fbg" name="CodeFragment">
              <ownedAttribute xmi:id="_yzvlkF3-Ee2F0PVRnb5fbg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yzvlkV3-Ee2F0PVRnb5fbg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yzwMoF3-Ee2F0PVRnb5fbg" name="edges" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y5OigV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzxawV3-Ee2F0PVRnb5fbg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yzyB0V3-Ee2F0PVRnb5fbg" name="codeFragment" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y5PwoV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yzz3AF3-Ee2F0PVRnb5fbg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz0eEF3-Ee2F0PVRnb5fbg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ySgF3-Ee2F0PVRnb5fbg" name="CodeFragment" specification="_yLzb0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ySgV3-Ee2F0PVRnb5fbg" type="_yLxmoF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2ySgl3-Ee2F0PVRnb5fbg" name="CodeFragment" specification="_yw5s8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2ySg13-Ee2F0PVRnb5fbg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2yShF3-Ee2F0PVRnb5fbg" name="edges" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2yShV3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2yShl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2ySh13-Ee2F0PVRnb5fbg" type="_yLxmoF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2y5kF3-Ee2F0PVRnb5fbg" name="getCoordinator" specification="_yL14EF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2y5kV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2y5kl3-Ee2F0PVRnb5fbg" name="instructions" specification="_yL2fIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2y5k13-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2y5lF3-Ee2F0PVRnb5fbg" name="size" specification="_yL47YF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2y5lV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2y5ll3-Ee2F0PVRnb5fbg" name="generateCodeFragment" specification="_yL5icV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2zgoF3-Ee2F0PVRnb5fbg" name="getBaseInstruction" specification="_yL6JgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2zgoV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2zgol3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2zgo13-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2zgpF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2zgpV3-Ee2F0PVRnb5fbg" name="push" specification="_yL6wkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2zgpl3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2zgp13-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2zgqF3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2zgqV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y20HsF3-Ee2F0PVRnb5fbg" name="pull" specification="_yL7-sF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y20HsV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20Hsl3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20Hs13-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20HtF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y20HtV3-Ee2F0PVRnb5fbg" name="ifHas" specification="_yL9M0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y20Htl3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20Ht13-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20HuF3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20HuV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y20uwF3-Ee2F0PVRnb5fbg" name="ifNotHas" specification="_yL_CAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y20uwV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20uwl3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20uw13-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20uxF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y20uxV3-Ee2F0PVRnb5fbg" name="wait" specification="_yL_pEV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y20uxl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y20ux13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y21V0F3-Ee2F0PVRnb5fbg" name="sleep" specification="_yMA3Ml3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y21V0V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y21V0l3-Ee2F0PVRnb5fbg" name="reportIfDifferentCoordinators" specification="_yw8wQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y21V013-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y21V1F3-Ee2F0PVRnb5fbg" name="multipleCoordinators" specification="_yw9-YF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y21V1V3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y21V1l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yLzb0F3-Ee2F0PVRnb5fbg" name="CodeFragment" visibility="package" method="_y2ySgF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yLzb0V3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yLzb0l3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4Mnw13-Ee2F0PVRnb5fbg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yLzb013-Ee2F0PVRnb5fbg" type="_yLxmoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yL14EF3-Ee2F0PVRnb5fbg" name="getCoordinator" method="_y2y5kF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4NO0F3-Ee2F0PVRnb5fbg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_yL14EV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL2fIF3-Ee2F0PVRnb5fbg" name="instructions" method="_y2y5kl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4NO0V3-Ee2F0PVRnb5fbg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_yw8JMV3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yL47YF3-Ee2F0PVRnb5fbg" name="size" method="_y2y5lF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4NO0l3-Ee2F0PVRnb5fbg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_yL5icF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL5icV3-Ee2F0PVRnb5fbg" name="generateCodeFragment" visibility="private" method="_y2y5ll3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yL6JgF3-Ee2F0PVRnb5fbg" name="getBaseInstruction" visibility="private" method="_y2zgoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yL6JgV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL6Jgl3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL6Jg13-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL6JhF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL6wkF3-Ee2F0PVRnb5fbg" name="push" visibility="private" method="_y2zgpV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yL6wkV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL6wkl3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL6wk13-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL7XoF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL7-sF3-Ee2F0PVRnb5fbg" name="pull" visibility="private" method="_y20HsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yL8lwF3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL8lwV3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL8lwl3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL8lw13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL9M0F3-Ee2F0PVRnb5fbg" name="ifHas" visibility="private" method="_y20HtV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yL9z4F3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL9z4V3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL9z4l3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL9z413-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL_CAF3-Ee2F0PVRnb5fbg" name="ifNotHas" visibility="private" method="_y20uwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yL_CAV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL_CAl3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL_CA13-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yL_pEF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yL_pEV3-Ee2F0PVRnb5fbg" name="wait" method="_y20uxV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yMA3MF3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMA3MV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yMA3Ml3-Ee2F0PVRnb5fbg" name="sleep" isStatic="true" method="_y21V0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yMBeQF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yw5s8F3-Ee2F0PVRnb5fbg" name="CodeFragment" visibility="package" method="_y2ySgl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yw6UAV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yw6UAl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4MnxF3-Ee2F0PVRnb5fbg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yw5s8V3-Ee2F0PVRnb5fbg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw5s8l3-Ee2F0PVRnb5fbg" name="edges" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yw5s813-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yw6UAF3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw6UA13-Ee2F0PVRnb5fbg" type="_yLxmoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yw8wQF3-Ee2F0PVRnb5fbg" name="reportIfDifferentCoordinators" visibility="private" method="_y21V0l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yw8wQV3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yw9-YF3-Ee2F0PVRnb5fbg" name="multipleCoordinators" visibility="private" method="_y21V1F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yw9-YV3-Ee2F0PVRnb5fbg" name="coordinators" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yw-lcF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yMG90F3-Ee2F0PVRnb5fbg" name="CombinedActivation">
              <generalization xmi:id="_ysSSs13-Ee2F0PVRnb5fbg" general="_yKIn4F3-Ee2F0PVRnb5fbg"/>
              <interfaceRealization xmi:id="_yxAaoF3-Ee2F0PVRnb5fbg" client="_yMG90F3-Ee2F0PVRnb5fbg" supplier="_ywrDcV3-Ee2F0PVRnb5fbg" contract="_ywrDcV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2184F3-Ee2F0PVRnb5fbg" name="CombinedActivation" specification="_yMIL8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2184V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2184l3-Ee2F0PVRnb5fbg" type="_yMG90F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y218413-Ee2F0PVRnb5fbg" name="CombinedActivation" specification="_ysP2cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2185F3-Ee2F0PVRnb5fbg" name="elem" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2185V3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2185l3-Ee2F0PVRnb5fbg" type="_yMG90F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y218513-Ee2F0PVRnb5fbg" name="CombinedActivation" specification="_ysREkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2186F3-Ee2F0PVRnb5fbg" name="priorEntry" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2186V3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y2186l3-Ee2F0PVRnb5fbg" type="_yMG90F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y22j8F3-Ee2F0PVRnb5fbg" name="canCombine" specification="_ysRroF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y22j8V3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y22j8l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yMIL8F3-Ee2F0PVRnb5fbg" name="CombinedActivation" visibility="package" method="_y2184F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yMIzAF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yMIzAV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yMIL8V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMIzAl3-Ee2F0PVRnb5fbg" type="_yMG90F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysP2cF3-Ee2F0PVRnb5fbg" name="CombinedActivation" visibility="package" method="_y218413-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysP2c13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysP2dF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysP2cV3-Ee2F0PVRnb5fbg" name="elem" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysP2cl3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ysP2dV3-Ee2F0PVRnb5fbg" type="_yMG90F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysREkF3-Ee2F0PVRnb5fbg" name="CombinedActivation" visibility="package" method="_y218513-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysREk13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysRElF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysREkV3-Ee2F0PVRnb5fbg" name="priorEntry" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysREkl3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysRElV3-Ee2F0PVRnb5fbg" type="_yMG90F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysRroF3-Ee2F0PVRnb5fbg" name="canCombine" method="_y22j8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysRroV3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysRrol3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yMMdYF3-Ee2F0PVRnb5fbg" name="CommunicationGraph">
              <ownedComment xmi:id="_y4NO013-Ee2F0PVRnb5fbg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ysUu9F3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yz26UF3-Ee2F0PVRnb5fbg" name="wfm" visibility="package" type="_yM19oF3-Ee2F0PVRnb5fbg" association="_y5Q-wF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yz3hYV3-Ee2F0PVRnb5fbg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz4vgF3-Ee2F0PVRnb5fbg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz5WkF3-Ee2F0PVRnb5fbg" name="workLoad" visibility="package" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y5Rl0V3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y23LAF3-Ee2F0PVRnb5fbg" name="CommunicationGraph" specification="_ysTg0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y23LAV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y23LAl3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y23LA13-Ee2F0PVRnb5fbg" type="_yMMdYF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y23LBF3-Ee2F0PVRnb5fbg" name="CommunicationGraph" specification="_ysUH4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y23LBV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y23LBl3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y23LB13-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y23LCF3-Ee2F0PVRnb5fbg" type="_yMMdYF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y23yEF3-Ee2F0PVRnb5fbg" name="createHeader" specification="_yMPgsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y23yEV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y23yEl3-Ee2F0PVRnb5fbg" name="createFooter" specification="_yMRV4V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y23yE13-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y23yFF3-Ee2F0PVRnb5fbg" name="visualization" specification="_yMSkAl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y23yFV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y23yFl3-Ee2F0PVRnb5fbg" name="createWarpFileContent" specification="_yMUZMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y23yF13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yMPgsF3-Ee2F0PVRnb5fbg" name="createHeader" method="_y23yEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysUu8V3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMRV4V3-Ee2F0PVRnb5fbg" name="createFooter" method="_y23yEl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysUu8l3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMSkAl3-Ee2F0PVRnb5fbg" name="visualization" method="_y23yFF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysUu813-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMUZMF3-Ee2F0PVRnb5fbg" name="createWarpFileContent" method="_y23yFl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yMUZMV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ysTg0F3-Ee2F0PVRnb5fbg" name="CommunicationGraph" method="_y23LAF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysTg013-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysTg1F3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysTg0V3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysTg0l3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysTg1V3-Ee2F0PVRnb5fbg" type="_yMMdYF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysUH4F3-Ee2F0PVRnb5fbg" name="CommunicationGraph" method="_y23LBF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysUH5F3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysUH5V3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysUH4V3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysUH4l3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysUH413-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ysUu8F3-Ee2F0PVRnb5fbg" type="_yMMdYF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yMZRsF3-Ee2F0PVRnb5fbg" name="ConnectivityPoset">
              <ownedComment xmi:id="_y4NO1F3-Ee2F0PVRnb5fbg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ysWkIF3-Ee2F0PVRnb5fbg" general="_yOeVUF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y25AMF3-Ee2F0PVRnb5fbg" name="ConnectivityPoset" specification="_ysV9EF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y25AMV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y25AMl3-Ee2F0PVRnb5fbg" type="_yMZRsF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y25AM13-Ee2F0PVRnb5fbg" name="findCoordinator" specification="_yxCP0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y25ANF3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y25ANV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ysV9EF3-Ee2F0PVRnb5fbg" name="ConnectivityPoset" visibility="package" method="_y25AMF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysV9El3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysV9E13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysV9EV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysV9FF3-Ee2F0PVRnb5fbg" type="_yMZRsF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yxCP0F3-Ee2F0PVRnb5fbg" name="findCoordinator" visibility="protected" method="_y25AM13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxCP0V3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxCP0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yMcVAF3-Ee2F0PVRnb5fbg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_yxEsEF3-Ee2F0PVRnb5fbg" client="_yMcVAF3-Ee2F0PVRnb5fbg" supplier="_ysXLMF3-Ee2F0PVRnb5fbg" contract="_ysXLMF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y25nQF3-Ee2F0PVRnb5fbg" name="compare" specification="_yxHIUV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y25nQV3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y25nQl3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y25nQ13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yxHIUV3-Ee2F0PVRnb5fbg" name="compare" method="_y25nQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxHvYF3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxHvYV3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxHvYl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yMf_YF3-Ee2F0PVRnb5fbg" name="Description">
              <ownedComment xmi:id="_y4NO1V3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yxI9gV3-Ee2F0PVRnb5fbg" general="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yz6ksF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yz6ksV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y25nRF3-Ee2F0PVRnb5fbg" name="Description" specification="_yMgmcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y25nRV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y26OUF3-Ee2F0PVRnb5fbg" name="Description" specification="_yMhNg13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y26OUV3-Ee2F0PVRnb5fbg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y26OUl3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y26OU13-Ee2F0PVRnb5fbg" name="toString" specification="_yMibo13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y26OVF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yMgmcF3-Ee2F0PVRnb5fbg" name="Description" method="_y25nRF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yMhNgF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yMhNgV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yMhNgl3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMhNg13-Ee2F0PVRnb5fbg" name="Description" method="_y26OUF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yMiboF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yMiboV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yMhNhF3-Ee2F0PVRnb5fbg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMibol3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMibo13-Ee2F0PVRnb5fbg" name="toString" method="_y26OU13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yMibpF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yMjpwF3-Ee2F0PVRnb5fbg" name="Edge">
              <generalization xmi:id="_ysbcol3-Ee2F0PVRnb5fbg" general="_yT5n4F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yz7LwF3-Ee2F0PVRnb5fbg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yz7y0F3-Ee2F0PVRnb5fbg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz7y0V3-Ee2F0PVRnb5fbg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz8Z4F3-Ee2F0PVRnb5fbg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz8Z4V3-Ee2F0PVRnb5fbg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz9A8F3-Ee2F0PVRnb5fbg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz9A8V3-Ee2F0PVRnb5fbg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz9oAF3-Ee2F0PVRnb5fbg" name="state" type="_yMle8F3-Ee2F0PVRnb5fbg" association="_y4Oc8F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_yz9oAV3-Ee2F0PVRnb5fbg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yxKLoF3-Ee2F0PVRnb5fbg" client="_yMjpwF3-Ee2F0PVRnb5fbg" supplier="_ywrDcV3-Ee2F0PVRnb5fbg" contract="_ywrDcV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y261YF3-Ee2F0PVRnb5fbg" name="Edge" specification="_yMnUIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y261YV3-Ee2F0PVRnb5fbg" type="_yMjpwF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y261Yl3-Ee2F0PVRnb5fbg" name="Edge" specification="_yMoiQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y261Y13-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261ZF3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261ZV3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261Zl3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261Z13-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261aF3-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261aV3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261al3-Ee2F0PVRnb5fbg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y261a13-Ee2F0PVRnb5fbg" type="_yMjpwF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y27ccF3-Ee2F0PVRnb5fbg" name="compareTo" specification="_ysaOgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y27ccV3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y27ccl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y27cc13-Ee2F0PVRnb5fbg" name="toString" specification="_yMrlkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y27cdF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y28DgF3-Ee2F0PVRnb5fbg" name="print" specification="_yMtawF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y28DgV3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y28Dgl3-Ee2F0PVRnb5fbg" name="print" specification="_yMuo4l3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yMnUIF3-Ee2F0PVRnb5fbg" name="Edge" visibility="package" method="_y261YF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yMnUIV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yMnUIl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yMn7MF3-Ee2F0PVRnb5fbg" type="_yMjpwF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMoiQF3-Ee2F0PVRnb5fbg" name="Edge" visibility="package" method="_y261Yl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yMpwY13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yMpwZF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yMpJUF3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpJUV3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpJUl3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpJU13-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpJVF3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpwYF3-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpwYV3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMpwYl3-Ee2F0PVRnb5fbg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yMqXcF3-Ee2F0PVRnb5fbg" type="_yMjpwF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yMrlkF3-Ee2F0PVRnb5fbg" name="toString" method="_y27cc13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yMrlkV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yMtawF3-Ee2F0PVRnb5fbg" name="print" method="_y28DgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yMtawV3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yMuo4l3-Ee2F0PVRnb5fbg" name="print" method="_y28Dgl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_ysaOgF3-Ee2F0PVRnb5fbg" name="compareTo" method="_y27ccF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysaOgV3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysa1kF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yMle8F3-Ee2F0PVRnb5fbg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_yMmGAV3-Ee2F0PVRnb5fbg" name="RELEASED"/>
                <ownedLiteral xmi:id="_yMmtEF3-Ee2F0PVRnb5fbg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_yMmtEV3-Ee2F0PVRnb5fbg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yM19oF3-Ee2F0PVRnb5fbg" name="FileManager">
              <ownedComment xmi:id="_y4PEAF3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yz-2IF3-Ee2F0PVRnb5fbg" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yz-2IV3-Ee2F0PVRnb5fbg" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz_dMF3-Ee2F0PVRnb5fbg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yz_dMV3-Ee2F0PVRnb5fbg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y28qkF3-Ee2F0PVRnb5fbg" name="FileManager" specification="_yM3LwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y28qkV3-Ee2F0PVRnb5fbg" type="_yM19oF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class	&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y28qkl3-Ee2F0PVRnb5fbg" name="FileManager" specification="_yM4Z4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y28qk13-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y28qlF3-Ee2F0PVRnb5fbg" type="_yM19oF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y28qlV3-Ee2F0PVRnb5fbg" name="getDocumentsDirectory" specification="_yM5A8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y28qll3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
		String documentsDirectory;&#xD;
		if ( OSValidator.isWindows() ) {&#xD;
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
		} else if ( OSValidator.isMac() ) {&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;&#xD;
		} else { // for all other Unix systems&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)&#xD;
		}&#xD;
		return documentsDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y28ql13-Ee2F0PVRnb5fbg" name="getCurrentDirectory" specification="_yM5oAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y29RoF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y29RoV3-Ee2F0PVRnb5fbg" name="createFile" specification="_yM6PEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y29Rol3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y29Ro13-Ee2F0PVRnb5fbg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y29RpF3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y29RpV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to&#xD;
		 * this routine really just creates the file name ;-)&#xD;
		 */&#xD;
		Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix&#xD;
		}&#xD;
		/* fileString has no suffix at this point (removed if it existed)&#xD;
		 * Now add file name extension and suffix&#xD;
		 */&#xD;
		fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y29Rpl3-Ee2F0PVRnb5fbg" name="createFile" specification="_yM62IF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y29Rp13-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y29RqF3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y29RqV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix&#xD;
		}&#xD;
		// fileString has no suffix at this point (removed if it existed)&#xD;
		// Now add file name extension and suffix&#xD;
		fileString = fileString + suffix;&#xD;
		// we don't actually create the file...it will be created when written to&#xD;
		// this routine really just creates the file name ;-)&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y294sF3-Ee2F0PVRnb5fbg" name="createDirectory" specification="_yM8EQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y294sV3-Ee2F0PVRnb5fbg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y294sl3-Ee2F0PVRnb5fbg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y294s13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; &#xD;
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided&#xD;
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.&#xD;
		} else { // subDirectory has relative path, so just append&#xD;
			newDirectory = directory + File.separator + subDirectory;&#xD;
		}&#xD;
		try {&#xD;
			Path path = Paths.get(newDirectory);&#xD;
			Files.createDirectories(path);&#xD;
			if (verbose) {&#xD;
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
			newDirectory = directory;  // in case of error, just use the initial directory&#xD;
		}&#xD;
		return newDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y294tF3-Ee2F0PVRnb5fbg" name="writeFile" specification="_yM8rUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y294tV3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y294tl3-Ee2F0PVRnb5fbg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);&#xD;
		Path fileName = Path.of(file);&#xD;
		try {&#xD;
			Files.writeString(fileName, tag.sign(fileContents));&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y294t13-Ee2F0PVRnb5fbg" name="readFile" specification="_yM9SYl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y294uF3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y294uV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
		Path fileName = Path.of(file);&#xD;
		String contents = null;&#xD;
		try {&#xD;
			contents = Files.readString(fileName);&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
		return contents;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yM3LwF3-Ee2F0PVRnb5fbg" name="FileManager" method="_y28qkF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yM3y0F3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yM3y0V3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4PEAV3-Ee2F0PVRnb5fbg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_yM3y0l3-Ee2F0PVRnb5fbg" type="_yM19oF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yM4Z4F3-Ee2F0PVRnb5fbg" name="FileManager" method="_y28qkl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yM4Z4l3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yM4Z413-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yM4Z4V3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM4Z5F3-Ee2F0PVRnb5fbg" type="_yM19oF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yM5A8F3-Ee2F0PVRnb5fbg" name="getDocumentsDirectory" method="_y28qlV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yM5A8V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yM5oAF3-Ee2F0PVRnb5fbg" name="getCurrentDirectory" method="_y28ql13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yM5oAV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yM6PEF3-Ee2F0PVRnb5fbg" name="createFile" method="_y29RoV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PEAl3-Ee2F0PVRnb5fbg">
                  <body>Build the name extension used for all files created by this tool.&#xD;
	 * The nameExtension will be added to the base input file name&#xD;
	 * so that all of the output files can be associated with the input file&#xD;
	 * The file naming pattern is:&#xD;
	 * baseFileNameFileType-NonDefaultParameterList&#xD;
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray&#xD;
	 * Default parameters are not identified in the NameExtension&#xD;
	 * All parameters used to create the file, should be listed near the top&#xD;
	 * of the file in the Parameter Section, followed by the file contents.&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_yM6PEV3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM6PEl3-Ee2F0PVRnb5fbg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM6PE13-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM6PFF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yM62IF3-Ee2F0PVRnb5fbg" name="createFile" method="_y29Rpl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yM62IV3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM62Il3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM7dMF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yM8EQF3-Ee2F0PVRnb5fbg" name="createDirectory" method="_y294sF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yM8EQV3-Ee2F0PVRnb5fbg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM8EQl3-Ee2F0PVRnb5fbg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM8EQ13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yM8rUF3-Ee2F0PVRnb5fbg" name="writeFile" method="_y294tF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yM9SYF3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM9SYV3-Ee2F0PVRnb5fbg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yM9SYl3-Ee2F0PVRnb5fbg" name="readFile" method="_y294t13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yM95cF3-Ee2F0PVRnb5fbg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yM95cV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yM_HkF3-Ee2F0PVRnb5fbg" name="Flow">
              <ownedComment xmi:id="_y4PEA13-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ysnC013-Ee2F0PVRnb5fbg" general="_yT5n4F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0ArUF3-Ee2F0PVRnb5fbg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0ArUV3-Ee2F0PVRnb5fbg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0B5cF3-Ee2F0PVRnb5fbg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0B5cV3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0B5cl3-Ee2F0PVRnb5fbg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0CggF3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0CggV3-Ee2F0PVRnb5fbg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0Cggl3-Ee2F0PVRnb5fbg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0Cgg13-Ee2F0PVRnb5fbg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0DHkF3-Ee2F0PVRnb5fbg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0DHkV3-Ee2F0PVRnb5fbg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0DHkl3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0DuoF3-Ee2F0PVRnb5fbg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0DuoV3-Ee2F0PVRnb5fbg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0EVsV3-Ee2F0PVRnb5fbg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0E8wF3-Ee2F0PVRnb5fbg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0Fj0F3-Ee2F0PVRnb5fbg" name="nodes" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y5Sz8F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0GK4l3-Ee2F0PVRnb5fbg" name="linkTxAndTotalCost" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y5TbAV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0IAEl3-Ee2F0PVRnb5fbg" name="edges" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y5UpIV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0JOMV3-Ee2F0PVRnb5fbg" name="nodePredecessor" visibility="package" type="_yOKzUF3-Ee2F0PVRnb5fbg" association="_y5V3QF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0J1QV3-Ee2F0PVRnb5fbg" name="edgePredecessor" visibility="package" type="_yMjpwF3-Ee2F0PVRnb5fbg" association="_y5WeUV3-Ee2F0PVRnb5fbg"/>
              <interfaceRealization xmi:id="_yxN2AF3-Ee2F0PVRnb5fbg" client="_yM_HkF3-Ee2F0PVRnb5fbg" supplier="_ywrDcV3-Ee2F0PVRnb5fbg" contract="_ywrDcV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2-fwF3-Ee2F0PVRnb5fbg" name="Flow" specification="_yNCK4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2-fwV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2-fwl3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2-fw13-Ee2F0PVRnb5fbg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2-fxF3-Ee2F0PVRnb5fbg" type="_yM_HkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2-fxV3-Ee2F0PVRnb5fbg" name="Flow" specification="_yNEAEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2-fxl3-Ee2F0PVRnb5fbg" type="_yM_HkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G0F3-Ee2F0PVRnb5fbg" name="getInitialPriority" specification="_yNEnI13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G0V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G0l3-Ee2F0PVRnb5fbg" name="getIndex" specification="_yNFOMV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G013-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G1F3-Ee2F0PVRnb5fbg" name="getNumTxPerLink" specification="_yNF1QV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G1V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G1l3-Ee2F0PVRnb5fbg" name="getNodes" specification="_yNGcUV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G113-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G2F3-Ee2F0PVRnb5fbg" name="getEdges" specification="_yNI4kF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G2V3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G2l3-Ee2F0PVRnb5fbg" name="addEdge" specification="_yslNoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G213-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_G3F3-Ee2F0PVRnb5fbg" name="addNode" specification="_ysl0sF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_G3V3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_t4F3-Ee2F0PVRnb5fbg" name="getLinkTxAndTotalCost" specification="_yNL74F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_t4V3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_t4l3-Ee2F0PVRnb5fbg" name="setInitialPriority" specification="_yNO_MF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_t413-Ee2F0PVRnb5fbg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_t5F3-Ee2F0PVRnb5fbg" name="setIndex" specification="_yNPmQV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_t5V3-Ee2F0PVRnb5fbg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y2_t5l3-Ee2F0PVRnb5fbg" name="setNumTxPerLink" specification="_yNQNUV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y2_t513-Ee2F0PVRnb5fbg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3AU8F3-Ee2F0PVRnb5fbg" name="setNodes" specification="_yxRgYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3AU8V3-Ee2F0PVRnb5fbg" name="nodes" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3AU8l3-Ee2F0PVRnb5fbg" name="setLinkTxAndTotalCost" specification="_yxTVkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3AU813-Ee2F0PVRnb5fbg" name="linkTxAndTotalCost" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3AU9F3-Ee2F0PVRnb5fbg" name="compareTo" specification="_ysmbwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3AU9V3-Ee2F0PVRnb5fbg" name="flow" type="_yM_HkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3AU9l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3AU913-Ee2F0PVRnb5fbg" name="toString" specification="_yNRbcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3AU-F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yNCK4F3-Ee2F0PVRnb5fbg" name="Flow" visibility="package" method="_y2-fwF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yNCx8l3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yNCx813-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4PrEF3-Ee2F0PVRnb5fbg">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNCK4V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yNCx8F3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yNCx8V3-Ee2F0PVRnb5fbg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yNCx9F3-Ee2F0PVRnb5fbg" type="_yM_HkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yNEAEF3-Ee2F0PVRnb5fbg" name="Flow" visibility="package" method="_y2-fxV3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yNEnIF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yNEnIV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4PrEV3-Ee2F0PVRnb5fbg">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNEnIl3-Ee2F0PVRnb5fbg" type="_yM_HkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yNEnI13-Ee2F0PVRnb5fbg" name="getInitialPriority" method="_y2_G0F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrEl3-Ee2F0PVRnb5fbg">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNFOMF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNFOMV3-Ee2F0PVRnb5fbg" name="getIndex" method="_y2_G0l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrE13-Ee2F0PVRnb5fbg">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNF1QF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNF1QV3-Ee2F0PVRnb5fbg" name="getNumTxPerLink" method="_y2_G1F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrFF3-Ee2F0PVRnb5fbg">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNGcUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNGcUV3-Ee2F0PVRnb5fbg" name="getNodes" method="_y2_G1l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrFV3-Ee2F0PVRnb5fbg">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yxQSQF3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yNI4kF3-Ee2F0PVRnb5fbg" name="getEdges" method="_y2_G2F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrFl3-Ee2F0PVRnb5fbg">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yxQSQV3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yNL74F3-Ee2F0PVRnb5fbg" name="getLinkTxAndTotalCost" method="_y2_t4F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrGV3-Ee2F0PVRnb5fbg">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_yxQ5UF3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yNO_MF3-Ee2F0PVRnb5fbg" name="setInitialPriority" method="_y2_t4l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrGl3-Ee2F0PVRnb5fbg">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNPmQF3-Ee2F0PVRnb5fbg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNPmQV3-Ee2F0PVRnb5fbg" name="setIndex" method="_y2_t5F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrG13-Ee2F0PVRnb5fbg">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNQNUF3-Ee2F0PVRnb5fbg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNQNUV3-Ee2F0PVRnb5fbg" name="setNumTxPerLink" method="_y2_t5l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4QSIF3-Ee2F0PVRnb5fbg">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNQNUl3-Ee2F0PVRnb5fbg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNRbcF3-Ee2F0PVRnb5fbg" name="toString" method="_y3AU913-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNSCgF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yslNoF3-Ee2F0PVRnb5fbg" name="addEdge" method="_y2_G2l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrF13-Ee2F0PVRnb5fbg">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yslNoV3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysl0sF3-Ee2F0PVRnb5fbg" name="addNode" method="_y2_G3F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4PrGF3-Ee2F0PVRnb5fbg">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ysl0sV3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysmbwF3-Ee2F0PVRnb5fbg" name="compareTo" method="_y3AU9F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysmbwV3-Ee2F0PVRnb5fbg" name="flow" type="_yM_HkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysmbwl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yxRgYF3-Ee2F0PVRnb5fbg" name="setNodes" method="_y3AU8F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4QSIV3-Ee2F0PVRnb5fbg">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yxRgYV3-Ee2F0PVRnb5fbg" name="nodes" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yxTVkF3-Ee2F0PVRnb5fbg" name="setLinkTxAndTotalCost" method="_y3AU8l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4QSIl3-Ee2F0PVRnb5fbg">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yxTVkV3-Ee2F0PVRnb5fbg" name="linkTxAndTotalCost" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yNbzgF3-Ee2F0PVRnb5fbg" name="FlowMap">
              <ownedComment xmi:id="_y4QSI13-Ee2F0PVRnb5fbg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ysqGIF3-Ee2F0PVRnb5fbg" general="_yJ7zkF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0LqcF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0LqcV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yNdBoF3-Ee2F0PVRnb5fbg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_y4QSJF3-Ee2F0PVRnb5fbg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ysrUQV3-Ee2F0PVRnb5fbg" general="_yJ7zkF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0M4kF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0M4kV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yNe20F3-Ee2F0PVRnb5fbg" name="GraphViz">
              <ownedComment xmi:id="_y4QSJV3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ysu-ol3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0M4kl3-Ee2F0PVRnb5fbg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0NfoF3-Ee2F0PVRnb5fbg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0NfoV3-Ee2F0PVRnb5fbg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0OGsF3-Ee2F0PVRnb5fbg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0OGsV3-Ee2F0PVRnb5fbg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0OtwV3-Ee2F0PVRnb5fbg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0PU0V3-Ee2F0PVRnb5fbg" name="wfm" visibility="package" type="_yM19oF3-Ee2F0PVRnb5fbg" association="_y5XscV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0P74V3-Ee2F0PVRnb5fbg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0Qi8V3-Ee2F0PVRnb5fbg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0RKAF3-Ee2F0PVRnb5fbg" name="gv" visibility="package" type="_yNe20F3-Ee2F0PVRnb5fbg" association="_y5YTgV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3BjEF3-Ee2F0PVRnb5fbg" name="GraphViz" specification="_ystJcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3BjEV3-Ee2F0PVRnb5fbg" name="wfm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3BjEl3-Ee2F0PVRnb5fbg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3BjE13-Ee2F0PVRnb5fbg" type="_yNe20F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3BjFF3-Ee2F0PVRnb5fbg" name="GraphViz" specification="_ysuXkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3BjFV3-Ee2F0PVRnb5fbg" name="wfm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3BjFl3-Ee2F0PVRnb5fbg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3BjF13-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3BjGF3-Ee2F0PVRnb5fbg" type="_yNe20F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3BjGV3-Ee2F0PVRnb5fbg" name="visualization" specification="_yNhTEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3BjGl3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3CKIF3-Ee2F0PVRnb5fbg" name="initializeGraphVizContent" specification="_yNh6Il3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3CKIV3-Ee2F0PVRnb5fbg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3CKIl3-Ee2F0PVRnb5fbg" name="finalizeGraphVizContent" specification="_yNihMF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3CKI13-Ee2F0PVRnb5fbg" name="getGraphVizContent" specification="_yNihMV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3CKJF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3CxMF3-Ee2F0PVRnb5fbg" name="createGraphVizContent" specification="_yNjvUV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3CxMV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3CxMl3-Ee2F0PVRnb5fbg" name="addFlowToGraphViz" specification="_yNk9cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3CxM13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3CxNF3-Ee2F0PVRnb5fbg" name="addSrcNodeToGraphViz" specification="_yNlkgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3CxNV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3DYQF3-Ee2F0PVRnb5fbg" name="addSnkNodeToGraphViz" specification="_yNmLkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3DYQV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3DYQl3-Ee2F0PVRnb5fbg" name="finalizeCurrentFlowInGraphViz" specification="_yNmLkl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3DYQ13-Ee2F0PVRnb5fbg" name="addNodeName" specification="_yNmyoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3DYRF3-Ee2F0PVRnb5fbg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3DYRV3-Ee2F0PVRnb5fbg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yNhTEF3-Ee2F0PVRnb5fbg" name="visualization" method="_y3BjGV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ysu-oV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yNh6Il3-Ee2F0PVRnb5fbg" name="initializeGraphVizContent" method="_y3CKIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNh6I13-Ee2F0PVRnb5fbg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNihMF3-Ee2F0PVRnb5fbg" name="finalizeGraphVizContent" method="_y3CKIl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yNihMV3-Ee2F0PVRnb5fbg" name="getGraphVizContent" method="_y3CKI13-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4QSJl3-Ee2F0PVRnb5fbg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_yNjvUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNjvUV3-Ee2F0PVRnb5fbg" name="createGraphVizContent" method="_y3CxMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNkWYF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNk9cF3-Ee2F0PVRnb5fbg" name="addFlowToGraphViz" method="_y3CxMl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNk9cV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNlkgF3-Ee2F0PVRnb5fbg" name="addSrcNodeToGraphViz" method="_y3CxNF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNlkgV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNmLkF3-Ee2F0PVRnb5fbg" name="addSnkNodeToGraphViz" method="_y3DYQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNmLkV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNmLkl3-Ee2F0PVRnb5fbg" name="finalizeCurrentFlowInGraphViz" method="_y3DYQl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yNmyoF3-Ee2F0PVRnb5fbg" name="addNodeName" visibility="private" method="_y3DYQ13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNnZsF3-Ee2F0PVRnb5fbg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yNnZsV3-Ee2F0PVRnb5fbg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ystJcF3-Ee2F0PVRnb5fbg" name="GraphViz" visibility="package" method="_y3BjEF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ystwgV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ystwgl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ystJcV3-Ee2F0PVRnb5fbg" name="wfm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ystwgF3-Ee2F0PVRnb5fbg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ystwg13-Ee2F0PVRnb5fbg" type="_yNe20F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ysuXkF3-Ee2F0PVRnb5fbg" name="GraphViz" visibility="package" method="_y3BjFF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ysuXlF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ysuXlV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ysuXkV3-Ee2F0PVRnb5fbg" name="wfm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ysuXkl3-Ee2F0PVRnb5fbg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ysuXk13-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ysu-oF3-Ee2F0PVRnb5fbg" type="_yNe20F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yNrEEF3-Ee2F0PVRnb5fbg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_y4QSJ13-Ee2F0PVRnb5fbg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_yxXnAF3-Ee2F0PVRnb5fbg" general="_ys2TYV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0RxEF3-Ee2F0PVRnb5fbg" name="gv" visibility="package" type="_yNe20F3-Ee2F0PVRnb5fbg" association="_y5ZhoV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3D_UF3-Ee2F0PVRnb5fbg" name="GraphVizListener" specification="_ys5WsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3D_UV3-Ee2F0PVRnb5fbg" name="gv" type="_yNe20F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3D_Ul3-Ee2F0PVRnb5fbg" type="_yNrEEF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3D_U13-Ee2F0PVRnb5fbg" name="buildGraphViz" specification="_ys59wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3D_VF3-Ee2F0PVRnb5fbg" name="gv" type="_yNe20F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3D_VV3-Ee2F0PVRnb5fbg" name="enterWarpName" specification="_ys7L4V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3EmYF3-Ee2F0PVRnb5fbg" name="ctx" type="_ys6k0F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3EmYV3-Ee2F0PVRnb5fbg" name="exitWarp" specification="_ys8aAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3EmYl3-Ee2F0PVRnb5fbg" name="ctx" type="_ys7y8l3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3EmY13-Ee2F0PVRnb5fbg" name="enterFlowName" specification="_ys-2QV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3EmZF3-Ee2F0PVRnb5fbg" name="ctx" type="_ys-PMF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3EmZV3-Ee2F0PVRnb5fbg" name="exitSrcNode" specification="_ytArcV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3EmZl3-Ee2F0PVRnb5fbg" name="ctx" type="_ytAEYF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3FNcF3-Ee2F0PVRnb5fbg" name="exitSnkNode" specification="_ytDHsV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3FNcV3-Ee2F0PVRnb5fbg" name="ctx" type="_ytB5kl3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3FNcl3-Ee2F0PVRnb5fbg" name="exitFlow" specification="_ytE84V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3FNc13-Ee2F0PVRnb5fbg" name="ctx" type="_ytDuwl3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ys5WsF3-Ee2F0PVRnb5fbg" name="GraphVizListener" visibility="private" method="_y3D_UF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ys5Wsl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ys5Ws13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ys5WsV3-Ee2F0PVRnb5fbg" name="gv" type="_yNe20F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ys5WtF3-Ee2F0PVRnb5fbg" type="_yNrEEF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ys59wF3-Ee2F0PVRnb5fbg" name="buildGraphViz" isStatic="true" method="_y3D_U13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ys59wV3-Ee2F0PVRnb5fbg" name="gv" type="_yNe20F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ys7L4V3-Ee2F0PVRnb5fbg" name="enterWarpName" method="_y3D_VV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ys7L4l3-Ee2F0PVRnb5fbg" name="ctx" type="_ys6k0F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ys8aAV3-Ee2F0PVRnb5fbg" name="exitWarp" method="_y3EmYV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ys8aAl3-Ee2F0PVRnb5fbg" name="ctx" type="_ys7y8l3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ys-2QV3-Ee2F0PVRnb5fbg" name="enterFlowName" method="_y3EmY13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ys-2Ql3-Ee2F0PVRnb5fbg" name="ctx" type="_ys-PMF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytArcV3-Ee2F0PVRnb5fbg" name="exitSrcNode" method="_y3EmZV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytArcl3-Ee2F0PVRnb5fbg" name="ctx" type="_ytAEYF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytDHsV3-Ee2F0PVRnb5fbg" name="exitSnkNode" method="_y3FNcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytDHsl3-Ee2F0PVRnb5fbg" name="ctx" type="_ytB5kl3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytE84V3-Ee2F0PVRnb5fbg" name="exitFlow" method="_y3FNcl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytE84l3-Ee2F0PVRnb5fbg" name="ctx" type="_ytDuwl3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yNwjoF3-Ee2F0PVRnb5fbg" name="InputGraphFile">
              <ownedComment xmi:id="_y4Q5MF3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y0S_MF3-Ee2F0PVRnb5fbg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0S_MV3-Ee2F0PVRnb5fbg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0S_Ml3-Ee2F0PVRnb5fbg" name="wfm" visibility="private" type="_yM19oF3-Ee2F0PVRnb5fbg" association="_y5avwV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0UNUF3-Ee2F0PVRnb5fbg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0UNUV3-Ee2F0PVRnb5fbg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0U0YV3-Ee2F0PVRnb5fbg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0VbcF3-Ee2F0PVRnb5fbg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3FNdF3-Ee2F0PVRnb5fbg" name="InputGraphFile" specification="_ytJ1YF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3FNdV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3FNdl3-Ee2F0PVRnb5fbg" type="_yNwjoF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3FNd13-Ee2F0PVRnb5fbg" name="InputGraphFile" specification="_ytLDgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3F0gF3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3F0gV3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3F0gl3-Ee2F0PVRnb5fbg" type="_yNwjoF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3F0g13-Ee2F0PVRnb5fbg" name="setGraphFileName" specification="_yNy_4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3F0hF3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3F0hV3-Ee2F0PVRnb5fbg" name="verifyGraphFileName" specification="_yNy_4l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3F0hl3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3F0h13-Ee2F0PVRnb5fbg" name="readGraphFile" specification="_yNzm8V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3F0iF3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3F0iV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3F0il3-Ee2F0PVRnb5fbg" name="getInputGraphFileName" specification="_yN0OAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3F0i13-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3F0jF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3GbkF3-Ee2F0PVRnb5fbg" name="readGraphFileContents" specification="_yN01EV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3GbkV3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Gbkl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Gbk13-Ee2F0PVRnb5fbg" name="printVerboseMessage" specification="_yN1cIV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3GblF3-Ee2F0PVRnb5fbg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3GblV3-Ee2F0PVRnb5fbg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Gbll3-Ee2F0PVRnb5fbg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yNy_4F3-Ee2F0PVRnb5fbg" name="setGraphFileName" visibility="private" method="_y3F0g13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNy_4V3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNy_4l3-Ee2F0PVRnb5fbg" name="verifyGraphFileName" visibility="private" method="_y3F0hV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNzm8F3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yNzm8V3-Ee2F0PVRnb5fbg" name="readGraphFile" method="_y3F0h13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yNzm8l3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN0OAF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yN0OAV3-Ee2F0PVRnb5fbg" name="getInputGraphFileName" visibility="private" method="_y3F0il3-Ee2F0PVRnb5fbg" raisedException="_yxY1IF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yN0OAl3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN01EF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yN01EV3-Ee2F0PVRnb5fbg" name="readGraphFileContents" visibility="private" method="_y3GbkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yN01El3-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN1cIF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yN1cIV3-Ee2F0PVRnb5fbg" name="printVerboseMessage" visibility="private" method="_y3Gbk13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yN1cIl3-Ee2F0PVRnb5fbg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN2DMF3-Ee2F0PVRnb5fbg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN2DMV3-Ee2F0PVRnb5fbg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ytJ1YF3-Ee2F0PVRnb5fbg" name="InputGraphFile" method="_y3FNdF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytKccV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytKccl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ytKccF3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytKcc13-Ee2F0PVRnb5fbg" type="_yNwjoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytLDgF3-Ee2F0PVRnb5fbg" name="InputGraphFile" method="_y3FNd13-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytLDg13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytLDhF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ytLDgV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytLDgl3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytLDhV3-Ee2F0PVRnb5fbg" type="_yNwjoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yN4fcF3-Ee2F0PVRnb5fbg" name="InstructionTimeSlot">
              <generalization xmi:id="_ytMRoF3-Ee2F0PVRnb5fbg" general="_yQPP4F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0WCgF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0WCgV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Gbl13-Ee2F0PVRnb5fbg" name="InstructionTimeSlot" specification="_yN5tkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3GbmF3-Ee2F0PVRnb5fbg" type="_yN4fcF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3HCoF3-Ee2F0PVRnb5fbg" name="InstructionTimeSlot" specification="_yN6UoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3HCoV3-Ee2F0PVRnb5fbg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3HCol3-Ee2F0PVRnb5fbg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3HCo13-Ee2F0PVRnb5fbg" type="_yN4fcF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3HCpF3-Ee2F0PVRnb5fbg" name="InstructionTimeSlot" specification="_yN7iwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3HCpV3-Ee2F0PVRnb5fbg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3HCpl3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3HCp13-Ee2F0PVRnb5fbg" type="_yN4fcF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yN5tkF3-Ee2F0PVRnb5fbg" name="InstructionTimeSlot" method="_y3Gbl13-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yN5tkV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yN5tkl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yN5tk13-Ee2F0PVRnb5fbg" type="_yN4fcF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yN6UoF3-Ee2F0PVRnb5fbg" name="InstructionTimeSlot" visibility="package" method="_y3HCoF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yN67sV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yN67sl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yN6UoV3-Ee2F0PVRnb5fbg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN67sF3-Ee2F0PVRnb5fbg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN67s13-Ee2F0PVRnb5fbg" type="_yN4fcF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yN7iwF3-Ee2F0PVRnb5fbg" name="InstructionTimeSlot" visibility="package" method="_y3HCpF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yN8J0F3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yN8J0V3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yN7iwV3-Ee2F0PVRnb5fbg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yN8J013-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN8J0l3-Ee2F0PVRnb5fbg" type="_yN4fcF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yN9X8F3-Ee2F0PVRnb5fbg" name="LatencyAnalysis">
              <ownedComment xmi:id="_y4Q5MV3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y0WpkF3-Ee2F0PVRnb5fbg" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0WpkV3-Ee2F0PVRnb5fbg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0XQoV3-Ee2F0PVRnb5fbg" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0X3sV3-Ee2F0PVRnb5fbg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0X3sl3-Ee2F0PVRnb5fbg" name="latencyReport" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y5b94V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0YewV3-Ee2F0PVRnb5fbg" name="program" visibility="private" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5dzEF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0ZF0V3-Ee2F0PVRnb5fbg" name="workload" visibility="private" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y5fBMF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0Zs4V3-Ee2F0PVRnb5fbg" name="programTable" visibility="private" type="_yPiFQF3-Ee2F0PVRnb5fbg" association="_y5foQV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0aT8V3-Ee2F0PVRnb5fbg" name="nodeIndex" visibility="private" type="_yrnkUF3-Ee2F0PVRnb5fbg" association="_y5g2YV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3HCqF3-Ee2F0PVRnb5fbg" name="LatencyAnalysis" specification="_ytP8AF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3HCqV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3HCql3-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3HpsF3-Ee2F0PVRnb5fbg" name="LatencyAnalysis" specification="_ytP8BV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3HpsV3-Ee2F0PVRnb5fbg" name="program" type="_yO6aMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Hpsl3-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Hps13-Ee2F0PVRnb5fbg" name="latencyReport" specification="_yN-mEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3HptF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3HptV3-Ee2F0PVRnb5fbg" name="numMatchingTx" specification="_yN_NIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Hptl3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Hpt13-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3HpuF3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3HpuV3-Ee2F0PVRnb5fbg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Hpul3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yN-mEF3-Ee2F0PVRnb5fbg" name="latencyReport" method="_y3Hps13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytQjE13-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yN_NIF3-Ee2F0PVRnb5fbg" name="numMatchingTx" method="_y3HptV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yN_NIV3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN_0MF3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN_0MV3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN_0Ml3-Ee2F0PVRnb5fbg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yN_0M13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ytP8AF3-Ee2F0PVRnb5fbg" name="LatencyAnalysis" visibility="package" method="_y3HCqF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytP8Al3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytP8A13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ytP8AV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytP8BF3-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytP8BV3-Ee2F0PVRnb5fbg" name="LatencyAnalysis" visibility="package" method="_y3HpsF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytQjEF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytQjEV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ytP8Bl3-Ee2F0PVRnb5fbg" name="program" type="_yO6aMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytQjEl3-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOC3gF3-Ee2F0PVRnb5fbg" name="LatencyVisualization">
              <ownedComment xmi:id="_y4Q5Ml3-Ee2F0PVRnb5fbg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ytS_UF3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0biEV3-Ee2F0PVRnb5fbg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0cJIF3-Ee2F0PVRnb5fbg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0cJIV3-Ee2F0PVRnb5fbg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0cJIl3-Ee2F0PVRnb5fbg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0cwMF3-Ee2F0PVRnb5fbg" name="warp" visibility="private" type="_yRzWIF3-Ee2F0PVRnb5fbg" association="_y5hdcV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0dXQF3-Ee2F0PVRnb5fbg" name="la" visibility="private" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5irkV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Hpu13-Ee2F0PVRnb5fbg" name="LatencyVisualization" specification="_ytSYQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3IQwF3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3IQwV3-Ee2F0PVRnb5fbg" type="_yOC3gF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ytSYQF3-Ee2F0PVRnb5fbg" name="LatencyVisualization" visibility="package" method="_y3Hpu13-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytSYQl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytSYQ13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ytSYQV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytSYRF3-Ee2F0PVRnb5fbg" type="_yOC3gF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOF60F3-Ee2F0PVRnb5fbg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_yxdGkF3-Ee2F0PVRnb5fbg" client="_yOF60F3-Ee2F0PVRnb5fbg" supplier="_ysXLMF3-Ee2F0PVRnb5fbg" contract="_ysXLMF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3IQwl3-Ee2F0PVRnb5fbg" name="compare" specification="_yxeUsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3IQw13-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3IQxF3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3IQxV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yxeUsF3-Ee2F0PVRnb5fbg" name="compare" method="_y3IQwl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxe7wF3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxe7wV3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxe7wl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOIXEF3-Ee2F0PVRnb5fbg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_yxgJ4F3-Ee2F0PVRnb5fbg" client="_yOIXEF3-Ee2F0PVRnb5fbg" supplier="_ysXLMF3-Ee2F0PVRnb5fbg" contract="_ysXLMF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3IQxl3-Ee2F0PVRnb5fbg" name="compare" specification="_yxhYAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3IQx13-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3IQyF3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3IQyV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yxhYAF3-Ee2F0PVRnb5fbg" name="compare" method="_y3IQxl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxhYAV3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxhYAl3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxh_EF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOKzUF3-Ee2F0PVRnb5fbg" name="Node">
              <generalization xmi:id="_ytXQwl3-Ee2F0PVRnb5fbg" general="_yT5n4F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0d-UF3-Ee2F0PVRnb5fbg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0d-UV3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0elYF3-Ee2F0PVRnb5fbg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0elYV3-Ee2F0PVRnb5fbg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0fMcF3-Ee2F0PVRnb5fbg" name="edges" type="_yrr1wF3-Ee2F0PVRnb5fbg" isReadOnly="true" association="_y5kgwF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0fzgV3-Ee2F0PVRnb5fbg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0fzgl3-Ee2F0PVRnb5fbg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yximIV3-Ee2F0PVRnb5fbg" client="_yOKzUF3-Ee2F0PVRnb5fbg" supplier="_ywrDcV3-Ee2F0PVRnb5fbg" contract="_ywrDcV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3I30F3-Ee2F0PVRnb5fbg" name="Node" specification="_yOMBcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3I30V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3I30l3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3I3013-Ee2F0PVRnb5fbg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3I31F3-Ee2F0PVRnb5fbg" type="_yOKzUF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3I31V3-Ee2F0PVRnb5fbg" name="compareTo" specification="_ytWCoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3I31l3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3I3113-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3I32F3-Ee2F0PVRnb5fbg" name="toString" specification="_yONPkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3I32V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3I32l3-Ee2F0PVRnb5fbg" name="addEdge" specification="_ytXQwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3I3213-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3I33F3-Ee2F0PVRnb5fbg" name="addConflict" specification="_yOPEwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3I33V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Je4F3-Ee2F0PVRnb5fbg" name="numEdges" specification="_yOPEwl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Je4V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Je4l3-Ee2F0PVRnb5fbg" name="print" specification="_yOPr0V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Je413-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Je5F3-Ee2F0PVRnb5fbg" name="print" specification="_yOQ58l3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yOMBcF3-Ee2F0PVRnb5fbg" name="Node" visibility="package" method="_y3I30F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yOMogl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yOMog13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yOMBcV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yOMogF3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yOMogV3-Ee2F0PVRnb5fbg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yOMohF3-Ee2F0PVRnb5fbg" type="_yOKzUF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yONPkF3-Ee2F0PVRnb5fbg" name="toString" method="_y3I32F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yON2oF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOPEwF3-Ee2F0PVRnb5fbg" name="addConflict" method="_y3I33F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yOPEwV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOPEwl3-Ee2F0PVRnb5fbg" name="numEdges" method="_y3Je4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yOPr0F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOPr0V3-Ee2F0PVRnb5fbg" name="print" method="_y3Je4l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yOQS4F3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOQ58l3-Ee2F0PVRnb5fbg" name="print" method="_y3Je5F3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_ytWCoF3-Ee2F0PVRnb5fbg" name="compareTo" method="_y3I31V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytWCoV3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytWCol3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ytXQwF3-Ee2F0PVRnb5fbg" name="addEdge" method="_y3I32l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytXQwV3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOT9QF3-Ee2F0PVRnb5fbg" name="NodeMap">
              <ownedComment xmi:id="_y4RgQF3-Ee2F0PVRnb5fbg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ytZF8F3-Ee2F0PVRnb5fbg" general="_yJ7zkF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0hBoF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0hBoV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOVLYF3-Ee2F0PVRnb5fbg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_y4RgQV3-Ee2F0PVRnb5fbg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ytbiMF3-Ee2F0PVRnb5fbg" general="_yQbdIF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Je5V3-Ee2F0PVRnb5fbg" name="NonPreemptiveSchedule" specification="_ytaUEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Je5l3-Ee2F0PVRnb5fbg" name="poset" type="_yOeVUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Je513-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Je6F3-Ee2F0PVRnb5fbg" type="_yOVLYF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ytaUEF3-Ee2F0PVRnb5fbg" name="NonPreemptiveSchedule" visibility="package" method="_y3Je5V3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yta7Il3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yta7I13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yta7IF3-Ee2F0PVRnb5fbg" name="poset" type="_yOeVUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yta7IV3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yta7JF3-Ee2F0PVRnb5fbg" type="_yOVLYF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOWZgF3-Ee2F0PVRnb5fbg" name="NotImplentedVisualization">
              <generalization xmi:id="_ytcJQF3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0hBol3-Ee2F0PVRnb5fbg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0hosF3-Ee2F0PVRnb5fbg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0hosV3-Ee2F0PVRnb5fbg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0hosl3-Ee2F0PVRnb5fbg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0iPwF3-Ee2F0PVRnb5fbg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0i20F3-Ee2F0PVRnb5fbg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3KF8F3-Ee2F0PVRnb5fbg" name="NotImplentedVisualization" specification="_yOXnoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3KF8V3-Ee2F0PVRnb5fbg" type="_yOWZgF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3KF8l3-Ee2F0PVRnb5fbg" name="NotImplentedVisualization" specification="_yOYOsV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3KF813-Ee2F0PVRnb5fbg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3KF9F3-Ee2F0PVRnb5fbg" type="_yOWZgF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3KF9V3-Ee2F0PVRnb5fbg" name="visualization" specification="_yOY1w13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3KF9l3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yOXnoF3-Ee2F0PVRnb5fbg" name="NotImplentedVisualization" visibility="package" method="_y3KF8F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yOXnoV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yOXnol3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yOYOsF3-Ee2F0PVRnb5fbg" type="_yOWZgF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yOYOsV3-Ee2F0PVRnb5fbg" name="NotImplentedVisualization" visibility="package" method="_y3KF8l3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yOY1wF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yOY1wV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yOYOsl3-Ee2F0PVRnb5fbg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yOY1wl3-Ee2F0PVRnb5fbg" type="_yOWZgF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yOY1w13-Ee2F0PVRnb5fbg" name="visualization" method="_y3KF9V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytbiMV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yObSAF3-Ee2F0PVRnb5fbg" name="PeriodComparator">
              <interfaceRealization xmi:id="_yxlpcF3-Ee2F0PVRnb5fbg" client="_yObSAF3-Ee2F0PVRnb5fbg" supplier="_ysXLMF3-Ee2F0PVRnb5fbg" contract="_ysXLMF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3KtAF3-Ee2F0PVRnb5fbg" name="compare" specification="_yxneoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3KtAV3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3KtAl3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3KtA13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yxneoF3-Ee2F0PVRnb5fbg" name="compare" method="_y3KtAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxneoV3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxneol3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxneo13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOeVUF3-Ee2F0PVRnb5fbg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_y4RgQl3-Ee2F0PVRnb5fbg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y0i20V3-Ee2F0PVRnb5fbg" name="activations" visibility="private" type="_yK9uUF3-Ee2F0PVRnb5fbg" association="_y5lH0V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0kE8F3-Ee2F0PVRnb5fbg" name="workload" visibility="private" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y5mV8V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0ksAF3-Ee2F0PVRnb5fbg" name="flows" visibility="protected" type="_yM_HkF3-Ee2F0PVRnb5fbg" association="_y5mV9F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_y0ksAl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y0ksA13-Ee2F0PVRnb5fbg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0ksAV3-Ee2F0PVRnb5fbg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0lTEV3-Ee2F0PVRnb5fbg" name="nodes" visibility="private" type="_yOKzUF3-Ee2F0PVRnb5fbg" association="_y5oLIV3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_y0l6IF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y0l6IV3-Ee2F0PVRnb5fbg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0lTEl3-Ee2F0PVRnb5fbg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0l6I13-Ee2F0PVRnb5fbg" name="nodeMap" visibility="private" type="_yOT9QF3-Ee2F0PVRnb5fbg" association="_y5oyMV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0mhMV3-Ee2F0PVRnb5fbg" name="priorityQueue" visibility="private" type="_yP1nQF3-Ee2F0PVRnb5fbg" association="_y5pZQV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0oWYF3-Ee2F0PVRnb5fbg" name="nodeConnectivityMap" visibility="protected" type="_yrnkUF3-Ee2F0PVRnb5fbg" association="_y5qAUV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0pkgV3-Ee2F0PVRnb5fbg" name="activationMap" visibility="package" type="_yNdBoF3-Ee2F0PVRnb5fbg" association="_y5qnYV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3KtBF3-Ee2F0PVRnb5fbg" name="Poset" specification="_ytgasF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3KtBV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3KtBl3-Ee2F0PVRnb5fbg" type="_yOeVUF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3LUEF3-Ee2F0PVRnb5fbg" name="getNodeConnectivity" specification="_yOgxkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3LUEV3-Ee2F0PVRnb5fbg" type="_yrnkUF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3LUEl3-Ee2F0PVRnb5fbg" name="getNodeNames" specification="_yOh_sF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3LUE13-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3LUFF3-Ee2F0PVRnb5fbg" name="getNodesNamesOrderedAlphabetically" specification="_yOjN0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3LUFV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3LUFl3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3LUF13-Ee2F0PVRnb5fbg" name="buildPosetOfActivations" specification="_yOkb8F3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3L7IF3-Ee2F0PVRnb5fbg" name="createEdgeLists" specification="_yOkb8V3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3L7IV3-Ee2F0PVRnb5fbg" name="createConflictLists" specification="_yOkb8l3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3L7Il3-Ee2F0PVRnb5fbg" name="createGlobalConflictLists" specification="_yOkb813-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3L7I13-Ee2F0PVRnb5fbg" name="createLocalConflictLists" specification="_yOkb9F3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3L7JF3-Ee2F0PVRnb5fbg" name="findCoordinator" specification="_yxp64F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3L7JV3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3L7Jl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3MiMF3-Ee2F0PVRnb5fbg" name="buildTxArray" specification="_yxrJAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3MiMV3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3MiMl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3MiM13-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3MiNF3-Ee2F0PVRnb5fbg" name="createInitialActivations" specification="_yOlqEF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3MiNV3-Ee2F0PVRnb5fbg" name="getMaxTx" specification="_ytho0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3MiNl3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3MiN13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NJQF3-Ee2F0PVRnb5fbg" name="getActivation" specification="_ytiP4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3NJQV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3NJQl3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3NJQ13-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NJRF3-Ee2F0PVRnb5fbg" name="getHyperPeriod" specification="_yOlqEV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3NJRV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NJRl3-Ee2F0PVRnb5fbg" name="getMaxPhase" specification="_yOm4MF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3NJR13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NJSF3-Ee2F0PVRnb5fbg" name="orderActivations" specification="_yOm4Ml3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NJSV3-Ee2F0PVRnb5fbg" name="getNextActivation" specification="_yOm4M13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3NJSl3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NwUF3-Ee2F0PVRnb5fbg" name="addActivation" specification="_yti28V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3NwUV3-Ee2F0PVRnb5fbg" name="activation" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3NwUl3-Ee2F0PVRnb5fbg" name="findBaseStation" specification="_yOnfQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3NwU13-Ee2F0PVRnb5fbg" type="_yOKzUF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yOgxkF3-Ee2F0PVRnb5fbg" name="getNodeConnectivity" visibility="private" method="_y3LUEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxpT0F3-Ee2F0PVRnb5fbg" type="_yrnkUF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yOh_sF3-Ee2F0PVRnb5fbg" name="getNodeNames" method="_y3LUEl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxpT0V3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yOjN0F3-Ee2F0PVRnb5fbg" name="getNodesNamesOrderedAlphabetically" method="_y3LUFF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yOjN0V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yOjN0l3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOkb8F3-Ee2F0PVRnb5fbg" name="buildPosetOfActivations" method="_y3LUF13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOkb8V3-Ee2F0PVRnb5fbg" name="createEdgeLists" visibility="private" method="_y3L7IF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOkb8l3-Ee2F0PVRnb5fbg" name="createConflictLists" visibility="private" method="_y3L7IV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOkb813-Ee2F0PVRnb5fbg" name="createGlobalConflictLists" visibility="private" method="_y3L7Il3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOkb9F3-Ee2F0PVRnb5fbg" name="createLocalConflictLists" visibility="private" method="_y3L7I13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOlqEF3-Ee2F0PVRnb5fbg" name="createInitialActivations" visibility="private" method="_y3MiNF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOlqEV3-Ee2F0PVRnb5fbg" name="getHyperPeriod" method="_y3NJRF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yOlqEl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOm4MF3-Ee2F0PVRnb5fbg" name="getMaxPhase" method="_y3NJRl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yOm4MV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yOm4Ml3-Ee2F0PVRnb5fbg" name="orderActivations" method="_y3NJSF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yOm4M13-Ee2F0PVRnb5fbg" name="getNextActivation" method="_y3NJSV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4RgRV3-Ee2F0PVRnb5fbg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_yti28F3-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yOnfQF3-Ee2F0PVRnb5fbg" name="findBaseStation" visibility="protected" method="_y3NwUl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SHUV3-Ee2F0PVRnb5fbg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_ytjeAF3-Ee2F0PVRnb5fbg" type="_yOKzUF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytgasF3-Ee2F0PVRnb5fbg" name="Poset" visibility="package" method="_y3KtBF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytgasl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytgas13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4RgQ13-Ee2F0PVRnb5fbg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_ytgasV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytgatF3-Ee2F0PVRnb5fbg" type="_yOeVUF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytho0F3-Ee2F0PVRnb5fbg" name="getMaxTx" visibility="private" method="_y3MiNV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytho0V3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytho0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ytiP4F3-Ee2F0PVRnb5fbg" name="getActivation" visibility="private" method="_y3NJQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytiP4V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytiP4l3-Ee2F0PVRnb5fbg" name="node" type="_yOKzUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytiP413-Ee2F0PVRnb5fbg" type="_yKIn4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yti28V3-Ee2F0PVRnb5fbg" name="addActivation" method="_y3NwUF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SHUF3-Ee2F0PVRnb5fbg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_yti28l3-Ee2F0PVRnb5fbg" name="activation" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yxp64F3-Ee2F0PVRnb5fbg" name="findCoordinator" visibility="protected" method="_y3L7JF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4RgRF3-Ee2F0PVRnb5fbg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yxp64V3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxp64l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yxrJAF3-Ee2F0PVRnb5fbg" name="buildTxArray" visibility="private" method="_y3MiMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yxrJAV3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yxrJAl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxrJA13-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yOuM8F3-Ee2F0PVRnb5fbg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_y4SHUl3-Ee2F0PVRnb5fbg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ytvEMl3-Ee2F0PVRnb5fbg" general="_yQbdIF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3OXYF3-Ee2F0PVRnb5fbg" name="PreemptiveSchedule" specification="_ytmhUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3OXYV3-Ee2F0PVRnb5fbg" name="poset" type="_yOeVUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3OXYl3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3OXY13-Ee2F0PVRnb5fbg" type="_yOuM8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3OXZF3-Ee2F0PVRnb5fbg" name="continueSearch" specification="_ytnIYl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3OXZV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3OXZl3-Ee2F0PVRnb5fbg" name="activation" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3OXZ13-Ee2F0PVRnb5fbg" type="_yx-D8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3OXaF3-Ee2F0PVRnb5fbg" name="toProgram" specification="_yOvbEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3OXaV3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3OXal3-Ee2F0PVRnb5fbg" name="findPreeptiveChannelAndTime" specification="_ytpkoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3OXa13-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3OXbF3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3OXbV3-Ee2F0PVRnb5fbg" type="_yx-D8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3OXbl3-Ee2F0PVRnb5fbg" name="findAdditionalTime" specification="_ytqLsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3OXb13-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3OXcF3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3OXcV3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3OXcl3-Ee2F0PVRnb5fbg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3OXc13-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3O-cF3-Ee2F0PVRnb5fbg" name="findMaxTimeAvailable" specification="_ytsA4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3O-cV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3O-cl3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3O-c13-Ee2F0PVRnb5fbg" type="_yx-D8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3O-dF3-Ee2F0PVRnb5fbg" name="availableTime" specification="_ytsn8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3O-dV3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3O-dl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3O-d13-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3O-eF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3PlgF3-Ee2F0PVRnb5fbg" name="addToSchedule" specification="_yttPA13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3PlgV3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Plgl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Plg13-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3PlhF3-Ee2F0PVRnb5fbg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3PlhV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Plhl3-Ee2F0PVRnb5fbg" name="addToSchedule" specification="_ytudIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Plh13-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3PliF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yOvbEF3-Ee2F0PVRnb5fbg" name="toProgram" method="_y3OXaF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yto9kF3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytmhUF3-Ee2F0PVRnb5fbg" name="PreemptiveSchedule" visibility="package" method="_y3OXYF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ytmhU13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytnIYF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ytmhUV3-Ee2F0PVRnb5fbg" name="poset" type="_yOeVUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytmhUl3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytnIYV3-Ee2F0PVRnb5fbg" type="_yOuM8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytnIYl3-Ee2F0PVRnb5fbg" name="continueSearch" visibility="protected" method="_y3OXZF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytnIY13-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytnvcF3-Ee2F0PVRnb5fbg" name="activation" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yx_SEF3-Ee2F0PVRnb5fbg" type="_yx-D8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytpkoF3-Ee2F0PVRnb5fbg" name="findPreeptiveChannelAndTime" visibility="private" method="_y3OXal3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytpkoV3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytpkol3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yx_SEV3-Ee2F0PVRnb5fbg" type="_yx-D8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytqLsF3-Ee2F0PVRnb5fbg" name="findAdditionalTime" visibility="private" method="_y3OXbl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytqLsV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytqLsl3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytqLs13-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytqywF3-Ee2F0PVRnb5fbg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yx_SEl3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytsA4F3-Ee2F0PVRnb5fbg" name="findMaxTimeAvailable" visibility="private" method="_y3O-cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytsA4V3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytsA4l3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yx_5IF3-Ee2F0PVRnb5fbg" type="_yx-D8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ytsn8F3-Ee2F0PVRnb5fbg" name="availableTime" visibility="private" method="_y3O-dF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytsn8V3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yttPAF3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yttPAV3-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yttPAl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yttPA13-Ee2F0PVRnb5fbg" name="addToSchedule" visibility="private" method="_y3PlgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytt2EF3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytt2EV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytt2El3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytt2E13-Ee2F0PVRnb5fbg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ytt2FF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ytudIF3-Ee2F0PVRnb5fbg" name="addToSchedule" visibility="protected" method="_y3Plhl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ytudIV3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ytudIl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yO3W4F3-Ee2F0PVRnb5fbg" name="PriorityComparator">
              <interfaceRealization xmi:id="_yyAgMF3-Ee2F0PVRnb5fbg" client="_yO3W4F3-Ee2F0PVRnb5fbg" supplier="_ysXLMF3-Ee2F0PVRnb5fbg" contract="_ysXLMF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3PliV3-Ee2F0PVRnb5fbg" name="compare" specification="_yyCVYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Plil3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Pli13-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3PljF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yyCVYF3-Ee2F0PVRnb5fbg" name="compare" method="_y3PliV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyCVYV3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyCVYl3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyC8cF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yO6aMF3-Ee2F0PVRnb5fbg" name="Program">
              <ownedComment xmi:id="_y4SHU13-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y0sAwF3-Ee2F0PVRnb5fbg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0sAwV3-Ee2F0PVRnb5fbg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0sn0F3-Ee2F0PVRnb5fbg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0sn0V3-Ee2F0PVRnb5fbg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0sn0l3-Ee2F0PVRnb5fbg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0tO4F3-Ee2F0PVRnb5fbg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0tO4V3-Ee2F0PVRnb5fbg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0tO4l3-Ee2F0PVRnb5fbg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0t18F3-Ee2F0PVRnb5fbg" name="workLoad" visibility="package" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y5rOcV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0udAF3-Ee2F0PVRnb5fbg" name="scheduleBuilt" visibility="package" type="_yPiFQF3-Ee2F0PVRnb5fbg" association="_y5r1gV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0vEEF3-Ee2F0PVRnb5fbg" name="SchedulerSelected" visibility="package" type="_yyEKkF3-Ee2F0PVRnb5fbg" association="_y5sckV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0vrIF3-Ee2F0PVRnb5fbg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0vrIl3-Ee2F0PVRnb5fbg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0wSMV3-Ee2F0PVRnb5fbg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0w5QV3-Ee2F0PVRnb5fbg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0xgUV3-Ee2F0PVRnb5fbg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0yHYF3-Ee2F0PVRnb5fbg" name="channelsAvailable" visibility="package" type="_yLNl8F3-Ee2F0PVRnb5fbg" association="_y5tqsV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0yucF3-Ee2F0PVRnb5fbg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0zVgF3-Ee2F0PVRnb5fbg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0z8kF3-Ee2F0PVRnb5fbg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y00joF3-Ee2F0PVRnb5fbg" name="deadlineMisses" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y5u40V3-Ee2F0PVRnb5fbg"/>
              <interfaceRealization xmi:id="_yt4OIF3-Ee2F0PVRnb5fbg" client="_yO6aMF3-Ee2F0PVRnb5fbg" supplier="_yQ5-QF3-Ee2F0PVRnb5fbg" contract="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3QMkF3-Ee2F0PVRnb5fbg" name="Program" specification="_yyF_wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3QMkV3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3QMkl3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3QMk13-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3QMlF3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3QMlV3-Ee2F0PVRnb5fbg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3QMll3-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3QzoF3-Ee2F0PVRnb5fbg" name="Program" specification="_yyHN4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3QzoV3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Qzol3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Qzo13-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3QzpF3-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3QzpV3-Ee2F0PVRnb5fbg" name="setDefaultParameters" specification="_yt7RcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Qzpl3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Qzp13-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3QzqF3-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3QzqV3-Ee2F0PVRnb5fbg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Qzql3-Ee2F0PVRnb5fbg" name="toWorkLoad" specification="_yO-EkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Qzq13-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3QzrF3-Ee2F0PVRnb5fbg" name="buildProgram" specification="_yyIcAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3QzrV3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3RasF3-Ee2F0PVRnb5fbg" name="buildOriginalProgram" specification="_yO-roF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3RasV3-Ee2F0PVRnb5fbg" name="waitInstruction" specification="_yO-roV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Rasl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Ras13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3RatF3-Ee2F0PVRnb5fbg" name="elseWaitInstruction" specification="_yO_5wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3RatV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Ratl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Rat13-Ee2F0PVRnb5fbg" name="elsePullClause" specification="_yPBH4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3RauF3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3RauV3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Raul3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Rau13-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3RavF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3RavV3-Ee2F0PVRnb5fbg" name="hasPushInstruction" specification="_yPCWAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3SBwF3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SBwV3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SBwl3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SBw13-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SBxF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3SBxV3-Ee2F0PVRnb5fbg" name="pushInstruction" specification="_yPC9FV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3SBxl3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SBx13-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SByF3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SByV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SByl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3SBy13-Ee2F0PVRnb5fbg" name="getFirstChannelInInstruction" specification="_yPELMV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3SBzF3-Ee2F0PVRnb5fbg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SBzV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3SBzl3-Ee2F0PVRnb5fbg" name="findNextAvailableInstructionTimeSlot" specification="_yt74gV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3SBz13-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3SB0F3-Ee2F0PVRnb5fbg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB0V3-Ee2F0PVRnb5fbg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB0l3-Ee2F0PVRnb5fbg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB013-Ee2F0PVRnb5fbg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB1F3-Ee2F0PVRnb5fbg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3SB1V3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB1l3-Ee2F0PVRnb5fbg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3SB113-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB2F3-Ee2F0PVRnb5fbg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB2V3-Ee2F0PVRnb5fbg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB2l3-Ee2F0PVRnb5fbg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB213-Ee2F0PVRnb5fbg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB3F3-Ee2F0PVRnb5fbg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3SB3V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3So0F3-Ee2F0PVRnb5fbg" name="slotIsAvailable" specification="_yt-UwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3So0V3-Ee2F0PVRnb5fbg" name="currentInstructionTimeSlot" type="_yN4fcF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3So0l3-Ee2F0PVRnb5fbg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3So013-Ee2F0PVRnb5fbg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3So1F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3So1V3-Ee2F0PVRnb5fbg" name="findNextAvailableChannel" specification="_yt_i4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3So1l3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3So113-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3So2F3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3So2V3-Ee2F0PVRnb5fbg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3So2l3-Ee2F0PVRnb5fbg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3So213-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>HashSet&lt;String> workingAvailableChannels = channelsAvailable.getChannelSet(currentTime);&#xD;
	  &#xD;
	  //find the channels used in the prior schedule time slot as they should not be used&#xD;
	  if (currentTime > 0)&#xD;
	  {&#xD;
		  Integer priorTime = currentTime - 1;&#xD;
		  &#xD;
		  //remove previous channels from working list for both srcNode and snkNode&#xD;
		  this.extractChannels(schedule, workingAvailableChannels, srcNodeIndex, priorTime);&#xD;
		  this.extractChannels(schedule, workingAvailableChannels, snkNodeIndex, priorTime);&#xD;
	  }&#xD;
	 &#xD;
	  //get the last used channel for the node&#xD;
	  Integer lastUsedChannel = workLoad.getNodeChannel(nodeName);&#xD;
	  &#xD;
	  //increment channel as we don't use the same channel in consecutive time slots&#xD;
	  Integer workingChannel = this.advanceChannel(lastUsedChannel);&#xD;
	  &#xD;
	  //search for next available channel from working set&#xD;
	  boolean channelFound = false;&#xD;
	  while (!channelFound &amp;&amp; !workingAvailableChannels.isEmpty())&#xD;
	  {&#xD;
		  String foundChannelName = workingChannel.toString();&#xD;
		  //channelRemoved is true if the channel removed from the working set,&#xD;
		  //making it a valid channel to use&#xD;
		  boolean channelRemoved = workingAvailableChannels.remove(foundChannelName);&#xD;
		  &#xD;
		  //if found a valid channel, return that channel, else continue searching&#xD;
		  if (channelRemoved)&#xD;
		  {&#xD;
			  return foundChannelName;&#xD;
		  }&#xD;
		  //setup next channel for loop&#xD;
		  else&#xD;
		  {&#xD;
			  workingChannel = this.advanceChannel(workingChannel);&#xD;
		  }&#xD;
	  }&#xD;
	  //return UNKNOWN to indicate no channel found. This should never happen.&#xD;
	  return UNKNOWN;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3So3F3-Ee2F0PVRnb5fbg" name="selectPriority" specification="_yPGAYF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP4F3-Ee2F0PVRnb5fbg" name="selectRM" specification="_yPGAYV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP4V3-Ee2F0PVRnb5fbg" name="selectDM" specification="_yPGncF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP4l3-Ee2F0PVRnb5fbg" name="selectRtHART" specification="_yPGncV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP413-Ee2F0PVRnb5fbg" name="setScheduleSelected" specification="_yyJDEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3TP5F3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP5V3-Ee2F0PVRnb5fbg" name="setSchedule" specification="_yuAxAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3TP5l3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP513-Ee2F0PVRnb5fbg" name="getSchedule" specification="_yPHOgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3TP6F3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP6V3-Ee2F0PVRnb5fbg" name="getSchedulerName" specification="_yPHOgV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3TP6l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP613-Ee2F0PVRnb5fbg" name="getSchChoice" specification="_yPIco13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3TP7F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3TP7V3-Ee2F0PVRnb5fbg" name="getNumChannels" specification="_yPJDsV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3TP7l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3T28F3-Ee2F0PVRnb5fbg" name="getNumTransmissions" specification="_yPKR0l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3T28V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3T28l3-Ee2F0PVRnb5fbg" name="getRealTimeHartFlag" specification="_yPLf8l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3T2813-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3T29F3-Ee2F0PVRnb5fbg" name="setRealTimeHartFlag" specification="_yPMHAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3T29V3-Ee2F0PVRnb5fbg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3T29l3-Ee2F0PVRnb5fbg" name="getMinPacketReceptionRate" specification="_yPMuEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3T2913-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3T2-F3-Ee2F0PVRnb5fbg" name="getE2e" specification="_yPN8MF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3T2-V3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3UeAF3-Ee2F0PVRnb5fbg" name="getName" specification="_yPOjQl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3UeAV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3UeAl3-Ee2F0PVRnb5fbg" name="getOptimizationFlag" specification="_yPPxYl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3UeA13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3UeBF3-Ee2F0PVRnb5fbg" name="deadlineMisses" specification="_yPQ_gl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3UeBV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3VFEF3-Ee2F0PVRnb5fbg" name="getNumFaults" specification="_yPRmkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3VFEV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3VFEl3-Ee2F0PVRnb5fbg" name="getNodeMapIndex" specification="_yPTbwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3VFE13-Ee2F0PVRnb5fbg" type="_yrnkUF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3VFFF3-Ee2F0PVRnb5fbg" name="extractChannels" specification="_yyLfUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3VFFV3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3VFFl3-Ee2F0PVRnb5fbg" name="workingChannelSet" type="_yrtD4V3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3VFF13-Ee2F0PVRnb5fbg" name="nodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3VFGF3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>//create for parsing instructions&#xD;
	  WarpDSL dsl = new WarpDSL();&#xD;
	  &#xD;
	  String priorInstruction = schedule.get(timeSlot).get(nodeIndex);&#xD;
&#xD;
	  //get the parameters from the instruction in the node's prior time slot&#xD;
	  ArrayList&lt;InstructionParameters> instructionParametersList = dsl.getInstructionParameters(priorInstruction); &#xD;
  	&#xD;
	  for (int i = 0; i &lt; instructionParametersList.size(); i++) {&#xD;
		  //get a copy of the parameters&#xD;
		  InstructionParameters instructionParameters = instructionParametersList.get(i);&#xD;
		  &#xD;
		  //remove parameters from channels&#xD;
  		  workingChannelSet.remove(instructionParameters.getChannel());&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3VsIF3-Ee2F0PVRnb5fbg" name="advanceChannel" specification="_yPV4AF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3VsIV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3VsIl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (channel &lt; getNumChannels())&#xD;
		  return (channel + 1);&#xD;
	  return 0;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yO-EkF3-Ee2F0PVRnb5fbg" name="toWorkLoad" method="_y3Qzql3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SHVF3-Ee2F0PVRnb5fbg">
                  <body>Returns the WorkLoad attribute of the Program object.&#xD;
@return workLoad.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yt74gF3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yO-roF3-Ee2F0PVRnb5fbg" name="buildOriginalProgram" method="_y3RasF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yO-roV3-Ee2F0PVRnb5fbg" name="waitInstruction" visibility="private" method="_y3RasV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yO-rol3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yO_SsF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yO_5wF3-Ee2F0PVRnb5fbg" name="elseWaitInstruction" visibility="private" method="_y3RatF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yO_5wV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yO_5wl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPBH4F3-Ee2F0PVRnb5fbg" name="elsePullClause" visibility="private" method="_y3Rat13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPBH4V3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPBH4l3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPBH413-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPBH5F3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPBH5V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPCWAF3-Ee2F0PVRnb5fbg" name="hasPushInstruction" visibility="private" method="_y3RavV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPC9EF3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPC9EV3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPC9El3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPC9E13-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPC9FF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPC9FV3-Ee2F0PVRnb5fbg" name="pushInstruction" visibility="private" method="_y3SBxV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPDkIF3-Ee2F0PVRnb5fbg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPDkIV3-Ee2F0PVRnb5fbg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPDkIl3-Ee2F0PVRnb5fbg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPDkI13-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPELMF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPELMV3-Ee2F0PVRnb5fbg" name="getFirstChannelInInstruction" visibility="private" method="_y3SBy13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPELMl3-Ee2F0PVRnb5fbg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPELM13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPGAYF3-Ee2F0PVRnb5fbg" name="selectPriority" method="_y3So3F3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yPGAYV3-Ee2F0PVRnb5fbg" name="selectRM" method="_y3TP4F3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yPGncF3-Ee2F0PVRnb5fbg" name="selectDM" method="_y3TP4V3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yPGncV3-Ee2F0PVRnb5fbg" name="selectRtHART" method="_y3TP4l3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yPHOgF3-Ee2F0PVRnb5fbg" name="getSchedule" method="_y3TP513-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SuYV3-Ee2F0PVRnb5fbg">
                  <body>Returns the ProgramSchedule attribute of the Program object.&#xD;
   * @return scheduleBuilt.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yuBYEF3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPHOgV3-Ee2F0PVRnb5fbg" name="getSchedulerName" method="_y3TP6V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPH1kF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPIco13-Ee2F0PVRnb5fbg" name="getSchChoice" method="_y3TP613-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPJDsF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPJDsV3-Ee2F0PVRnb5fbg" name="getNumChannels" method="_y3TP7V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPJqwF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPKR0l3-Ee2F0PVRnb5fbg" name="getNumTransmissions" method="_y3T28F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPK44F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPLf8l3-Ee2F0PVRnb5fbg" name="getRealTimeHartFlag" visibility="private" method="_y3T28l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPLf813-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPMHAF3-Ee2F0PVRnb5fbg" name="setRealTimeHartFlag" visibility="private" method="_y3T29F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPMHAV3-Ee2F0PVRnb5fbg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPMuEF3-Ee2F0PVRnb5fbg" name="getMinPacketReceptionRate" method="_y3T29l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyKRMV3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPN8MF3-Ee2F0PVRnb5fbg" name="getE2e" method="_y3T2-F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyK4QF3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPOjQl3-Ee2F0PVRnb5fbg" name="getName" method="_y3UeAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPPKUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPPxYl3-Ee2F0PVRnb5fbg" name="getOptimizationFlag" method="_y3UeAl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPQYcF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPQ_gl3-Ee2F0PVRnb5fbg" name="deadlineMisses" method="_y3UeBF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuBYEV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPRmkF3-Ee2F0PVRnb5fbg" name="getNumFaults" method="_y3VFEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yPRmkV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yPTbwF3-Ee2F0PVRnb5fbg" name="getNodeMapIndex" method="_y3VFEl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SuYl3-Ee2F0PVRnb5fbg">
                  <body>Creates a new mapping from node names (sorted alphabetically) to their index in the&#xD;
   * schedule table and returns the mapping.&#xD;
   * &#xD;
   * @return A HashMap of the node to index mapping.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yyK4QV3-Ee2F0PVRnb5fbg" type="_yrnkUF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPV4AF3-Ee2F0PVRnb5fbg" name="advanceChannel" visibility="private" method="_y3VsIF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SuZF3-Ee2F0PVRnb5fbg">
                  <body>Returns the next channel, rolling over to zero when channel reaches channel length.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param channel, an Integer of the given channel&#xD;
   * @return The next channel with rollover.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yPV4AV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPV4Al3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yt7RcF3-Ee2F0PVRnb5fbg" name="setDefaultParameters" visibility="private" method="_y3QzpV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yt7RcV3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yt7Rcl3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt7Rc13-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt7RdF3-Ee2F0PVRnb5fbg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yt74gV3-Ee2F0PVRnb5fbg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_y3SBzl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yt8fkF3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yt8fkV3-Ee2F0PVRnb5fbg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt8fkl3-Ee2F0PVRnb5fbg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt8fk13-Ee2F0PVRnb5fbg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt8flF3-Ee2F0PVRnb5fbg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt8flV3-Ee2F0PVRnb5fbg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yt9tsF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt8fll3-Ee2F0PVRnb5fbg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yt9tsV3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt8fl13-Ee2F0PVRnb5fbg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt9GoF3-Ee2F0PVRnb5fbg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt9GoV3-Ee2F0PVRnb5fbg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt9Gol3-Ee2F0PVRnb5fbg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt9Go13-Ee2F0PVRnb5fbg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt9GpF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yt-UwF3-Ee2F0PVRnb5fbg" name="slotIsAvailable" visibility="private" method="_y3So0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yt-UwV3-Ee2F0PVRnb5fbg" name="currentInstructionTimeSlot" type="_yN4fcF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yt-70F3-Ee2F0PVRnb5fbg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt-70V3-Ee2F0PVRnb5fbg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt-70l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yt_i4F3-Ee2F0PVRnb5fbg" name="findNextAvailableChannel" visibility="private" method="_y3So1V3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SuYF3-Ee2F0PVRnb5fbg">
                  <body>For a given a node, returns the best channel to be used next in the schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param schedule, the ProgramSchedule to get the prior time slot&#xD;
   * @param nodeName, a String of the name of the node&#xD;
   * @param currentTime, an Integer of the current time&#xD;
   * @param srcNodeIndex, an Integer of the source node index value&#xD;
   * @param snkNodeIndex, an Integer of the sink node index value&#xD;
   * @return UNKNOWN (a string) to indicate no channel found.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yt_i4V3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yt_i4l3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt_i413-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt_i5F3-Ee2F0PVRnb5fbg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yt_i5V3-Ee2F0PVRnb5fbg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuAJ8F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuAxAF3-Ee2F0PVRnb5fbg" name="setSchedule" visibility="private" method="_y3TP5V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuAxAV3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyF_wF3-Ee2F0PVRnb5fbg" name="Program" visibility="package" method="_y3QMkF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyGm1V3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyGm1l3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyGm0F3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyGm0V3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyGm0l3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyGm013-Ee2F0PVRnb5fbg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyGm1F3-Ee2F0PVRnb5fbg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyGm113-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyHN4F3-Ee2F0PVRnb5fbg" name="Program" visibility="package" method="_y3QzoF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyH08F3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyH08V3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyHN4V3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyHN4l3-Ee2F0PVRnb5fbg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyHN413-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyH08l3-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyIcAF3-Ee2F0PVRnb5fbg" name="buildProgram" method="_y3QzrF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyIcAV3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyJDEF3-Ee2F0PVRnb5fbg" name="setScheduleSelected" visibility="private" method="_y3TP413-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyJDEV3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyLfUF3-Ee2F0PVRnb5fbg" name="extractChannels" visibility="private" method="_y3VFFF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4SuY13-Ee2F0PVRnb5fbg">
                  <body>Helper method for findNextAvailableChannel(...). Finds the channels from&#xD;
   * the given node and time slot and removes it from the workingChannelSet. &lt;br> &lt;br>&#xD;
   * &#xD;
   * NOTE: Calls methods and modifies the @param workingChannelSet.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param schedule, the ProgramSchedule to get prior instruction&#xD;
   * @param workingChannelSet, a String HashSet of channels that are potentially viable&#xD;
   * @param nodeIndex, an Integer representing the node&#xD;
   * @param timeSlot, an Integer representing the time slot</body>
                </ownedComment>
                <ownedParameter xmi:id="_yyLfUV3-Ee2F0PVRnb5fbg" name="schedule" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyLfUl3-Ee2F0PVRnb5fbg" name="workingChannelSet" type="_yrtD4V3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyLfU13-Ee2F0PVRnb5fbg" name="nodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyLfVF3-Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPiFQF3-Ee2F0PVRnb5fbg" name="ProgramSchedule">
              <generalization xmi:id="_yuIs0F3-Ee2F0PVRnb5fbg" general="_yRDvQF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y02_4F3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y02_4V3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3W6QF3-Ee2F0PVRnb5fbg" name="ProgramSchedule" specification="_yPjTYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3W6QV3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3W6Ql3-Ee2F0PVRnb5fbg" name="ProgramSchedule" specification="_yPjTZF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3W6Q13-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3W6RF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3W6RV3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPjTYF3-Ee2F0PVRnb5fbg" name="ProgramSchedule" method="_y3W6QF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yPjTYV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPjTYl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPjTY13-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPjTZF3-Ee2F0PVRnb5fbg" name="ProgramSchedule" visibility="package" method="_y3W6Ql3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yPj6cV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yPj6cl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yPjTZV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPj6cF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yPj6c13-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPlIkF3-Ee2F0PVRnb5fbg" name="ProgramVisualization">
              <ownedComment xmi:id="_y4SuZV3-Ee2F0PVRnb5fbg">
                <body>&lt;h1>Implementation of Program Visualization.&lt;/h1>&#xD;
&lt;p>The ProgramVisualization class allows a warp Interface to be converted to program and visualized.&lt;/p>&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.2</body>
              </ownedComment>
              <generalization xmi:id="_yuLwIV3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y03m8F3-Ee2F0PVRnb5fbg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y03m8V3-Ee2F0PVRnb5fbg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y03m8l3-Ee2F0PVRnb5fbg" name="sourceCode" visibility="private" type="_yPiFQF3-Ee2F0PVRnb5fbg" association="_y5wG8F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y04OAV3-Ee2F0PVRnb5fbg" name="program" visibility="private" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5xVEV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y041EV3-Ee2F0PVRnb5fbg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3XhUF3-Ee2F0PVRnb5fbg" name="ProgramVisualization" specification="_yuKiAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3XhUV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3XhUl3-Ee2F0PVRnb5fbg" type="_yPlIkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3XhU13-Ee2F0PVRnb5fbg" name="visualization" specification="_yPmWsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3XhVF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
&#xD;
 /* create schedule output header of column node names in order, with \t as separator */&#xD;
 String nodeString = &quot;Time Slot\t&quot;;&#xD;
 /* loop through the node names, stopping just before last name */&#xD;
 for (int i = 0; i &lt; orderedNodes.length - 1; i++) {&#xD;
   /* add each name to the string, with \t between each name */&#xD;
   nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);&#xD;
 }&#xD;
 /* add the last name with \n instead of \t at the end */&#xD;
 nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length - 1]);&#xD;
 content.add(nodeString);&#xD;
&#xD;
 for (int rowIndex = 0; rowIndex &lt; sourceCode.size(); rowIndex++) {&#xD;
   ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);&#xD;
   var row = rowArrayList.toArray(new String[rowArrayList.size()]);&#xD;
   String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
   content.add(rowString);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3XhVV3-Ee2F0PVRnb5fbg" name="createHeader" specification="_yPnk0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3XhVl3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(String.format(&quot;WARP system for graph %s created with the following parameters:\n&quot;,&#xD;
     program.getName()));&#xD;
 header.add(String.format(&quot;Scheduler Name:\t%s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
   header.add(String.format(&quot;nTransmissions:\t%d\n&quot;, program.getNumTransmissions()));&#xD;
 } else if (program.getNumFaults() > 0) {&#xD;
   header.add(String.format(&quot;numFaults:\t%d\n&quot;, program.getNumFaults()));&#xD;
 } else {&#xD;
   header.add(String.format(&quot;M:\t%s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
   header.add(String.format(&quot;E2E:\t%s\n&quot;, String.valueOf(program.getE2e())));&#xD;
   header.add(String.format(&quot;nChannels:\t%d\n&quot;, program.getNumChannels()));&#xD;
 }&#xD;
 if (!program.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
   header.add(&quot;Optimization Requested:\tFalse\n&quot;);&#xD;
 }&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3YIYF3-Ee2F0PVRnb5fbg" name="createFooter" specification="_yPpaAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3YIYV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yPmWsF3-Ee2F0PVRnb5fbg" name="visualization" method="_y3XhU13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuLJEV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPnk0F3-Ee2F0PVRnb5fbg" name="createHeader" method="_y3XhVV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuLJEl3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yPpaAF3-Ee2F0PVRnb5fbg" name="createFooter" method="_y3YIYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuLwIF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yuKiAF3-Ee2F0PVRnb5fbg" name="ProgramVisualization" visibility="package" method="_y3XhUF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yuKiAl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yuKiA13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4TVcF3-Ee2F0PVRnb5fbg">
                  <body>Constructor converts WarpInterface to Program for visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to convert to program for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_yuKiAV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuLJEF3-Ee2F0PVRnb5fbg" type="_yPlIkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPvgoF3-Ee2F0PVRnb5fbg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_yyPwwF3-Ee2F0PVRnb5fbg" client="_yPvgoF3-Ee2F0PVRnb5fbg" supplier="_ysXLMF3-Ee2F0PVRnb5fbg" contract="_ysXLMF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3YIYl3-Ee2F0PVRnb5fbg" name="compare" specification="_yyQ-4V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3YIY13-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3YIZF3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3YIZV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yyQ-4V3-Ee2F0PVRnb5fbg" name="compare" method="_y3YIYl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyRl8F3-Ee2F0PVRnb5fbg" name="obj1" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyRl8V3-Ee2F0PVRnb5fbg" name="obj2" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyRl8l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yPx84F3-Ee2F0PVRnb5fbg" name="ReleaseTimeQueue">
              <generalization xmi:id="_yP3ccF3-Ee2F0PVRnb5fbg" general="_yP1nQF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y05cIV3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y05cIl3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3YIZl3-Ee2F0PVRnb5fbg" name="ReleaseTimeQueue" specification="_yP1AMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3YIZ13-Ee2F0PVRnb5fbg" type="_yPx84F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3YvcF3-Ee2F0PVRnb5fbg" name="ReleaseTimeQueue" specification="_yuNlUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3YvcV3-Ee2F0PVRnb5fbg" name="schedulableObjects" type="_ytd-cF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3Yvcl3-Ee2F0PVRnb5fbg" type="_yPx84F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yP1AMF3-Ee2F0PVRnb5fbg" name="ReleaseTimeQueue" visibility="package" method="_y3YIZl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yP1AMV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yP1AMl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yP1AM13-Ee2F0PVRnb5fbg" type="_yPx84F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yuNlUF3-Ee2F0PVRnb5fbg" name="ReleaseTimeQueue" visibility="package" method="_y3YvcF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yuOMYF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yuOMYV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yuNlUV3-Ee2F0PVRnb5fbg" name="schedulableObjects" type="_ytd-cF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuOMYl3-Ee2F0PVRnb5fbg" type="_yPx84F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yP5RoF3-Ee2F0PVRnb5fbg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_y4TVcV3-Ee2F0PVRnb5fbg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in WarpTester.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Yvc13-Ee2F0PVRnb5fbg" name="ReliabilityAnalysis" specification="_yuPagF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3YvdF3-Ee2F0PVRnb5fbg" name="program" type="_yO6aMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3YvdV3-Ee2F0PVRnb5fbg" type="_yP5RoF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Yvdl3-Ee2F0PVRnb5fbg" name="verifyReliabilities" specification="_yP6fwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Yvd13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yP6fwF3-Ee2F0PVRnb5fbg" name="verifyReliabilities" method="_y3Yvdl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yP6fwV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuPagF3-Ee2F0PVRnb5fbg" name="ReliabilityAnalysis" method="_y3Yvc13-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yuPagl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yuPag13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yuPagV3-Ee2F0PVRnb5fbg" name="program" type="_yO6aMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuPahF3-Ee2F0PVRnb5fbg" type="_yP5RoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yP7t4F3-Ee2F0PVRnb5fbg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_y4TVcl3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yP7t4V3-Ee2F0PVRnb5fbg" name="minPacketReceptionRate" type="_yyJqIF3-Ee2F0PVRnb5fbg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_yP88AF3-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yP-KIF3-Ee2F0PVRnb5fbg" name="ReliabilityRow">
              <generalization xmi:id="_yuQooF3-Ee2F0PVRnb5fbg" general="_yQPP4F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y06DMF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y06DMV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ZWgF3-Ee2F0PVRnb5fbg" name="ReliabilityRow" specification="_yP-xMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ZWgV3-Ee2F0PVRnb5fbg" type="_yP-KIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ZWgl3-Ee2F0PVRnb5fbg" name="ReliabilityRow" specification="_yyTbIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ZWg13-Ee2F0PVRnb5fbg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3ZWhF3-Ee2F0PVRnb5fbg" name="element" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3ZWhV3-Ee2F0PVRnb5fbg" type="_yP-KIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ZWhl3-Ee2F0PVRnb5fbg" name="ReliabilityRow" specification="_yyUCMl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ZWh13-Ee2F0PVRnb5fbg" name="rowArray" type="_yyJqIF3-Ee2F0PVRnb5fbg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3ZWiF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3ZWiV3-Ee2F0PVRnb5fbg" type="_yP-KIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yP-xMF3-Ee2F0PVRnb5fbg" name="ReliabilityRow" method="_y3ZWgF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yP_YQF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yP_YQV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yP_YQl3-Ee2F0PVRnb5fbg" type="_yP-KIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyTbIF3-Ee2F0PVRnb5fbg" name="ReliabilityRow" visibility="package" method="_y3ZWgl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyTbI13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyUCMF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyTbIV3-Ee2F0PVRnb5fbg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyTbIl3-Ee2F0PVRnb5fbg" name="element" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyUCMV3-Ee2F0PVRnb5fbg" type="_yP-KIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyUCMl3-Ee2F0PVRnb5fbg" name="ReliabilityRow" visibility="package" method="_y3ZWhl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyUpQV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyUpQl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyUpQF3-Ee2F0PVRnb5fbg" name="rowArray" type="_yyJqIF3-Ee2F0PVRnb5fbg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyUpRF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyUpQ13-Ee2F0PVRnb5fbg" type="_yP-KIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQCbkF3-Ee2F0PVRnb5fbg" name="ReliabilityTable">
              <generalization xmi:id="_yuSd0F3-Ee2F0PVRnb5fbg" general="_yRDvQF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y06qQF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y06qQV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Z9kF3-Ee2F0PVRnb5fbg" name="ReliabilityTable" specification="_yQDCoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Z9kV3-Ee2F0PVRnb5fbg" type="_yQCbkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3Z9kl3-Ee2F0PVRnb5fbg" name="ReliabilityTable" specification="_yQDpsl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3Z9k13-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Z9lF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Z9lV3-Ee2F0PVRnb5fbg" type="_yQCbkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQDCoF3-Ee2F0PVRnb5fbg" name="ReliabilityTable" method="_y3Z9kF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQDCoV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQDpsF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQDpsV3-Ee2F0PVRnb5fbg" type="_yQCbkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQDpsl3-Ee2F0PVRnb5fbg" name="ReliabilityTable" visibility="package" method="_y3Z9kl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQEQwF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQEQwV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQDps13-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQDptF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQEQwl3-Ee2F0PVRnb5fbg" type="_yQCbkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQE30F3-Ee2F0PVRnb5fbg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_y4TVc13-Ee2F0PVRnb5fbg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to create&#xD;
the file visualization that is requested in WarpTester.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yuUTAV3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y06qQl3-Ee2F0PVRnb5fbg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y06qQ13-Ee2F0PVRnb5fbg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y07RUF3-Ee2F0PVRnb5fbg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y07RUV3-Ee2F0PVRnb5fbg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y07RUl3-Ee2F0PVRnb5fbg" name="warp" visibility="private" type="_yRzWIF3-Ee2F0PVRnb5fbg" association="_y5x8IV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y074YV3-Ee2F0PVRnb5fbg" name="ra" visibility="private" type="_yP5RoF3-Ee2F0PVRnb5fbg" association="_y5zKQV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3akoF3-Ee2F0PVRnb5fbg" name="ReliabilityVisualization" specification="_yuTr8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3akoV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3akol3-Ee2F0PVRnb5fbg" type="_yQE30F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yuTr8F3-Ee2F0PVRnb5fbg" name="ReliabilityVisualization" visibility="package" method="_y3akoF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yuTr8l3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yuTr813-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yuTr8V3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuUTAF3-Ee2F0PVRnb5fbg" type="_yQE30F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQH7IF3-Ee2F0PVRnb5fbg" name="ReportVisualization">
              <generalization xmi:id="_yuWIMl3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y08fcF3-Ee2F0PVRnb5fbg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y08fcV3-Ee2F0PVRnb5fbg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y09GgF3-Ee2F0PVRnb5fbg" name="content" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y5zxUV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y09Ggl3-Ee2F0PVRnb5fbg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3bLsF3-Ee2F0PVRnb5fbg" name="ReportVisualization" specification="_yuU6EF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3bLsV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3bLsl3-Ee2F0PVRnb5fbg" name="warp" type="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3bLs13-Ee2F0PVRnb5fbg" name="content" type="_yMf_YF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3bLtF3-Ee2F0PVRnb5fbg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3bLtV3-Ee2F0PVRnb5fbg" type="_yQH7IF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3bLtl3-Ee2F0PVRnb5fbg" name="visualization" specification="_yQJwUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3bLt13-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3bywF3-Ee2F0PVRnb5fbg" name="createReport" specification="_yQLlgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3bywV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQJwUF3-Ee2F0PVRnb5fbg" name="visualization" method="_y3bLtl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuWIMF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQLlgF3-Ee2F0PVRnb5fbg" name="createReport" visibility="private" method="_y3bywF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuWIMV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yuU6EF3-Ee2F0PVRnb5fbg" name="ReportVisualization" visibility="package" method="_y3bLsF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yuVhJF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yuVhJV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yuVhIF3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuVhIV3-Ee2F0PVRnb5fbg" name="warp" type="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuVhIl3-Ee2F0PVRnb5fbg" name="content" type="_yMf_YF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuVhI13-Ee2F0PVRnb5fbg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuVhJl3-Ee2F0PVRnb5fbg" type="_yQH7IF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQPP4F3-Ee2F0PVRnb5fbg" name="Row">
              <generalization xmi:id="_yyXskV3-Ee2F0PVRnb5fbg" general="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0-UoF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0-UoV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3bywl3-Ee2F0PVRnb5fbg" name="Row" specification="_yQRFEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3byw13-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3byxF3-Ee2F0PVRnb5fbg" name="Row" specification="_yyV3YF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3byxV3-Ee2F0PVRnb5fbg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3byxl3-Ee2F0PVRnb5fbg" name="element" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3byx13-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3cZ0F3-Ee2F0PVRnb5fbg" name="Row" specification="_yyXFgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3cZ0V3-Ee2F0PVRnb5fbg" name="rowArray" type="_yxF6MV3-Ee2F0PVRnb5fbg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3cZ0l3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3cZ013-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3cZ1F3-Ee2F0PVRnb5fbg" name="Row" specification="_yQS6QF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3cZ1V3-Ee2F0PVRnb5fbg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3cZ1l3-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQRFEF3-Ee2F0PVRnb5fbg" name="Row" method="_y3bywl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQRFEV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQRFEl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQRFE13-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQS6QF3-Ee2F0PVRnb5fbg" name="Row" visibility="package" method="_y3cZ1F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQS6Ql3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQS6Q13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQS6QV3-Ee2F0PVRnb5fbg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQS6RF3-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyV3YF3-Ee2F0PVRnb5fbg" name="Row" visibility="package" method="_y3byxF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyWecl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyWec13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyWecF3-Ee2F0PVRnb5fbg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyWecV3-Ee2F0PVRnb5fbg" name="element" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyWedF3-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyXFgF3-Ee2F0PVRnb5fbg" name="Row" visibility="package" method="_y3cZ0F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyXFgl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyXFg13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyXFgV3-Ee2F0PVRnb5fbg" name="rowArray" type="_yxF6MV3-Ee2F0PVRnb5fbg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyXskF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyXFhF3-Ee2F0PVRnb5fbg" type="_yQPP4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQVWgF3-Ee2F0PVRnb5fbg" name="SchedulableObjectQueue">
              <generalization xmi:id="_yQYZ0F3-Ee2F0PVRnb5fbg" general="_yP1nQF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y0-Uol3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0-7sF3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3cZ113-Ee2F0PVRnb5fbg" name="SchedulableObjectQueue" specification="_yyZhwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3cZ2F3-Ee2F0PVRnb5fbg" name="comparitor" type="_ysXLMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3cZ2V3-Ee2F0PVRnb5fbg" type="_yQVWgF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3dA4F3-Ee2F0PVRnb5fbg" name="SchedulableObjectQueue" specification="_yyav4V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3dA4V3-Ee2F0PVRnb5fbg" name="comparitor" type="_ysXLMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3dA4l3-Ee2F0PVRnb5fbg" name="schedulableObjects" type="_ytd-cF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3dA413-Ee2F0PVRnb5fbg" type="_yQVWgF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yyZhwF3-Ee2F0PVRnb5fbg" name="SchedulableObjectQueue" visibility="package" method="_y3cZ113-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyZhwl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyZhw13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyZhwV3-Ee2F0PVRnb5fbg" name="comparitor" type="_ysXLMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyZhxF3-Ee2F0PVRnb5fbg" type="_yQVWgF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyav4V3-Ee2F0PVRnb5fbg" name="SchedulableObjectQueue" visibility="package" method="_y3dA4F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yybW8F3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yybW8V3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyav4l3-Ee2F0PVRnb5fbg" name="comparitor" type="_ysXLMF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyav413-Ee2F0PVRnb5fbg" name="schedulableObjects" type="_ytd-cF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yybW8l3-Ee2F0PVRnb5fbg" type="_yQVWgF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQbdIF3-Ee2F0PVRnb5fbg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_y4T8gF3-Ee2F0PVRnb5fbg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y0-7sV3-Ee2F0PVRnb5fbg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y0-7sl3-Ee2F0PVRnb5fbg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0-7s13-Ee2F0PVRnb5fbg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y0_iwV3-Ee2F0PVRnb5fbg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1AJ0V3-Ee2F0PVRnb5fbg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1AJ0l3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1Aw4V3-Ee2F0PVRnb5fbg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1BX8V3-Ee2F0PVRnb5fbg" name="schedule" visibility="protected" type="_yQvmMF3-Ee2F0PVRnb5fbg" association="_y50_cF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1B_AF3-Ee2F0PVRnb5fbg" name="poset" visibility="protected" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y51mgV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3dA5F3-Ee2F0PVRnb5fbg" name="Schedule" specification="_yuZykF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3dA5V3-Ee2F0PVRnb5fbg" name="poset" type="_yOeVUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3dA5l3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3dA513-Ee2F0PVRnb5fbg" type="_yQbdIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ePAF3-Ee2F0PVRnb5fbg" name="getSchedule" specification="_yQg8sF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ePAV3-Ee2F0PVRnb5fbg" type="_yQvmMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ePAl3-Ee2F0PVRnb5fbg" name="buildSchedule" specification="_yQhjwF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ePA13-Ee2F0PVRnb5fbg" name="toProgram" specification="_yQhjwV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ePBF3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3e2EF3-Ee2F0PVRnb5fbg" name="replaceNullWithSleep" specification="_yubAsl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3e2EV3-Ee2F0PVRnb5fbg" name="program" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3e2El3-Ee2F0PVRnb5fbg" name="fakeSchedulingToTestRest" specification="_yubnwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3e2E13-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3e2FF3-Ee2F0PVRnb5fbg" name="getChannelAndSetStartTime" specification="_yucO0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3e2FV3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3e2Fl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3fdIF3-Ee2F0PVRnb5fbg" name="findChannelAndTime" specification="_yuc14F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3fdIV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3fdIl3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3fdI13-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3gEMF3-Ee2F0PVRnb5fbg" name="continueSearch" specification="_yudc8V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3gEMV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEMl3-Ee2F0PVRnb5fbg" name="activation" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3gEM13-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3gENF3-Ee2F0PVRnb5fbg" name="noOtherChannelConflicts" specification="_yueEAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3gENV3-Ee2F0PVRnb5fbg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gENl3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3gEN13-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEOF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3gEOV3-Ee2F0PVRnb5fbg" name="conflictsExist" specification="_yuerEl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3gEOl3-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3gEO13-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEPF3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEPV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3gEPl3-Ee2F0PVRnb5fbg" name="freeOfCoordinatorConflicts" specification="_yuf5MF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3gEP13-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3gEQF3-Ee2F0PVRnb5fbg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEQV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEQl3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gEQ13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3gERF3-Ee2F0PVRnb5fbg" name="isAvailable" specification="_yuggQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3gERV3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3gERl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gER13-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gESF3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gESV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3gESl3-Ee2F0PVRnb5fbg" name="isAvailable" specification="_yuhHUl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3gES13-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3gETF3-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gETV3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gETl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3hSUF3-Ee2F0PVRnb5fbg" name="timeRemaining" specification="_yQknEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3hSUV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3hSUl3-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3hSU13-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3hSVF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3hSVV3-Ee2F0PVRnb5fbg" name="canCombineEntriesInPlace" specification="_yuiVcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3hSVl3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3hSV13-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3hSWF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3hSWV3-Ee2F0PVRnb5fbg" name="combinedEntriesInPlace" specification="_yui8gF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3hSWl3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3hSW13-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3hSXF3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3hSXV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3hSXl3-Ee2F0PVRnb5fbg" name="addToSchedule" specification="_yujjkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3hSX13-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3hSYF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3hSYV3-Ee2F0PVRnb5fbg" name="reportNotSchedulable" specification="_yukKoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3hSYl3-Ee2F0PVRnb5fbg" name="object" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3h5YF3-Ee2F0PVRnb5fbg" name="printVerbose" specification="_yQmcQF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3h5YV3-Ee2F0PVRnb5fbg" name="print" specification="_yQmcQV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQg8sF3-Ee2F0PVRnb5fbg" name="getSchedule" method="_y3ePAF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4T8g13-Ee2F0PVRnb5fbg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_yubAsF3-Ee2F0PVRnb5fbg" type="_yQvmMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQhjwF3-Ee2F0PVRnb5fbg" name="buildSchedule" visibility="private" method="_y3ePAl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yQhjwV3-Ee2F0PVRnb5fbg" name="toProgram" method="_y3ePA13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yubAsV3-Ee2F0PVRnb5fbg" type="_yPiFQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQknEF3-Ee2F0PVRnb5fbg" name="timeRemaining" visibility="protected" method="_y3hSUF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Ujk13-Ee2F0PVRnb5fbg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQknEV3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQknEl3-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQknE13-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQknFF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQmcQF3-Ee2F0PVRnb5fbg" name="printVerbose" method="_y3h5YF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yQmcQV3-Ee2F0PVRnb5fbg" name="print" method="_y3h5YV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yuZykF3-Ee2F0PVRnb5fbg" name="Schedule" visibility="package" method="_y3dA5F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yuaZoF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yuaZoV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yuZykV3-Ee2F0PVRnb5fbg" name="poset" type="_yOeVUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuZykl3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuaZol3-Ee2F0PVRnb5fbg" type="_yQbdIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yubAsl3-Ee2F0PVRnb5fbg" name="replaceNullWithSleep" visibility="private" method="_y3e2EF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4T8hF3-Ee2F0PVRnb5fbg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_yubAs13-Ee2F0PVRnb5fbg" name="program" type="_yPiFQF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yubnwF3-Ee2F0PVRnb5fbg" name="fakeSchedulingToTestRest" visibility="private" method="_y3e2El3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yubnwV3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yucO0F3-Ee2F0PVRnb5fbg" name="getChannelAndSetStartTime" visibility="protected" method="_y3e2FF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4T8hV3-Ee2F0PVRnb5fbg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_yucO0V3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yucO0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuc14F3-Ee2F0PVRnb5fbg" name="findChannelAndTime" visibility="protected" method="_y3fdIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuc14V3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuc14l3-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yudc8F3-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yudc8V3-Ee2F0PVRnb5fbg" name="continueSearch" visibility="protected" method="_y3gEMF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4UjkF3-Ee2F0PVRnb5fbg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_yudc8l3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yudc813-Ee2F0PVRnb5fbg" name="activation" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yueEAF3-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yueEAV3-Ee2F0PVRnb5fbg" name="noOtherChannelConflicts" visibility="protected" method="_y3gENF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yueEAl3-Ee2F0PVRnb5fbg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yueEA13-Ee2F0PVRnb5fbg" name="schedulableObject" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuerEF3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuerEV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuerEl3-Ee2F0PVRnb5fbg" name="conflictsExist" visibility="protected" method="_y3gEOV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuerE13-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yufSIF3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yufSIV3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yufSIl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuf5MF3-Ee2F0PVRnb5fbg" name="freeOfCoordinatorConflicts" visibility="protected" method="_y3gEPl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuf5MV3-Ee2F0PVRnb5fbg" name="obj" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuf5Ml3-Ee2F0PVRnb5fbg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuf5M13-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuf5NF3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuf5NV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuggQF3-Ee2F0PVRnb5fbg" name="isAvailable" visibility="protected" method="_y3gERF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4UjkV3-Ee2F0PVRnb5fbg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_yuggQV3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuggQl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuggQ13-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuhHUF3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuhHUV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuhHUl3-Ee2F0PVRnb5fbg" name="isAvailable" visibility="protected" method="_y3gESl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Ujkl3-Ee2F0PVRnb5fbg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yuhuYF3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuhuYV3-Ee2F0PVRnb5fbg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuhuYl3-Ee2F0PVRnb5fbg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuhuY13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yuiVcF3-Ee2F0PVRnb5fbg" name="canCombineEntriesInPlace" visibility="private" method="_y3hSVV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuiVcV3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuiVcl3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuiVc13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yui8gF3-Ee2F0PVRnb5fbg" name="combinedEntriesInPlace" visibility="private" method="_y3hSWV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yui8gV3-Ee2F0PVRnb5fbg" name="a1" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yui8gl3-Ee2F0PVRnb5fbg" name="a2" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yui8g13-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yui8hF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yujjkF3-Ee2F0PVRnb5fbg" name="addToSchedule" visibility="protected" method="_y3hSXl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yujjkV3-Ee2F0PVRnb5fbg" name="next" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yujjkl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yukKoF3-Ee2F0PVRnb5fbg" name="reportNotSchedulable" visibility="private" method="_y3hSYV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yukKoV3-Ee2F0PVRnb5fbg" name="object" type="_yKIn4F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yQd5YF3-Ee2F0PVRnb5fbg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_y1B_Al3-Ee2F0PVRnb5fbg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1CmEV3-Ee2F0PVRnb5fbg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3dA6F3-Ee2F0PVRnb5fbg" name="ScheduleLocation" specification="_yQegcF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3dA6V3-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3dn8F3-Ee2F0PVRnb5fbg" name="ScheduleLocation" specification="_yQfukF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3dn8V3-Ee2F0PVRnb5fbg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_y3dn8l3-Ee2F0PVRnb5fbg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_y3dn813-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3dn9F3-Ee2F0PVRnb5fbg" name="getChannel" specification="_yQfull3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3dn9V3-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3dn9l3-Ee2F0PVRnb5fbg" name="getTime" specification="_yQgVoV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3dn913-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yQegcF3-Ee2F0PVRnb5fbg" name="ScheduleLocation" visibility="package" method="_y3dA6F3-Ee2F0PVRnb5fbg">
                  <eAnnotations xmi:id="_yQegcV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yQegcl3-Ee2F0PVRnb5fbg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yQegc13-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQfukF3-Ee2F0PVRnb5fbg" name="ScheduleLocation" visibility="package" method="_y3dn8F3-Ee2F0PVRnb5fbg">
                  <eAnnotations xmi:id="_yQfuk13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yQfulF3-Ee2F0PVRnb5fbg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yQfukV3-Ee2F0PVRnb5fbg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yQfukl3-Ee2F0PVRnb5fbg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yQfulV3-Ee2F0PVRnb5fbg" type="_yQd5YF3-Ee2F0PVRnb5fbg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQfull3-Ee2F0PVRnb5fbg" name="getChannel" visibility="protected" method="_y3dn9F3-Ee2F0PVRnb5fbg">
                  <ownedComment xmi:id="_y4T8gV3-Ee2F0PVRnb5fbg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yQgVoF3-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yQgVoV3-Ee2F0PVRnb5fbg" name="getTime" visibility="protected" method="_y3dn9l3-Ee2F0PVRnb5fbg">
                  <ownedComment xmi:id="_y4T8gl3-Ee2F0PVRnb5fbg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yQgVol3-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQvmMF3-Ee2F0PVRnb5fbg" name="ScheduleTable">
              <generalization xmi:id="_yumm4F3-Ee2F0PVRnb5fbg" general="_yRDvQF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1EbQF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1FCUF3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3igcF3-Ee2F0PVRnb5fbg" name="ScheduleTable" specification="_yQw0UF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3igcV3-Ee2F0PVRnb5fbg" type="_yQvmMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3igcl3-Ee2F0PVRnb5fbg" name="ScheduleTable" specification="_yQxbYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3igc13-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3igdF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3igdV3-Ee2F0PVRnb5fbg" type="_yQvmMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQw0UF3-Ee2F0PVRnb5fbg" name="ScheduleTable" visibility="package" method="_y3igcF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQw0UV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQw0Ul3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQw0U13-Ee2F0PVRnb5fbg" type="_yQvmMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQxbYF3-Ee2F0PVRnb5fbg" name="ScheduleTable" visibility="package" method="_y3igcl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQyCcV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQyCcl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQxbYV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQyCcF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQyCc13-Ee2F0PVRnb5fbg" type="_yQvmMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQzQkF3-Ee2F0PVRnb5fbg" name="ScheduleTime">
              <ownedAttribute xmi:id="_y1FCUV3-Ee2F0PVRnb5fbg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1FpYF3-Ee2F0PVRnb5fbg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3igdl3-Ee2F0PVRnb5fbg" name="ScheduleTime" specification="_yQz3oF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3igd13-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3igeF3-Ee2F0PVRnb5fbg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3igeV3-Ee2F0PVRnb5fbg" type="_yQzQkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQz3oF3-Ee2F0PVRnb5fbg" name="ScheduleTime" visibility="package" method="_y3igdl3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQz3o13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQ0esF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQz3oV3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQz3ol3-Ee2F0PVRnb5fbg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ0esV3-Ee2F0PVRnb5fbg" type="_yQzQkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQ1FwF3-Ee2F0PVRnb5fbg" name="SimulatorInput">
              <ownedComment xmi:id="_y4UjlF3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yQ1s0F3-Ee2F0PVRnb5fbg" name="SortedPeriodQueue">
              <generalization xmi:id="_yQ3iAF3-Ee2F0PVRnb5fbg" general="_yP1nQF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1GQcF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1GQcV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3igel3-Ee2F0PVRnb5fbg" name="SortedPeriodQueue" specification="_yQ268F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ige13-Ee2F0PVRnb5fbg" type="_yQ1s0F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jHgF3-Ee2F0PVRnb5fbg" name="SortedPeriodQueue" specification="_yuocEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3jHgV3-Ee2F0PVRnb5fbg" name="schedulableObjects" type="_ytd-cF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3jHgl3-Ee2F0PVRnb5fbg" type="_yQ1s0F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yQ268F3-Ee2F0PVRnb5fbg" name="SortedPeriodQueue" visibility="package" method="_y3igel3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yQ268V3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQ268l3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQ26813-Ee2F0PVRnb5fbg" type="_yQ1s0F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yuocEF3-Ee2F0PVRnb5fbg" name="SortedPeriodQueue" visibility="package" method="_y3jHgF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yupDIV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yupDIl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yupDIF3-Ee2F0PVRnb5fbg" name="schedulableObjects" type="_ytd-cF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yupDI13-Ee2F0PVRnb5fbg" type="_yQ1s0F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yQ5-QF3-Ee2F0PVRnb5fbg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_yupqMV3-Ee2F0PVRnb5fbg" general="_yP7t4F3-Ee2F0PVRnb5fbg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yQ7MYF3-Ee2F0PVRnb5fbg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_yQ7zcF3-Ee2F0PVRnb5fbg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_yQ7zcV3-Ee2F0PVRnb5fbg" name="RM"/>
                <ownedLiteral xmi:id="_yQ7zcl3-Ee2F0PVRnb5fbg" name="DM"/>
                <ownedLiteral xmi:id="_yQ7zc13-Ee2F0PVRnb5fbg" name="RTHART"/>
                <ownedLiteral xmi:id="_yQ7zdF3-Ee2F0PVRnb5fbg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yQ7zdV3-Ee2F0PVRnb5fbg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_yQ9BkF3-Ee2F0PVRnb5fbg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_yQ9BkV3-Ee2F0PVRnb5fbg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yQ9Bkl3-Ee2F0PVRnb5fbg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_yQ9Bk13-Ee2F0PVRnb5fbg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_yQ9BlF3-Ee2F0PVRnb5fbg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yQ9BlV3-Ee2F0PVRnb5fbg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_yQ9ooF3-Ee2F0PVRnb5fbg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_yQ9ooV3-Ee2F0PVRnb5fbg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yQ-PsF3-Ee2F0PVRnb5fbg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yQ-PsV3-Ee2F0PVRnb5fbg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yQ-2wF3-Ee2F0PVRnb5fbg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yQ_d0F3-Ee2F0PVRnb5fbg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yRAE4F3-Ee2F0PVRnb5fbg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRAr8F3-Ee2F0PVRnb5fbg" name="SystemFactory">
              <ownedComment xmi:id="_y4VKoF3-Ee2F0PVRnb5fbg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jHg13-Ee2F0PVRnb5fbg" name="create" specification="_yurfYV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3jHhF3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3jHhV3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3jHhl3-Ee2F0PVRnb5fbg" name="choice" type="_yQ7MYF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3jHh13-Ee2F0PVRnb5fbg" type="_yRzWIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yurfYV3-Ee2F0PVRnb5fbg" name="create" isStatic="true" method="_y3jHg13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yurfYl3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yurfY13-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yurfZF3-Ee2F0PVRnb5fbg" name="choice" type="_yQ7MYF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yusGcF3-Ee2F0PVRnb5fbg" type="_yRzWIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRDvQF3-Ee2F0PVRnb5fbg" name="Table">
              <generalization xmi:id="_yyfBUV3-Ee2F0PVRnb5fbg" general="_yrr1wF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1G3gF3-Ee2F0PVRnb5fbg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1G3gV3-Ee2F0PVRnb5fbg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jHiF3-Ee2F0PVRnb5fbg" name="Table" specification="_yRGykF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3jHiV3-Ee2F0PVRnb5fbg" type="_yRDvQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jHil3-Ee2F0PVRnb5fbg" name="Table" specification="_yRHZoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3jHi13-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3jHjF3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3jHjV3-Ee2F0PVRnb5fbg" type="_yRDvQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jukF3-Ee2F0PVRnb5fbg" name="getNumRows" specification="_yRHZpl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3jukV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jukl3-Ee2F0PVRnb5fbg" name="getNumColumns" specification="_yRIAsV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3juk13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3julF3-Ee2F0PVRnb5fbg" name="set" specification="_yyeaQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3julV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3jull3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3jul13-Ee2F0PVRnb5fbg" name="element" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3jumF3-Ee2F0PVRnb5fbg" name="get" specification="_yRInwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3jumV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3juml3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3jum13-Ee2F0PVRnb5fbg" type="_yxF6MV3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yRGykF3-Ee2F0PVRnb5fbg" name="Table" method="_y3jHiF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yRGykV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yRGykl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yRGyk13-Ee2F0PVRnb5fbg" type="_yRDvQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRHZoF3-Ee2F0PVRnb5fbg" name="Table" method="_y3jHil3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yRHZo13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yRHZpF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yRHZoV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRHZol3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRHZpV3-Ee2F0PVRnb5fbg" type="_yRDvQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRHZpl3-Ee2F0PVRnb5fbg" name="getNumRows" method="_y3jukF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRIAsF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRIAsV3-Ee2F0PVRnb5fbg" name="getNumColumns" method="_y3jukl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRIAsl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRInwF3-Ee2F0PVRnb5fbg" name="get" method="_y3jumF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRInwV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRInwl3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyfBUF3-Ee2F0PVRnb5fbg" type="_yxF6MV3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyeaQF3-Ee2F0PVRnb5fbg" name="set" method="_y3julF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyeaQV3-Ee2F0PVRnb5fbg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyeaQl3-Ee2F0PVRnb5fbg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyeaQ13-Ee2F0PVRnb5fbg" name="element" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yRLEAF3-Ee2F0PVRnb5fbg" name="Visualization">
              <ownedComment xmi:id="_y4VKoV3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yRLrEF3-Ee2F0PVRnb5fbg" name="SystemChoices">
                <ownedLiteral xmi:id="_yRMSIV3-Ee2F0PVRnb5fbg" name="SOURCE"/>
                <ownedLiteral xmi:id="_yRM5MF3-Ee2F0PVRnb5fbg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_yRM5MV3-Ee2F0PVRnb5fbg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_yRM5Ml3-Ee2F0PVRnb5fbg" name="LATENCY"/>
                <ownedLiteral xmi:id="_yRM5M13-Ee2F0PVRnb5fbg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_yRNgQF3-Ee2F0PVRnb5fbg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_yRNgQV3-Ee2F0PVRnb5fbg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yROHUF3-Ee2F0PVRnb5fbg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_yROHUl3-Ee2F0PVRnb5fbg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_yRPVcF3-Ee2F0PVRnb5fbg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_yRPVcV3-Ee2F0PVRnb5fbg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_yRPVcl3-Ee2F0PVRnb5fbg" name="toDisplay"/>
              <ownedOperation xmi:id="_yRP8gF3-Ee2F0PVRnb5fbg" name="toFile"/>
              <ownedOperation xmi:id="_yRP8gV3-Ee2F0PVRnb5fbg" name="toString">
                <ownedParameter xmi:id="_yRP8gl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRQjkF3-Ee2F0PVRnb5fbg" name="VisualizationFactory">
              <ownedComment xmi:id="_y4VKol3-Ee2F0PVRnb5fbg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3kVoF3-Ee2F0PVRnb5fbg" name="createProgramVisualization" specification="_yuvw0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3kVoV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3kVol3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3kVo13-Ee2F0PVRnb5fbg" name="choice" type="_yRLrEF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3kVpF3-Ee2F0PVRnb5fbg" type="_yRLEAF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3kVpV3-Ee2F0PVRnb5fbg" name="createWorkLoadVisualization" specification="_yuwX4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3kVpl3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3kVp13-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3kVqF3-Ee2F0PVRnb5fbg" name="choice" type="_yROHUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3kVqV3-Ee2F0PVRnb5fbg" type="_yRLEAF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yuvw0F3-Ee2F0PVRnb5fbg" name="createProgramVisualization" isStatic="true" method="_y3kVoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuvw0V3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuvw0l3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuvw013-Ee2F0PVRnb5fbg" name="choice" type="_yRLrEF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuvw1F3-Ee2F0PVRnb5fbg" type="_yRLEAF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yuwX4F3-Ee2F0PVRnb5fbg" name="createWorkLoadVisualization" isStatic="true" method="_y3kVpV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yuwX4V3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuwX4l3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yuwX413-Ee2F0PVRnb5fbg" name="choice" type="_yROHUF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yuwX5F3-Ee2F0PVRnb5fbg" type="_yRLEAF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRS_0F3-Ee2F0PVRnb5fbg" name="VisualizationImplementation">
              <ownedComment xmi:id="_y4VKo13-Ee2F0PVRnb5fbg">
                <body>&lt;h1>Implementation of the Visualization Interface.&lt;/h1>&#xD;
&lt;p>The VisualizationImplementation class allows the user to request visualizations of various aspects of the given file content in Description object.&#xD;
Methods to print Workload Descriptions to the console, write to a file, and create string are defined.&#xD;
Visualizations are created based on system choices of SOURCE, RELIABILITIES, SIMULATOR_INPUT, LATENCY, LATENCY_REPORT, &#xD;
DEADLINE_REPORT, and CHANNEL. Workload choices include INPUT_GRAPH, COMUNICATION_GRAPH, GRAPHVIZ.&lt;/p>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y1HekF3-Ee2F0PVRnb5fbg" name="visualization" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y520oF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1IFoV3-Ee2F0PVRnb5fbg" name="fileContent" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y53bsF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1IFo13-Ee2F0PVRnb5fbg" name="displayContent" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y54CwV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1JTwV3-Ee2F0PVRnb5fbg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1J60V3-Ee2F0PVRnb5fbg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1Kh4F3-Ee2F0PVRnb5fbg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1Kh4l3-Ee2F0PVRnb5fbg" name="fm" visibility="private" type="_yM19oF3-Ee2F0PVRnb5fbg" association="_y55Q4F3-Ee2F0PVRnb5fbg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1Kh413-Ee2F0PVRnb5fbg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1LI8V3-Ee2F0PVRnb5fbg" name="warp" visibility="private" type="_yRzWIF3-Ee2F0PVRnb5fbg" association="_y56fAF3-Ee2F0PVRnb5fbg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1LI8l3-Ee2F0PVRnb5fbg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1MXEF3-Ee2F0PVRnb5fbg" name="workLoad" visibility="private" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y57GEV3-Ee2F0PVRnb5fbg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MXEV3-Ee2F0PVRnb5fbg" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yuw-8F3-Ee2F0PVRnb5fbg" client="_yRS_0F3-Ee2F0PVRnb5fbg" supplier="_yRLEAF3-Ee2F0PVRnb5fbg" contract="_yRLEAF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3k8sF3-Ee2F0PVRnb5fbg" name="VisualizationImplementation" specification="_yyhdkV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3k8sV3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3k8sl3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3k8s13-Ee2F0PVRnb5fbg" name="choice" type="_yyg2gF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3k8tF3-Ee2F0PVRnb5fbg" type="_yRS_0F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3k8tV3-Ee2F0PVRnb5fbg" name="VisualizationImplementation" specification="_yyj50F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3k8tl3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3k8t13-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3k8uF3-Ee2F0PVRnb5fbg" name="choice" type="_yyirsF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3k8uV3-Ee2F0PVRnb5fbg" type="_yRS_0F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3k8ul3-Ee2F0PVRnb5fbg" name="toDisplay" specification="_yRU1AF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>System.out.println(displayContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3k8u13-Ee2F0PVRnb5fbg" name="toFile" specification="_yRWqMF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3k8vF3-Ee2F0PVRnb5fbg" name="toString" specification="_yRWqNF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3k8vV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ljwF3-Ee2F0PVRnb5fbg" name="createVisualization" specification="_yykg4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ljwV3-Ee2F0PVRnb5fbg" name="choice" type="_yyg2gF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ljwl3-Ee2F0PVRnb5fbg" name="createVisualization" specification="_yylH8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ljw13-Ee2F0PVRnb5fbg" name="choice" type="_yyirsF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ljxF3-Ee2F0PVRnb5fbg" name="createVisualization" specification="_yymWEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ljxV3-Ee2F0PVRnb5fbg" name="obj" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 displayContent = obj.displayVisualization();&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ljxl3-Ee2F0PVRnb5fbg" name="createFileNameTemplate" specification="_yRYfYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3ljx13-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3ljyF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yRU1AF3-Ee2F0PVRnb5fbg" name="toDisplay" method="_y3k8ul3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yRWqMF3-Ee2F0PVRnb5fbg" name="toFile" method="_y3k8u13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yRWqNF3-Ee2F0PVRnb5fbg" name="toString" method="_y3k8vF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRXRQF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRYfYF3-Ee2F0PVRnb5fbg" name="createFileNameTemplate" visibility="private" method="_y3ljxl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4VxtF3-Ee2F0PVRnb5fbg">
                  <body>Creates the fileNameTemplate using the full output path and input filename.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param outputDirectory The output used to create a new directory.&#xD;
   * @return fileNameTemplate, a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_yRYfYV3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRZGcF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yyhdkV3-Ee2F0PVRnb5fbg" name="VisualizationImplementation" method="_y3k8sF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyiEo13-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyiEpF3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4VxsF3-Ee2F0PVRnb5fbg">
                  <body>The first constructor method sets up the inputFileName and fileNameTemplate based on the WarpInterface&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The interface to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yyiEoF3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyiEoV3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyiEol3-Ee2F0PVRnb5fbg" name="choice" type="_yyg2gF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyiEpV3-Ee2F0PVRnb5fbg" type="_yRS_0F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyj50F3-Ee2F0PVRnb5fbg" name="VisualizationImplementation" method="_y3k8tV3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyj51F3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyj51V3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4VxsV3-Ee2F0PVRnb5fbg">
                  <body>The second constructor method sets up the inputFileName and fileNameTemplate based on the Workload&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The work load to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The work load visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yyj50V3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyj50l3-Ee2F0PVRnb5fbg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyj5013-Ee2F0PVRnb5fbg" name="choice" type="_yyirsF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyj51l3-Ee2F0PVRnb5fbg" type="_yRS_0F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yykg4F3-Ee2F0PVRnb5fbg" name="createVisualization" visibility="private" method="_y3ljwF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Vxsl3-Ee2F0PVRnb5fbg">
                  <body>Given the SystemChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yykg4V3-Ee2F0PVRnb5fbg" name="choice" type="_yyg2gF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yylH8F3-Ee2F0PVRnb5fbg" name="createVisualization" visibility="private" method="_y3ljwl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Vxs13-Ee2F0PVRnb5fbg">
                  <body>Given the WorkLoadChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The work load visualization selected.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yylvAF3-Ee2F0PVRnb5fbg" name="choice" type="_yyirsF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yymWEF3-Ee2F0PVRnb5fbg" name="createVisualization" visibility="private" method="_y3ljxF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yymWEV3-Ee2F0PVRnb5fbg" name="obj" type="_yxF6MV3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRemAF3-Ee2F0PVRnb5fbg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_y4VxtV3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y1M-IF3-Ee2F0PVRnb5fbg" name="fm" visibility="private" type="_yM19oF3-Ee2F0PVRnb5fbg" association="_y57tIV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1M-Il3-Ee2F0PVRnb5fbg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1OMQV3-Ee2F0PVRnb5fbg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1OzUV3-Ee2F0PVRnb5fbg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1OzUl3-Ee2F0PVRnb5fbg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3mK0F3-Ee2F0PVRnb5fbg" name="VisualizationObject" specification="_yu0CQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3mK0V3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3mK0l3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3mK013-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3mK1F3-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); &#xD;
		this.suffix = suffix; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3mK1V3-Ee2F0PVRnb5fbg" name="VisualizationObject" specification="_yu0pU13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3mK1l3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3mK113-Ee2F0PVRnb5fbg" name="warp" type="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3mK2F3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3mK2V3-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()); &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()); &#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3mK2l3-Ee2F0PVRnb5fbg" name="VisualizationObject" specification="_yu1QY13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3mK213-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3mK3F3-Ee2F0PVRnb5fbg" name="warp" type="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3mK3V3-Ee2F0PVRnb5fbg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3mK3l3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3mK313-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()) + nameExtension; &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()) + nameExtension; &#xD;
		}&#xD;
		&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3nY8F3-Ee2F0PVRnb5fbg" name="VisualizationObject" specification="_yu13dF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3nY8V3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3nY8l3-Ee2F0PVRnb5fbg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nY813-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nY9F3-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension; &#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3nY9V3-Ee2F0PVRnb5fbg" name="nameExtension" specification="_yyoLQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3nY9l3-Ee2F0PVRnb5fbg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nY913-Ee2F0PVRnb5fbg" name="m" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3nY-F3-Ee2F0PVRnb5fbg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nY-V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,&#xD;
				schName,&#xD;
				String.valueOf(m),&#xD;
				String.valueOf(e2e)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3nY-l3-Ee2F0PVRnb5fbg" name="nameExtension" specification="_yRhpUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3nY-13-Ee2F0PVRnb5fbg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nY_F3-Ee2F0PVRnb5fbg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nY_V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,&#xD;
				schName,&#xD;
				String.valueOf(numFaults)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3nY_l3-Ee2F0PVRnb5fbg" name="getFileManager" specification="_yRi3cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3nY_13-Ee2F0PVRnb5fbg" type="_yM19oF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3nZAF3-Ee2F0PVRnb5fbg" name="visualization" specification="_yRi3cV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3oAAF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		content.add(NOT_IMPLEMENTED);&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3oAAV3-Ee2F0PVRnb5fbg" name="createFile" specification="_yRjegF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3oAAl3-Ee2F0PVRnb5fbg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3oAA13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3oABF3-Ee2F0PVRnb5fbg" name="fileVisualization" specification="_yRksoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3oABV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 	fileContent.addAll(visualization());&#xD;
 	fileContent.addAll(createFooter());&#xD;
 	return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3oABl3-Ee2F0PVRnb5fbg" name="displayVisualization" specification="_yRlTsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3oAB13-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return visualization();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3oACF3-Ee2F0PVRnb5fbg" name="createHeader" specification="_yRl6wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3oACV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3oACl3-Ee2F0PVRnb5fbg" name="createFooter" specification="_yRmh0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3oAC13-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yRhpUF3-Ee2F0PVRnb5fbg" name="nameExtension" visibility="private" method="_y3nY-l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRhpUV3-Ee2F0PVRnb5fbg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRiQYF3-Ee2F0PVRnb5fbg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRiQYV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRi3cF3-Ee2F0PVRnb5fbg" name="getFileManager" method="_y3nY_l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4WYwF3-Ee2F0PVRnb5fbg">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_yu2ehV3-Ee2F0PVRnb5fbg" type="_yM19oF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRi3cV3-Ee2F0PVRnb5fbg" name="visualization" method="_y3nZAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu3FkF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRjegF3-Ee2F0PVRnb5fbg" name="createFile" method="_y3oAAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRkFkF3-Ee2F0PVRnb5fbg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRkFkV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRksoF3-Ee2F0PVRnb5fbg" name="fileVisualization" method="_y3oABF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu3FkV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRlTsF3-Ee2F0PVRnb5fbg" name="displayVisualization" method="_y3oABl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu3Fkl3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRl6wF3-Ee2F0PVRnb5fbg" name="createHeader" method="_y3oACF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu3Fk13-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRmh0F3-Ee2F0PVRnb5fbg" name="createFooter" method="_y3oACl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu3FlF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu0CQF3-Ee2F0PVRnb5fbg" name="VisualizationObject" visibility="package" method="_y3mK0F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yu0pUF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yu0pUV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yu0CQV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu0CQl3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu0CQ13-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yu0pUl3-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu0pU13-Ee2F0PVRnb5fbg" name="VisualizationObject" visibility="package" method="_y3mK1V3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yu1QYF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yu1QYV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yu0pVF3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu0pVV3-Ee2F0PVRnb5fbg" name="warp" type="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu0pVl3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yu1QYl3-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu1QY13-Ee2F0PVRnb5fbg" name="VisualizationObject" visibility="package" method="_y3mK2l3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yu13cV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yu13cl3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yu1QZF3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu1QZV3-Ee2F0PVRnb5fbg" name="warp" type="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu1QZl3-Ee2F0PVRnb5fbg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yu13cF3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yu13c13-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu13dF3-Ee2F0PVRnb5fbg" name="VisualizationObject" visibility="package" method="_y3nY8F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yu2egl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yu2eg13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yu13dV3-Ee2F0PVRnb5fbg" name="fm" type="_yM19oF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu2egF3-Ee2F0PVRnb5fbg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yu2egV3-Ee2F0PVRnb5fbg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yu2ehF3-Ee2F0PVRnb5fbg" type="_yRemAF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyoLQF3-Ee2F0PVRnb5fbg" name="nameExtension" visibility="private" method="_y3nY9V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyoLQV3-Ee2F0PVRnb5fbg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyoLQl3-Ee2F0PVRnb5fbg" name="m" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyoLQ13-Ee2F0PVRnb5fbg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyoyUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRqMMF3-Ee2F0PVRnb5fbg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_y4WYwV3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yyqAcF3-Ee2F0PVRnb5fbg" general="_ys2TYV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1PaYF3-Ee2F0PVRnb5fbg" name="workLoad" visibility="package" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y587QV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1QBcV3-Ee2F0PVRnb5fbg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3onEF3-Ee2F0PVRnb5fbg" name="WorkLoadListener" specification="_yu46wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3onEV3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3onEl3-Ee2F0PVRnb5fbg" type="_yRqMMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3onE13-Ee2F0PVRnb5fbg" name="buildNodesAndFlows" specification="_yu6I4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3onFF3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3onFV3-Ee2F0PVRnb5fbg" name="testPrintStdOut" specification="_yRsBYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3onFl3-Ee2F0PVRnb5fbg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3onF13-Ee2F0PVRnb5fbg" name="enterWarpName" specification="_yu6v8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3pOIF3-Ee2F0PVRnb5fbg" name="ctx" type="_ys6k0F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3pOIV3-Ee2F0PVRnb5fbg" name="enterFlowName" specification="_yu7-EF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3pOIl3-Ee2F0PVRnb5fbg" name="ctx" type="_ys-PMF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3pOI13-Ee2F0PVRnb5fbg" name="exitPriority" specification="_yu9MMV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3pOJF3-Ee2F0PVRnb5fbg" name="ctx" type="_yu8lIl3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3pOJV3-Ee2F0PVRnb5fbg" name="exitPeriod" specification="_yu_BYV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3pOJl3-Ee2F0PVRnb5fbg" name="ctx" type="_yu-aUl3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3p1MF3-Ee2F0PVRnb5fbg" name="exitDeadline" specification="_yvA2kV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3p1MV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvAPgF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3p1Ml3-Ee2F0PVRnb5fbg" name="exitPhase" specification="_yvCrwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3p1M13-Ee2F0PVRnb5fbg" name="ctx" type="_yvCEsF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3p1NF3-Ee2F0PVRnb5fbg" name="exitSrcNode" specification="_yvDS0l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3p1NV3-Ee2F0PVRnb5fbg" name="ctx" type="_ytAEYF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3qcQF3-Ee2F0PVRnb5fbg" name="exitSnkNode" specification="_yvFIAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3qcQV3-Ee2F0PVRnb5fbg" name="ctx" type="_ytB5kl3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3qcQl3-Ee2F0PVRnb5fbg" name="exitFlow" specification="_yvGWIl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3qcQ13-Ee2F0PVRnb5fbg" name="ctx" type="_ytDuwl3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yRsBYF3-Ee2F0PVRnb5fbg" name="testPrintStdOut" method="_y3onFV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yRsBYV3-Ee2F0PVRnb5fbg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yu46wF3-Ee2F0PVRnb5fbg" name="WorkLoadListener" visibility="private" method="_y3onEF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yu5h0V3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yu5h0l3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yu5h0F3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yu5h013-Ee2F0PVRnb5fbg" type="_yRqMMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu6I4F3-Ee2F0PVRnb5fbg" name="buildNodesAndFlows" isStatic="true" method="_y3onE13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu6I4V3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu6v8F3-Ee2F0PVRnb5fbg" name="enterWarpName" method="_y3onF13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu6v8V3-Ee2F0PVRnb5fbg" name="ctx" type="_ys6k0F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu7-EF3-Ee2F0PVRnb5fbg" name="enterFlowName" method="_y3pOIV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu7-EV3-Ee2F0PVRnb5fbg" name="ctx" type="_ys-PMF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu9MMV3-Ee2F0PVRnb5fbg" name="exitPriority" method="_y3pOI13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu9MMl3-Ee2F0PVRnb5fbg" name="ctx" type="_yu8lIl3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yu_BYV3-Ee2F0PVRnb5fbg" name="exitPeriod" method="_y3pOJV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yu_BYl3-Ee2F0PVRnb5fbg" name="ctx" type="_yu-aUl3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvA2kV3-Ee2F0PVRnb5fbg" name="exitDeadline" method="_y3p1MF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvA2kl3-Ee2F0PVRnb5fbg" name="ctx" type="_yvAPgF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvCrwF3-Ee2F0PVRnb5fbg" name="exitPhase" method="_y3p1Ml3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvCrwV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvCEsF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvDS0l3-Ee2F0PVRnb5fbg" name="exitSrcNode" method="_y3p1NF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvDS013-Ee2F0PVRnb5fbg" name="ctx" type="_ytAEYF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvFIAF3-Ee2F0PVRnb5fbg" name="exitSnkNode" method="_y3qcQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvFIAV3-Ee2F0PVRnb5fbg" name="ctx" type="_ytB5kl3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvGWIl3-Ee2F0PVRnb5fbg" name="exitFlow" method="_y3qcQl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvGWI13-Ee2F0PVRnb5fbg" name="ctx" type="_ytDuwl3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRxg8F3-Ee2F0PVRnb5fbg" name="WarpPoset">
              <ownedComment xmi:id="_y4WYwl3-Ee2F0PVRnb5fbg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_yvJZcF3-Ee2F0PVRnb5fbg" general="_yOeVUF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3qcRF3-Ee2F0PVRnb5fbg" name="WarpPoset" specification="_yvIyYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3qcRV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3qcRl3-Ee2F0PVRnb5fbg" type="_yRxg8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rDUF3-Ee2F0PVRnb5fbg" name="findCoordinator" specification="_yyrOkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3rDUV3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3rDUl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yvIyYF3-Ee2F0PVRnb5fbg" name="WarpPoset" visibility="package" method="_y3qcRF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yvIyYl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yvIyY13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yvIyYV3-Ee2F0PVRnb5fbg" name="workload" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yvIyZF3-Ee2F0PVRnb5fbg" type="_yRxg8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyrOkF3-Ee2F0PVRnb5fbg" name="findCoordinator" visibility="protected" method="_y3rDUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyrOkV3-Ee2F0PVRnb5fbg" name="nodesInFlow" type="_yrr1wF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyrOkl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yRzWIF3-Ee2F0PVRnb5fbg" name="WarpInterface">
              <ownedComment xmi:id="_y4WYw13-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_yvKAgF3-Ee2F0PVRnb5fbg" general="_yQ5-QF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yRz9MF3-Ee2F0PVRnb5fbg" name="toWorkload">
                <ownedParameter xmi:id="_yvKAgV3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRz9MV3-Ee2F0PVRnb5fbg" name="toProgram">
                <ownedParameter xmi:id="_yvKnkF3-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR0kQF3-Ee2F0PVRnb5fbg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_yvKnkV3-Ee2F0PVRnb5fbg" type="_yP5RoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR1LUF3-Ee2F0PVRnb5fbg" name="toSimulator">
                <ownedParameter xmi:id="_yvKnkl3-Ee2F0PVRnb5fbg" type="_yQ1FwF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR1LUV3-Ee2F0PVRnb5fbg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_yvKnk13-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR1LUl3-Ee2F0PVRnb5fbg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_yvKnlF3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR1yYF3-Ee2F0PVRnb5fbg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_yR1yYV3-Ee2F0PVRnb5fbg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_yR2ZcF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR2ZcV3-Ee2F0PVRnb5fbg" name="deadlinesMet">
                <ownedParameter xmi:id="_yR2Zcl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yR4OoF3-Ee2F0PVRnb5fbg" name="WarpDSL">
              <ownedComment xmi:id="_y4W_0F3-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y1R2oF3-Ee2F0PVRnb5fbg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1R2oV3-Ee2F0PVRnb5fbg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1SdsF3-Ee2F0PVRnb5fbg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1SdsV3-Ee2F0PVRnb5fbg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1Sdsl3-Ee2F0PVRnb5fbg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1Sds13-Ee2F0PVRnb5fbg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3sRcF3-Ee2F0PVRnb5fbg" name="getInstructionParameters" specification="_yR_jYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3sRcV3-Ee2F0PVRnb5fbg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3sRcl3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yR_jYF3-Ee2F0PVRnb5fbg" name="getInstructionParameters" method="_y3sRcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yR_jYV3-Ee2F0PVRnb5fbg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yytq0F3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yR5cwF3-Ee2F0PVRnb5fbg" name="InstructionParameters">
                <ownedAttribute xmi:id="_y1TEwF3-Ee2F0PVRnb5fbg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1TEwV3-Ee2F0PVRnb5fbg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1Tr0F3-Ee2F0PVRnb5fbg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1Tr0V3-Ee2F0PVRnb5fbg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1Tr0l3-Ee2F0PVRnb5fbg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1Tr013-Ee2F0PVRnb5fbg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1US4F3-Ee2F0PVRnb5fbg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1US4V3-Ee2F0PVRnb5fbg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1U58F3-Ee2F0PVRnb5fbg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1U58V3-Ee2F0PVRnb5fbg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1U58l3-Ee2F0PVRnb5fbg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1VhAF3-Ee2F0PVRnb5fbg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1VhAl3-Ee2F0PVRnb5fbg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1WIEF3-Ee2F0PVRnb5fbg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rDU13-Ee2F0PVRnb5fbg" name="getCoordinator" specification="_yR6q4F3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rDVF3-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rDVV3-Ee2F0PVRnb5fbg" name="setCoordinator" specification="_yR75AF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rDVl3-Ee2F0PVRnb5fbg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rDV13-Ee2F0PVRnb5fbg" name="setName" specification="_yR8gEF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rDWF3-Ee2F0PVRnb5fbg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rDWV3-Ee2F0PVRnb5fbg" name="setFlow" specification="_yR8gEl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rDWl3-Ee2F0PVRnb5fbg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rqYF3-Ee2F0PVRnb5fbg" name="setSrc" specification="_yR9HIF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rqYV3-Ee2F0PVRnb5fbg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rqYl3-Ee2F0PVRnb5fbg" name="setSnk" specification="_yR9HIl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rqY13-Ee2F0PVRnb5fbg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rqZF3-Ee2F0PVRnb5fbg" name="setChannel" specification="_yR-VQF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rqZV3-Ee2F0PVRnb5fbg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3rqZl3-Ee2F0PVRnb5fbg" name="unused" specification="_yR-8UF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3rqZ13-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yR6q4F3-Ee2F0PVRnb5fbg" name="getCoordinator" method="_y3rDU13-Ee2F0PVRnb5fbg">
                  <ownedComment xmi:id="_y4W_0V3-Ee2F0PVRnb5fbg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yR6q4V3-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR75AF3-Ee2F0PVRnb5fbg" name="setCoordinator" method="_y3rDVV3-Ee2F0PVRnb5fbg">
                  <ownedComment xmi:id="_y4W_0l3-Ee2F0PVRnb5fbg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yR75AV3-Ee2F0PVRnb5fbg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR8gEF3-Ee2F0PVRnb5fbg" name="setName" visibility="private" method="_y3rDV13-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yR8gEV3-Ee2F0PVRnb5fbg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR8gEl3-Ee2F0PVRnb5fbg" name="setFlow" visibility="private" method="_y3rDWV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yR8gE13-Ee2F0PVRnb5fbg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR9HIF3-Ee2F0PVRnb5fbg" name="setSrc" visibility="private" method="_y3rqYF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yR9HIV3-Ee2F0PVRnb5fbg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR9HIl3-Ee2F0PVRnb5fbg" name="setSnk" visibility="private" method="_y3rqYl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yR9HI13-Ee2F0PVRnb5fbg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR-VQF3-Ee2F0PVRnb5fbg" name="setChannel" visibility="private" method="_y3rqZF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yR-VQV3-Ee2F0PVRnb5fbg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR-8UF3-Ee2F0PVRnb5fbg" name="unused" method="_y3rqZl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yR-8UV3-Ee2F0PVRnb5fbg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ySBYkF3-Ee2F0PVRnb5fbg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_yyvgAV3-Ee2F0PVRnb5fbg" general="_yyuR4F3-Ee2F0PVRnb5fbg"/>
                <ownedAttribute xmi:id="_y1WIEV3-Ee2F0PVRnb5fbg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y1WvIV3-Ee2F0PVRnb5fbg" name="instructionParametersArrayList" visibility="package" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y59iUF3-Ee2F0PVRnb5fbg"/>
                <ownedAttribute xmi:id="_y1X9QV3-Ee2F0PVRnb5fbg" name="instructionParameters" visibility="package" type="_yR5cwF3-Ee2F0PVRnb5fbg" association="_y59iU13-Ee2F0PVRnb5fbg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3sRc13-Ee2F0PVRnb5fbg" name="ListenerDsl" specification="_ySCmsF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3sRdF3-Ee2F0PVRnb5fbg" type="_ySBYkF3-Ee2F0PVRnb5fbg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3sRdV3-Ee2F0PVRnb5fbg" name="getInstructionParameters" specification="_ySDNwF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3sRdl3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3s4gF3-Ee2F0PVRnb5fbg" name="enterAction" specification="_yvNq4F3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3s4gV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvMcwF3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3s4gl3-Ee2F0PVRnb5fbg" name="exitAction" specification="_yvO5AF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3s4g13-Ee2F0PVRnb5fbg" name="ctx" type="_yvMcwF3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3s4hF3-Ee2F0PVRnb5fbg" name="exitFlowName" specification="_yvQHI13-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3s4hV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvQHIV3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3s4hl3-Ee2F0PVRnb5fbg" name="exitCmd" specification="_yvR8UV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3s4h13-Ee2F0PVRnb5fbg" name="ctx" type="_yvRVQl3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3s4iF3-Ee2F0PVRnb5fbg" name="exitSrcNode" specification="_yvTxgV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3s4iV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvTKcl3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3tfkF3-Ee2F0PVRnb5fbg" name="exitSnkNode" specification="_yvWNwV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3tfkV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvU_ol3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3tfkl3-Ee2F0PVRnb5fbg" name="exitChannel" specification="_yvYqAV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_y3tfk13-Ee2F0PVRnb5fbg" name="ctx" type="_yvYC8F3-Ee2F0PVRnb5fbg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ySCmsF3-Ee2F0PVRnb5fbg" name="ListenerDsl" visibility="package" method="_y3sRc13-Ee2F0PVRnb5fbg">
                  <eAnnotations xmi:id="_ySCmsV3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ySCmsl3-Ee2F0PVRnb5fbg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ySCms13-Ee2F0PVRnb5fbg" type="_ySBYkF3-Ee2F0PVRnb5fbg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySDNwF3-Ee2F0PVRnb5fbg" name="getInstructionParameters" method="_y3sRdV3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yyvgAF3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvNq4F3-Ee2F0PVRnb5fbg" name="enterAction" method="_y3s4gF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvNq4V3-Ee2F0PVRnb5fbg" name="ctx" type="_yvMcwF3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvO5AF3-Ee2F0PVRnb5fbg" name="exitAction" method="_y3s4gl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvO5AV3-Ee2F0PVRnb5fbg" name="ctx" type="_yvMcwF3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvQHI13-Ee2F0PVRnb5fbg" name="exitFlowName" method="_y3s4hF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvQHJF3-Ee2F0PVRnb5fbg" name="ctx" type="_yvQHIV3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvR8UV3-Ee2F0PVRnb5fbg" name="exitCmd" method="_y3s4hl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvR8Ul3-Ee2F0PVRnb5fbg" name="ctx" type="_yvRVQl3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvTxgV3-Ee2F0PVRnb5fbg" name="exitSrcNode" method="_y3s4iF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvUYkF3-Ee2F0PVRnb5fbg" name="ctx" type="_yvTKcl3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvWNwV3-Ee2F0PVRnb5fbg" name="exitSnkNode" method="_y3tfkF3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvW00F3-Ee2F0PVRnb5fbg" name="ctx" type="_yvU_ol3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yvYqAV3-Ee2F0PVRnb5fbg" name="exitChannel" method="_y3tfkl3-Ee2F0PVRnb5fbg">
                  <ownedParameter xmi:id="_yvYqAl3-Ee2F0PVRnb5fbg" name="ctx" type="_yvYC8F3-Ee2F0PVRnb5fbg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySLJkF3-Ee2F0PVRnb5fbg" name="WarpSystem">
              <ownedComment xmi:id="_y4W_013-Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y1ZycF3-Ee2F0PVRnb5fbg" name="program" visibility="private" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5-JYV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1aZgV3-Ee2F0PVRnb5fbg" name="workLoad" visibility="private" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y5-wcV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1bAkV3-Ee2F0PVRnb5fbg" name="ra" visibility="private" type="_yP5RoF3-Ee2F0PVRnb5fbg" association="_y5_XgV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1bnoF3-Ee2F0PVRnb5fbg" name="la" visibility="private" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5_-kV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1cOsV3-Ee2F0PVRnb5fbg" name="ca" visibility="private" type="_yLB_wF3-Ee2F0PVRnb5fbg" association="_y6AloV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1c1wV3-Ee2F0PVRnb5fbg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1eq8l3-Ee2F0PVRnb5fbg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1eq813-Ee2F0PVRnb5fbg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1fSAV3-Ee2F0PVRnb5fbg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1fSAl3-Ee2F0PVRnb5fbg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yvcUYF3-Ee2F0PVRnb5fbg" client="_ySLJkF3-Ee2F0PVRnb5fbg" supplier="_yRzWIF3-Ee2F0PVRnb5fbg" contract="_yRzWIF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3uGol3-Ee2F0PVRnb5fbg" name="WarpSystem" specification="_yyyjUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3uGo13-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3uGpF3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3uGpV3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3uGpl3-Ee2F0PVRnb5fbg" type="_ySLJkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3utsF3-Ee2F0PVRnb5fbg" name="toWorkload" specification="_ySNl0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3utsV3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3utsl3-Ee2F0PVRnb5fbg" name="toProgram" specification="_ySOz8l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3uts13-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3uttF3-Ee2F0PVRnb5fbg" name="toReliabilityAnalysis" specification="_ySPbAl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3uttV3-Ee2F0PVRnb5fbg" type="_yP5RoF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3uttl3-Ee2F0PVRnb5fbg" name="toSimulator" specification="_ySQpIl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3utt13-Ee2F0PVRnb5fbg" type="_yQ1FwF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3utuF3-Ee2F0PVRnb5fbg" name="toLatencyAnalysis" specification="_ySR3Ql3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3utuV3-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3vUwF3-Ee2F0PVRnb5fbg" name="toChannelAnalysis" specification="_ySTFYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3vUwV3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3vUwl3-Ee2F0PVRnb5fbg" name="reliabilitiesMet" specification="_ySTscF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3vUw13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3vUxF3-Ee2F0PVRnb5fbg" name="deadlinesMet" specification="_ySUTgl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3vUxV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3vUxl3-Ee2F0PVRnb5fbg" name="createProgram" specification="_yyzKYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3vUx13-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3vUyF3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3vUyV3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3vUyl3-Ee2F0PVRnb5fbg" name="getNumFaults" specification="_ySWvwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3vUy13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3vUzF3-Ee2F0PVRnb5fbg" name="getMinPacketReceptionRate" specification="_ySXW0l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3v70F3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3v70V3-Ee2F0PVRnb5fbg" name="getE2e" specification="_ySYk8l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3v70l3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3v7013-Ee2F0PVRnb5fbg" name="getName" specification="_ySZMAl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3v71F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3v71V3-Ee2F0PVRnb5fbg" name="getSchedulerName" specification="_ySaaIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3v71l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3v7113-Ee2F0PVRnb5fbg" name="getNumTransmissions" specification="_ySaaJV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3v72F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3v72V3-Ee2F0PVRnb5fbg" name="getOptimizationFlag" specification="_ySboRF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3wi4F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySNl0F3-Ee2F0PVRnb5fbg" name="toWorkload" method="_y3utsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yveJkF3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySOz8l3-Ee2F0PVRnb5fbg" name="toProgram" method="_y3utsl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yveJkV3-Ee2F0PVRnb5fbg" type="_yO6aMF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySPbAl3-Ee2F0PVRnb5fbg" name="toReliabilityAnalysis" method="_y3uttF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yveJkl3-Ee2F0PVRnb5fbg" type="_yP5RoF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySQpIl3-Ee2F0PVRnb5fbg" name="toSimulator" method="_y3uttl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yveJk13-Ee2F0PVRnb5fbg" type="_yQ1FwF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySR3Ql3-Ee2F0PVRnb5fbg" name="toLatencyAnalysis" method="_y3utuF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yveJlF3-Ee2F0PVRnb5fbg" type="_yN9X8F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySTFYF3-Ee2F0PVRnb5fbg" name="toChannelAnalysis" method="_y3vUwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvewoF3-Ee2F0PVRnb5fbg" type="_yLB_wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySTscF3-Ee2F0PVRnb5fbg" name="reliabilitiesMet" method="_y3vUwl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySTscV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySUTgl3-Ee2F0PVRnb5fbg" name="deadlinesMet" method="_y3vUxF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySUTg13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySWvwF3-Ee2F0PVRnb5fbg" name="getNumFaults" method="_y3vUyl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySWvwV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySXW0l3-Ee2F0PVRnb5fbg" name="getMinPacketReceptionRate" method="_y3vUzF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yy0YgF3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySYk8l3-Ee2F0PVRnb5fbg" name="getE2e" method="_y3v70V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yy0YgV3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySZMAl3-Ee2F0PVRnb5fbg" name="getName" method="_y3v7013-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySZzEF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySaaIF3-Ee2F0PVRnb5fbg" name="getSchedulerName" method="_y3v71V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySaaIV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySaaJV3-Ee2F0PVRnb5fbg" name="getNumTransmissions" method="_y3v7113-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySboQF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySboRF3-Ee2F0PVRnb5fbg" name="getOptimizationFlag" method="_y3v72V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yScPUF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySc2Yl3-Ee2F0PVRnb5fbg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_yyyjUF3-Ee2F0PVRnb5fbg" name="WarpSystem" method="_y3uGol3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yyyjVF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yyyjVV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yyyjUV3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyyjUl3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyyjU13-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyyjVl3-Ee2F0PVRnb5fbg" type="_ySLJkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yyzKYF3-Ee2F0PVRnb5fbg" name="createProgram" visibility="private" method="_y3vUxl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yyzxcF3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yyzxcV3-Ee2F0PVRnb5fbg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyzxcl3-Ee2F0PVRnb5fbg" name="choice" type="_yyEKkF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySkLIF3-Ee2F0PVRnb5fbg" name="WorkLoad">
              <ownedComment xmi:id="_y4Xm4F3-Ee2F0PVRnb5fbg">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yvtaIF3-Ee2F0PVRnb5fbg" general="_yTPgkF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1hHMF3-Ee2F0PVRnb5fbg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1hHMV3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1huQF3-Ee2F0PVRnb5fbg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1huQV3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1huQl3-Ee2F0PVRnb5fbg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1huQ13-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1iVUF3-Ee2F0PVRnb5fbg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1iVUV3-Ee2F0PVRnb5fbg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1iVUl3-Ee2F0PVRnb5fbg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1iVU13-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1i8YF3-Ee2F0PVRnb5fbg" name="minPacketReceptionRate" type="_yyJqIF3-Ee2F0PVRnb5fbg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1i8YV3-Ee2F0PVRnb5fbg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1i8Yl3-Ee2F0PVRnb5fbg" name="e2e" visibility="private" type="_yyJqIF3-Ee2F0PVRnb5fbg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1jjcF3-Ee2F0PVRnb5fbg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1jjcl3-Ee2F0PVRnb5fbg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1kKgF3-Ee2F0PVRnb5fbg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1kKgV3-Ee2F0PVRnb5fbg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1kKgl3-Ee2F0PVRnb5fbg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1kxkV3-Ee2F0PVRnb5fbg" name="flows" type="_yNbzgF3-Ee2F0PVRnb5fbg" association="_y4Xm4V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1lYoF3-Ee2F0PVRnb5fbg" name="nodes" type="_yOT9QF3-Ee2F0PVRnb5fbg" association="_y4YN8F3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1lYoV3-Ee2F0PVRnb5fbg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1l_sV3-Ee2F0PVRnb5fbg" name="flowNamesInOriginalOrder" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y6BMsV3-Ee2F0PVRnb5fbg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1nN0F3-Ee2F0PVRnb5fbg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1nN0V3-Ee2F0PVRnb5fbg" name="flowNamesInPriorityOrder" type="_yrr1wF3-Ee2F0PVRnb5fbg" association="_y6BzwV3-Ee2F0PVRnb5fbg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1ob8V3-Ee2F0PVRnb5fbg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yvnTgF3-Ee2F0PVRnb5fbg" client="_ySkLIF3-Ee2F0PVRnb5fbg" supplier="_yP7t4F3-Ee2F0PVRnb5fbg" contract="_yP7t4F3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3wi4V3-Ee2F0PVRnb5fbg" name="WorkLoad" specification="_yy4C4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3wi4l3-Ee2F0PVRnb5fbg" name="m" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3wi413-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3wi5F3-Ee2F0PVRnb5fbg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3wi5V3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3xJ8F3-Ee2F0PVRnb5fbg" name="WorkLoad" specification="_yy5RAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3xJ8V3-Ee2F0PVRnb5fbg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3xJ8l3-Ee2F0PVRnb5fbg" name="m" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3xJ813-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3xJ9F3-Ee2F0PVRnb5fbg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3xJ9V3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3xJ9l3-Ee2F0PVRnb5fbg" name="setDefaultParameters" specification="_ySn1gF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3xJ913-Ee2F0PVRnb5fbg" name="getE2e" specification="_ySockF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3xJ-F3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3xJ-V3-Ee2F0PVRnb5fbg" name="getIntForFlowNames" specification="_ySockV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3xJ-l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3xJ-13-Ee2F0PVRnb5fbg" name="getName" specification="_ySpDoF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3xJ_F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3xJ_V3-Ee2F0PVRnb5fbg" name="setMinPacketReceptionRate" specification="_yy6fIV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3xJ_l3-Ee2F0PVRnb5fbg" name="minPacketReceptionRate" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3yYEF3-Ee2F0PVRnb5fbg" name="getMaxPhase" specification="_ySpqsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3yYEV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3yYEl3-Ee2F0PVRnb5fbg" name="getMinPeriod" specification="_ySqRwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3yYE13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3yYFF3-Ee2F0PVRnb5fbg" name="setE2e" specification="_yy7GMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3yYFV3-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3yYFl3-Ee2F0PVRnb5fbg" name="setIntForFlowNames" specification="_ySq40F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3yYF13-Ee2F0PVRnb5fbg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3yYGF3-Ee2F0PVRnb5fbg" name="setName" specification="_ySrf4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3yYGV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3yYGl3-Ee2F0PVRnb5fbg" name="setNodeChannel" specification="_ySsuAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3yYG13-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3yYHF3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3y_IF3-Ee2F0PVRnb5fbg" name="getNodeChannel" specification="_yStVEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3y_IV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3y_Il3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3y_I13-Ee2F0PVRnb5fbg" name="addFlow" specification="_ySt8IF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3y_JF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3y_JV3-Ee2F0PVRnb5fbg" name="isIntForNodeNames" specification="_ySujMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3y_Jl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3zmMF3-Ee2F0PVRnb5fbg" name="isIntForFlowNames" specification="_ySujMl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3zmMV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3zmMl3-Ee2F0PVRnb5fbg" name="addNodeToFlow" specification="_ySvKQV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3zmM13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3zmNF3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3zmNV3-Ee2F0PVRnb5fbg" name="getFlowPriority" specification="_ySwYYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3zmNl3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3zmN13-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3zmOF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3zmOV3-Ee2F0PVRnb5fbg" name="setFlowPriority" specification="_ySw_cF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3zmOl3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3zmO13-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y30NQF3-Ee2F0PVRnb5fbg" name="setFlowPeriod" specification="_ySxmgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y30NQV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y30NQl3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y30NQ13-Ee2F0PVRnb5fbg" name="setFlowDeadline" specification="_ySy0oF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y30NRF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y30NRV3-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y300UF3-Ee2F0PVRnb5fbg" name="setFlowPhase" specification="_ySy0o13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y300UV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y300Ul3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y300U13-Ee2F0PVRnb5fbg" name="getFlowIndex" specification="_yS0CwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y300VF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y300VV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y300Vl3-Ee2F0PVRnb5fbg" name="getFlowPriority" specification="_yS0p0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y300V13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y300WF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y31bYF3-Ee2F0PVRnb5fbg" name="getFlowPeriod" specification="_yS1Q4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y31bYV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y31bYl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y31bY13-Ee2F0PVRnb5fbg" name="getFlowDeadline" specification="_yS138V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y31bZF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y31bZV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y31bZl3-Ee2F0PVRnb5fbg" name="getFlowPhase" specification="_yS3GEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y31bZ13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y31baF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32CcF3-Ee2F0PVRnb5fbg" name="getFlowTxAttemptsPerLink" specification="_yS3tIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y32CcV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y32Ccl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32Cc13-Ee2F0PVRnb5fbg" name="setFlowsInPriorityOrder" specification="_yS3tI13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32CdF3-Ee2F0PVRnb5fbg" name="setFlowsInDMorder" specification="_yS4UMF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32CdV3-Ee2F0PVRnb5fbg" name="setFlowsInRMorder" specification="_yS4UMV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32Cdl3-Ee2F0PVRnb5fbg" name="setFlowsInRealTimeHARTorder" specification="_yS4UMl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32pgF3-Ee2F0PVRnb5fbg" name="finalizeCurrentFlow" specification="_yS47QF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y32pgV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32pgl3-Ee2F0PVRnb5fbg" name="nextReleaseTime" specification="_yS47Ql3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y32pg13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y32phF3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y32phV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32phl3-Ee2F0PVRnb5fbg" name="nextAbsoluteDeadline" specification="_yS5iUl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y32ph13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y32piF3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y32piV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y32pil3-Ee2F0PVRnb5fbg" name="finalizeFlowWithE2eParameters" specification="_yS6JYl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y32pi13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y33QkF3-Ee2F0PVRnb5fbg" name="finalizeFlowWithFixedFaultTolerance" specification="_yS6wcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y33QkV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y33Qkl3-Ee2F0PVRnb5fbg" name="getFixedTxPerLinkAndTotalTxCost" specification="_yvpvwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y33Qk13-Ee2F0PVRnb5fbg" name="flow" type="_yM_HkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y33QlF3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y33QlV3-Ee2F0PVRnb5fbg" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_yy8UUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y33Qll3-Ee2F0PVRnb5fbg" name="flow" type="_yM_HkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y33Ql13-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y33QmF3-Ee2F0PVRnb5fbg" name="M" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y33QmV3-Ee2F0PVRnb5fbg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y33Qml3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y33Qm13-Ee2F0PVRnb5fbg" name="getNodeNamesOrderedAlphabetically" specification="_yS7XgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y33QnF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y33QnV3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y333oF3-Ee2F0PVRnb5fbg" name="getFlow" specification="_yS8loF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y333oV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y333ol3-Ee2F0PVRnb5fbg" type="_yM_HkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y333o13-Ee2F0PVRnb5fbg" name="getFlowNames" specification="_yS8lol3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y333pF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y333pV3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y333pl3-Ee2F0PVRnb5fbg" name="getNodeIndex" specification="_yS-a0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y333p13-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y333qF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y333qV3-Ee2F0PVRnb5fbg" name="getNodesInFlow" specification="_yS_B4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y333ql3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y333q13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y333rF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y333rV3-Ee2F0PVRnb5fbg" name="getHyperPeriod" specification="_yS_o8V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y333rl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y333r13-Ee2F0PVRnb5fbg" name="getTotalTxAttemptsInFlow" specification="_yTAQAV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y333sF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y333sV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y34esF3-Ee2F0PVRnb5fbg" name="getNumTxAttemptsPerLink" specification="_yTA3EV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y34esV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34esl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y34es13-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y34etF3-Ee2F0PVRnb5fbg" name="addEdge" specification="_yvsMAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y34etV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34etl3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y34et13-Ee2F0PVRnb5fbg" name="maxFlowLength" specification="_yTBeIV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y34euF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y34euV3-Ee2F0PVRnb5fbg" name="parser" specification="_yvszEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y34eul3-Ee2F0PVRnb5fbg" name="wkldDesc" type="_yMf_YF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y34eu13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// loops through the workload description to find the flow name&#xD;
	  // that matches a specific flow name passed as the second input parameter.&#xD;
	  // prints the matching flow line&#xD;
	  for (String flowLine : wkldDesc) {&#xD;
		  if (flowLine.startsWith(flowName + ' ') || &#xD;
				  flowLine.startsWith(flowName + ':')) {   //accounts for .txt files where a colon follows flow name&#xD;
			  System.out.print(flowLine);&#xD;
		  }&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y34evF3-Ee2F0PVRnb5fbg" name="main" specification="_yTCsQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y34evV3-Ee2F0PVRnb5fbg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y34evl3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	  System.out.println(wkld.name);&#xD;
	  wkld.setFlowsInDMorder();&#xD;
	  // loops through the sorted ArrayList of flow names calling parser &#xD;
	  // to match each flow name with associated workload description&#xD;
	  for (String flowName : wkld.getFlowNamesInPriorityOrder()) {&#xD;
		  parser(wkld.visualization(), flowName);&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySn1gF3-Ee2F0PVRnb5fbg" name="setDefaultParameters" visibility="private" method="_y3xJ9l3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_ySockF3-Ee2F0PVRnb5fbg" name="getE2e" method="_y3xJ913-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Y1Al3-Ee2F0PVRnb5fbg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_yy6fIF3-Ee2F0PVRnb5fbg" type="_yyJqIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySockV3-Ee2F0PVRnb5fbg" name="getIntForFlowNames" method="_y3xJ-V3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Y1A13-Ee2F0PVRnb5fbg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySockl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySpDoF3-Ee2F0PVRnb5fbg" name="getName" method="_y3xJ-13-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Y1BF3-Ee2F0PVRnb5fbg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySpDoV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySpqsF3-Ee2F0PVRnb5fbg" name="getMaxPhase" method="_y3yYEF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcEF3-Ee2F0PVRnb5fbg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySpqsV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySqRwF3-Ee2F0PVRnb5fbg" name="getMinPeriod" method="_y3yYEl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcEV3-Ee2F0PVRnb5fbg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySqRwV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySq40F3-Ee2F0PVRnb5fbg" name="setIntForFlowNames" method="_y3yYFl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcE13-Ee2F0PVRnb5fbg">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySq40V3-Ee2F0PVRnb5fbg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySrf4F3-Ee2F0PVRnb5fbg" name="setName" method="_y3yYGF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcFF3-Ee2F0PVRnb5fbg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySrf4V3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySsuAF3-Ee2F0PVRnb5fbg" name="setNodeChannel" method="_y3yYGl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcFV3-Ee2F0PVRnb5fbg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySsuAV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySsuAl3-Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yStVEF3-Ee2F0PVRnb5fbg" name="getNodeChannel" method="_y3y_IF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcFl3-Ee2F0PVRnb5fbg">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yStVEV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yStVEl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySt8IF3-Ee2F0PVRnb5fbg" name="addFlow" method="_y3y_I13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySt8IV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySujMF3-Ee2F0PVRnb5fbg" name="isIntForNodeNames" method="_y3y_JV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySujMV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySujMl3-Ee2F0PVRnb5fbg" name="isIntForFlowNames" method="_y3zmMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySvKQF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySvKQV3-Ee2F0PVRnb5fbg" name="addNodeToFlow" method="_y3zmMl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySvxUF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySvxUV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySwYYF3-Ee2F0PVRnb5fbg" name="getFlowPriority" method="_y3zmNV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcF13-Ee2F0PVRnb5fbg">
                  <body>Iterates through the given flow to find the input node name. When found,&#xD;
   * gets the node's priority and returns it.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param nodeName&#xD;
   * @return priority (Integer value) of input node</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySwYYV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySwYYl3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySwYY13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySw_cF3-Ee2F0PVRnb5fbg" name="setFlowPriority" method="_y3zmOV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcGF3-Ee2F0PVRnb5fbg">
                  <body>Method to set a given flow name to a new passed in priority value.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySw_cV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySw_cl3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySxmgF3-Ee2F0PVRnb5fbg" name="setFlowPeriod" method="_y30NQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySxmgV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySxmgl3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySy0oF3-Ee2F0PVRnb5fbg" name="setFlowDeadline" method="_y30NQ13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySy0oV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySy0ol3-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySy0o13-Ee2F0PVRnb5fbg" name="setFlowPhase" method="_y300UF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ySy0pF3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySzbsF3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS0CwF3-Ee2F0PVRnb5fbg" name="getFlowIndex" method="_y300U13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS0CwV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS0Cwl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS0p0F3-Ee2F0PVRnb5fbg" name="getFlowPriority" method="_y300Vl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS0p0V3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS0p0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS1Q4F3-Ee2F0PVRnb5fbg" name="getFlowPeriod" method="_y31bYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS1Q4V3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS138F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS138V3-Ee2F0PVRnb5fbg" name="getFlowDeadline" method="_y31bY13-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcGV3-Ee2F0PVRnb5fbg">
                  <body>Method to return the deadline value (Integer) of the flow name passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return deadline Integer value of flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_yS138l3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS2fAF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS3GEF3-Ee2F0PVRnb5fbg" name="getFlowPhase" method="_y31bZl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS3GEV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS3GEl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS3tIF3-Ee2F0PVRnb5fbg" name="getFlowTxAttemptsPerLink" method="_y32CcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS3tIV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS3tIl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS3tI13-Ee2F0PVRnb5fbg" name="setFlowsInPriorityOrder" method="_y32Cc13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yS4UMF3-Ee2F0PVRnb5fbg" name="setFlowsInDMorder" method="_y32CdF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aDIF3-Ee2F0PVRnb5fbg">
                  <body>This method creates a list of Flow objects from the FlowMap using the stream interface, sorts by a&#xD;
   * secondary key, then sorts by a primary key. Finally, it creates a new flowNamesInPriorityOrder that&#xD;
   * contains the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yS4UMV3-Ee2F0PVRnb5fbg" name="setFlowsInRMorder" method="_y32CdV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aDIV3-Ee2F0PVRnb5fbg">
                  <body>This setter method creates a list of Flow objects from the FlowMap using the stream interface,&#xD;
   * sorting by a secondary key and primary key. Then it creates a new flowNamesInPriorityOrder that contains &#xD;
   * the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yS4UMl3-Ee2F0PVRnb5fbg" name="setFlowsInRealTimeHARTorder" method="_y32Cdl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yS47QF3-Ee2F0PVRnb5fbg" name="finalizeCurrentFlow" method="_y32pgF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS47QV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS47Ql3-Ee2F0PVRnb5fbg" name="nextReleaseTime" method="_y32pgl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS47Q13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS5iUF3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS5iUV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS5iUl3-Ee2F0PVRnb5fbg" name="nextAbsoluteDeadline" method="_y32phl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS5iU13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS6JYF3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS6JYV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS6JYl3-Ee2F0PVRnb5fbg" name="finalizeFlowWithE2eParameters" visibility="private" method="_y32pil3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS6JY13-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS6wcF3-Ee2F0PVRnb5fbg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_y33QkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS6wcV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS7XgF3-Ee2F0PVRnb5fbg" name="getNodeNamesOrderedAlphabetically" method="_y33Qm13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS7XgV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yS7-kF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS8loF3-Ee2F0PVRnb5fbg" name="getFlow" visibility="private" method="_y333oF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS8loV3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yvrk8F3-Ee2F0PVRnb5fbg" type="_yM_HkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS8lol3-Ee2F0PVRnb5fbg" name="getFlowNames" method="_y333o13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS8lo13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yS9MsF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS-a0F3-Ee2F0PVRnb5fbg" name="getNodeIndex" method="_y333pl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yS-a0V3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS-a0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_B4F3-Ee2F0PVRnb5fbg" name="getNodesInFlow" method="_y333qV3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aDIl3-Ee2F0PVRnb5fbg">
                  <body>This method creates a String array of the node names from the input parameter flowName&#xD;
   * in the same order as they exist in the flow specification.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return Array of String node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_yS_B4V3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS_B4l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yS_B413-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_o8V3-Ee2F0PVRnb5fbg" name="getHyperPeriod" method="_y333rV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTAQAF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTAQAV3-Ee2F0PVRnb5fbg" name="getTotalTxAttemptsInFlow" method="_y333r13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTAQAl3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTA3EF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTA3EV3-Ee2F0PVRnb5fbg" name="getNumTxAttemptsPerLink" method="_y34esF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTA3El3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTA3E13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yTA3FF3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTBeIV3-Ee2F0PVRnb5fbg" name="maxFlowLength" method="_y34et13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTCFMF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTCsQF3-Ee2F0PVRnb5fbg" name="main" isStatic="true" method="_y34evF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTCsQV3-Ee2F0PVRnb5fbg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yTCsQl3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yvpvwF3-Ee2F0PVRnb5fbg" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_y33Qkl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvpvwV3-Ee2F0PVRnb5fbg" name="flow" type="_yM_HkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy7tQF3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvsMAF3-Ee2F0PVRnb5fbg" name="addEdge" method="_y34etF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvsMAV3-Ee2F0PVRnb5fbg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yvsMAl3-Ee2F0PVRnb5fbg" name="edge" type="_yMjpwF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yvszEF3-Ee2F0PVRnb5fbg" name="parser" visibility="private" isStatic="true" method="_y34euV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yvszEV3-Ee2F0PVRnb5fbg" name="wkldDesc" type="_yMf_YF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yvszEl3-Ee2F0PVRnb5fbg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yy4C4F3-Ee2F0PVRnb5fbg" name="WorkLoad" visibility="package" method="_y3wi4V3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yy4p813-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yy4p9F3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4Y1AF3-Ee2F0PVRnb5fbg">
                  <body>The first constructor calls the parent class to set up file information. m and e2e are then initialized.&#xD;
   * Then it creates the listener object, which will read the workLoad description and then build the node and &#xD;
   * flow objects that instantiates the workLoad.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_yy4p8F3-Ee2F0PVRnb5fbg" name="m" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy4p8V3-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy4p8l3-Ee2F0PVRnb5fbg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy4p9V3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yy5RAF3-Ee2F0PVRnb5fbg" name="WorkLoad" visibility="package" method="_y3xJ8F3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yy54El3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yy54E13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4Y1AV3-Ee2F0PVRnb5fbg">
                  <body>The second constructor is identical to the first with the exception of initializing the optional&#xD;
   * numFaults input parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_yy5RAV3-Ee2F0PVRnb5fbg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy5RAl3-Ee2F0PVRnb5fbg" name="m" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy54EF3-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy54EV3-Ee2F0PVRnb5fbg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy54FF3-Ee2F0PVRnb5fbg" type="_ySkLIF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yy6fIV3-Ee2F0PVRnb5fbg" name="setMinPacketReceptionRate" method="_y3xJ_V3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4Y1BV3-Ee2F0PVRnb5fbg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yy6fIl3-Ee2F0PVRnb5fbg" name="minPacketReceptionRate" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yy7GMF3-Ee2F0PVRnb5fbg" name="setE2e" method="_y3yYFF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4ZcEl3-Ee2F0PVRnb5fbg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yy7GMV3-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yy8UUF3-Ee2F0PVRnb5fbg" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_y33QlV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yy8UUV3-Ee2F0PVRnb5fbg" name="flow" type="_yM_HkF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy87YF3-Ee2F0PVRnb5fbg" name="e2e" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy87YV3-Ee2F0PVRnb5fbg" name="M" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yy87Yl3-Ee2F0PVRnb5fbg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy9icV3-Ee2F0PVRnb5fbg" type="_yrr1wF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTPgkF3-Ee2F0PVRnb5fbg" name="WorkLoadDescription">
              <ownedComment xmi:id="_y4aqMF3-Ee2F0PVRnb5fbg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_yv19Al3-Ee2F0PVRnb5fbg" general="_yRemAF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1q4MF3-Ee2F0PVRnb5fbg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1rfQF3-Ee2F0PVRnb5fbg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1rfQV3-Ee2F0PVRnb5fbg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1rfQl3-Ee2F0PVRnb5fbg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1rfQ13-Ee2F0PVRnb5fbg" name="description" visibility="private" type="_yMf_YF3-Ee2F0PVRnb5fbg" association="_y6DB4V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1stYF3-Ee2F0PVRnb5fbg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1stYl3-Ee2F0PVRnb5fbg" name="fm" visibility="private" type="_yM19oF3-Ee2F0PVRnb5fbg" association="_y6Do8V3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1tUcV3-Ee2F0PVRnb5fbg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y35FwF3-Ee2F0PVRnb5fbg" name="WorkLoadDescription" specification="_yTQusF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y35FwV3-Ee2F0PVRnb5fbg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35Fwl3-Ee2F0PVRnb5fbg" type="_yTPgkF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y35s0F3-Ee2F0PVRnb5fbg" name="visualization" specification="_yTR80F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y35s0V3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y35s0l3-Ee2F0PVRnb5fbg" name="fileVisualization" specification="_yTTK8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y35s013-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y35s1F3-Ee2F0PVRnb5fbg" name="toString" specification="_yTTyA13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y35s1V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y35s1l3-Ee2F0PVRnb5fbg" name="initialize" specification="_yTVAIl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y35s113-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTQusF3-Ee2F0PVRnb5fbg" name="WorkLoadDescription" visibility="package" method="_y35FwF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yTQusl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTQus13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTQusV3-Ee2F0PVRnb5fbg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTQutF3-Ee2F0PVRnb5fbg" type="_yTPgkF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTR80F3-Ee2F0PVRnb5fbg" name="visualization" method="_y35s0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yv19AF3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTTK8F3-Ee2F0PVRnb5fbg" name="fileVisualization" method="_y35s0l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yv19AV3-Ee2F0PVRnb5fbg" type="_yMf_YF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTTyA13-Ee2F0PVRnb5fbg" name="toString" method="_y35s1F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTUZEF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTVAIl3-Ee2F0PVRnb5fbg" name="initialize" visibility="private" method="_y35s1l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yTVAI13-Ee2F0PVRnb5fbg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTXcYF3-Ee2F0PVRnb5fbg" name="Warp">
              <ownedComment xmi:id="_y4aqMV3-Ee2F0PVRnb5fbg">
                <body>&lt;h1>This is the main Java class for the Warp project.&lt;/h1>&#xD;
&lt;p>Takes an input file and creates either a WorkLoad or WarpInterface to process the file based&#xD;
on the arguments given on runtime. Outputs a file with visualization.&lt;/p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y1t7gF3-Ee2F0PVRnb5fbg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1uikF3-Ee2F0PVRnb5fbg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1uikV3-Ee2F0PVRnb5fbg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_yyJqIF3-Ee2F0PVRnb5fbg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1uikl3-Ee2F0PVRnb5fbg" value="1.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1vJoF3-Ee2F0PVRnb5fbg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_yyJqIF3-Ee2F0PVRnb5fbg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1vJoV3-Ee2F0PVRnb5fbg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1vJol3-Ee2F0PVRnb5fbg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1vwsF3-Ee2F0PVRnb5fbg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1vwsV3-Ee2F0PVRnb5fbg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_yQ7MYF3-Ee2F0PVRnb5fbg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1vwsl3-Ee2F0PVRnb5fbg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1wXwF3-Ee2F0PVRnb5fbg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1wXwV3-Ee2F0PVRnb5fbg" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1wXwl3-Ee2F0PVRnb5fbg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1w-0V3-Ee2F0PVRnb5fbg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1xl4V3-Ee2F0PVRnb5fbg" name="minLQ" visibility="private" isStatic="true" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1yM8V3-Ee2F0PVRnb5fbg" name="e2e" visibility="private" isStatic="true" type="_yyJqIF3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y1y0AF3-Ee2F0PVRnb5fbg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1zbEF3-Ee2F0PVRnb5fbg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1zbEl3-Ee2F0PVRnb5fbg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y10CIV3-Ee2F0PVRnb5fbg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y10pMV3-Ee2F0PVRnb5fbg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y11QQF3-Ee2F0PVRnb5fbg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y11QQl3-Ee2F0PVRnb5fbg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y113UV3-Ee2F0PVRnb5fbg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y12eYV3-Ee2F0PVRnb5fbg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y13FcV3-Ee2F0PVRnb5fbg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y13Fcl3-Ee2F0PVRnb5fbg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y13sgV3-Ee2F0PVRnb5fbg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y14TkV3-Ee2F0PVRnb5fbg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y146oF3-Ee2F0PVRnb5fbg" name="schedulerSelected" visibility="private" isStatic="true" type="_yQ7MYF3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y36T4F3-Ee2F0PVRnb5fbg" name="main" specification="_yTcU4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y36T4V3-Ee2F0PVRnb5fbg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y36T4l3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y36T413-Ee2F0PVRnb5fbg" name="visualize" specification="_yv9RwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y36T5F3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y36T5V3-Ee2F0PVRnb5fbg" name="choice" type="_yROHUF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y36T5l3-Ee2F0PVRnb5fbg" name="visualize" specification="_yv940F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y36T513-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y36T6F3-Ee2F0PVRnb5fbg" name="choice" type="_yRLrEF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y36T6V3-Ee2F0PVRnb5fbg" name="verifyPerformanceRequirements" specification="_yv-f4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y36T6l3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y36T613-Ee2F0PVRnb5fbg" name="verifyReliabilities" specification="_yv-f4l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y36T7F3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3668F3-Ee2F0PVRnb5fbg" name="verifyDeadlines" specification="_yv_G8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3668V3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3668l3-Ee2F0PVRnb5fbg" name="verifyNoChannelConflicts" specification="_yv_G8l3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y366813-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3669F3-Ee2F0PVRnb5fbg" name="setWarpParameters" specification="_yTeKEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3669V3-Ee2F0PVRnb5fbg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3669l3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y366913-Ee2F0PVRnb5fbg" name="printWarpParameters" specification="_yTexIF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTcU4F3-Ee2F0PVRnb5fbg" name="main" isStatic="true" method="_y36T4F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqMl3-Ee2F0PVRnb5fbg">
                  <body>The main method of Warp.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments passed in at runtime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yTcU4V3-Ee2F0PVRnb5fbg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yTcU4l3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTeKEF3-Ee2F0PVRnb5fbg" name="setWarpParameters" visibility="private" isStatic="true" method="_y3669F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4bRQF3-Ee2F0PVRnb5fbg">
                  <body>Sets the class variables based on the arguments given at runtime.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments from the main method</body>
                </ownedComment>
                <ownedParameter xmi:id="_yTeKEV3-Ee2F0PVRnb5fbg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yTeKEl3-Ee2F0PVRnb5fbg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTexIF3-Ee2F0PVRnb5fbg" name="printWarpParameters" visibility="private" isStatic="true" method="_y366913-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4bRQV3-Ee2F0PVRnb5fbg">
                  <body>Prints all system configuration parameters to the screen.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yv9RwF3-Ee2F0PVRnb5fbg" name="visualize" visibility="private" isStatic="true" method="_y36T413-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqM13-Ee2F0PVRnb5fbg">
                  <body>Outputs a file with a visual representation of the WorkLoad based on the choice parameter.&lt;br>&#xD;
   * If verbose mode is enabled it will also print the results to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The WorkLoad to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off WorkLoadChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_yv9RwV3-Ee2F0PVRnb5fbg" name="workLoad" type="_ySkLIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yv9Rwl3-Ee2F0PVRnb5fbg" name="choice" type="_yROHUF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yv940F3-Ee2F0PVRnb5fbg" name="visualize" visibility="private" isStatic="true" method="_y36T5l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqNF3-Ee2F0PVRnb5fbg">
                  <body>Outputs a file with visual representation of the WarpInterface based on the choice parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off SystemChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_yv940V3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_yv940l3-Ee2F0PVRnb5fbg" name="choice" type="_yRLrEF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yv-f4F3-Ee2F0PVRnb5fbg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_y36T6V3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqNV3-Ee2F0PVRnb5fbg">
                  <body>Verifies the Deadlines, Reliabilities, and Channel Conflicts with their respective method calls.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_yv-f4V3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yv-f4l3-Ee2F0PVRnb5fbg" name="verifyReliabilities" visibility="private" isStatic="true" method="_y36T613-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqNl3-Ee2F0PVRnb5fbg">
                  <body>Verifies that the WarpInterface reliabilities are met. If the WarpInterface fails to meet the reliabilities&#xD;
   * a system error will be printed out.&lt;br>&#xD;
   * If verbose mode is enabled and reliabilities are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_yv-f413-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yv_G8F3-Ee2F0PVRnb5fbg" name="verifyDeadlines" visibility="private" isStatic="true" method="_y3668F3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqN13-Ee2F0PVRnb5fbg">
                  <body>Verifies that the WarpInterface meets all deadlines. If the WarpInterface fails to meet the deadlines&#xD;
   * a system error will be printed out as well as a visualization of the WarpInterface based on the&#xD;
   * DEADLINE_REPORT of SystemChoices enum.&lt;br>&#xD;
   * If verbose is enabled and deadlines are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_yv_G8V3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yv_G8l3-Ee2F0PVRnb5fbg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_y3668l3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4aqOF3-Ee2F0PVRnb5fbg">
                  <body>Verifies that the WarpInterface has no channel conflicts. If there is a channel conflict a system error&#xD;
   * will be printed to the screen along with a visualization of the WarpInterface based on CHANNEL of SystemChoice enum.&lt;br>&#xD;
   * If verbose mode is enabled and there are no channel conflicts verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to check for channel conflicts</body>
                </ownedComment>
                <ownedParameter xmi:id="_yv_uAF3-Ee2F0PVRnb5fbg" name="warp" type="_yRzWIF3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTle0F3-Ee2F0PVRnb5fbg" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iAF3-Ee2F0PVRnb5fbg" name="testSetFlowsInDMorder_StressTest" specification="_yTmF4F3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInDMorder&#xD;
		wkld.setFlowsInDMorder();&#xD;
		ArrayList&lt;String> DMorder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of DM order flow array&#xD;
		int DMorderLength = DMorder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, DMorderLength, &quot;Length after setting flows in DM Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the DM order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (DMorder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;Number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, DMorder, &quot;Check if setting in DM order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iAV3-Ee2F0PVRnb5fbg" name="testGetFlowNamesInPriorityOrder_NotEmpty" specification="_yTnUAl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if getter retrieved the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iAl3-Ee2F0PVRnb5fbg" name="testGetFlowNamesInPriorityOrder_Empty" specification="_yToiIV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if getter retrieved the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iA13-Ee2F0PVRnb5fbg" name="testGetNodeChannel_ValidNode" specification="_yTpJMl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//The expected value of the node channel before setting to anything should be zero&#xD;
		int actualWithoutSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(0, actualWithoutSet, &quot;Node channel prior to setting:&quot;);&#xD;
		&#xD;
		//check to see if getter retrieves correct new value after setting&#xD;
		wkld.setNodeChannel(&quot;A&quot;, 44);&#xD;
		int actualWithSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(44, actualWithSet, &quot;Node channel after setting:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iBF3-Ee2F0PVRnb5fbg" name="testGetNodeChannel_InvalidNode" specification="_yTpwQ13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>assertThrows(NullPointerException.class,&#xD;
	            ()->{&#xD;
	            	WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	            	//if given an input that isn't a valid node, should throw NullPointerException&#xD;
	            	wkld.getNodeChannel(&quot;&quot;);&#xD;
	            });&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iBV3-Ee2F0PVRnb5fbg" name="testGetNodesInFlow_ValidFlow" specification="_yTqXU13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with a correct flow name&#xD;
		String[] actual = wkld.getNodesInFlow(&quot;F9&quot;);&#xD;
		String actualWithCorrectInput = Arrays.toString(actual);&#xD;
		//hard code of the expected string&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		//Test to see if we got the node names in the same order as they exist in the flow specification&#xD;
		assertEquals(expected, actualWithCorrectInput, &quot;Order of nodes of flow F9 in StressTest.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iBl3-Ee2F0PVRnb5fbg" name="testGetNodesInFlow_InvalidFlow" specification="_yTrlc13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with incorrect flow name&#xD;
		String[] actual2 = wkld.getNodesInFlow(&quot;test&quot;);&#xD;
		String actualWithIncorrectInput = Arrays.toString(actual2);&#xD;
		//hard code of the expected string&#xD;
		String expectedEmpty = &quot;[]&quot;;&#xD;
		//Test to see if we correctly went to the else case in getNodesInFlow&#xD;
		assertEquals(expectedEmpty, actualWithIncorrectInput, &quot;Check if using a non-valid flow name correctly returns empty array:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iB13-Ee2F0PVRnb5fbg" name="testSetFlowNamesInOriginalOrder_NotEmpty" specification="_yTsMg13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list for setFlowNamesInOriginalOrder. Test array list is arbitrary&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from setter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if setter created the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iCF3-Ee2F0PVRnb5fbg" name="testSetFlowNamesInOriginalOrder_Empty" specification="_yTszk13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list for setFlowNamesInOriginalOrder&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if setter created the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y37iCV3-Ee2F0PVRnb5fbg" name="testSetFlowsInPriorityOrder" specification="_yTtaol3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInPriorityorder&#xD;
		wkld.setFlowsInPriorityOrder();&#xD;
		ArrayList&lt;String> priorityOrder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of priority order flow array&#xD;
		int priorityOrderLength = priorityOrder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, priorityOrderLength, &quot;length after setting flows in Priority Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the priority order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (priorityOrder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, priorityOrder, &quot;Check if setting in Priority order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wIF3-Ee2F0PVRnb5fbg" name="testGetMinPeriod_Unique" specification="_yTtapl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected minimum period in StreesTest.txt is 20&#xD;
		int testPeriod = wkld.getMinPeriod();&#xD;
		assertEquals(20, testPeriod, &quot;Minimum period gotten from StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wIV3-Ee2F0PVRnb5fbg" name="testGetMinPeriod_Default" specification="_yTuBs13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default period which is 100&#xD;
		int testPeriodDefault = wkld2.getMinPeriod();&#xD;
		assertEquals(100, testPeriodDefault, &quot;Minimum period gotten from Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wIl3-Ee2F0PVRnb5fbg" name="testMaxFlowLength_StressTest" specification="_yTuow13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		int actual = wkld.maxFlowLength();&#xD;
		assertEquals(8, actual, &quot;Max flow length for StressTest.txt&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wI13-Ee2F0PVRnb5fbg" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" specification="_yTvP013-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(5, actual2, &quot;Max flow length for WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wJF3-Ee2F0PVRnb5fbg" name="testMaxFlowLength_LongChain" specification="_yTwd8l3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(26, actual2, &quot;Max flow length for LongChain.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wJV3-Ee2F0PVRnb5fbg" name="testGetFlowDeadline_Unique" specification="_yTxFA13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected deadline of flow F9 in StressTest.txt is 100&#xD;
		int testDeadline = wkld.getFlowDeadline(&quot;F9&quot;);&#xD;
		assertEquals(100, testDeadline, &quot;deadline gotten for flow F9 in StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wJl3-Ee2F0PVRnb5fbg" name="testGetFlowDeadline_Default" specification="_yTyTIl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default deadline which is 100&#xD;
		int testDeadlineDefault = wkld2.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(100, testDeadlineDefault, &quot;deadline gotten for flow F0 in Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wJ13-Ee2F0PVRnb5fbg" name="testGetFlowDeadline_InvalidInput" specification="_yTzhQV3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//Test the &quot;Bad situation&quot; where the flow name given does not exist&#xD;
		//Should give the default of 100&#xD;
		int testDeadlineFlowNameDNE = wkld3.getFlowDeadline(&quot;&quot;);&#xD;
		assertEquals(100, testDeadlineFlowNameDNE, &quot;check for a flow name that does not exist:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y38wKF3-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" specification="_yT0IU13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld1 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String[] alphaOrder1 = wkld1.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual1 = Arrays.toString(alphaOrder1); &#xD;
		String expected1 = &quot;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, Y]&quot;;&#xD;
		assertEquals(expected1, alphaOrderActual1, &quot;check if the node names in StressTest.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y39XMF3-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" specification="_yT1Wcl3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		String[] alphaOrder2 = wkld2.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual2 = Arrays.toString(alphaOrder2);&#xD;
		String expected2 = &quot;[A, B, C, D, E, F, G, H, I, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a]&quot;;&#xD;
		assertEquals(expected2, alphaOrderActual2, &quot;check if the node names in LongChain.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y39XMV3-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" specification="_yT19g13-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		String[] alphaOrder3 = wkld3.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual3 = Arrays.toString(alphaOrder3);&#xD;
		String expected3 = &quot;[0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, &quot;&#xD;
				+ &quot;38, 40, 41, 42, 48, 52, 53, 54, 55, 56, 58, 59, 64, 66, 68, 71, 72, 73, 74, 76, 80, 82, 83, 84]&quot;;&#xD;
		assertEquals(expected3, alphaOrderActual3, &#xD;
				&quot;check if the node names in WARP_MIX_Schedule0-WarpInput.txt were ordered alphabetically (numerically):&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y39XMl3-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" specification="_yT3Lol3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>WorkLoad wkld4 = new WorkLoad(1, 0.9, 0.99, &quot;SeeSpray.txt&quot;);&#xD;
		String[] alphaOrder4 = wkld4.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual4 = Arrays.toString(alphaOrder4);&#xD;
		String expected4 = &quot;[B1, B2, B3, B4, B5, B6, B7, B8, C1, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C2, C20, C21, &quot;&#xD;
				+ &quot;C22, C23, C24, C25, C26, C27, C28, C29, C3, C30, C4, C5, C6, C7, C8, C9]&quot;;&#xD;
		assertEquals(expected4, alphaOrderActual4, &quot;check if the node names in SeeSpray.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTmF4F3-Ee2F0PVRnb5fbg" name="testSetFlowsInDMorder_StressTest" visibility="package" method="_y37iAF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTnUAl3-Ee2F0PVRnb5fbg" name="testGetFlowNamesInPriorityOrder_NotEmpty" visibility="package" method="_y37iAV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yToiIV3-Ee2F0PVRnb5fbg" name="testGetFlowNamesInPriorityOrder_Empty" visibility="package" method="_y37iAl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTpJMl3-Ee2F0PVRnb5fbg" name="testGetNodeChannel_ValidNode" visibility="package" method="_y37iA13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTpwQ13-Ee2F0PVRnb5fbg" name="testGetNodeChannel_InvalidNode" method="_y37iBF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTqXU13-Ee2F0PVRnb5fbg" name="testGetNodesInFlow_ValidFlow" visibility="package" method="_y37iBV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTrlc13-Ee2F0PVRnb5fbg" name="testGetNodesInFlow_InvalidFlow" visibility="package" method="_y37iBl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTsMg13-Ee2F0PVRnb5fbg" name="testSetFlowNamesInOriginalOrder_NotEmpty" visibility="package" method="_y37iB13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTszk13-Ee2F0PVRnb5fbg" name="testSetFlowNamesInOriginalOrder_Empty" visibility="package" method="_y37iCF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTtaol3-Ee2F0PVRnb5fbg" name="testSetFlowsInPriorityOrder" visibility="package" method="_y37iCV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTtapl3-Ee2F0PVRnb5fbg" name="testGetMinPeriod_Unique" visibility="package" method="_y38wIF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTuBs13-Ee2F0PVRnb5fbg" name="testGetMinPeriod_Default" visibility="package" method="_y38wIV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTuow13-Ee2F0PVRnb5fbg" name="testMaxFlowLength_StressTest" visibility="package" method="_y38wIl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTvP013-Ee2F0PVRnb5fbg" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" visibility="package" method="_y38wI13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTwd8l3-Ee2F0PVRnb5fbg" name="testMaxFlowLength_LongChain" visibility="package" method="_y38wJF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTxFA13-Ee2F0PVRnb5fbg" name="testGetFlowDeadline_Unique" visibility="package" method="_y38wJV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTyTIl3-Ee2F0PVRnb5fbg" name="testGetFlowDeadline_Default" visibility="package" method="_y38wJl3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yTzhQV3-Ee2F0PVRnb5fbg" name="testGetFlowDeadline_InvalidInput" visibility="package" method="_y38wJ13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yT0IU13-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" visibility="package" method="_y38wKF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yT1Wcl3-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" visibility="package" method="_y39XMF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yT19g13-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" visibility="package" method="_y39XMV3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yT3Lol3-Ee2F0PVRnb5fbg" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" visibility="package" method="_y39XMl3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT5n4F3-Ee2F0PVRnb5fbg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_y16v0F3-Ee2F0PVRnb5fbg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y16v0V3-Ee2F0PVRnb5fbg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y16v0l3-Ee2F0PVRnb5fbg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y17W4F3-Ee2F0PVRnb5fbg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y17W4V3-Ee2F0PVRnb5fbg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1798F3-Ee2F0PVRnb5fbg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1798V3-Ee2F0PVRnb5fbg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1798l3-Ee2F0PVRnb5fbg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y18lAF3-Ee2F0PVRnb5fbg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y18lAV3-Ee2F0PVRnb5fbg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y18lAl3-Ee2F0PVRnb5fbg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y19MEV3-Ee2F0PVRnb5fbg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y19zIF3-Ee2F0PVRnb5fbg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y19zIV3-Ee2F0PVRnb5fbg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1-aMF3-Ee2F0PVRnb5fbg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1-aMl3-Ee2F0PVRnb5fbg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1_BQV3-Ee2F0PVRnb5fbg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y1_oUV3-Ee2F0PVRnb5fbg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y2APYF3-Ee2F0PVRnb5fbg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y2APYV3-Ee2F0PVRnb5fbg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y2APYl3-Ee2F0PVRnb5fbg" name="predecessor" type="_yT5n4F3-Ee2F0PVRnb5fbg" association="_y4bRQl3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y2A2cF3-Ee2F0PVRnb5fbg" name="endTimes" visibility="private" type="_yP1nQF3-Ee2F0PVRnb5fbg" association="_y6EQAV3-Ee2F0PVRnb5fbg"/>
              <ownedAttribute xmi:id="_y2CEkV3-Ee2F0PVRnb5fbg" name="subObjects" type="_ywHCwV3-Ee2F0PVRnb5fbg" isReadOnly="true" association="_y6E3EV3-Ee2F0PVRnb5fbg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y39-QF3-Ee2F0PVRnb5fbg" name="SchedulableObject" specification="_yT9SQF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y39-QV3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3-lUF3-Ee2F0PVRnb5fbg" name="SchedulableObject" specification="_ywI38F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3-lUV3-Ee2F0PVRnb5fbg" name="obj" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y3-lUl3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3-lU13-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3-lVF3-Ee2F0PVRnb5fbg" name="SchedulableObject" specification="_yT-gYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3-lVV3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3-lVl3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3-lV13-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3-lWF3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3-lWV3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_MYF3-Ee2F0PVRnb5fbg" name="SchedulableObject" specification="_yT_ugF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3_MYV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3_MYl3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3_MY13-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3_MZF3-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3_MZV3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3_MZl3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_MZ13-Ee2F0PVRnb5fbg" name="setDefaultParameters" specification="_yUAVkF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_MaF3-Ee2F0PVRnb5fbg" name="getAllEndTimes" specification="_yUAVkV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3_MaV3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_zcF3-Ee2F0PVRnb5fbg" name="addToEndTimes" specification="_yUBjsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3_zcV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_zcl3-Ee2F0PVRnb5fbg" name="peekEndTimes" specification="_yUBjsl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3_zc13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_zdF3-Ee2F0PVRnb5fbg" name="pollEndTimes" specification="_yUBjtF3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3_zdV3-Ee2F0PVRnb5fbg" name="addSubObject" specification="_ywKGEV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y3_zdl3-Ee2F0PVRnb5fbg" name="obj" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4AagF3-Ee2F0PVRnb5fbg" name="getName" specification="_yUCKwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4AagV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Aagl3-Ee2F0PVRnb5fbg" name="setName" specification="_yUCKwl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Aag13-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4AahF3-Ee2F0PVRnb5fbg" name="getReleaseTime" specification="_yUCx0V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4AahV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Aahl3-Ee2F0PVRnb5fbg" name="getPhase" specification="_yUCx013-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Aah13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4BBkF3-Ee2F0PVRnb5fbg" name="getStartTime" specification="_yUDY4V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4BBkV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4BBkl3-Ee2F0PVRnb5fbg" name="setEndTime" specification="_yUDY413-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4BBk13-Ee2F0PVRnb5fbg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4BBlF3-Ee2F0PVRnb5fbg" name="setStartTime" specification="_yUD_8V3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4BBlV3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4BBll3-Ee2F0PVRnb5fbg" name="setReleaseTime" specification="_yUEnAF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4BBl13-Ee2F0PVRnb5fbg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4BooF3-Ee2F0PVRnb5fbg" name="setPeriod" specification="_yUFOEF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4BooV3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Bool3-Ee2F0PVRnb5fbg" name="setPhase" specification="_yUF1IF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Boo13-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4BopF3-Ee2F0PVRnb5fbg" name="setNextReleaseTime" specification="_yUGcMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4BopV3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4CPsF3-Ee2F0PVRnb5fbg" name="maxPhaseComparison" specification="_ywKtIF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4CPsV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4CPsl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4CPs13-Ee2F0PVRnb5fbg" name="maxPhaseComparison" specification="_ywLUMF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4CPtF3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4CPtV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4CPtl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4CPt13-Ee2F0PVRnb5fbg" name="deadlineComparison" specification="_ywL7QV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4CPuF3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4CPuV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4C2wF3-Ee2F0PVRnb5fbg" name="deadlineComparison" specification="_ywMiUF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4C2wV3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4C2wl3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4C2w13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4C2xF3-Ee2F0PVRnb5fbg" name="periodComparison" specification="_ywNJYF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4C2xV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4C2xl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4C2x13-Ee2F0PVRnb5fbg" name="periodComparison" specification="_ywNwcV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4C2yF3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4C2yV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4C2yl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Dd0F3-Ee2F0PVRnb5fbg" name="priorityComparison" specification="_ywOXgV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Dd0V3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4Dd0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Dd013-Ee2F0PVRnb5fbg" name="priorityComparison" specification="_ywO-kF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Dd1F3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4Dd1V3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4Dd1l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Dd113-Ee2F0PVRnb5fbg" name="releaseTimeComparison" specification="_ywPloF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Dd2F3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4Dd2V3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4EE4F3-Ee2F0PVRnb5fbg" name="releaseTimeComparison" specification="_ywQMsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4EE4V3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4EE4l3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4EE413-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4EE5F3-Ee2F0PVRnb5fbg" name="LatestReleaseTimeComparison" specification="_ywQzwF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4EE5V3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4EE5l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4EE513-Ee2F0PVRnb5fbg" name="LatestReleaseTimeComparison" specification="_ywRa0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4EE6F3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4EE6V3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_y4EE6l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Er8F3-Ee2F0PVRnb5fbg" name="compareAscendingOrder" specification="_yUKGkF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Er8V3-Ee2F0PVRnb5fbg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4Er8l3-Ee2F0PVRnb5fbg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4Er813-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Er9F3-Ee2F0PVRnb5fbg" name="compareDescendingOrder" specification="_yULUsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Er9V3-Ee2F0PVRnb5fbg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4Er9l3-Ee2F0PVRnb5fbg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4Er913-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4Er-F3-Ee2F0PVRnb5fbg" name="print" specification="_yUL7wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_y4Er-V3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4FTAF3-Ee2F0PVRnb5fbg" name="print" specification="_yUMi0F3-Ee2F0PVRnb5fbg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yT9SQF3-Ee2F0PVRnb5fbg" name="SchedulableObject" visibility="package" method="_y39-QF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yT95UF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT95UV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT95Ul3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yT-gYF3-Ee2F0PVRnb5fbg" name="SchedulableObject" visibility="package" method="_y3-lVF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yT_HcF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT_HcV3-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT-gYV3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT-gYl3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT-gY13-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT-gZF3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_Hcl3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yT_ugF3-Ee2F0PVRnb5fbg" name="SchedulableObject" visibility="package" method="_y3_MYF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_yT_uhl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT_uh13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT_ugV3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_ugl3-Ee2F0PVRnb5fbg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_ug13-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_uhF3-Ee2F0PVRnb5fbg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_uhV3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_uiF3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUAVkF3-Ee2F0PVRnb5fbg" name="setDefaultParameters" visibility="private" method="_y3_MZ13-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yUAVkV3-Ee2F0PVRnb5fbg" name="getAllEndTimes" method="_y3_MaF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4b4UV3-Ee2F0PVRnb5fbg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_ywKGEF3-Ee2F0PVRnb5fbg" type="_yP1nQF3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUBjsF3-Ee2F0PVRnb5fbg" name="addToEndTimes" method="_y3_zcF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yUBjsV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUBjsl3-Ee2F0PVRnb5fbg" name="peekEndTimes" method="_y3_zcl3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yUBjs13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUBjtF3-Ee2F0PVRnb5fbg" name="pollEndTimes" method="_y3_zdF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_yUCKwF3-Ee2F0PVRnb5fbg" name="getName" method="_y4AagF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4b4Ul3-Ee2F0PVRnb5fbg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUCKwV3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCKwl3-Ee2F0PVRnb5fbg" name="setName" method="_y4Aagl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4b4U13-Ee2F0PVRnb5fbg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUCx0F3-Ee2F0PVRnb5fbg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCx0V3-Ee2F0PVRnb5fbg" name="getReleaseTime" method="_y4AahF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4b4VF3-Ee2F0PVRnb5fbg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUCx0l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCx013-Ee2F0PVRnb5fbg" name="getPhase" method="_y4Aahl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfYF3-Ee2F0PVRnb5fbg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUDY4F3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUDY4V3-Ee2F0PVRnb5fbg" name="getStartTime" method="_y4BBkF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfYV3-Ee2F0PVRnb5fbg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUDY4l3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUDY413-Ee2F0PVRnb5fbg" name="setEndTime" method="_y4BBkl3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfYl3-Ee2F0PVRnb5fbg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUD_8F3-Ee2F0PVRnb5fbg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUD_8V3-Ee2F0PVRnb5fbg" name="setStartTime" method="_y4BBlF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfY13-Ee2F0PVRnb5fbg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUD_8l3-Ee2F0PVRnb5fbg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUEnAF3-Ee2F0PVRnb5fbg" name="setReleaseTime" method="_y4BBll3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfZF3-Ee2F0PVRnb5fbg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUEnAV3-Ee2F0PVRnb5fbg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUFOEF3-Ee2F0PVRnb5fbg" name="setPeriod" method="_y4BooF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfZV3-Ee2F0PVRnb5fbg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUFOEV3-Ee2F0PVRnb5fbg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUF1IF3-Ee2F0PVRnb5fbg" name="setPhase" method="_y4Bool3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfZl3-Ee2F0PVRnb5fbg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUF1IV3-Ee2F0PVRnb5fbg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUGcMF3-Ee2F0PVRnb5fbg" name="setNextReleaseTime" method="_y4BopF3-Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_y4cfZ13-Ee2F0PVRnb5fbg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUGcMV3-Ee2F0PVRnb5fbg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUKGkF3-Ee2F0PVRnb5fbg" name="compareAscendingOrder" method="_y4Er8F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yUKtoF3-Ee2F0PVRnb5fbg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUKtoV3-Ee2F0PVRnb5fbg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUKtol3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yULUsF3-Ee2F0PVRnb5fbg" name="compareDescendingOrder" method="_y4Er9F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yULUsV3-Ee2F0PVRnb5fbg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yULUsl3-Ee2F0PVRnb5fbg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yULUs13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUL7wF3-Ee2F0PVRnb5fbg" name="print" method="_y4Er-F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_yUL7wV3-Ee2F0PVRnb5fbg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUMi0F3-Ee2F0PVRnb5fbg" name="print" method="_y4FTAF3-Ee2F0PVRnb5fbg"/>
              <ownedOperation xmi:id="_ywI38F3-Ee2F0PVRnb5fbg" name="SchedulableObject" visibility="package" method="_y3-lUF3-Ee2F0PVRnb5fbg">
                <eAnnotations xmi:id="_ywJfAl3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ywJfA13-Ee2F0PVRnb5fbg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_y4b4UF3-Ee2F0PVRnb5fbg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_ywJfAF3-Ee2F0PVRnb5fbg" name="obj" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywJfAV3-Ee2F0PVRnb5fbg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ywJfBF3-Ee2F0PVRnb5fbg" type="_yT5n4F3-Ee2F0PVRnb5fbg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ywKGEV3-Ee2F0PVRnb5fbg" name="addSubObject" method="_y3_zdV3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywKGEl3-Ee2F0PVRnb5fbg" name="obj" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ywKtIF3-Ee2F0PVRnb5fbg" name="maxPhaseComparison" method="_y4CPsF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywKtIV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywKtIl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywLUMF3-Ee2F0PVRnb5fbg" name="maxPhaseComparison" method="_y4CPs13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywLUMV3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywLUMl3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywL7QF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywL7QV3-Ee2F0PVRnb5fbg" name="deadlineComparison" method="_y4CPt13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywL7Ql3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywL7Q13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywMiUF3-Ee2F0PVRnb5fbg" name="deadlineComparison" method="_y4C2wF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywMiUV3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywMiUl3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywMiU13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywNJYF3-Ee2F0PVRnb5fbg" name="periodComparison" method="_y4C2xF3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywNJYV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywNwcF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywNwcV3-Ee2F0PVRnb5fbg" name="periodComparison" method="_y4C2x13-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywNwcl3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywNwc13-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywOXgF3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywOXgV3-Ee2F0PVRnb5fbg" name="priorityComparison" method="_y4Dd0F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywOXgl3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywOXg13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywO-kF3-Ee2F0PVRnb5fbg" name="priorityComparison" method="_y4Dd013-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywO-kV3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywO-kl3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywO-k13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywPloF3-Ee2F0PVRnb5fbg" name="releaseTimeComparison" method="_y4Dd113-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywPloV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywPlol3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywQMsF3-Ee2F0PVRnb5fbg" name="releaseTimeComparison" method="_y4EE4F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywQMsV3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywQMsl3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywQMs13-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywQzwF3-Ee2F0PVRnb5fbg" name="LatestReleaseTimeComparison" method="_y4EE5F3-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywQzwV3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywQzwl3-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ywRa0F3-Ee2F0PVRnb5fbg" name="LatestReleaseTimeComparison" method="_y4EE513-Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_ywRa0V3-Ee2F0PVRnb5fbg" name="obj1" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywRa0l3-Ee2F0PVRnb5fbg" name="obj2" type="_yT5n4F3-Ee2F0PVRnb5fbg"/>
                <ownedParameter xmi:id="_ywRa013-Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yxF6MV3-Ee2F0PVRnb5fbg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yx-D8F3-Ee2F0PVRnb5fbg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yyEKkF3-Ee2F0PVRnb5fbg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yyg2gF3-Ee2F0PVRnb5fbg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yyirsF3-Ee2F0PVRnb5fbg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_y4Oc8F3-Ee2F0PVRnb5fbg" name="" memberEnd="_yz9oAF3-Ee2F0PVRnb5fbg _y4Oc8V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y4Oc8V3-Ee2F0PVRnb5fbg" name="" type="_yMjpwF3-Ee2F0PVRnb5fbg" association="_y4Oc8F3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y4Xm4V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y1kxkV3-Ee2F0PVRnb5fbg _y4Xm4l3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y4Xm4l3-Ee2F0PVRnb5fbg" name="" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y4Xm4V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y4YN8F3-Ee2F0PVRnb5fbg" name="" memberEnd="_y1lYoF3-Ee2F0PVRnb5fbg _y4YN8V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y4YN8V3-Ee2F0PVRnb5fbg" name="" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y4YN8F3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y4bRQl3-Ee2F0PVRnb5fbg" name="" memberEnd="_y2APYl3-Ee2F0PVRnb5fbg _y4bRQ13-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y4bRQ13-Ee2F0PVRnb5fbg" name="" type="_yT5n4F3-Ee2F0PVRnb5fbg" association="_y4bRQl3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5DjYF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5DjYV3-Ee2F0PVRnb5fbg _yzcDkF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5DjYV3-Ee2F0PVRnb5fbg" name="" type="_yKIn4F3-Ee2F0PVRnb5fbg" association="_y5DjYF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5FYkF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5FYkV3-Ee2F0PVRnb5fbg _yzdRsF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5FYkV3-Ee2F0PVRnb5fbg" name="" type="_yKIn4F3-Ee2F0PVRnb5fbg" association="_y5FYkF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5GmsV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Gmsl3-Ee2F0PVRnb5fbg _yzef0F3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Gmsl3-Ee2F0PVRnb5fbg" name="" type="_yKIn4F3-Ee2F0PVRnb5fbg" association="_y5GmsV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5Ib4V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Ib4l3-Ee2F0PVRnb5fbg _yzjYUF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Ib4l3-Ee2F0PVRnb5fbg" name="" type="_yLB_wF3-Ee2F0PVRnb5fbg" association="_y5Ib4V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5KREF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5KREV3-Ee2F0PVRnb5fbg _yzj_YV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5KREV3-Ee2F0PVRnb5fbg" name="" type="_yLB_wF3-Ee2F0PVRnb5fbg" association="_y5KREF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5LfMV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5LfMl3-Ee2F0PVRnb5fbg _yzmbol3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5LfMl3-Ee2F0PVRnb5fbg" name="" type="_yLJUgF3-Ee2F0PVRnb5fbg" association="_y5LfMV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5MGQV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5MGQl3-Ee2F0PVRnb5fbg _yznCsV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5MGQl3-Ee2F0PVRnb5fbg" name="" type="_yLJUgF3-Ee2F0PVRnb5fbg" association="_y5MGQV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5NUYV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5NUYl3-Ee2F0PVRnb5fbg _yzqGAV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5NUYl3-Ee2F0PVRnb5fbg" name="" type="_yLNl8F3-Ee2F0PVRnb5fbg" association="_y5NUYV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5OigV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Oigl3-Ee2F0PVRnb5fbg _yzwMoF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Oigl3-Ee2F0PVRnb5fbg" name="" type="_yLxmoF3-Ee2F0PVRnb5fbg" association="_y5OigV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5PwoV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Pwol3-Ee2F0PVRnb5fbg _yzyB0V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Pwol3-Ee2F0PVRnb5fbg" name="" type="_yLxmoF3-Ee2F0PVRnb5fbg" association="_y5PwoV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5Q-wF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Q-wV3-Ee2F0PVRnb5fbg _yz26UF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Q-wV3-Ee2F0PVRnb5fbg" name="" type="_yMMdYF3-Ee2F0PVRnb5fbg" association="_y5Q-wF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5Rl0V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Rl0l3-Ee2F0PVRnb5fbg _yz5WkF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Rl0l3-Ee2F0PVRnb5fbg" name="" type="_yMMdYF3-Ee2F0PVRnb5fbg" association="_y5Rl0V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5Sz8F3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Sz8V3-Ee2F0PVRnb5fbg _y0Fj0F3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Sz8V3-Ee2F0PVRnb5fbg" name="" type="_yM_HkF3-Ee2F0PVRnb5fbg" association="_y5Sz8F3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5TbAV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5TbAl3-Ee2F0PVRnb5fbg _y0GK4l3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5TbAl3-Ee2F0PVRnb5fbg" name="" type="_yM_HkF3-Ee2F0PVRnb5fbg" association="_y5TbAV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5UpIV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5UpIl3-Ee2F0PVRnb5fbg _y0IAEl3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5UpIl3-Ee2F0PVRnb5fbg" name="" type="_yM_HkF3-Ee2F0PVRnb5fbg" association="_y5UpIV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5V3QF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5V3QV3-Ee2F0PVRnb5fbg _y0JOMV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5V3QV3-Ee2F0PVRnb5fbg" name="" type="_yM_HkF3-Ee2F0PVRnb5fbg" association="_y5V3QF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5WeUV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5WeUl3-Ee2F0PVRnb5fbg _y0J1QV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5WeUl3-Ee2F0PVRnb5fbg" name="" type="_yM_HkF3-Ee2F0PVRnb5fbg" association="_y5WeUV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5XscV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Xscl3-Ee2F0PVRnb5fbg _y0PU0V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Xscl3-Ee2F0PVRnb5fbg" name="" type="_yNe20F3-Ee2F0PVRnb5fbg" association="_y5XscV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5YTgV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5YTgl3-Ee2F0PVRnb5fbg _y0RKAF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5YTgl3-Ee2F0PVRnb5fbg" name="" type="_yNe20F3-Ee2F0PVRnb5fbg" association="_y5YTgV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5ZhoV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5Zhol3-Ee2F0PVRnb5fbg _y0RxEF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5Zhol3-Ee2F0PVRnb5fbg" name="" type="_yNrEEF3-Ee2F0PVRnb5fbg" association="_y5ZhoV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5avwV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5avwl3-Ee2F0PVRnb5fbg _y0S_Ml3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5avwl3-Ee2F0PVRnb5fbg" name="" type="_yNwjoF3-Ee2F0PVRnb5fbg" association="_y5avwV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5b94V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5b94l3-Ee2F0PVRnb5fbg _y0X3sl3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5b94l3-Ee2F0PVRnb5fbg" name="" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5b94V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5dzEF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5dzEV3-Ee2F0PVRnb5fbg _y0YewV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5dzEV3-Ee2F0PVRnb5fbg" name="" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5dzEF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5fBMF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5fBMV3-Ee2F0PVRnb5fbg _y0ZF0V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5fBMV3-Ee2F0PVRnb5fbg" name="" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5fBMF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5foQV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5foQl3-Ee2F0PVRnb5fbg _y0Zs4V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5foQl3-Ee2F0PVRnb5fbg" name="" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5foQV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5g2YV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5g2Yl3-Ee2F0PVRnb5fbg _y0aT8V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5g2Yl3-Ee2F0PVRnb5fbg" name="" type="_yN9X8F3-Ee2F0PVRnb5fbg" association="_y5g2YV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5hdcV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5hdcl3-Ee2F0PVRnb5fbg _y0cwMF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5hdcl3-Ee2F0PVRnb5fbg" name="" type="_yOC3gF3-Ee2F0PVRnb5fbg" association="_y5hdcV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5irkV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5irkl3-Ee2F0PVRnb5fbg _y0dXQF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5irkl3-Ee2F0PVRnb5fbg" name="" type="_yOC3gF3-Ee2F0PVRnb5fbg" association="_y5irkV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5kgwF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5kgwV3-Ee2F0PVRnb5fbg _y0fMcF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5kgwV3-Ee2F0PVRnb5fbg" name="" type="_yOKzUF3-Ee2F0PVRnb5fbg" association="_y5kgwF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5lH0V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5lH0l3-Ee2F0PVRnb5fbg _y0i20V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5lH0l3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5lH0V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5mV8V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5mV8l3-Ee2F0PVRnb5fbg _y0kE8F3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5mV8l3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5mV8V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5mV9F3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5m9AF3-Ee2F0PVRnb5fbg _y0ksAF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5m9AF3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5mV9F3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5oLIV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5oLIl3-Ee2F0PVRnb5fbg _y0lTEV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5oLIl3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5oLIV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5oyMV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5oyMl3-Ee2F0PVRnb5fbg _y0l6I13-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5oyMl3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5oyMV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5pZQV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5pZQl3-Ee2F0PVRnb5fbg _y0mhMV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5pZQl3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5pZQV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5qAUV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5qAUl3-Ee2F0PVRnb5fbg _y0oWYF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5qAUl3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5qAUV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5qnYV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5qnYl3-Ee2F0PVRnb5fbg _y0pkgV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5qnYl3-Ee2F0PVRnb5fbg" name="" type="_yOeVUF3-Ee2F0PVRnb5fbg" association="_y5qnYV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5rOcV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5rOcl3-Ee2F0PVRnb5fbg _y0t18F3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5rOcl3-Ee2F0PVRnb5fbg" name="" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5rOcV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5r1gV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5r1gl3-Ee2F0PVRnb5fbg _y0udAF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5r1gl3-Ee2F0PVRnb5fbg" name="" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5r1gV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5sckV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5sckl3-Ee2F0PVRnb5fbg _y0vEEF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5sckl3-Ee2F0PVRnb5fbg" name="" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5sckV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5tqsV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5tqsl3-Ee2F0PVRnb5fbg _y0yHYF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5tqsl3-Ee2F0PVRnb5fbg" name="" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5tqsV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5u40V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5u40l3-Ee2F0PVRnb5fbg _y00joF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5u40l3-Ee2F0PVRnb5fbg" name="" type="_yO6aMF3-Ee2F0PVRnb5fbg" association="_y5u40V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5wG8F3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5wG8V3-Ee2F0PVRnb5fbg _y03m8l3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5wG8V3-Ee2F0PVRnb5fbg" name="" type="_yPlIkF3-Ee2F0PVRnb5fbg" association="_y5wG8F3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5xVEV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5xVEl3-Ee2F0PVRnb5fbg _y04OAV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5xVEl3-Ee2F0PVRnb5fbg" name="" type="_yPlIkF3-Ee2F0PVRnb5fbg" association="_y5xVEV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5x8IV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5x8Il3-Ee2F0PVRnb5fbg _y07RUl3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5x8Il3-Ee2F0PVRnb5fbg" name="" type="_yQE30F3-Ee2F0PVRnb5fbg" association="_y5x8IV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5zKQV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5zKQl3-Ee2F0PVRnb5fbg _y074YV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5zKQl3-Ee2F0PVRnb5fbg" name="" type="_yQE30F3-Ee2F0PVRnb5fbg" association="_y5zKQV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5zxUV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5zxUl3-Ee2F0PVRnb5fbg _y09GgF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5zxUl3-Ee2F0PVRnb5fbg" name="" type="_yQH7IF3-Ee2F0PVRnb5fbg" association="_y5zxUV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y50_cF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y50_cV3-Ee2F0PVRnb5fbg _y1BX8V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y50_cV3-Ee2F0PVRnb5fbg" name="" type="_yQbdIF3-Ee2F0PVRnb5fbg" association="_y50_cF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y51mgV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y51mgl3-Ee2F0PVRnb5fbg _y1B_AF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y51mgl3-Ee2F0PVRnb5fbg" name="" type="_yQbdIF3-Ee2F0PVRnb5fbg" association="_y51mgV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y520oF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y520oV3-Ee2F0PVRnb5fbg _y1HekF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y520oV3-Ee2F0PVRnb5fbg" name="" type="_yRS_0F3-Ee2F0PVRnb5fbg" association="_y520oF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y53bsF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y53bsV3-Ee2F0PVRnb5fbg _y1IFoV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y53bsV3-Ee2F0PVRnb5fbg" name="" type="_yRS_0F3-Ee2F0PVRnb5fbg" association="_y53bsF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y54CwV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y54Cwl3-Ee2F0PVRnb5fbg _y1IFo13-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y54Cwl3-Ee2F0PVRnb5fbg" name="" type="_yRS_0F3-Ee2F0PVRnb5fbg" association="_y54CwV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y55Q4F3-Ee2F0PVRnb5fbg" name="" memberEnd="_y55Q4V3-Ee2F0PVRnb5fbg _y1Kh4l3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y55Q4V3-Ee2F0PVRnb5fbg" name="" type="_yRS_0F3-Ee2F0PVRnb5fbg" association="_y55Q4F3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y56fAF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y56fAV3-Ee2F0PVRnb5fbg _y1LI8V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y56fAV3-Ee2F0PVRnb5fbg" name="" type="_yRS_0F3-Ee2F0PVRnb5fbg" association="_y56fAF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y57GEV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y57GEl3-Ee2F0PVRnb5fbg _y1MXEF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y57GEl3-Ee2F0PVRnb5fbg" name="" type="_yRS_0F3-Ee2F0PVRnb5fbg" association="_y57GEV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y57tIV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y57tIl3-Ee2F0PVRnb5fbg _y1M-IF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y57tIl3-Ee2F0PVRnb5fbg" name="" type="_yRemAF3-Ee2F0PVRnb5fbg" association="_y57tIV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y587QV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y587Ql3-Ee2F0PVRnb5fbg _y1PaYF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y587Ql3-Ee2F0PVRnb5fbg" name="" type="_yRqMMF3-Ee2F0PVRnb5fbg" association="_y587QV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y59iUF3-Ee2F0PVRnb5fbg" name="" memberEnd="_y59iUV3-Ee2F0PVRnb5fbg _y1WvIV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y59iUV3-Ee2F0PVRnb5fbg" name="" type="_ySBYkF3-Ee2F0PVRnb5fbg" association="_y59iUF3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y59iU13-Ee2F0PVRnb5fbg" name="" memberEnd="_y59iVF3-Ee2F0PVRnb5fbg _y1X9QV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y59iVF3-Ee2F0PVRnb5fbg" name="" type="_ySBYkF3-Ee2F0PVRnb5fbg" association="_y59iU13-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5-JYV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5-JYl3-Ee2F0PVRnb5fbg _y1ZycF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5-JYl3-Ee2F0PVRnb5fbg" name="" type="_ySLJkF3-Ee2F0PVRnb5fbg" association="_y5-JYV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5-wcV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5-wcl3-Ee2F0PVRnb5fbg _y1aZgV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5-wcl3-Ee2F0PVRnb5fbg" name="" type="_ySLJkF3-Ee2F0PVRnb5fbg" association="_y5-wcV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5_XgV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5_Xgl3-Ee2F0PVRnb5fbg _y1bAkV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5_Xgl3-Ee2F0PVRnb5fbg" name="" type="_ySLJkF3-Ee2F0PVRnb5fbg" association="_y5_XgV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y5_-kV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y5_-kl3-Ee2F0PVRnb5fbg _y1bnoF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y5_-kl3-Ee2F0PVRnb5fbg" name="" type="_ySLJkF3-Ee2F0PVRnb5fbg" association="_y5_-kV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6AloV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6Alol3-Ee2F0PVRnb5fbg _y1cOsV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6Alol3-Ee2F0PVRnb5fbg" name="" type="_ySLJkF3-Ee2F0PVRnb5fbg" association="_y6AloV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6BMsV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6BMsl3-Ee2F0PVRnb5fbg _y1l_sV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6BMsl3-Ee2F0PVRnb5fbg" name="" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y6BMsV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6BzwV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6Bzwl3-Ee2F0PVRnb5fbg _y1nN0V3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6Bzwl3-Ee2F0PVRnb5fbg" name="" type="_ySkLIF3-Ee2F0PVRnb5fbg" association="_y6BzwV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6DB4V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6DB4l3-Ee2F0PVRnb5fbg _y1rfQ13-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6DB4l3-Ee2F0PVRnb5fbg" name="" type="_yTPgkF3-Ee2F0PVRnb5fbg" association="_y6DB4V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6Do8V3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6Do8l3-Ee2F0PVRnb5fbg _y1stYl3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6Do8l3-Ee2F0PVRnb5fbg" name="" type="_yTPgkF3-Ee2F0PVRnb5fbg" association="_y6Do8V3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6EQAV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6EQAl3-Ee2F0PVRnb5fbg _y2A2cF3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6EQAl3-Ee2F0PVRnb5fbg" name="" type="_yT5n4F3-Ee2F0PVRnb5fbg" association="_y6EQAV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y6E3EV3-Ee2F0PVRnb5fbg" name="" memberEnd="_y6E3El3-Ee2F0PVRnb5fbg _y2CEkV3-Ee2F0PVRnb5fbg">
              <ownedEnd xmi:id="_y6E3El3-Ee2F0PVRnb5fbg" name="" type="_yT5n4F3-Ee2F0PVRnb5fbg" association="_y6E3EV3-Ee2F0PVRnb5fbg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_yBQYsF3-Ee2F0PVRnb5fbg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_ysd44F3-Ee2F0PVRnb5fbg" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ytw5YF3-Ee2F0PVRnb5fbg" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_yBykMV3-Ee2F0PVRnb5fbg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_ys2TYV3-Ee2F0PVRnb5fbg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ys3hgF3-Ee2F0PVRnb5fbg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ys4IkV3-Ee2F0PVRnb5fbg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yyuR4F3-Ee2F0PVRnb5fbg" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x_F1gF3-Ee2F0PVRnb5fbg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_x_F1gV3-Ee2F0PVRnb5fbg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_yAkcMF3-Ee2F0PVRnb5fbg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_ysLlAF3-Ee2F0PVRnb5fbg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_yE9M8F3-Ee2F0PVRnb5fbg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_yvmFYF3-Ee2F0PVRnb5fbg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yP1nQF3-Ee2F0PVRnb5fbg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yrnkUF3-Ee2F0PVRnb5fbg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yrr1wF3-Ee2F0PVRnb5fbg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yrtD4V3-Ee2F0PVRnb5fbg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yruSAF3-Ee2F0PVRnb5fbg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yrvgIF3-Ee2F0PVRnb5fbg" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ysXLMF3-Ee2F0PVRnb5fbg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ytd-cF3-Ee2F0PVRnb5fbg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ytxgcF3-Ee2F0PVRnb5fbg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yvjCEF3-Ee2F0PVRnb5fbg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yvjpIV3-Ee2F0PVRnb5fbg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yvk3QV3-Ee2F0PVRnb5fbg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ywGbsF3-Ee2F0PVRnb5fbg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ywHCwV3-Ee2F0PVRnb5fbg" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yBQ_wF3-Ee2F0PVRnb5fbg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_ysef8V3-Ee2F0PVRnb5fbg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ysfHAV3-Ee2F0PVRnb5fbg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ytHZIF3-Ee2F0PVRnb5fbg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ytInQV3-Ee2F0PVRnb5fbg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yBQ_wV3-Ee2F0PVRnb5fbg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_yBRm0F3-Ee2F0PVRnb5fbg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_ysfuEV3-Ee2F0PVRnb5fbg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ysg8MV3-Ee2F0PVRnb5fbg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yshjQV3-Ee2F0PVRnb5fbg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ywrDcF3-Ee2F0PVRnb5fbg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_ywrDcV3-Ee2F0PVRnb5fbg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yxY1IF3-Ee2F0PVRnb5fbg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_yyJqIF3-Ee2F0PVRnb5fbg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yAbSQF3-Ee2F0PVRnb5fbg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_yAbSQV3-Ee2F0PVRnb5fbg" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_yAbSQl3-Ee2F0PVRnb5fbg" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_yAb5UF3-Ee2F0PVRnb5fbg" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_ysIhsF3-Ee2F0PVRnb5fbg" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ysJIwV3-Ee2F0PVRnb5fbg" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yBx9IF3-Ee2F0PVRnb5fbg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_yBx9IV3-Ee2F0PVRnb5fbg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_yBx9Il3-Ee2F0PVRnb5fbg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_yBykMF3-Ee2F0PVRnb5fbg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_ys0eMF3-Ee2F0PVRnb5fbg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ys1FQV3-Ee2F0PVRnb5fbg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yswz0F3-Ee2F0PVRnb5fbg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ysxa4V3-Ee2F0PVRnb5fbg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yszQEF3-Ee2F0PVRnb5fbg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yBRm0V3-Ee2F0PVRnb5fbg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_yBSN4F3-Ee2F0PVRnb5fbg" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_ysiKUV3-Ee2F0PVRnb5fbg" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yBSN4V3-Ee2F0PVRnb5fbg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_yBSN4l3-Ee2F0PVRnb5fbg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_yBSN413-Ee2F0PVRnb5fbg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_ysixYV3-Ee2F0PVRnb5fbg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yB5R4F3-Ee2F0PVRnb5fbg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ys6k0F3-Ee2F0PVRnb5fbg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ys7y8l3-Ee2F0PVRnb5fbg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ys-PMF3-Ee2F0PVRnb5fbg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ytAEYF3-Ee2F0PVRnb5fbg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ytB5kl3-Ee2F0PVRnb5fbg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ytDuwl3-Ee2F0PVRnb5fbg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yu8lIl3-Ee2F0PVRnb5fbg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yu-aUl3-Ee2F0PVRnb5fbg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvAPgF3-Ee2F0PVRnb5fbg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvCEsF3-Ee2F0PVRnb5fbg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yEkLYF3-Ee2F0PVRnb5fbg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_yvMcwF3-Ee2F0PVRnb5fbg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvQHIV3-Ee2F0PVRnb5fbg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvRVQl3-Ee2F0PVRnb5fbg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvTKcl3-Ee2F0PVRnb5fbg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvU_ol3-Ee2F0PVRnb5fbg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yvYC8F3-Ee2F0PVRnb5fbg" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yFlfEF3-Ee2F0PVRnb5fbg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_yv3yMF3-Ee2F0PVRnb5fbg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yv4ZQV3-Ee2F0PVRnb5fbg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yv5nYV3-Ee2F0PVRnb5fbg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yv6OcV3-Ee2F0PVRnb5fbg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yv61gV3-Ee2F0PVRnb5fbg" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_wbq68F3-Ee2F0PVRnb5fbg">
      <eAnnotations xmi:id="_wbvzcF3-Ee2F0PVRnb5fbg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_wb5kcF3-Ee2F0PVRnb5fbg" base_Package="_uPjBoF3-Ee2F0PVRnb5fbg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_yKBTIF3-Ee2F0PVRnb5fbg" genericsValue="T,E" base_Element="_yJ7zkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yKOHcF3-Ee2F0PVRnb5fbg" base_Element="_yKNgYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yKQjsF3-Ee2F0PVRnb5fbg" base_Element="_yKNgYF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yKQjsV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yKTnAF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yKRKwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yKWqUF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yKUOEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yKZtoF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yKX4cF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yKcJ4F3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yKaUsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yKemIF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yKcw8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yLU6sF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yLTskF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLhvAF3-Ee2F0PVRnb5fbg" base_Element="_yLhH8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLiWEF3-Ee2F0PVRnb5fbg" base_Element="_yLhH8F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLiWEV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLjkMV3-Ee2F0PVRnb5fbg" base_Element="_yLjkMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLkLQF3-Ee2F0PVRnb5fbg" base_Element="_yLjkMF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLkLQV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLkyUF3-Ee2F0PVRnb5fbg" base_Element="_yLkLQl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLkyUV3-Ee2F0PVRnb5fbg" base_Element="_yLkLQl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLmAcF3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLmngF3-Ee2F0PVRnb5fbg" base_Element="_yLmAcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLmngV3-Ee2F0PVRnb5fbg" base_Element="_yLmAcV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLmngl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLnOkV3-Ee2F0PVRnb5fbg" base_Element="_yLnOkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLn1oF3-Ee2F0PVRnb5fbg" base_Element="_yLnOkF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLn1oV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLpDwF3-Ee2F0PVRnb5fbg" base_Element="_yLn1ol3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLpDwV3-Ee2F0PVRnb5fbg" base_Element="_yLn1ol3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLpDwl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLqR4F3-Ee2F0PVRnb5fbg" base_Element="_yLpq0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLq48F3-Ee2F0PVRnb5fbg" base_Element="_yLpq0F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLq48V3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLrgAF3-Ee2F0PVRnb5fbg" base_Element="_yLq48l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLsHEF3-Ee2F0PVRnb5fbg" base_Element="_yLq48l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLsHEV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLsuIF3-Ee2F0PVRnb5fbg" base_Element="_yLsHEl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLtVMF3-Ee2F0PVRnb5fbg" base_Element="_yLsHEl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLtVMV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLtVM13-Ee2F0PVRnb5fbg" base_Element="_yLtVMl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLujUF3-Ee2F0PVRnb5fbg" base_Element="_yLtVMl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLujUV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLujU13-Ee2F0PVRnb5fbg" base_Element="_yLujUl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLujVF3-Ee2F0PVRnb5fbg" base_Element="_yLujUl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLujVV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLvxcV3-Ee2F0PVRnb5fbg" base_Element="_yLvxcF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLwYgF3-Ee2F0PVRnb5fbg" base_Element="_yLvxcF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLwYgV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yLwYg13-Ee2F0PVRnb5fbg" base_Element="_yLwYgl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yLw_kF3-Ee2F0PVRnb5fbg" base_Element="_yLwYgl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yLw_kV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yL4UUF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yL2fIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMQu0F3-Ee2F0PVRnb5fbg" base_Element="_yMPgsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMQu0V3-Ee2F0PVRnb5fbg" base_Element="_yMPgsF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMRV4F3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMR88F3-Ee2F0PVRnb5fbg" base_Element="_yMRV4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMSkAF3-Ee2F0PVRnb5fbg" base_Element="_yMRV4V3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMSkAV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMTLEF3-Ee2F0PVRnb5fbg" base_Element="_yMSkAl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMTyIF3-Ee2F0PVRnb5fbg" base_Element="_yMSkAl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMTyIV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yMeKMF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yMcVAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMjCsF3-Ee2F0PVRnb5fbg" base_Element="_yMibo13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMjCsV3-Ee2F0PVRnb5fbg" base_Element="_yMibo13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMjCsl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMmGAF3-Ee2F0PVRnb5fbg" base_Element="_yMle8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMsMoF3-Ee2F0PVRnb5fbg" base_Element="_yMrlkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMszsF3-Ee2F0PVRnb5fbg" base_Element="_yMrlkF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMszsV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMuB0F3-Ee2F0PVRnb5fbg" base_Element="_yMtawF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMuo4F3-Ee2F0PVRnb5fbg" base_Element="_yMtawF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMuo4V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yMvP8F3-Ee2F0PVRnb5fbg" base_Element="_yMuo4l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yMv3AF3-Ee2F0PVRnb5fbg" base_Element="_yMuo4l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yMv3AV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yNIRgF3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yNGcUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yNKGsF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yNI4kF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yNOYIF3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_yNL74F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yNSpkF3-Ee2F0PVRnb5fbg" base_Element="_yNRbcF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yNSpkV3-Ee2F0PVRnb5fbg" base_Element="_yNRbcF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yNSpkl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yNhTEV3-Ee2F0PVRnb5fbg" base_Element="_yNhTEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yNh6IF3-Ee2F0PVRnb5fbg" base_Element="_yNhTEF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yNh6IV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yOHI8F3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yOF60F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yOJlMF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yOIXEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yOOdsF3-Ee2F0PVRnb5fbg" base_Element="_yONPkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yOOdsV3-Ee2F0PVRnb5fbg" base_Element="_yONPkF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yOOdsl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yOQS4V3-Ee2F0PVRnb5fbg" base_Element="_yOPr0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yOQ58F3-Ee2F0PVRnb5fbg" base_Element="_yOPr0V3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yOQ58V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yORhAF3-Ee2F0PVRnb5fbg" base_Element="_yOQ58l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yORhAV3-Ee2F0PVRnb5fbg" base_Element="_yOQ58l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yORhAl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yOZc0F3-Ee2F0PVRnb5fbg" base_Element="_yOY1w13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yOaD4F3-Ee2F0PVRnb5fbg" base_Element="_yOY1w13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yOaD4V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yOdHMF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yObSAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yOhYoF3-Ee2F0PVRnb5fbg" genericsValue="String, Integer" base_Element="_yOgxkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yOimwF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yOh_sF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Array xmi:id="_yOj04F3-Ee2F0PVRnb5fbg" base_Element="_yOjN0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yOwCIF3-Ee2F0PVRnb5fbg" base_Element="_yOvbEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yOwCIV3-Ee2F0PVRnb5fbg" base_Element="_yOvbEF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yOwCIl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yO4lAF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yO3W4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPIcoF3-Ee2F0PVRnb5fbg" base_Element="_yPHOgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPIcoV3-Ee2F0PVRnb5fbg" base_Element="_yPHOgV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPIcol3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPJqwV3-Ee2F0PVRnb5fbg" base_Element="_yPJDsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPKR0F3-Ee2F0PVRnb5fbg" base_Element="_yPJDsV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPKR0V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPK44V3-Ee2F0PVRnb5fbg" base_Element="_yPKR0l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPLf8F3-Ee2F0PVRnb5fbg" base_Element="_yPKR0l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPLf8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPNVIF3-Ee2F0PVRnb5fbg" base_Element="_yPMuEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPNVIV3-Ee2F0PVRnb5fbg" base_Element="_yPMuEF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPNVIl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPN8MV3-Ee2F0PVRnb5fbg" base_Element="_yPN8MF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPOjQF3-Ee2F0PVRnb5fbg" base_Element="_yPN8MF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPOjQV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPPKUV3-Ee2F0PVRnb5fbg" base_Element="_yPOjQl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPPxYF3-Ee2F0PVRnb5fbg" base_Element="_yPOjQl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPPxYV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPQYcV3-Ee2F0PVRnb5fbg" base_Element="_yPPxYl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPQ_gF3-Ee2F0PVRnb5fbg" base_Element="_yPPxYl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPQ_gV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPSNoF3-Ee2F0PVRnb5fbg" base_Element="_yPRmkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPSNoV3-Ee2F0PVRnb5fbg" base_Element="_yPRmkF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPSNol3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPUp4F3-Ee2F0PVRnb5fbg" genericsValue="String, Integer" base_Element="_yPTbwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPm9wF3-Ee2F0PVRnb5fbg" base_Element="_yPmWsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPm9wV3-Ee2F0PVRnb5fbg" base_Element="_yPmWsF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPm9wl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPoL4F3-Ee2F0PVRnb5fbg" base_Element="_yPnk0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPoy8F3-Ee2F0PVRnb5fbg" base_Element="_yPnk0F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPoy8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPqoIF3-Ee2F0PVRnb5fbg" base_Element="_yPpaAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yPqoIV3-Ee2F0PVRnb5fbg" base_Element="_yPpaAF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yPqoIl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPwHsF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yPvgoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yPzyEF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yPx84F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yP21YF3-Ee2F0PVRnb5fbg" base_Element="_yP1nQF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yP4DgF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yP3ccF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQKXYF3-Ee2F0PVRnb5fbg" base_Element="_yQJwUF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yQK-cF3-Ee2F0PVRnb5fbg" base_Element="_yQJwUF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yQK-cV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yQP28F3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yQPP4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yQWkoF3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yQVWgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yQZA4F3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yQYZ0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yQ2T4F3-Ee2F0PVRnb5fbg" genericsValue="T extends SchedulableObject" base_Element="_yQ1s0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yQ4wIF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yQ3iAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQ7MYV3-Ee2F0PVRnb5fbg" base_Element="_yQ7MYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yRFkcF3-Ee2F0PVRnb5fbg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_yRDvQF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRMSIF3-Ee2F0PVRnb5fbg" base_Element="_yRLrEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yROHUV3-Ee2F0PVRnb5fbg" base_Element="_yROHUF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRVcEF3-Ee2F0PVRnb5fbg" base_Element="_yRU1AF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yRVcEV3-Ee2F0PVRnb5fbg" base_Element="_yRU1AF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yRVcEl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRWqMV3-Ee2F0PVRnb5fbg" base_Element="_yRWqMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yRWqMl3-Ee2F0PVRnb5fbg" base_Element="_yRWqMF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yRWqM13-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRXRQV3-Ee2F0PVRnb5fbg" base_Element="_yRWqNF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yRXRQl3-Ee2F0PVRnb5fbg" base_Element="_yRWqNF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yRXRQ13-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySAxgF3-Ee2F0PVRnb5fbg" genericsValue="InstructionParameters" base_Element="_yR_jYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ySD00F3-Ee2F0PVRnb5fbg" genericsValue="InstructionParameters" base_Element="_ySDNwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySNl0V3-Ee2F0PVRnb5fbg" base_Element="_ySNl0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySOz8F3-Ee2F0PVRnb5fbg" base_Element="_ySNl0F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySOz8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySOz813-Ee2F0PVRnb5fbg" base_Element="_ySOz8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySPbAF3-Ee2F0PVRnb5fbg" base_Element="_ySOz8l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySPbAV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySPbA13-Ee2F0PVRnb5fbg" base_Element="_ySPbAl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySQpIF3-Ee2F0PVRnb5fbg" base_Element="_ySPbAl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySQpIV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySRQMF3-Ee2F0PVRnb5fbg" base_Element="_ySQpIl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySR3QF3-Ee2F0PVRnb5fbg" base_Element="_ySQpIl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySR3QV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySR3Q13-Ee2F0PVRnb5fbg" base_Element="_ySR3Ql3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySSeUF3-Ee2F0PVRnb5fbg" base_Element="_ySR3Ql3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySSeUV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySTFYV3-Ee2F0PVRnb5fbg" base_Element="_ySTFYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySTFYl3-Ee2F0PVRnb5fbg" base_Element="_ySTFYF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySTFY13-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySTscl3-Ee2F0PVRnb5fbg" base_Element="_ySTscF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySUTgF3-Ee2F0PVRnb5fbg" base_Element="_ySTscF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySUTgV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySVhoF3-Ee2F0PVRnb5fbg" base_Element="_ySUTgl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySWIsF3-Ee2F0PVRnb5fbg" base_Element="_ySUTgl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySWIsV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySWvwl3-Ee2F0PVRnb5fbg" base_Element="_ySWvwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySXW0F3-Ee2F0PVRnb5fbg" base_Element="_ySWvwF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySXW0V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySXW013-Ee2F0PVRnb5fbg" base_Element="_ySXW0l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySYk8F3-Ee2F0PVRnb5fbg" base_Element="_ySXW0l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySYk8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySYk813-Ee2F0PVRnb5fbg" base_Element="_ySYk8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySZMAF3-Ee2F0PVRnb5fbg" base_Element="_ySYk8l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySZMAV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySZzEV3-Ee2F0PVRnb5fbg" base_Element="_ySZMAl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySZzEl3-Ee2F0PVRnb5fbg" base_Element="_ySZMAl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySZzE13-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySaaIl3-Ee2F0PVRnb5fbg" base_Element="_ySaaIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySaaI13-Ee2F0PVRnb5fbg" base_Element="_ySaaIF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySaaJF3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySboQV3-Ee2F0PVRnb5fbg" base_Element="_ySaaJV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySboQl3-Ee2F0PVRnb5fbg" base_Element="_ySaaJV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySboQ13-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yScPUV3-Ee2F0PVRnb5fbg" base_Element="_ySboRF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySc2YF3-Ee2F0PVRnb5fbg" base_Element="_ySboRF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySc2YV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySc2Y13-Ee2F0PVRnb5fbg" base_Element="_ySc2Yl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ySc2ZF3-Ee2F0PVRnb5fbg" base_Element="_ySc2Yl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ySc2ZV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yS7-kV3-Ee2F0PVRnb5fbg" base_Element="_yS7XgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Array xmi:id="_yS9zwF3-Ee2F0PVRnb5fbg" base_Element="_yS8lol3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Array xmi:id="_yS_o8F3-Ee2F0PVRnb5fbg" base_Element="_yS_B4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Array xmi:id="_yTBeIF3-Ee2F0PVRnb5fbg" base_Element="_yTA3EV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTSj4F3-Ee2F0PVRnb5fbg" base_Element="_yTR80F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTSj4V3-Ee2F0PVRnb5fbg" base_Element="_yTR80F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTSj4l3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTTyAF3-Ee2F0PVRnb5fbg" base_Element="_yTTK8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTTyAV3-Ee2F0PVRnb5fbg" base_Element="_yTTK8F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTTyAl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTUZEV3-Ee2F0PVRnb5fbg" base_Element="_yTTyA13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTVAIF3-Ee2F0PVRnb5fbg" base_Element="_yTTyA13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTVAIV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yTc78F3-Ee2F0PVRnb5fbg" base_Element="_yTcU4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTms8F3-Ee2F0PVRnb5fbg" base_Element="_yTmF4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTnUAF3-Ee2F0PVRnb5fbg" base_Element="_yTmF4F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTnUAV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTnUA13-Ee2F0PVRnb5fbg" base_Element="_yTnUAl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTn7EF3-Ee2F0PVRnb5fbg" base_Element="_yTnUAl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yToiIF3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yToiIl3-Ee2F0PVRnb5fbg" base_Element="_yToiIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTpJMF3-Ee2F0PVRnb5fbg" base_Element="_yToiIV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTpJMV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTpwQF3-Ee2F0PVRnb5fbg" base_Element="_yTpJMl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTpwQV3-Ee2F0PVRnb5fbg" base_Element="_yTpJMl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTpwQl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTqXUF3-Ee2F0PVRnb5fbg" base_Element="_yTpwQ13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTqXUV3-Ee2F0PVRnb5fbg" base_Element="_yTpwQ13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTqXUl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTrlcF3-Ee2F0PVRnb5fbg" base_Element="_yTqXU13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTrlcV3-Ee2F0PVRnb5fbg" base_Element="_yTqXU13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTrlcl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTsMgF3-Ee2F0PVRnb5fbg" base_Element="_yTrlc13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTsMgV3-Ee2F0PVRnb5fbg" base_Element="_yTrlc13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTsMgl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTszkF3-Ee2F0PVRnb5fbg" base_Element="_yTsMg13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTszkV3-Ee2F0PVRnb5fbg" base_Element="_yTsMg13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTszkl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTszlF3-Ee2F0PVRnb5fbg" base_Element="_yTszk13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTtaoF3-Ee2F0PVRnb5fbg" base_Element="_yTszk13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTtaoV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTtao13-Ee2F0PVRnb5fbg" base_Element="_yTtaol3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTtapF3-Ee2F0PVRnb5fbg" base_Element="_yTtaol3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTtapV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTuBsF3-Ee2F0PVRnb5fbg" base_Element="_yTtapl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTuBsV3-Ee2F0PVRnb5fbg" base_Element="_yTtapl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTuBsl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTuowF3-Ee2F0PVRnb5fbg" base_Element="_yTuBs13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTuowV3-Ee2F0PVRnb5fbg" base_Element="_yTuBs13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTuowl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTvP0F3-Ee2F0PVRnb5fbg" base_Element="_yTuow13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTvP0V3-Ee2F0PVRnb5fbg" base_Element="_yTuow13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTvP0l3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTv24F3-Ee2F0PVRnb5fbg" base_Element="_yTvP013-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTwd8F3-Ee2F0PVRnb5fbg" base_Element="_yTvP013-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTwd8V3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTxFAF3-Ee2F0PVRnb5fbg" base_Element="_yTwd8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTxFAV3-Ee2F0PVRnb5fbg" base_Element="_yTwd8l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTxFAl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTxsEF3-Ee2F0PVRnb5fbg" base_Element="_yTxFA13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTyTIF3-Ee2F0PVRnb5fbg" base_Element="_yTxFA13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTyTIV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTy6MF3-Ee2F0PVRnb5fbg" base_Element="_yTyTIl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yTy6MV3-Ee2F0PVRnb5fbg" base_Element="_yTyTIl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yTzhQF3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT0IUF3-Ee2F0PVRnb5fbg" base_Element="_yTzhQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yT0IUV3-Ee2F0PVRnb5fbg" base_Element="_yTzhQV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yT0IUl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT0vYF3-Ee2F0PVRnb5fbg" base_Element="_yT0IU13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yT1WcF3-Ee2F0PVRnb5fbg" base_Element="_yT0IU13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yT1WcV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT19gF3-Ee2F0PVRnb5fbg" base_Element="_yT1Wcl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yT19gV3-Ee2F0PVRnb5fbg" base_Element="_yT1Wcl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yT19gl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT2kkF3-Ee2F0PVRnb5fbg" base_Element="_yT19g13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yT3LoF3-Ee2F0PVRnb5fbg" base_Element="_yT19g13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yT3LoV3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT3ysF3-Ee2F0PVRnb5fbg" base_Element="_yT3Lol3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yT3ysV3-Ee2F0PVRnb5fbg" base_Element="_yT3Lol3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yT3ysl3-Ee2F0PVRnb5fbg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yUA8oF3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_yUAVkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yrpZgF3-Ee2F0PVRnb5fbg" base_Element="_yrnkUF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yrtD4F3-Ee2F0PVRnb5fbg" base_Element="_yrr1wF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yrtq8F3-Ee2F0PVRnb5fbg" base_Element="_yrtD4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yru5EF3-Ee2F0PVRnb5fbg" base_Element="_yruSAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yrvgIV3-Ee2F0PVRnb5fbg" base_Element="_yrvgIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yr1mwF3-Ee2F0PVRnb5fbg" base_Element="_yr0_sF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yr2N0F3-Ee2F0PVRnb5fbg" base_Element="_yr0_sF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yr2N0V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yr54MF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yr4qEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yr7GUF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yr54Ml3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yr_-0F3-Ee2F0PVRnb5fbg" genericsValue="String, Activation" base_Element="_yr_XwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysJIwF3-Ee2F0PVRnb5fbg" base_Element="_ysIhsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysKW4F3-Ee2F0PVRnb5fbg" base_Element="_ysJIwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysMMEF3-Ee2F0PVRnb5fbg" base_Element="_ysLlAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ysSSsF3-Ee2F0PVRnb5fbg" base_Element="_ysRroF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ysSSsV3-Ee2F0PVRnb5fbg" base_Element="_ysRroF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ysSSsl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ysXyQF3-Ee2F0PVRnb5fbg" base_Element="_ysXLMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ysa1kV3-Ee2F0PVRnb5fbg" base_Element="_ysaOgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ysbcoF3-Ee2F0PVRnb5fbg" base_Element="_ysaOgF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ysbcoV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ysef8F3-Ee2F0PVRnb5fbg" base_Element="_ysd44F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysfHAF3-Ee2F0PVRnb5fbg" base_Element="_ysef8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysfuEF3-Ee2F0PVRnb5fbg" base_Element="_ysfHAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysg8MF3-Ee2F0PVRnb5fbg" base_Element="_ysfuEV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yshjQF3-Ee2F0PVRnb5fbg" base_Element="_ysg8MV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysiKUF3-Ee2F0PVRnb5fbg" base_Element="_yshjQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysixYF3-Ee2F0PVRnb5fbg" base_Element="_ysiKUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysjYcF3-Ee2F0PVRnb5fbg" base_Element="_ysixYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ysnC0F3-Ee2F0PVRnb5fbg" base_Element="_ysmbwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ysnC0V3-Ee2F0PVRnb5fbg" base_Element="_ysmbwF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ysnC0l3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ysrUQF3-Ee2F0PVRnb5fbg" genericsValue="String, Flow" base_Element="_ysqGIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ysr7UF3-Ee2F0PVRnb5fbg" genericsValue="Node, Activation" base_Element="_ysrUQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysxa4F3-Ee2F0PVRnb5fbg" base_Element="_yswz0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysypAF3-Ee2F0PVRnb5fbg" base_Element="_ysxa4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ysz3IF3-Ee2F0PVRnb5fbg" base_Element="_yszQEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ys1FQF3-Ee2F0PVRnb5fbg" base_Element="_ys0eMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ys2TYF3-Ee2F0PVRnb5fbg" base_Element="_ys1FQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ys26cF3-Ee2F0PVRnb5fbg" base_Element="_ys2TYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ys4IkF3-Ee2F0PVRnb5fbg" base_Element="_ys3hgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ys4voF3-Ee2F0PVRnb5fbg" base_Element="_ys4IkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ys7L4F3-Ee2F0PVRnb5fbg" base_Element="_ys6k0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ys7L413-Ee2F0PVRnb5fbg" base_Element="_ys7L4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ys7y8F3-Ee2F0PVRnb5fbg" base_Element="_ys7L4V3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ys7y8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ys8aAF3-Ee2F0PVRnb5fbg" base_Element="_ys7y8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ys9BEF3-Ee2F0PVRnb5fbg" base_Element="_ys8aAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ys9BEV3-Ee2F0PVRnb5fbg" base_Element="_ys8aAV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ys9oIF3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ys-2QF3-Ee2F0PVRnb5fbg" base_Element="_ys-PMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ys_dUF3-Ee2F0PVRnb5fbg" base_Element="_ys-2QV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ys_dUV3-Ee2F0PVRnb5fbg" base_Element="_ys-2QV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ys_dUl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ytArcF3-Ee2F0PVRnb5fbg" base_Element="_ytAEYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytBSgF3-Ee2F0PVRnb5fbg" base_Element="_ytArcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ytB5kF3-Ee2F0PVRnb5fbg" base_Element="_ytArcV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ytB5kV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ytDHsF3-Ee2F0PVRnb5fbg" base_Element="_ytB5kl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytDHs13-Ee2F0PVRnb5fbg" base_Element="_ytDHsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ytDuwF3-Ee2F0PVRnb5fbg" base_Element="_ytDHsV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ytDuwV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ytE84F3-Ee2F0PVRnb5fbg" base_Element="_ytDuwl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytFj8F3-Ee2F0PVRnb5fbg" base_Element="_ytE84V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ytGLAF3-Ee2F0PVRnb5fbg" base_Element="_ytE84V3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ytGLAV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ytInQF3-Ee2F0PVRnb5fbg" base_Element="_ytHZIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ytJOUF3-Ee2F0PVRnb5fbg" base_Element="_ytInQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ytNfwF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_ytMRoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ytOt4F3-Ee2F0PVRnb5fbg" base_Element="_ytOG0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytWpsF3-Ee2F0PVRnb5fbg" base_Element="_ytWCoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ytWpsV3-Ee2F0PVRnb5fbg" base_Element="_ytWCoF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ytWpsl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ytZtAF3-Ee2F0PVRnb5fbg" genericsValue="String, Node" base_Element="_ytZF8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ytfMkF3-Ee2F0PVRnb5fbg" base_Element="_ytd-cF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytnvcV3-Ee2F0PVRnb5fbg" base_Element="_ytnIYl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ytoWgF3-Ee2F0PVRnb5fbg" base_Element="_ytnIYl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ytoWgV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ytrZ0F3-Ee2F0PVRnb5fbg" genericsValue="ScheduleTime" base_Element="_ytqLsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytudI13-Ee2F0PVRnb5fbg" base_Element="_ytudIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_ytvEMF3-Ee2F0PVRnb5fbg" base_Element="_ytudIF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_ytvEMV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ytw5YV3-Ee2F0PVRnb5fbg" base_Element="_ytw5YF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ytyHgF3-Ee2F0PVRnb5fbg" base_Element="_ytxgcF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yuJT4F3-Ee2F0PVRnb5fbg" genericsValue="String,InstructionTimeSlot" base_Element="_yuIs0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yuOzcF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yuNlUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yuRPsF3-Ee2F0PVRnb5fbg" genericsValue="Double" base_Element="_yuQooF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yuTE4F3-Ee2F0PVRnb5fbg" genericsValue="Double,ReliabilityRow" base_Element="_yuSd0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yun1AF3-Ee2F0PVRnb5fbg" genericsValue="Activation,Row&lt;Activation>" base_Element="_yumm4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yupqMF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yupDIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yurfYF3-Ee2F0PVRnb5fbg" base_Element="_yuqRQF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yuuisF3-Ee2F0PVRnb5fbg" base_Element="_yut7oF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yuvJwF3-Ee2F0PVRnb5fbg" base_Element="_yuuisV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu7XAF3-Ee2F0PVRnb5fbg" base_Element="_yu6v8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yu7XAV3-Ee2F0PVRnb5fbg" base_Element="_yu6v8F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yu7XAl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu7-El3-Ee2F0PVRnb5fbg" base_Element="_yu7-EF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yu8lIF3-Ee2F0PVRnb5fbg" base_Element="_yu7-EF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yu8lIV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yu9MMF3-Ee2F0PVRnb5fbg" base_Element="_yu8lIl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu9zQF3-Ee2F0PVRnb5fbg" base_Element="_yu9MMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yu-aUF3-Ee2F0PVRnb5fbg" base_Element="_yu9MMV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yu-aUV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yu_BYF3-Ee2F0PVRnb5fbg" base_Element="_yu-aUl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu_ocF3-Ee2F0PVRnb5fbg" base_Element="_yu_BYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yu_ocV3-Ee2F0PVRnb5fbg" base_Element="_yu_BYV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yu_ocl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvA2kF3-Ee2F0PVRnb5fbg" base_Element="_yvAPgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvBdoF3-Ee2F0PVRnb5fbg" base_Element="_yvA2kV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvBdoV3-Ee2F0PVRnb5fbg" base_Element="_yvA2kV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvBdol3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvCEsV3-Ee2F0PVRnb5fbg" base_Element="_yvCEsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvCrwl3-Ee2F0PVRnb5fbg" base_Element="_yvCrwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvDS0F3-Ee2F0PVRnb5fbg" base_Element="_yvCrwF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvDS0V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvD54F3-Ee2F0PVRnb5fbg" base_Element="_yvDS0l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvEg8F3-Ee2F0PVRnb5fbg" base_Element="_yvDS0l3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvEg8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvFvEF3-Ee2F0PVRnb5fbg" base_Element="_yvFIAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvGWIF3-Ee2F0PVRnb5fbg" base_Element="_yvFIAF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvGWIV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvG9MF3-Ee2F0PVRnb5fbg" base_Element="_yvGWIl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvG9MV3-Ee2F0PVRnb5fbg" base_Element="_yvGWIl3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvG9Ml3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvND0F3-Ee2F0PVRnb5fbg" base_Element="_yvMcwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvOR8F3-Ee2F0PVRnb5fbg" base_Element="_yvNq4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvOR8V3-Ee2F0PVRnb5fbg" base_Element="_yvNq4F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvOR8l3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvPgEF3-Ee2F0PVRnb5fbg" base_Element="_yvO5AF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvPgEV3-Ee2F0PVRnb5fbg" base_Element="_yvO5AF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvQHIF3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvQHIl3-Ee2F0PVRnb5fbg" base_Element="_yvQHIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvQuMF3-Ee2F0PVRnb5fbg" base_Element="_yvQHI13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvRVQF3-Ee2F0PVRnb5fbg" base_Element="_yvQHI13-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvRVQV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvR8UF3-Ee2F0PVRnb5fbg" base_Element="_yvRVQl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvSjYF3-Ee2F0PVRnb5fbg" base_Element="_yvR8UV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvTKcF3-Ee2F0PVRnb5fbg" base_Element="_yvR8UV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvTKcV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvTxgF3-Ee2F0PVRnb5fbg" base_Element="_yvTKcl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvUYkV3-Ee2F0PVRnb5fbg" base_Element="_yvTxgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvU_oF3-Ee2F0PVRnb5fbg" base_Element="_yvTxgV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvU_oV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvWNwF3-Ee2F0PVRnb5fbg" base_Element="_yvU_ol3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvXb4F3-Ee2F0PVRnb5fbg" base_Element="_yvWNwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvXb4V3-Ee2F0PVRnb5fbg" base_Element="_yvWNwV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvXb4l3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvYqAF3-Ee2F0PVRnb5fbg" base_Element="_yvYC8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvZREF3-Ee2F0PVRnb5fbg" base_Element="_yvYqAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yvZ4IF3-Ee2F0PVRnb5fbg" base_Element="_yvYqAV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yvZ4IV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yvjpIF3-Ee2F0PVRnb5fbg" base_Element="_yvjCEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yvk3QF3-Ee2F0PVRnb5fbg" base_Element="_yvjpIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yvleUF3-Ee2F0PVRnb5fbg" base_Element="_yvk3QV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yvmscF3-Ee2F0PVRnb5fbg" base_Element="_yvmFYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yvq94F3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_yvpvwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yv4ZQF3-Ee2F0PVRnb5fbg" base_Element="_yv3yMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yv5nYF3-Ee2F0PVRnb5fbg" base_Element="_yv4ZQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yv6OcF3-Ee2F0PVRnb5fbg" base_Element="_yv5nYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yv61gF3-Ee2F0PVRnb5fbg" base_Element="_yv6OcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yv8DoF3-Ee2F0PVRnb5fbg" base_Element="_yv61gV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ywHCwF3-Ee2F0PVRnb5fbg" base_Element="_ywGbsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ywIQ4F3-Ee2F0PVRnb5fbg" base_Element="_ywHCwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ywqcYF3-Ee2F0PVRnb5fbg" genericsValue="T, E" base_Element="_ywp1UF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_ywrqgF3-Ee2F0PVRnb5fbg" base_Element="_ywrDcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yws4oF3-Ee2F0PVRnb5fbg" genericsValue="Activation" base_Element="_ywsRkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ywvU4F3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_ywuGwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ywwjAF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_ywvU4l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ywxxIF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_ywwjAl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_ywzmUF3-Ee2F0PVRnb5fbg" genericsValue="ScheduleTime" base_Element="_ywxxIl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yw2poF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yw2CkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yw67EF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yw5s8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yw8JMF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yw5s813-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yw9XUF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yw8wQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yw_MgF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yw9-YV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxBBsF3-Ee2F0PVRnb5fbg" genericsValue="Activation" base_Element="_yxAaoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yxC24F3-Ee2F0PVRnb5fbg" base_Element="_yxCP0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxEFAF3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yxCP0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yxEFAV3-Ee2F0PVRnb5fbg" base_Element="_yxCP0F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yxEFAl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yxF6MF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yxEsEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yxHIUF3-Ee2F0PVRnb5fbg" base_Element="_yxF6MV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yxIWcF3-Ee2F0PVRnb5fbg" base_Element="_yxHIUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yxIWcV3-Ee2F0PVRnb5fbg" base_Element="_yxHIUV3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yxI9gF3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yxJkkF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yxI9gV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxLZwF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yxKLoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxPEIF3-Ee2F0PVRnb5fbg" genericsValue="Flow" base_Element="_yxN2AF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxSugF3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yxRgYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxT8oF3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_yxTVkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yxZcMF3-Ee2F0PVRnb5fbg" base_Element="_yxY1IF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxdtoF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yxdGkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yxfi0F3-Ee2F0PVRnb5fbg" base_Element="_yxeUsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yxfi0V3-Ee2F0PVRnb5fbg" base_Element="_yxeUsF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yxfi0l3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yxgw8F3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yxgJ4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yxh_EV3-Ee2F0PVRnb5fbg" base_Element="_yxhYAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yxh_El3-Ee2F0PVRnb5fbg" base_Element="_yxhYAF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yximIF3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yxjNMF3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yximIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yxm3kF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yxlpcF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yxoFsF3-Ee2F0PVRnb5fbg" base_Element="_yxneoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yxoswF3-Ee2F0PVRnb5fbg" base_Element="_yxneoF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yxoswV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yxqh8F3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yxp64V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Array xmi:id="_yxrwEF3-Ee2F0PVRnb5fbg" base_Element="_yxrJAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yx810F3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yxrJAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yx-rAF3-Ee2F0PVRnb5fbg" base_Element="_yx-D8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyBHQF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yyAgMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yyC8cV3-Ee2F0PVRnb5fbg" base_Element="_yyCVYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yyDjgF3-Ee2F0PVRnb5fbg" base_Element="_yyCVYF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yyDjgV3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yyFYsF3-Ee2F0PVRnb5fbg" base_Element="_yyEKkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yyKRMF3-Ee2F0PVRnb5fbg" base_Element="_yyJqIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyMtcF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yyLfUl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyQ-4F3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yyPwwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yySNAF3-Ee2F0PVRnb5fbg" base_Element="_yyQ-4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yySNAV3-Ee2F0PVRnb5fbg" base_Element="_yyQ-4V3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yySNAl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yyYToF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yyXskV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyav4F3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yyZhwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyb-AF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yyav4l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyclEF3-Ee2F0PVRnb5fbg" genericsValue="T" base_Element="_yyav413-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyfoYF3-Ee2F0PVRnb5fbg" genericsValue="E" base_Element="_yyfBUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yyhdkF3-Ee2F0PVRnb5fbg" base_Element="_yyg2gF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_yyjSwF3-Ee2F0PVRnb5fbg" base_Element="_yyirsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_yymWEl3-Ee2F0PVRnb5fbg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_yymWEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yym9IF3-Ee2F0PVRnb5fbg" base_Element="_yymWEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yyr1oF3-Ee2F0PVRnb5fbg" base_Element="_yyrOkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yyscsF3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_yyrOkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Annotations xmi:id="_yyscsV3-Ee2F0PVRnb5fbg" base_Element="_yyrOkF3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_yyscsl3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yyu48F3-Ee2F0PVRnb5fbg" base_Element="_yyuR4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yy9icF3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_yy8UUF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yzcqoF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yzcDkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yzd4wF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yzdRsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yzfG4F3-Ee2F0PVRnb5fbg" genericsValue="ScheduleTime" base_Element="_yzef0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzj_YF3-Ee2F0PVRnb5fbg" base_Element="_yzjYUF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzkmcF3-Ee2F0PVRnb5fbg" base_Element="_yzj_YV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzlNgF3-Ee2F0PVRnb5fbg" base_Element="_yzkmcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yznCsF3-Ee2F0PVRnb5fbg" base_Element="_yzmbol3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yznpwF3-Ee2F0PVRnb5fbg" base_Element="_yznCsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzo34V3-Ee2F0PVRnb5fbg" base_Element="_yzo34F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzqGAF3-Ee2F0PVRnb5fbg" base_Element="_yzpe8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yzrUIF3-Ee2F0PVRnb5fbg" genericsValue="ChannelSet" base_Element="_yzqGAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzr7MF3-Ee2F0PVRnb5fbg" base_Element="_yzqGAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzuXcF3-Ee2F0PVRnb5fbg" base_Element="_yztwYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yzwzsF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_yzwMoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzxawF3-Ee2F0PVRnb5fbg" base_Element="_yzwMoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzyB0F3-Ee2F0PVRnb5fbg" base_Element="_yzxawV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_yzzP8F3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_yzyB0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzzP8V3-Ee2F0PVRnb5fbg" base_Element="_yzyB0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yzz3AV3-Ee2F0PVRnb5fbg" base_Element="_yzz3AF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yz0eEV3-Ee2F0PVRnb5fbg" base_Element="_yz0eEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yz3hYF3-Ee2F0PVRnb5fbg" base_Element="_yz26UF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yz3hYl3-Ee2F0PVRnb5fbg" base_Element="_yz3hYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yz4vgV3-Ee2F0PVRnb5fbg" base_Element="_yz4vgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yz59oF3-Ee2F0PVRnb5fbg" base_Element="_yz5WkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0AEQF3-Ee2F0PVRnb5fbg" base_Element="_yz_dMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0EVsF3-Ee2F0PVRnb5fbg" base_Element="_y0DuoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0EVsl3-Ee2F0PVRnb5fbg" base_Element="_y0EVsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0E8wV3-Ee2F0PVRnb5fbg" base_Element="_y0E8wF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0GK4F3-Ee2F0PVRnb5fbg" genericsValue="Node" base_Element="_y0Fj0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0GK4V3-Ee2F0PVRnb5fbg" base_Element="_y0Fj0F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0IAEF3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_y0GK4l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0IAEV3-Ee2F0PVRnb5fbg" base_Element="_y0GK4l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0InIF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_y0IAEl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0JOMF3-Ee2F0PVRnb5fbg" base_Element="_y0IAEl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0J1QF3-Ee2F0PVRnb5fbg" base_Element="_y0JOMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0LDYF3-Ee2F0PVRnb5fbg" base_Element="_y0J1QV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0OtwF3-Ee2F0PVRnb5fbg" base_Element="_y0OGsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0PU0F3-Ee2F0PVRnb5fbg" base_Element="_y0OtwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0P74F3-Ee2F0PVRnb5fbg" base_Element="_y0PU0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0Qi8F3-Ee2F0PVRnb5fbg" base_Element="_y0P74V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0Qi8l3-Ee2F0PVRnb5fbg" base_Element="_y0Qi8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0RKAV3-Ee2F0PVRnb5fbg" base_Element="_y0RKAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0SYIF3-Ee2F0PVRnb5fbg" base_Element="_y0RxEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0TmQF3-Ee2F0PVRnb5fbg" base_Element="_y0S_Ml3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0U0YF3-Ee2F0PVRnb5fbg" base_Element="_y0UNUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0VbcV3-Ee2F0PVRnb5fbg" base_Element="_y0U0YV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0XQoF3-Ee2F0PVRnb5fbg" base_Element="_y0WpkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0X3sF3-Ee2F0PVRnb5fbg" base_Element="_y0XQoV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0YewF3-Ee2F0PVRnb5fbg" base_Element="_y0X3sl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0ZF0F3-Ee2F0PVRnb5fbg" base_Element="_y0YewV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0Zs4F3-Ee2F0PVRnb5fbg" base_Element="_y0ZF0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0aT8F3-Ee2F0PVRnb5fbg" base_Element="_y0Zs4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0a7AF3-Ee2F0PVRnb5fbg" genericsValue="String, Integer" base_Element="_y0aT8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0biEF3-Ee2F0PVRnb5fbg" base_Element="_y0aT8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0cwMV3-Ee2F0PVRnb5fbg" base_Element="_y0cwMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0dXQV3-Ee2F0PVRnb5fbg" base_Element="_y0dXQF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0fzgF3-Ee2F0PVRnb5fbg" genericsValue="Edge" base_Element="_y0fMcF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0jd4F3-Ee2F0PVRnb5fbg" base_Element="_y0i20V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0kE8V3-Ee2F0PVRnb5fbg" base_Element="_y0kE8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0lTEF3-Ee2F0PVRnb5fbg" base_Element="_y0ksAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0l6Il3-Ee2F0PVRnb5fbg" base_Element="_y0lTEV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0mhMF3-Ee2F0PVRnb5fbg" base_Element="_y0l6I13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0nvUF3-Ee2F0PVRnb5fbg" genericsValue="Activation" base_Element="_y0mhMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0nvUV3-Ee2F0PVRnb5fbg" base_Element="_y0mhMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y0o9cF3-Ee2F0PVRnb5fbg" genericsValue="String, Integer" base_Element="_y0oWYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0pkgF3-Ee2F0PVRnb5fbg" base_Element="_y0oWYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0qyoF3-Ee2F0PVRnb5fbg" base_Element="_y0pkgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0t18V3-Ee2F0PVRnb5fbg" base_Element="_y0t18F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0udAV3-Ee2F0PVRnb5fbg" base_Element="_y0udAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0vEEV3-Ee2F0PVRnb5fbg" base_Element="_y0vEEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0vrIV3-Ee2F0PVRnb5fbg" base_Element="_y0vrIF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0wSMF3-Ee2F0PVRnb5fbg" base_Element="_y0vrIl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0w5QF3-Ee2F0PVRnb5fbg" base_Element="_y0wSMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0xgUF3-Ee2F0PVRnb5fbg" base_Element="_y0w5QV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0xgUl3-Ee2F0PVRnb5fbg" base_Element="_y0xgUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0yHYV3-Ee2F0PVRnb5fbg" base_Element="_y0yHYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0yucV3-Ee2F0PVRnb5fbg" base_Element="_y0yucF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0zVgV3-Ee2F0PVRnb5fbg" base_Element="_y0zVgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0z8kV3-Ee2F0PVRnb5fbg" base_Element="_y0z8kF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y00joV3-Ee2F0PVRnb5fbg" base_Element="_y00joF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y04OAF3-Ee2F0PVRnb5fbg" base_Element="_y03m8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y041EF3-Ee2F0PVRnb5fbg" base_Element="_y04OAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y05cIF3-Ee2F0PVRnb5fbg" base_Element="_y041EV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y074YF3-Ee2F0PVRnb5fbg" base_Element="_y07RUl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y074Yl3-Ee2F0PVRnb5fbg" base_Element="_y074YV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y09GgV3-Ee2F0PVRnb5fbg" base_Element="_y09GgF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y09tkF3-Ee2F0PVRnb5fbg" base_Element="_y09Ggl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y0_iwF3-Ee2F0PVRnb5fbg" base_Element="_y0-7s13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1AJ0F3-Ee2F0PVRnb5fbg" base_Element="_y0_iwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1Aw4F3-Ee2F0PVRnb5fbg" base_Element="_y1AJ0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1BX8F3-Ee2F0PVRnb5fbg" base_Element="_y1Aw4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1BX8l3-Ee2F0PVRnb5fbg" base_Element="_y1BX8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1B_AV3-Ee2F0PVRnb5fbg" base_Element="_y1B_AF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1CmEF3-Ee2F0PVRnb5fbg" base_Element="_y1B_Al3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1DNIF3-Ee2F0PVRnb5fbg" base_Element="_y1CmEV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1IFoF3-Ee2F0PVRnb5fbg" base_Element="_y1HekF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1IFol3-Ee2F0PVRnb5fbg" base_Element="_y1IFoV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1JTwF3-Ee2F0PVRnb5fbg" base_Element="_y1IFo13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1J60F3-Ee2F0PVRnb5fbg" base_Element="_y1JTwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1J60l3-Ee2F0PVRnb5fbg" base_Element="_y1J60V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1Kh4V3-Ee2F0PVRnb5fbg" base_Element="_y1Kh4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1LI8F3-Ee2F0PVRnb5fbg" base_Element="_y1Kh4l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1LwAF3-Ee2F0PVRnb5fbg" base_Element="_y1LI8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1MXEl3-Ee2F0PVRnb5fbg" base_Element="_y1MXEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1M-IV3-Ee2F0PVRnb5fbg" base_Element="_y1M-IF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1OMQF3-Ee2F0PVRnb5fbg" base_Element="_y1M-Il3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1OzUF3-Ee2F0PVRnb5fbg" base_Element="_y1OMQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1QBcF3-Ee2F0PVRnb5fbg" base_Element="_y1PaYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1QogF3-Ee2F0PVRnb5fbg" base_Element="_y1QBcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1VhAV3-Ee2F0PVRnb5fbg" base_Element="_y1U58l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1WvIF3-Ee2F0PVRnb5fbg" base_Element="_y1WIEV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y1XWMF3-Ee2F0PVRnb5fbg" genericsValue="InstructionParameters" base_Element="_y1WvIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1X9QF3-Ee2F0PVRnb5fbg" base_Element="_y1WvIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1YkUF3-Ee2F0PVRnb5fbg" base_Element="_y1X9QV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1aZgF3-Ee2F0PVRnb5fbg" base_Element="_y1ZycF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1bAkF3-Ee2F0PVRnb5fbg" base_Element="_y1aZgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1bAkl3-Ee2F0PVRnb5fbg" base_Element="_y1bAkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1cOsF3-Ee2F0PVRnb5fbg" base_Element="_y1bnoF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1c1wF3-Ee2F0PVRnb5fbg" base_Element="_y1cOsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1dc0F3-Ee2F0PVRnb5fbg" base_Element="_y1c1wV3-Ee2F0PVRnb5fbg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_y1eD4F3-Ee2F0PVRnb5fbg" name="getNumChannels" method="_y3uGoF3-Ee2F0PVRnb5fbg">
      <ownedParameter xmi:id="_y1eD4V3-Ee2F0PVRnb5fbg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_y1eq8F3-Ee2F0PVRnb5fbg" base_Element="_y1eD4F3-Ee2F0PVRnb5fbg">
    <annotations xmi:id="_y1eq8V3-Ee2F0PVRnb5fbg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1fSAF3-Ee2F0PVRnb5fbg" base_Element="_y1eq8l3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1f5EF3-Ee2F0PVRnb5fbg" base_Element="_y1fSAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1jjcV3-Ee2F0PVRnb5fbg" base_Element="_y1i8Yl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1kxkF3-Ee2F0PVRnb5fbg" base_Element="_y1kKgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1l_sF3-Ee2F0PVRnb5fbg" base_Element="_y1lYoV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y1mmwF3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_y1l_sV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y1ob8F3-Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_y1nN0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1sGUF3-Ee2F0PVRnb5fbg" base_Element="_y1rfQ13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1stYV3-Ee2F0PVRnb5fbg" base_Element="_y1stYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1tUcF3-Ee2F0PVRnb5fbg" base_Element="_y1stYl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1w-0F3-Ee2F0PVRnb5fbg" base_Element="_y1wXwl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1xl4F3-Ee2F0PVRnb5fbg" base_Element="_y1w-0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1yM8F3-Ee2F0PVRnb5fbg" base_Element="_y1xl4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1yM8l3-Ee2F0PVRnb5fbg" base_Element="_y1yM8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1y0AV3-Ee2F0PVRnb5fbg" base_Element="_y1y0AF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1zbEV3-Ee2F0PVRnb5fbg" base_Element="_y1zbEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y10CIF3-Ee2F0PVRnb5fbg" base_Element="_y1zbEl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y10pMF3-Ee2F0PVRnb5fbg" base_Element="_y10CIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y10pMl3-Ee2F0PVRnb5fbg" base_Element="_y10pMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y11QQV3-Ee2F0PVRnb5fbg" base_Element="_y11QQF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y113UF3-Ee2F0PVRnb5fbg" base_Element="_y11QQl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y12eYF3-Ee2F0PVRnb5fbg" base_Element="_y113UV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y13FcF3-Ee2F0PVRnb5fbg" base_Element="_y12eYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y13sgF3-Ee2F0PVRnb5fbg" base_Element="_y13FcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y14TkF3-Ee2F0PVRnb5fbg" base_Element="_y13sgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y14Tkl3-Ee2F0PVRnb5fbg" base_Element="_y14TkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y146oV3-Ee2F0PVRnb5fbg" base_Element="_y146oF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y19MEF3-Ee2F0PVRnb5fbg" base_Element="_y18lAl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1-aMV3-Ee2F0PVRnb5fbg" base_Element="_y1-aMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1_BQF3-Ee2F0PVRnb5fbg" base_Element="_y1-aMl3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y1_oUF3-Ee2F0PVRnb5fbg" base_Element="_y1_BQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y2BdgF3-Ee2F0PVRnb5fbg" genericsValue="Integer" base_Element="_y2A2cF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y2CEkF3-Ee2F0PVRnb5fbg" base_Element="_y2A2cF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Generics xmi:id="_y2CroF3-Ee2F0PVRnb5fbg" genericsValue="SchedulableObject" base_Element="_y2CEkV3-Ee2F0PVRnb5fbg"/>
  <uml:OpaqueBehavior xmi:id="_y3uGoF3-Ee2F0PVRnb5fbg" name="getNumChannels" specification="_y1eD4F3-Ee2F0PVRnb5fbg">
    <ownedParameter xmi:id="_y3uGoV3-Ee2F0PVRnb5fbg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_y5ExgF3-Ee2F0PVRnb5fbg" base_Element="_y5DjYF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5GmsF3-Ee2F0PVRnb5fbg" base_Element="_y5FYkF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5Ib4F3-Ee2F0PVRnb5fbg" base_Element="_y5GmsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5JqAF3-Ee2F0PVRnb5fbg" base_Element="_y5Ib4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5LfMF3-Ee2F0PVRnb5fbg" base_Element="_y5KREF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5MGQF3-Ee2F0PVRnb5fbg" base_Element="_y5LfMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5NUYF3-Ee2F0PVRnb5fbg" base_Element="_y5MGQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5OigF3-Ee2F0PVRnb5fbg" base_Element="_y5NUYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5PwoF3-Ee2F0PVRnb5fbg" base_Element="_y5OigV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5QXsF3-Ee2F0PVRnb5fbg" base_Element="_y5PwoV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5Rl0F3-Ee2F0PVRnb5fbg" base_Element="_y5Q-wF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5SM4F3-Ee2F0PVRnb5fbg" base_Element="_y5Rl0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5TbAF3-Ee2F0PVRnb5fbg" base_Element="_y5Sz8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5UpIF3-Ee2F0PVRnb5fbg" base_Element="_y5TbAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5VQMF3-Ee2F0PVRnb5fbg" base_Element="_y5UpIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5WeUF3-Ee2F0PVRnb5fbg" base_Element="_y5V3QF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5XscF3-Ee2F0PVRnb5fbg" base_Element="_y5WeUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5YTgF3-Ee2F0PVRnb5fbg" base_Element="_y5XscV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5ZhoF3-Ee2F0PVRnb5fbg" base_Element="_y5YTgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5avwF3-Ee2F0PVRnb5fbg" base_Element="_y5ZhoV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5b94F3-Ee2F0PVRnb5fbg" base_Element="_y5avwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5dMAF3-Ee2F0PVRnb5fbg" base_Element="_y5b94V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5eaIF3-Ee2F0PVRnb5fbg" base_Element="_y5dzEF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5foQF3-Ee2F0PVRnb5fbg" base_Element="_y5fBMF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5g2YF3-Ee2F0PVRnb5fbg" base_Element="_y5foQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5hdcF3-Ee2F0PVRnb5fbg" base_Element="_y5g2YV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5irkF3-Ee2F0PVRnb5fbg" base_Element="_y5hdcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5j5sF3-Ee2F0PVRnb5fbg" base_Element="_y5irkV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5lH0F3-Ee2F0PVRnb5fbg" base_Element="_y5kgwF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5mV8F3-Ee2F0PVRnb5fbg" base_Element="_y5lH0V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5mV813-Ee2F0PVRnb5fbg" base_Element="_y5mV8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5oLIF3-Ee2F0PVRnb5fbg" base_Element="_y5mV9F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5oyMF3-Ee2F0PVRnb5fbg" base_Element="_y5oLIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5pZQF3-Ee2F0PVRnb5fbg" base_Element="_y5oyMV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5qAUF3-Ee2F0PVRnb5fbg" base_Element="_y5pZQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5qnYF3-Ee2F0PVRnb5fbg" base_Element="_y5qAUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5rOcF3-Ee2F0PVRnb5fbg" base_Element="_y5qnYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5r1gF3-Ee2F0PVRnb5fbg" base_Element="_y5rOcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5sckF3-Ee2F0PVRnb5fbg" base_Element="_y5r1gV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5tqsF3-Ee2F0PVRnb5fbg" base_Element="_y5sckV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5u40F3-Ee2F0PVRnb5fbg" base_Element="_y5tqsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5vf4F3-Ee2F0PVRnb5fbg" base_Element="_y5u40V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5xVEF3-Ee2F0PVRnb5fbg" base_Element="_y5wG8F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5x8IF3-Ee2F0PVRnb5fbg" base_Element="_y5xVEV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5zKQF3-Ee2F0PVRnb5fbg" base_Element="_y5x8IV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5zxUF3-Ee2F0PVRnb5fbg" base_Element="_y5zKQV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y50YYF3-Ee2F0PVRnb5fbg" base_Element="_y5zxUV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y51mgF3-Ee2F0PVRnb5fbg" base_Element="_y50_cF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y52NkF3-Ee2F0PVRnb5fbg" base_Element="_y51mgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y520ol3-Ee2F0PVRnb5fbg" base_Element="_y520oF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y54CwF3-Ee2F0PVRnb5fbg" base_Element="_y53bsF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y54p0F3-Ee2F0PVRnb5fbg" base_Element="_y54CwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5538F3-Ee2F0PVRnb5fbg" base_Element="_y55Q4F3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y57GEF3-Ee2F0PVRnb5fbg" base_Element="_y56fAF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y57tIF3-Ee2F0PVRnb5fbg" base_Element="_y57GEV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y587QF3-Ee2F0PVRnb5fbg" base_Element="_y57tIV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y587Q13-Ee2F0PVRnb5fbg" base_Element="_y587QV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y59iUl3-Ee2F0PVRnb5fbg" base_Element="_y59iUF3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5-JYF3-Ee2F0PVRnb5fbg" base_Element="_y59iU13-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5-wcF3-Ee2F0PVRnb5fbg" base_Element="_y5-JYV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5_XgF3-Ee2F0PVRnb5fbg" base_Element="_y5-wcV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y5_-kF3-Ee2F0PVRnb5fbg" base_Element="_y5_XgV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6AloF3-Ee2F0PVRnb5fbg" base_Element="_y5_-kV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6BMsF3-Ee2F0PVRnb5fbg" base_Element="_y6AloV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6BzwF3-Ee2F0PVRnb5fbg" base_Element="_y6BMsV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6DB4F3-Ee2F0PVRnb5fbg" base_Element="_y6BzwV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6Do8F3-Ee2F0PVRnb5fbg" base_Element="_y6DB4V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6EQAF3-Ee2F0PVRnb5fbg" base_Element="_y6Do8V3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6E3EF3-Ee2F0PVRnb5fbg" base_Element="_y6EQAV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Reference xmi:id="_y6FeIF3-Ee2F0PVRnb5fbg" base_Element="_y6E3EV3-Ee2F0PVRnb5fbg"/>
  <UMLLabProfile:Patch xmi:id="_1kw7sF3-Ee2F0PVRnb5fbg" base_Element="_yMjpwF3-Ee2F0PVRnb5fbg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_1k0mEF3-Ee2F0PVRnb5fbg" base_Element="_yN9X8F3-Ee2F0PVRnb5fbg" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_1k10MF3-Ee2F0PVRnb5fbg" base_Element="_yQ5-QF3-Ee2F0PVRnb5fbg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_1k3CUF3-Ee2F0PVRnb5fbg" base_Element="_yRLEAF3-Ee2F0PVRnb5fbg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
