<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_rtrfsEcyEe2rgspmIFjL-A" name="Channel">
    <eAnnotations xmi:id="_rweVAEcyEe2rgspmIFjL-A" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_rwe8EEcyEe2rgspmIFjL-A" source="codegen">
        <details xmi:id="_rwe8EUcyEe2rgspmIFjL-A" key="codegenDirectory" value="/cs2820-fall22/src"/>
        <details xmi:id="_une-YEcyEe2rgspmIFjL-A" key="AssociatedSourceCode" value="/cs2820-fall22/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall22/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelAnalysis.java;2040859700/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Channels.java;105405152/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelsTest.java;3718395581/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall22/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FileManager.java;2522714670/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Flow.java;889275975/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall22/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramVisualization.java;867879725/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;384175461/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;2067458194/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1561738288/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationObject.java;823199562/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Warp.java;418770348/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoad.java;727085344/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1981400958/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadTest.java;2456256290/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Program.java;1200693028/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_N6rNIEc2Ee2VGuPmUBocQA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_N6rNIUc2Ee2VGuPmUBocQA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_N6rNIkc2Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_N6rNI0c2Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_N6r0MEc2Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_stog0EcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_stpH4EcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_stpH4UcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_stpH4kcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_stpH40cyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_stpH5EcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_stpH5UcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_stpH5kcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_stpu8EcyEe2rgspmIFjL-A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ssbm8EcyEe2rgspmIFjL-A" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_ssbm8UcyEe2rgspmIFjL-A" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_ssbm8kcyEe2rgspmIFjL-A" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_sseqQEcyEe2rgspmIFjL-A" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_stxDsEcyEe2rgspmIFjL-A" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_tCsK0EcyEe2rgspmIFjL-A" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_suh4sEcyEe2rgspmIFjL-A" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_tDT14UcyEe2rgspmIFjL-A" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_sunYQEcyEe2rgspmIFjL-A" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_tDVEAEcyEe2rgspmIFjL-A" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_tDVrEUcyEe2rgspmIFjL-A" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_syJ0cEcyEe2rgspmIFjL-A" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_tESGQEcyEe2rgspmIFjL-A" general="_tB2dUEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFdyAEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFdyAUcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtIIEcyEe2rgspmIFjL-A" name="AbstractMap" specification="_syM3wEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtIIUcyEe2rgspmIFjL-A" type="_syJ0cEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_syM3wEcyEe2rgspmIFjL-A" name="AbstractMap" method="_tGtIIEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_syM3wUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_syM3wkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_syM3w0cyEe2rgspmIFjL-A" type="_syJ0cEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_syNe0EcyEe2rgspmIFjL-A" name="Activation">
              <generalization xmi:id="_tB9LA0cyEe2rgspmIFjL-A" general="_s2yc0EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFeZEEcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A" isReadOnly="true" association="_tH7QIEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFfAIUcyEe2rgspmIFjL-A" name="edges" type="_tB3rcEcyEe2rgspmIFjL-A" isReadOnly="true" association="_tH73MUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFfnMUcyEe2rgspmIFjL-A" name="additionalScheduleTimes" type="_tB3rcEcyEe2rgspmIFjL-A" isReadOnly="true" association="_tH73NEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFfnM0cyEe2rgspmIFjL-A" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tFfnNEcyEe2rgspmIFjL-A" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_tETUYUcyEe2rgspmIFjL-A" client="_syNe0EcyEe2rgspmIFjL-A" supplier="_tEStUkcyEe2rgspmIFjL-A" contract="_tEStUkcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtIIkcyEe2rgspmIFjL-A" name="Activation" specification="_syOs8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtII0cyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGtIJEcyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtvMEcyEe2rgspmIFjL-A" name="Activation" specification="_tB5goUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtvMUcyEe2rgspmIFjL-A" name="elem" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGtvMkcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGtvM0cyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtvNEcyEe2rgspmIFjL-A" name="clone" specification="_syP7EEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtvNUcyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtvNkcyEe2rgspmIFjL-A" name="getEdgesByReleaseTime" specification="_syRJMkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtvN0cyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtvOEcyEe2rgspmIFjL-A" name="getEdgesByLatestReleaseTime" specification="_syRwQUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtvOUcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGtvOkcyEe2rgspmIFjL-A" name="getEdgesByPeriod" specification="_syS-YEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGtvO0cyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGuWQEcyEe2rgspmIFjL-A" name="getEdgesByDeadline" specification="_syUMgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGuWQUcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGuWQkcyEe2rgspmIFjL-A" name="getEdgesByPriority" specification="_syUzkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGuWQ0cyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGuWREcyEe2rgspmIFjL-A" name="addEdges" specification="_tEUigEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGuWRUcyEe2rgspmIFjL-A" name="edges" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGuWRkcyEe2rgspmIFjL-A" name="addEdge" specification="_tB6uwUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGuWR0cyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGu9UEcyEe2rgspmIFjL-A" name="increaseEdgePhases" specification="_syVaoUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGu9UUcyEe2rgspmIFjL-A" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGu9UkcyEe2rgspmIFjL-A" name="updatePriorityAndRelease" specification="_syWBsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGu9U0cyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGu9VEcyEe2rgspmIFjL-A" name="addConflict" specification="_syWBskcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGu9VUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGu9VkcyEe2rgspmIFjL-A" name="addConflicts" specification="_tEVJkUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGu9V0cyEe2rgspmIFjL-A" name="conflicts" type="_tB45k0cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGu9WEcyEe2rgspmIFjL-A" name="addCoordinator" specification="_syWowEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGu9WUcyEe2rgspmIFjL-A" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGvkYEcyEe2rgspmIFjL-A" name="addCoordinators" specification="_tEVwoUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGvkYUcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGvkYkcyEe2rgspmIFjL-A" name="addScheduleTimes" specification="_tEWXsUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGvkY0cyEe2rgspmIFjL-A" name="scheduleTime" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGvkZEcyEe2rgspmIFjL-A" name="getNextScheduleTime" specification="_syXP0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGvkZUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGvkZkcyEe2rgspmIFjL-A" type="_s1XggEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGvkZ0cyEe2rgspmIFjL-A" name="getMatchingEndTime" specification="_syX24EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGvkaEcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGvkaUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwLcEcyEe2rgspmIFjL-A" name="getNextStartTime" specification="_syX240cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwLcUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGwLckcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwLc0cyEe2rgspmIFjL-A" name="getNextEndTime" specification="_syYd8kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwLdEcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGwLdUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwLdkcyEe2rgspmIFjL-A" name="getNumEdges" specification="_syZFAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwLd0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwLeEcyEe2rgspmIFjL-A" name="compareTo" specification="_tB7V0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwLeUcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGwLekcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwLe0cyEe2rgspmIFjL-A" name="conflictExists" specification="_tB7V1kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwLfEcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGwLfUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwygEcyEe2rgspmIFjL-A" name="canCombine" specification="_tB784kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwygUcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGwygkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwyg0cyEe2rgspmIFjL-A" name="getDelta" specification="_syZsEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwyhEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwyhUcyEe2rgspmIFjL-A" name="getExecutionDuration" specification="_syZsEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwyhkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwyh0cyEe2rgspmIFjL-A" name="getCombinedExecutionDuration" specification="_tB785UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwyiEcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGwyiUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGwyikcyEe2rgspmIFjL-A" name="printAll" specification="_syaTIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGwyi0cyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGxZkEcyEe2rgspmIFjL-A" name="printAll" specification="_syaTIkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGxZkUcyEe2rgspmIFjL-A" name="printEdges" specification="_tB8j8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGxZkkcyEe2rgspmIFjL-A" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGxZk0cyEe2rgspmIFjL-A" name="edges" type="_s0y4wEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGxZlEcyEe2rgspmIFjL-A" name="printEdges" specification="_tB9LAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGxZlUcyEe2rgspmIFjL-A" name="edges" type="_s0y4wEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_syOs8EcyEe2rgspmIFjL-A" name="Activation" visibility="package" method="_tGtIIkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_syPUAUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_syPUAkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_syPUAEcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syPUA0cyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syP7EEcyEe2rgspmIFjL-A" name="clone" method="_tGtvNEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB6HtEcyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syRJMkcyEe2rgspmIFjL-A" name="getEdgesByReleaseTime" method="_tGtvNkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhAcEcyEe2rgspmIFjL-A">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_tB6HtUcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syRwQUcyEe2rgspmIFjL-A" name="getEdgesByLatestReleaseTime" method="_tGtvOEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhAcUcyEe2rgspmIFjL-A">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_tB6HtkcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syS-YEcyEe2rgspmIFjL-A" name="getEdgesByPeriod" method="_tGtvOkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhAckcyEe2rgspmIFjL-A">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_tB6Ht0cyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syUMgEcyEe2rgspmIFjL-A" name="getEdgesByDeadline" method="_tGuWQEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhAc0cyEe2rgspmIFjL-A">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_tB6HuEcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syUzkEcyEe2rgspmIFjL-A" name="getEdgesByPriority" method="_tGuWQkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhngEcyEe2rgspmIFjL-A">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_tB6uwEcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syVaoUcyEe2rgspmIFjL-A" name="increaseEdgePhases" method="_tGu9UEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhngUcyEe2rgspmIFjL-A">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_syVaokcyEe2rgspmIFjL-A" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syWBsEcyEe2rgspmIFjL-A" name="updatePriorityAndRelease" method="_tGu9UkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhngkcyEe2rgspmIFjL-A">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_syWBsUcyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syWBskcyEe2rgspmIFjL-A" name="addConflict" method="_tGu9VEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_syWBs0cyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syWowEcyEe2rgspmIFjL-A" name="addCoordinator" method="_tGu9WEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_syWowUcyEe2rgspmIFjL-A" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syXP0EcyEe2rgspmIFjL-A" name="getNextScheduleTime" method="_tGvkZEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhnhEcyEe2rgspmIFjL-A">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_syXP0UcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tB6uw0cyEe2rgspmIFjL-A" type="_s1XggEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syX24EcyEe2rgspmIFjL-A" name="getMatchingEndTime" method="_tGvkZ0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhnhUcyEe2rgspmIFjL-A">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_syX24UcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syX24kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syX240cyEe2rgspmIFjL-A" name="getNextStartTime" method="_tGwLcEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhnhkcyEe2rgspmIFjL-A">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_syYd8EcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syYd8UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syYd8kcyEe2rgspmIFjL-A" name="getNextEndTime" method="_tGwLc0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhnh0cyEe2rgspmIFjL-A">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_syYd80cyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syYd9EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syZFAEcyEe2rgspmIFjL-A" name="getNumEdges" method="_tGwLdkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_syZFAUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syZsEEcyEe2rgspmIFjL-A" name="getDelta" method="_tGwyg0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhniEcyEe2rgspmIFjL-A">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_syZsEUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syZsEkcyEe2rgspmIFjL-A" name="getExecutionDuration" method="_tGwyhUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_syZsE0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syaTIEcyEe2rgspmIFjL-A" name="printAll" method="_tGwyikcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_syaTIUcyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syaTIkcyEe2rgspmIFjL-A" name="printAll" method="_tGxZkEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_tB5goUcyEe2rgspmIFjL-A" name="Activation" visibility="package" method="_tGtvMEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tB6HsUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tB6HskcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tB5gokcyEe2rgspmIFjL-A" name="elem" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tB6HsEcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tB6Hs0cyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tB6uwUcyEe2rgspmIFjL-A" name="addEdge" method="_tGuWRkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB6uwkcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tB7V0EcyEe2rgspmIFjL-A" name="compareTo" method="_tGwLeEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB7V0UcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tB7V0kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tB7V1kcyEe2rgspmIFjL-A" name="conflictExists" method="_tGwLe0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB784EcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tB784UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tB784kcyEe2rgspmIFjL-A" name="canCombine" method="_tGwygEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB7840cyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tB785EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tB785UcyEe2rgspmIFjL-A" name="getCombinedExecutionDuration" method="_tGwyh0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB785kcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tB7850cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tB8j8EcyEe2rgspmIFjL-A" name="printEdges" visibility="private" method="_tGxZkUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB8j8UcyEe2rgspmIFjL-A" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tB8j8kcyEe2rgspmIFjL-A" name="edges" type="_s0y4wEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tB9LAEcyEe2rgspmIFjL-A" name="printEdges" visibility="private" method="_tGxZlEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tB9LAUcyEe2rgspmIFjL-A" name="edges" type="_s0y4wEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEUigEcyEe2rgspmIFjL-A" name="addEdges" method="_tGuWREcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEUigUcyEe2rgspmIFjL-A" name="edges" type="_tB3rcEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEVJkUcyEe2rgspmIFjL-A" name="addConflicts" method="_tGu9VkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEVJkkcyEe2rgspmIFjL-A" name="conflicts" type="_tB45k0cyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEVwoUcyEe2rgspmIFjL-A" name="addCoordinators" method="_tGvkYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEVwokcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEWXsUcyEe2rgspmIFjL-A" name="addScheduleTimes" method="_tGvkYkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHhng0cyEe2rgspmIFjL-A">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEWXskcyEe2rgspmIFjL-A" name="scheduleTime" type="_tB3rcEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_syiO8EcyEe2rgspmIFjL-A" name="Activations">
              <generalization xmi:id="_tB_AMEcyEe2rgspmIFjL-A" general="_syJ0cEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFg1UEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFhcYEcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_syi2AEcyEe2rgspmIFjL-A" name="BasicPoset">
              <ownedComment xmi:id="_tHhniUcyEe2rgspmIFjL-A">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_tB_nRkcyEe2rgspmIFjL-A" general="_s0Z3MEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGyAoEcyEe2rgspmIFjL-A" name="BasicPoset" specification="_tB_nQUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGyAoUcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGyAokcyEe2rgspmIFjL-A" type="_syi2AEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tB_nQUcyEe2rgspmIFjL-A" name="BasicPoset" visibility="package" method="_tGyAoEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tB_nQ0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tB_nREcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tB_nQkcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tB_nRUcyEe2rgspmIFjL-A" type="_syi2AEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sykEIEcyEe2rgspmIFjL-A" name="ChannelAnalysis">
              <ownedComment xmi:id="_zKYHcF3_Ee2F0PVRnb5fbg">
                <body>&lt;h1>Implementation of the ChannelAnalysis class&lt;/h1>&#xD;
Used to analyze either Program or WarpInterface by converting to program.&#xD;
Can be used to detect channel conflicts.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tFhcYUcyEe2rgspmIFjL-A" name="program" visibility="private" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tH8eQUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFiDcUcyEe2rgspmIFjL-A" name="programTable" visibility="private" type="_s0rkAEcyEe2rgspmIFjL-A" association="_tH8eREcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFiDc0cyEe2rgspmIFjL-A" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGyAo0cyEe2rgspmIFjL-A" name="ChannelAnalysis" specification="_tCAOUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGyApEcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGyApUcyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this(warp.toProgram());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGyApkcyEe2rgspmIFjL-A" name="ChannelAnalysis" specification="_tCA1YEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGyAp0cyEe2rgspmIFjL-A" name="program" type="_s3IbEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGyAqEcyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGynsEcyEe2rgspmIFjL-A" name="isChannelConflict" specification="_sykrMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGynsUcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sykrMEcyEe2rgspmIFjL-A" name="isChannelConflict" method="_tGynsEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_zKYHdF3_Ee2F0PVRnb5fbg">
                  <body>Determines whether or not there is a channel conflict.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return boolean based on if there is a channel conflict or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_sykrMUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCAOUEcyEe2rgspmIFjL-A" name="ChannelAnalysis" visibility="package" method="_tGyAo0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCAOUkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCAOU0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_zKYHcV3_Ee2F0PVRnb5fbg">
                  <body>Constructor that takes in a WarpInterface and converts it to a a program, calls the other &#xD;
   * class constructor with the Program object parameter then sets the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_tCAOUUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCAOVEcyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCA1YEcyEe2rgspmIFjL-A" name="ChannelAnalysis" visibility="package" method="_tGyApkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCA1YkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCA1Y0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_zKYHcl3_Ee2F0PVRnb5fbg">
                  <body>Constructor to set the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param program The program to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_tCA1YUcyEe2rgspmIFjL-A" name="program" type="_s3IbEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCA1ZEcyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rrO9wEc0Ee2rgspmIFjL-A" name="getChannelAnalysisTable">
                <ownedComment xmi:id="_zKYHc13_Ee2F0PVRnb5fbg">
                  <body>Method to be implemented that gets channelAnalysisTable.&#xD;
   * &#xD;
   * @author eborchard&#xD;
   * @return ProgramSchedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_rrO9wUc0Ee2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_syl5UEcyEe2rgspmIFjL-A" name="ChannelVisualization">
              <ownedComment xmi:id="_tHiOkEcyEe2rgspmIFjL-A">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCBcdEcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFiqgUcyEe2rgspmIFjL-A" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFiqgkcyEe2rgspmIFjL-A" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFiqg0cyEe2rgspmIFjL-A" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFjRkEcyEe2rgspmIFjL-A" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFjRkUcyEe2rgspmIFjL-A" name="warp" visibility="private" type="_s1_LkEcyEe2rgspmIFjL-A" association="_tH8eR0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFjRk0cyEe2rgspmIFjL-A" name="ca" visibility="private" type="_sykEIEcyEe2rgspmIFjL-A" association="_tH9FUUcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGynskcyEe2rgspmIFjL-A" name="ChannelVisualization" specification="_tCA1ZUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGyns0cyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGyntEcyEe2rgspmIFjL-A" type="_syl5UEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tCA1ZUcyEe2rgspmIFjL-A" name="ChannelVisualization" visibility="package" method="_tGynskcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCBccUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCBcckcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCBccEcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCBcc0cyEe2rgspmIFjL-A" type="_syl5UEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_synugEcyEe2rgspmIFjL-A" name="Channels">
              <ownedComment xmi:id="_tHiOkUcyEe2rgspmIFjL-A">
                <body>&lt;h1>Implementation of the Channel class.&lt;/h1>&#xD;
 The Channel class allows the user to handle the amount of wireless channels that are available for&#xD;
 scheduling using the private sub class ChannelSet and methods that can add or remove channel sets or&#xD;
 channels individually.&lt;p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tFj4okcyEe2rgspmIFjL-A" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFkfsUcyEe2rgspmIFjL-A" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFkfs0cyEe2rgspmIFjL-A" name="channelsAvailable" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tH9FVEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGzOwEcyEe2rgspmIFjL-A" name="Channels" specification="_syqKwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGzOwUcyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGzOwkcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGzOw0cyEe2rgspmIFjL-A" type="_synugEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGzOxEcyEe2rgspmIFjL-A" name="getChannelSet" specification="_syqx0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGzOxUcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGzOxkcyEe2rgspmIFjL-A" type="_tB4SgUcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return null;&#xD;
 }&#xD;
&#xD;
 /* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGzOx0cyEe2rgspmIFjL-A" name="addNewChannelSet" specification="_syrY4UcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGzOyEcyEe2rgspmIFjL-A" name="isEmpty" specification="_syr_8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGzOyUcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGzOykcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGz10EcyEe2rgspmIFjL-A" name="removeChannel" specification="_syr_80cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGz10UcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGz10kcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGz100cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
&#xD;
 if(!checkIfChannelExists(channels, channel)){&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel removal failed, channel '%s' does not exist\n&quot;, channel);&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGz11EcyEe2rgspmIFjL-A" name="addChannel" specification="_sysnAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGz11UcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGz11kcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGz110cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
&#xD;
 if(checkIfChannelExists(channels, channel)){ // returns false if channel exists&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel add failed, channel '%s' already exists\n&quot;, channel);&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGz12EcyEe2rgspmIFjL-A" name="getNumChannels" specification="_sysnBEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGz12UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGz12kcyEe2rgspmIFjL-A" name="checkIfTimeslotIsOutOfBounds" specification="_sytOEUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGz120cyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGz13EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(timeSlot &lt; 0 || timeSlot >= channelsAvailable.size()){&#xD;
   if (verbose)&#xD;
     System.err.printf(&quot;Time slot '%d' does not exist\n&quot;, timeSlot);&#xD;
   return true;&#xD;
 }&#xD;
&#xD;
 return false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGz13UcyEe2rgspmIFjL-A" name="checkIfChannelExists" specification="_tCCqkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tGz13kcyEe2rgspmIFjL-A" name="channels" type="_syoVkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tGz130cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tGz14EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return channels.contains(channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_syqKwEcyEe2rgspmIFjL-A" name="Channels" visibility="package" method="_tGzOwEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_syqKw0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_syqKxEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHiOlUcyEe2rgspmIFjL-A">
                  <body>Constructor that takes in number of channels and verbose flag.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param nChannels amount of channels&#xD;
   * @param verbose if true, prints data to the screen</body>
                </ownedComment>
                <ownedParameter xmi:id="_syqKwUcyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syqKwkcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syqKxUcyEe2rgspmIFjL-A" type="_synugEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syqx0EcyEe2rgspmIFjL-A" name="getChannelSet" method="_tGzOxEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOlkcyEe2rgspmIFjL-A">
                  <body>Gets the channel set for selected timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to retrieve channel set for&#xD;
   * @return HashSet of channels based on timeslot</body>
                </ownedComment>
                <ownedParameter xmi:id="_syqx0UcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tEZbAUcyEe2rgspmIFjL-A" type="_tB4SgUcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_syrY4UcyEe2rgspmIFjL-A" name="addNewChannelSet" method="_tGzOx0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOl0cyEe2rgspmIFjL-A">
                  <body>Adds a new channel set to available channels.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_syr_8EcyEe2rgspmIFjL-A" name="isEmpty" method="_tGzOyEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOmEcyEe2rgspmIFjL-A">
                  <body>Checks if the channelSet is empty with the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to check channelSet&#xD;
   * @return boolean value based on if the channelSet at the given timeSlot is empty</body>
                </ownedComment>
                <ownedParameter xmi:id="_syr_8UcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syr_8kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_syr_80cyEe2rgspmIFjL-A" name="removeChannel" method="_tGz10EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOmUcyEe2rgspmIFjL-A">
                  <body>Removes channel from available channels at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to get channelSet&#xD;
   * @param channel Channel to remove&#xD;
   * @return boolean value based on the success of the channel removal at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_syr_9EcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syr_9UcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_syr_9kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sysnAEcyEe2rgspmIFjL-A" name="addChannel" method="_tGz11EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOmkcyEe2rgspmIFjL-A">
                  <body>Adds channel at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to add channel at&#xD;
   * @param channel the channel to add&#xD;
   * @return boolean value based on success of channel being added at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_sysnAUcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sysnAkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sysnA0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sysnBEcyEe2rgspmIFjL-A" name="getNumChannels" method="_tGz12EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOm0cyEe2rgspmIFjL-A">
                  <body>Gets the number of channels.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return Integer representing the number of channels</body>
                </ownedComment>
                <ownedParameter xmi:id="_sytOEEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sytOEUcyEe2rgspmIFjL-A" name="checkIfTimeslotIsOutOfBounds" visibility="private" method="_tGz12kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sytOEkcyEe2rgspmIFjL-A" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sytOE0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCCqkEcyEe2rgspmIFjL-A" name="checkIfChannelExists" visibility="private" method="_tGz13UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCCqkUcyEe2rgspmIFjL-A" name="channels" type="_syoVkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCCqkkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCCqk0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_syoVkEcyEe2rgspmIFjL-A" name="ChannelSet" visibility="private">
                <ownedComment xmi:id="_tHiOkkcyEe2rgspmIFjL-A">
                  <body>Private class that extends a string HashSet to keep track of channels as a set.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
                <generalization xmi:id="_tEYz8EcyEe2rgspmIFjL-A" general="_tB4SgUcyEe2rgspmIFjL-A"/>
                <ownedAttribute xmi:id="_tFj4oEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFj4oUcyEe2rgspmIFjL-A" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGyntUcyEe2rgspmIFjL-A" name="ChannelSet" specification="_syo8oEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tGyntkcyEe2rgspmIFjL-A" type="_syoVkEcyEe2rgspmIFjL-A" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tGynt0cyEe2rgspmIFjL-A" name="ChannelSet" specification="_sypjsEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tGynuEcyEe2rgspmIFjL-A" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_tGynuUcyEe2rgspmIFjL-A" type="_syoVkEcyEe2rgspmIFjL-A" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_syo8oEcyEe2rgspmIFjL-A" name="ChannelSet" visibility="private" method="_tGyntUcyEe2rgspmIFjL-A">
                  <eAnnotations xmi:id="_syo8oUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_syo8okcyEe2rgspmIFjL-A" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_tHiOk0cyEe2rgspmIFjL-A">
                    <body>Default Constructor&#xD;
     * &#xD;
     * @author sgoddard</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_syo8o0cyEe2rgspmIFjL-A" type="_syoVkEcyEe2rgspmIFjL-A" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sypjsEcyEe2rgspmIFjL-A" name="ChannelSet" visibility="private" method="_tGynt0cyEe2rgspmIFjL-A">
                  <eAnnotations xmi:id="_sypjskcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sypjs0cyEe2rgspmIFjL-A" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_tHiOlEcyEe2rgspmIFjL-A">
                    <body>Constructor that takes in a channel amount on creation.&#xD;
     * &#xD;
     * @author sgoddard&#xD;
     * @param nChannels number of channels to add</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sypjsUcyEe2rgspmIFjL-A" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sypjtEcyEe2rgspmIFjL-A" type="_syoVkEcyEe2rgspmIFjL-A" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_syvDQEcyEe2rgspmIFjL-A" name="ChannelsTest" visibility="package">
              <ownedAttribute xmi:id="_tFlt0EcyEe2rgspmIFjL-A" name="channelSize" visibility="package" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFlt0UcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG0c4EcyEe2rgspmIFjL-A" name="testGetChannelSetByChannelSetSize" specification="_syvqUEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>final var size = 10; // How many channelSets to be added.&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
&#xD;
		// Loop creates 'size' amount of channel sets, each timeSlot get i amount of channels added.&#xD;
		// timeSlot 0 = channelSet size of 0, timeSlot 1 = channelSet size of 1, ...timeSlot n = channelSet size of n&#xD;
		for(int i = 0; i &lt; size; i++){&#xD;
			channels.addNewChannelSet();&#xD;
			for(int j = 0; j &lt; i; j++) {&#xD;
				channels.addChannel(i,Integer.toString(j)); //add j as a filler channel&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Checks if getChannelSet works by comparing the timeSlot with channel size which should be equal from above loop&#xD;
		for(var i = 0; i &lt; size; i++){&#xD;
			var channelSet = channels.getChannelSet(i);&#xD;
			System.out.println(channelSet.size());&#xD;
			assertEquals(i, channelSet.size(), &quot;Error in getChannelSet returning correct Channel&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG0c4UcyEe2rgspmIFjL-A" name="testGetChannelSetByChannel" specification="_sywRY0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		channels.addChannel(0, &quot;Test 0&quot;);&#xD;
		channels.addChannel(1, &quot;Test 1&quot;);&#xD;
&#xD;
		assertTrue(channels.getChannelSet(0).contains(&quot;Test 0&quot;));&#xD;
		assertTrue(channels.getChannelSet(1).contains(&quot;Test 1&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG0c4kcyEe2rgspmIFjL-A" name="testAddNewChannelSetBySize" specification="_syw4ckcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		final var channelSetSize = 10;&#xD;
&#xD;
		// Checks if initial size is 0&#xD;
		assertEquals(0, channels.channelsAvailable.size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
&#xD;
		for(int i = 0; i &lt; channelSetSize; i++){ // Adds the channelSets&#xD;
			channels.addNewChannelSet();&#xD;
		}&#xD;
&#xD;
		// Checks if the channelSet count is accurate&#xD;
		assertEquals(channelSetSize, channels.channelsAvailable.size(), &quot;ChannelSet size error&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D8EcyEe2rgspmIFjL-A" name="testIsEmptyWhenCreatingEmptyChannels" specification="_syw4dkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.isEmpty(0), &quot;IsEmpty failed on zero ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D8UcyEe2rgspmIFjL-A" name="testIsEmptyWhenChannelsStartAboveZero" specification="_syxfg0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertFalse(channels.isEmpty(0), &quot;IsEmpty retuned true on an non empty ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D8kcyEe2rgspmIFjL-A" name="testEmptyAfterAdd" specification="_syyGkEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
&#xD;
		assertTrue(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
		assertFalse(channels.isEmpty(0), &quot;ChannelSet empty after adding channel&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D80cyEe2rgspmIFjL-A" name="testEmptyAfterRemove" specification="_syyGlEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>final var channelSize = 1;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created is not empty&#xD;
		assertFalse(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.removeChannel(0, &quot;0&quot;);&#xD;
&#xD;
		// Checks if removal of the only channel makes an empty ChannelSet&#xD;
		assertTrue(channels.isEmpty(0), &quot;ChannelSet not empty after channel removal&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D9EcyEe2rgspmIFjL-A" name="testRemoveChannel" specification="_syyto0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created channelSet is 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if channel was added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
&#xD;
		// Checks if removeChannel returns true&#xD;
		assertTrue(channels.removeChannel(0, &quot;Test&quot;), &quot;Channel removal failed&quot;);&#xD;
&#xD;
		// Checks if channel was removed by size&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Channel removal failed&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D9UcyEe2rgspmIFjL-A" name="testAddChannelTimeSlots" specification="_syzUsEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true); // Creates a channels class with no channels&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if channelSet is indeed 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;); //Adds a test channel&#xD;
&#xD;
		// Checks if the channel count increased for timeSlot 0 channelSet&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D9kcyEe2rgspmIFjL-A" name="testAddChannelDuplicates" specification="_syzUtEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, false);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if initial is zero&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if adding channel worked&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Confirms duplicate channels aren't added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Error, channel duplicate added&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D90cyEe2rgspmIFjL-A" name="testAddChannel" specification="_syz7wkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.addChannel(0, &quot;Test&quot;), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D-EcyEe2rgspmIFjL-A" name="testGetNumChannelsNew" specification="_syz7xkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		assertEquals(channelSize, channels.getNumChannels(), &quot;NumChannels has incorrect size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1D-UcyEe2rgspmIFjL-A" name="testGetNumChannelsNChannels" specification="_sy0i00cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
		// getNumChannels returns nChannels, so this should never fail&#xD;
		assertEquals(channels.nChannels, channels.getNumChannels(), &quot;GetNumChannels does not equal nChannels&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_syvqUEcyEe2rgspmIFjL-A" name="testGetChannelSetByChannelSetSize" visibility="package" method="_tG0c4EcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_sywRY0cyEe2rgspmIFjL-A" name="testGetChannelSetByChannel" visibility="package" method="_tG0c4UcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syw4ckcyEe2rgspmIFjL-A" name="testAddNewChannelSetBySize" visibility="package" method="_tG0c4kcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syw4dkcyEe2rgspmIFjL-A" name="testIsEmptyWhenCreatingEmptyChannels" visibility="package" method="_tG1D8EcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syxfg0cyEe2rgspmIFjL-A" name="testIsEmptyWhenChannelsStartAboveZero" visibility="package" method="_tG1D8UcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syyGkEcyEe2rgspmIFjL-A" name="testEmptyAfterAdd" visibility="package" method="_tG1D8kcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syyGlEcyEe2rgspmIFjL-A" name="testEmptyAfterRemove" visibility="package" method="_tG1D80cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syyto0cyEe2rgspmIFjL-A" name="testRemoveChannel" visibility="package" method="_tG1D9EcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syzUsEcyEe2rgspmIFjL-A" name="testAddChannelTimeSlots" visibility="package" method="_tG1D9UcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syzUtEcyEe2rgspmIFjL-A" name="testAddChannelDuplicates" visibility="package" method="_tG1D9kcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syz7wkcyEe2rgspmIFjL-A" name="testAddChannel" visibility="package" method="_tG1D90cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_syz7xkcyEe2rgspmIFjL-A" name="testGetNumChannelsNew" visibility="package" method="_tG1D-EcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_sy0i00cyEe2rgspmIFjL-A" name="testGetNumChannelsNChannels" visibility="package" method="_tG1D-UcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sy1w8EcyEe2rgspmIFjL-A" name="CodeFragment">
              <ownedAttribute xmi:id="_tFm78EcyEe2rgspmIFjL-A" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFm78UcyEe2rgspmIFjL-A" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFm78kcyEe2rgspmIFjL-A" name="edges" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tH9sYUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFnjAkcyEe2rgspmIFjL-A" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFoKEUcyEe2rgspmIFjL-A" name="codeFragment" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tH9sZEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFoxIUcyEe2rgspmIFjL-A" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFoxI0cyEe2rgspmIFjL-A" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1rAEcyEe2rgspmIFjL-A" name="CodeFragment" specification="_sy2YAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG1rAUcyEe2rgspmIFjL-A" type="_sy1w8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1rAkcyEe2rgspmIFjL-A" name="CodeFragment" specification="_tEapIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG1rA0cyEe2rgspmIFjL-A" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG1rBEcyEe2rgspmIFjL-A" name="edges" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG1rBUcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG1rBkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG1rB0cyEe2rgspmIFjL-A" type="_sy1w8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1rCEcyEe2rgspmIFjL-A" name="getCoordinator" specification="_sy3mIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG1rCUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG1rCkcyEe2rgspmIFjL-A" name="instructions" specification="_sy4NMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG1rC0cyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG2SEEcyEe2rgspmIFjL-A" name="size" specification="_sy5bUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG2SEUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG2SEkcyEe2rgspmIFjL-A" name="generateCodeFragment" specification="_sy5bUkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG2SE0cyEe2rgspmIFjL-A" name="getBaseInstruction" specification="_sy6CYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG2SFEcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SFUcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SFkcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SF0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG2SGEcyEe2rgspmIFjL-A" name="push" specification="_sy6pcUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG2SGUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SGkcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SG0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SHEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG2SHUcyEe2rgspmIFjL-A" name="pull" specification="_sy73kEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG2SHkcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SH0cyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SIEcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SIUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG2SIkcyEe2rgspmIFjL-A" name="ifHas" specification="_sy8eoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG2SI0cyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SJEcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SJUcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG2SJkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG25IEcyEe2rgspmIFjL-A" name="ifNotHas" specification="_sy9FsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG25IUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG25IkcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG25I0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG25JEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG25JUcyEe2rgspmIFjL-A" name="wait" specification="_sy9FtUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG25JkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG25J0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG25KEcyEe2rgspmIFjL-A" name="sleep" specification="_sy9swEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG25KUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG25KkcyEe2rgspmIFjL-A" name="reportIfDifferentCoordinators" specification="_tEb3QkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG25K0cyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG25LEcyEe2rgspmIFjL-A" name="multipleCoordinators" specification="_tEdFYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG25LUcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG25LkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sy2YAEcyEe2rgspmIFjL-A" name="CodeFragment" visibility="package" method="_tG1rAEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_sy2YAUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sy2_EEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHiOnEcyEe2rgspmIFjL-A">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sy2_EUcyEe2rgspmIFjL-A" type="_sy1w8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sy3mIEcyEe2rgspmIFjL-A" name="getCoordinator" method="_tG1rCEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHiOnkcyEe2rgspmIFjL-A">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_sy3mIUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy4NMEcyEe2rgspmIFjL-A" name="instructions" method="_tG1rCkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHi1oEcyEe2rgspmIFjL-A">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEb3QUcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sy5bUEcyEe2rgspmIFjL-A" name="size" method="_tG2SEEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHi1oUcyEe2rgspmIFjL-A">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_sy5bUUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy5bUkcyEe2rgspmIFjL-A" name="generateCodeFragment" visibility="private" method="_tG2SEkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_sy6CYEcyEe2rgspmIFjL-A" name="getBaseInstruction" visibility="private" method="_tG2SE0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy6CYUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy6CYkcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy6CY0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy6pcEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy6pcUcyEe2rgspmIFjL-A" name="push" visibility="private" method="_tG2SGEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy6pckcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy6pc0cyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy7QgEcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy7QgUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy73kEcyEe2rgspmIFjL-A" name="pull" visibility="private" method="_tG2SHUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy73kUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy73kkcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy73k0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy73lEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy8eoEcyEe2rgspmIFjL-A" name="ifHas" visibility="private" method="_tG2SIkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy8eoUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy8eokcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy8eo0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy8epEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy9FsEcyEe2rgspmIFjL-A" name="ifNotHas" visibility="private" method="_tG25IEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy9FsUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy9FskcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy9Fs0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy9FtEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy9FtUcyEe2rgspmIFjL-A" name="wait" method="_tG25JUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy9FtkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sy9Ft0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sy9swEcyEe2rgspmIFjL-A" name="sleep" isStatic="true" method="_tG25KEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sy9swUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tEapIEcyEe2rgspmIFjL-A" name="CodeFragment" visibility="package" method="_tG1rAkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tEbQMkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tEbQM0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHiOnUcyEe2rgspmIFjL-A">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEapIUcyEe2rgspmIFjL-A" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tEapIkcyEe2rgspmIFjL-A" name="edges" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEbQMEcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEbQMUcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tEbQNEcyEe2rgspmIFjL-A" type="_sy1w8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEb3QkcyEe2rgspmIFjL-A" name="reportIfDifferentCoordinators" visibility="private" method="_tG25KkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEb3Q0cyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEdFYEcyEe2rgspmIFjL-A" name="multipleCoordinators" visibility="private" method="_tG25LEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEdFYUcyEe2rgspmIFjL-A" name="coordinators" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEdFYkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szAJAEcyEe2rgspmIFjL-A" name="CombinedActivation">
              <generalization xmi:id="_tCJ_UEcyEe2rgspmIFjL-A" general="_syNe0EcyEe2rgspmIFjL-A"/>
              <interfaceRealization xmi:id="_tEeTgEcyEe2rgspmIFjL-A" client="_szAJAEcyEe2rgspmIFjL-A" supplier="_tEStUkcyEe2rgspmIFjL-A" contract="_tEStUkcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG25L0cyEe2rgspmIFjL-A" name="CombinedActivation" specification="_szAwEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG25MEcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG25MUcyEe2rgspmIFjL-A" type="_szAJAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG3gMEcyEe2rgspmIFjL-A" name="CombinedActivation" specification="_tCIKIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG3gMUcyEe2rgspmIFjL-A" name="elem" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gMkcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG3gM0cyEe2rgspmIFjL-A" type="_szAJAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG3gNEcyEe2rgspmIFjL-A" name="CombinedActivation" specification="_tCIxMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG3gNUcyEe2rgspmIFjL-A" name="priorEntry" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gNkcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gN0cyEe2rgspmIFjL-A" type="_szAJAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG3gOEcyEe2rgspmIFjL-A" name="canCombine" specification="_tCIxNkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG3gOUcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gOkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szAwEEcyEe2rgspmIFjL-A" name="CombinedActivation" visibility="package" method="_tG25L0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szAwEkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szAwE0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_szAwEUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szAwFEcyEe2rgspmIFjL-A" type="_szAJAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCIKIEcyEe2rgspmIFjL-A" name="CombinedActivation" visibility="package" method="_tG3gMEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCIKI0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCIKJEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCIKIUcyEe2rgspmIFjL-A" name="elem" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCIKIkcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCIKJUcyEe2rgspmIFjL-A" type="_szAJAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCIxMEcyEe2rgspmIFjL-A" name="CombinedActivation" visibility="package" method="_tG3gNEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCIxM0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCIxNEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCIxMUcyEe2rgspmIFjL-A" name="priorEntry" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCIxMkcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCIxNUcyEe2rgspmIFjL-A" type="_szAJAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCIxNkcyEe2rgspmIFjL-A" name="canCombine" method="_tG3gOEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCIxN0cyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCJYQEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szDzYEcyEe2rgspmIFjL-A" name="CommunicationGraph">
              <ownedComment xmi:id="_tHi1okcyEe2rgspmIFjL-A">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCLNdkcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFqmUEcyEe2rgspmIFjL-A" name="wfm" visibility="package" type="_szZKkEcyEe2rgspmIFjL-A" association="_tH-TcUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFqmUkcyEe2rgspmIFjL-A" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFrNYUcyEe2rgspmIFjL-A" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFr0cEcyEe2rgspmIFjL-A" name="workLoad" visibility="package" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tH-TdEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG3gO0cyEe2rgspmIFjL-A" name="CommunicationGraph" specification="_tCKmYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG3gPEcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gPUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gPkcyEe2rgspmIFjL-A" type="_szDzYEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG3gP0cyEe2rgspmIFjL-A" name="CommunicationGraph" specification="_tCKmZkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG3gQEcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gQUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG3gQkcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG3gQ0cyEe2rgspmIFjL-A" type="_szDzYEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG3gREcyEe2rgspmIFjL-A" name="createHeader" specification="_szFBgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG3gRUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4HQEcyEe2rgspmIFjL-A" name="createFooter" specification="_szFok0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4HQUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4HQkcyEe2rgspmIFjL-A" name="visualization" specification="_szGPo0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4HQ0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4HREcyEe2rgspmIFjL-A" name="createWarpFileContent" specification="_szG2s0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4HRUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szFBgEcyEe2rgspmIFjL-A" name="createHeader" method="_tG3gREcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCLNc0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szFok0cyEe2rgspmIFjL-A" name="createFooter" method="_tG4HQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCLNdEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szGPo0cyEe2rgspmIFjL-A" name="visualization" method="_tG4HQkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCLNdUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szG2s0cyEe2rgspmIFjL-A" name="createWarpFileContent" method="_tG4HREcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szG2tEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCKmYEcyEe2rgspmIFjL-A" name="CommunicationGraph" method="_tG3gO0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCKmY0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCKmZEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCKmYUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCKmYkcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCKmZUcyEe2rgspmIFjL-A" type="_szDzYEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCKmZkcyEe2rgspmIFjL-A" name="CommunicationGraph" method="_tG3gP0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCLNcEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCLNcUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCKmZ0cyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCKmaEcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCKmaUcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCLNckcyEe2rgspmIFjL-A" type="_szDzYEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szIr4EcyEe2rgspmIFjL-A" name="ConnectivityPoset">
              <ownedComment xmi:id="_tHi1o0cyEe2rgspmIFjL-A">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_tCMbk0cyEe2rgspmIFjL-A" general="_s0Z3MEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4HRkcyEe2rgspmIFjL-A" name="ConnectivityPoset" specification="_tCL0gEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4HR0cyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG4HSEcyEe2rgspmIFjL-A" type="_szIr4EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4uUEcyEe2rgspmIFjL-A" name="findCoordinator" specification="_tEfhoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4uUUcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG4uUkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tCL0gEcyEe2rgspmIFjL-A" name="ConnectivityPoset" visibility="package" method="_tG4HRkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCMbkEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCMbkUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCL0gUcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCMbkkcyEe2rgspmIFjL-A" type="_szIr4EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEfhoEcyEe2rgspmIFjL-A" name="findCoordinator" visibility="protected" method="_tG4uUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEfhoUcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEfhokcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szJ6AEcyEe2rgspmIFjL-A" name="DeadlineComparator">
              <interfaceRealization xmi:id="_tEgvwkcyEe2rgspmIFjL-A" client="_szJ6AEcyEe2rgspmIFjL-A" supplier="_tCMblEcyEe2rgspmIFjL-A" contract="_tCMblEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4uU0cyEe2rgspmIFjL-A" name="compare" specification="_tEik8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4uVEcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG4uVUcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG4uVkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tEik8EcyEe2rgspmIFjL-A" name="compare" method="_tG4uU0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEik8UcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEik8kcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEik80cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szLIIEcyEe2rgspmIFjL-A" name="Description">
              <ownedComment xmi:id="_tHi1pEcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tEjMAkcyEe2rgspmIFjL-A" general="_tB3rcEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFsbgEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFtCkEcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4uV0cyEe2rgspmIFjL-A" name="Description" specification="_szMWQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4uWEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4uWUcyEe2rgspmIFjL-A" name="Description" specification="_szM9UEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4uWkcyEe2rgspmIFjL-A" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG4uW0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4uXEcyEe2rgspmIFjL-A" name="toString" specification="_szM9VUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4uXUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szMWQEcyEe2rgspmIFjL-A" name="Description" method="_tG4uV0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szMWQUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szMWQkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_szMWQ0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szM9UEcyEe2rgspmIFjL-A" name="Description" method="_tG4uWUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szM9UkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szM9U0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_szM9UUcyEe2rgspmIFjL-A" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szM9VEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szM9VUcyEe2rgspmIFjL-A" name="toString" method="_tG4uXEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szNkYEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szOygEcyEe2rgspmIFjL-A" name="Edge">
              <generalization xmi:id="_tCPe5EcyEe2rgspmIFjL-A" general="_s2yc0EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFtCkUcyEe2rgspmIFjL-A" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFtCkkcyEe2rgspmIFjL-A" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFtCk0cyEe2rgspmIFjL-A" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFtpoEcyEe2rgspmIFjL-A" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFtpoUcyEe2rgspmIFjL-A" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFuQsEcyEe2rgspmIFjL-A" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFuQsUcyEe2rgspmIFjL-A" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFuQskcyEe2rgspmIFjL-A" name="state" type="_szQnsEcyEe2rgspmIFjL-A" association="_tHjcsEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFu3wEcyEe2rgspmIFjL-A" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_tEkaIUcyEe2rgspmIFjL-A" client="_szOygEcyEe2rgspmIFjL-A" supplier="_tEStUkcyEe2rgspmIFjL-A" contract="_tEStUkcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG4uXkcyEe2rgspmIFjL-A" name="Edge" specification="_szROw0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG4uX0cyEe2rgspmIFjL-A" type="_szOygEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG5VYEcyEe2rgspmIFjL-A" name="Edge" specification="_szR100cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG5VYUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VYkcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VY0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VZEcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VZUcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VZkcyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VZ0cyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VaEcyEe2rgspmIFjL-A" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG5VaUcyEe2rgspmIFjL-A" type="_szOygEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG5VakcyEe2rgspmIFjL-A" name="compareTo" specification="_tCO30EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG5Va0cyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG5VbEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG5VbUcyEe2rgspmIFjL-A" name="toString" specification="_szTD8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG5VbkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG5Vb0cyEe2rgspmIFjL-A" name="print" specification="_szTrA0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG5VcEcyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG5VcUcyEe2rgspmIFjL-A" name="print" specification="_szUSE0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szROw0cyEe2rgspmIFjL-A" name="Edge" visibility="package" method="_tG4uXkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szR10EcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szR10UcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_szR10kcyEe2rgspmIFjL-A" type="_szOygEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szR100cyEe2rgspmIFjL-A" name="Edge" visibility="package" method="_tG5VYEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szSc50cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szSc6EcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_szR11EcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc4EcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc4UcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc4kcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc40cyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc5EcyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc5UcyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc5kcyEe2rgspmIFjL-A" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szSc6UcyEe2rgspmIFjL-A" type="_szOygEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szTD8EcyEe2rgspmIFjL-A" name="toString" method="_tG5VbUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szTD8UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szTrA0cyEe2rgspmIFjL-A" name="print" method="_tG5Vb0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szTrBEcyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szUSE0cyEe2rgspmIFjL-A" name="print" method="_tG5VcUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_tCO30EcyEe2rgspmIFjL-A" name="compareTo" method="_tG5VakcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCO30UcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCPe4EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_szQnsEcyEe2rgspmIFjL-A" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_szROwEcyEe2rgspmIFjL-A" name="RELEASED"/>
                <ownedLiteral xmi:id="_szROwUcyEe2rgspmIFjL-A" name="EXECUTING"/>
                <ownedLiteral xmi:id="_szROwkcyEe2rgspmIFjL-A" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szZKkEcyEe2rgspmIFjL-A" name="FileManager">
              <ownedComment xmi:id="_tHjcskcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tFve0EcyEe2rgspmIFjL-A" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFwF4EcyEe2rgspmIFjL-A" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFwF4UcyEe2rgspmIFjL-A" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFwF4kcyEe2rgspmIFjL-A" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG5VckcyEe2rgspmIFjL-A" name="FileManager" specification="_szaYsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG5Vc0cyEe2rgspmIFjL-A" type="_szZKkEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class	&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58cEcyEe2rgspmIFjL-A" name="FileManager" specification="_sza_wEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58cUcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58ckcyEe2rgspmIFjL-A" type="_szZKkEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58c0cyEe2rgspmIFjL-A" name="getDocumentsDirectory" specification="_sza_xUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58dEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
		String documentsDirectory;&#xD;
		if ( OSValidator.isWindows() ) {&#xD;
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
		} else if ( OSValidator.isMac() ) {&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;&#xD;
		} else { // for all other Unix systems&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)&#xD;
		}&#xD;
		return documentsDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58dUcyEe2rgspmIFjL-A" name="getCurrentDirectory" specification="_szbm0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58dkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58d0cyEe2rgspmIFjL-A" name="createFile" specification="_szcN4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58eEcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58eUcyEe2rgspmIFjL-A" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58ekcyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58e0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to&#xD;
		 * this routine really just creates the file name ;-)&#xD;
		 */&#xD;
		Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix&#xD;
		}&#xD;
		/* fileString has no suffix at this point (removed if it existed)&#xD;
		 * Now add file name extension and suffix&#xD;
		 */&#xD;
		fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58fEcyEe2rgspmIFjL-A" name="createFile" specification="_szcN5UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58fUcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58fkcyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58f0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix&#xD;
		}&#xD;
		// fileString has no suffix at this point (removed if it existed)&#xD;
		// Now add file name extension and suffix&#xD;
		fileString = fileString + suffix;&#xD;
		// we don't actually create the file...it will be created when written to&#xD;
		// this routine really just creates the file name ;-)&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58gEcyEe2rgspmIFjL-A" name="createDirectory" specification="_szc08UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58gUcyEe2rgspmIFjL-A" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58gkcyEe2rgspmIFjL-A" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58g0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; &#xD;
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided&#xD;
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.&#xD;
		} else { // subDirectory has relative path, so just append&#xD;
			newDirectory = directory + File.separator + subDirectory;&#xD;
		}&#xD;
		try {&#xD;
			Path path = Paths.get(newDirectory);&#xD;
			Files.createDirectories(path);&#xD;
			if (verbose) {&#xD;
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
			newDirectory = directory;  // in case of error, just use the initial directory&#xD;
		}&#xD;
		return newDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58hEcyEe2rgspmIFjL-A" name="writeFile" specification="_szdcAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58hUcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58hkcyEe2rgspmIFjL-A" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);&#xD;
		Path fileName = Path.of(file);&#xD;
		try {&#xD;
			Files.writeString(fileName, tag.sign(fileContents));&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG58h0cyEe2rgspmIFjL-A" name="readFile" specification="_szdcA0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG58iEcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG58iUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
		Path fileName = Path.of(file);&#xD;
		String contents = null;&#xD;
		try {&#xD;
			contents = Files.readString(fileName);&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
		return contents;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szaYsEcyEe2rgspmIFjL-A" name="FileManager" method="_tG5VckcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szaYsUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szaYskcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHkDwEcyEe2rgspmIFjL-A">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_szaYs0cyEe2rgspmIFjL-A" type="_szZKkEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sza_wEcyEe2rgspmIFjL-A" name="FileManager" method="_tG58cEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_sza_wkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sza_w0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sza_wUcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sza_xEcyEe2rgspmIFjL-A" type="_szZKkEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sza_xUcyEe2rgspmIFjL-A" name="getDocumentsDirectory" method="_tG58c0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sza_xkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szbm0EcyEe2rgspmIFjL-A" name="getCurrentDirectory" method="_tG58dUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szbm0UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szcN4EcyEe2rgspmIFjL-A" name="createFile" method="_tG58d0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDwUcyEe2rgspmIFjL-A">
                  <body>Build the name extension used for all files created by this tool.&#xD;
	 * The nameExtension will be added to the base input file name&#xD;
	 * so that all of the output files can be associated with the input file&#xD;
	 * The file naming pattern is:&#xD;
	 * baseFileNameFileType-NonDefaultParameterList&#xD;
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray&#xD;
	 * Default parameters are not identified in the NameExtension&#xD;
	 * All parameters used to create the file, should be listed near the top&#xD;
	 * of the file in the Parameter Section, followed by the file contents.&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_szcN4UcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szcN4kcyEe2rgspmIFjL-A" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szcN40cyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szcN5EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szcN5UcyEe2rgspmIFjL-A" name="createFile" method="_tG58fEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szcN5kcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szcN50cyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szc08EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szc08UcyEe2rgspmIFjL-A" name="createDirectory" method="_tG58gEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szc08kcyEe2rgspmIFjL-A" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szc080cyEe2rgspmIFjL-A" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szc09EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szdcAEcyEe2rgspmIFjL-A" name="writeFile" method="_tG58hEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szdcAUcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szdcAkcyEe2rgspmIFjL-A" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szdcA0cyEe2rgspmIFjL-A" name="readFile" method="_tG58h0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szdcBEcyEe2rgspmIFjL-A" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szdcBUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szeDEEcyEe2rgspmIFjL-A" name="Flow">
              <ownedComment xmi:id="_tHkDwkcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCYBw0cyEe2rgspmIFjL-A" general="_s2yc0EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFws8EcyEe2rgspmIFjL-A" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFws8UcyEe2rgspmIFjL-A" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFws8kcyEe2rgspmIFjL-A" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFws80cyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFws9EcyEe2rgspmIFjL-A" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFxUAEcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFxUAUcyEe2rgspmIFjL-A" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFxUAkcyEe2rgspmIFjL-A" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFxUA0cyEe2rgspmIFjL-A" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFxUBEcyEe2rgspmIFjL-A" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFxUBUcyEe2rgspmIFjL-A" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFxUBkcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFxUB0cyEe2rgspmIFjL-A" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tFxUCEcyEe2rgspmIFjL-A" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFx7EUcyEe2rgspmIFjL-A" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFx7E0cyEe2rgspmIFjL-A" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tFyiIUcyEe2rgspmIFjL-A" name="nodes" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tH-6gUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFzJMEcyEe2rgspmIFjL-A" name="linkTxAndTotalCost" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tH-6hEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tFzJM0cyEe2rgspmIFjL-A" name="edges" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tH_hkEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF0XUEcyEe2rgspmIFjL-A" name="nodePredecessor" visibility="package" type="_s0LNsEcyEe2rgspmIFjL-A" association="_tH_hk0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF0XUkcyEe2rgspmIFjL-A" name="edgePredecessor" visibility="package" type="_szOygEcyEe2rgspmIFjL-A" association="_tH_hlkcyEe2rgspmIFjL-A"/>
              <interfaceRealization xmi:id="_tEm2YEcyEe2rgspmIFjL-A" client="_szeDEEcyEe2rgspmIFjL-A" supplier="_tEStUkcyEe2rgspmIFjL-A" contract="_tEStUkcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6jgEcyEe2rgspmIFjL-A" name="Flow" specification="_szgfUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jgUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG6jgkcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG6jg0cyEe2rgspmIFjL-A" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG6jhEcyEe2rgspmIFjL-A" type="_szeDEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6jhUcyEe2rgspmIFjL-A" name="Flow" specification="_szhGY0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jhkcyEe2rgspmIFjL-A" type="_szeDEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6jh0cyEe2rgspmIFjL-A" name="getInitialPriority" specification="_szhtc0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jiEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6jiUcyEe2rgspmIFjL-A" name="getIndex" specification="_sziUgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jikcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6ji0cyEe2rgspmIFjL-A" name="getNumTxPerLink" specification="_szi7kEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jjEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6jjUcyEe2rgspmIFjL-A" name="getNodes" specification="_szi7kkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jjkcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG6jj0cyEe2rgspmIFjL-A" name="getEdges" specification="_szkJsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG6jkEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KkEcyEe2rgspmIFjL-A" name="addEdge" specification="_tCWzoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7KkUcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KkkcyEe2rgspmIFjL-A" name="addNode" specification="_tCWzokcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7Kk0cyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KlEcyEe2rgspmIFjL-A" name="getLinkTxAndTotalCost" specification="_szkwwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7KlUcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KlkcyEe2rgspmIFjL-A" name="setInitialPriority" specification="_szlX0UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7Kl0cyEe2rgspmIFjL-A" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KmEcyEe2rgspmIFjL-A" name="setIndex" specification="_szl-4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7KmUcyEe2rgspmIFjL-A" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KmkcyEe2rgspmIFjL-A" name="setNumTxPerLink" specification="_szl-4kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7Km0cyEe2rgspmIFjL-A" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KnEcyEe2rgspmIFjL-A" name="setNodes" specification="_tEpSoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7KnUcyEe2rgspmIFjL-A" name="nodes" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KnkcyEe2rgspmIFjL-A" name="setLinkTxAndTotalCost" specification="_tEp5sEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7Kn0cyEe2rgspmIFjL-A" name="linkTxAndTotalCost" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7KoEcyEe2rgspmIFjL-A" name="compareTo" specification="_tCXasEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7KoUcyEe2rgspmIFjL-A" name="flow" type="_szeDEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG7KokcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7xoEcyEe2rgspmIFjL-A" name="toString" specification="_szml8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7xoUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szgfUEcyEe2rgspmIFjL-A" name="Flow" visibility="package" method="_tG6jgEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szhGYEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szhGYUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHkDw0cyEe2rgspmIFjL-A">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_szgfUUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szgfUkcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szgfU0cyEe2rgspmIFjL-A" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szhGYkcyEe2rgspmIFjL-A" type="_szeDEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szhGY0cyEe2rgspmIFjL-A" name="Flow" visibility="package" method="_tG6jhUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_szhtcEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_szhtcUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHkDxEcyEe2rgspmIFjL-A">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_szhtckcyEe2rgspmIFjL-A" type="_szeDEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szhtc0cyEe2rgspmIFjL-A" name="getInitialPriority" method="_tG6jh0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDxUcyEe2rgspmIFjL-A">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_szhtdEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sziUgEcyEe2rgspmIFjL-A" name="getIndex" method="_tG6jiUcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDxkcyEe2rgspmIFjL-A">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_sziUgUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szi7kEcyEe2rgspmIFjL-A" name="getNumTxPerLink" method="_tG6ji0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDx0cyEe2rgspmIFjL-A">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_szi7kUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szi7kkcyEe2rgspmIFjL-A" name="getNodes" method="_tG6jjUcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDyEcyEe2rgspmIFjL-A">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEorkEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szkJsEcyEe2rgspmIFjL-A" name="getEdges" method="_tG6jj0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDyUcyEe2rgspmIFjL-A">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEorkUcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szkwwEcyEe2rgspmIFjL-A" name="getLinkTxAndTotalCost" method="_tG7KlEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDzEcyEe2rgspmIFjL-A">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEorkkcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szlX0UcyEe2rgspmIFjL-A" name="setInitialPriority" method="_tG7KlkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDzUcyEe2rgspmIFjL-A">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_szlX0kcyEe2rgspmIFjL-A" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szl-4EcyEe2rgspmIFjL-A" name="setIndex" method="_tG7KmEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDzkcyEe2rgspmIFjL-A">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_szl-4UcyEe2rgspmIFjL-A" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szl-4kcyEe2rgspmIFjL-A" name="setNumTxPerLink" method="_tG7KmkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDz0cyEe2rgspmIFjL-A">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_szl-40cyEe2rgspmIFjL-A" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szml8EcyEe2rgspmIFjL-A" name="toString" method="_tG7xoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szml8UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCWzoEcyEe2rgspmIFjL-A" name="addEdge" method="_tG7KkEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDykcyEe2rgspmIFjL-A">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tCWzoUcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCWzokcyEe2rgspmIFjL-A" name="addNode" method="_tG7KkkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkDy0cyEe2rgspmIFjL-A">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tCWzo0cyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCXasEcyEe2rgspmIFjL-A" name="compareTo" method="_tG7KoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCXasUcyEe2rgspmIFjL-A" name="flow" type="_szeDEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCXaskcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tEpSoEcyEe2rgspmIFjL-A" name="setNodes" method="_tG7KnEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkD0EcyEe2rgspmIFjL-A">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEpSoUcyEe2rgspmIFjL-A" name="nodes" type="_tB3rcEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tEp5sEcyEe2rgspmIFjL-A" name="setLinkTxAndTotalCost" method="_tG7KnkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkD0UcyEe2rgspmIFjL-A">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_tEp5sUcyEe2rgspmIFjL-A" name="linkTxAndTotalCost" type="_tB3rcEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szrecEcyEe2rgspmIFjL-A" name="FlowMap">
              <ownedComment xmi:id="_tHkD0kcyEe2rgspmIFjL-A">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCaeAEcyEe2rgspmIFjL-A" general="_syJ0cEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF0-YEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF1lcEcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_szsFgEcyEe2rgspmIFjL-A" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_tHkq0EcyEe2rgspmIFjL-A">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCbFEUcyEe2rgspmIFjL-A" general="_syJ0cEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF1lcUcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF1lckcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sztToEcyEe2rgspmIFjL-A" name="GraphViz">
              <ownedComment xmi:id="_tHkq0UcyEe2rgspmIFjL-A">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCc6SEcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF1lc0cyEe2rgspmIFjL-A" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF1ldEcyEe2rgspmIFjL-A" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF2MgEcyEe2rgspmIFjL-A" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF2MgUcyEe2rgspmIFjL-A" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF2MgkcyEe2rgspmIFjL-A" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF2MhEcyEe2rgspmIFjL-A" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF2zkEcyEe2rgspmIFjL-A" name="wfm" visibility="package" type="_szZKkEcyEe2rgspmIFjL-A" association="_tIAIoUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF2zkkcyEe2rgspmIFjL-A" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF2zlEcyEe2rgspmIFjL-A" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF3aoUcyEe2rgspmIFjL-A" name="gv" visibility="package" type="_sztToEcyEe2rgspmIFjL-A" association="_tIAIpEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7xokcyEe2rgspmIFjL-A" name="GraphViz" specification="_tCcTMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7xo0cyEe2rgspmIFjL-A" name="wfm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG7xpEcyEe2rgspmIFjL-A" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG7xpUcyEe2rgspmIFjL-A" type="_sztToEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7xpkcyEe2rgspmIFjL-A" name="GraphViz" specification="_tCc6QEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7xp0cyEe2rgspmIFjL-A" name="wfm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG7xqEcyEe2rgspmIFjL-A" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG7xqUcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG7xqkcyEe2rgspmIFjL-A" type="_sztToEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG7xq0cyEe2rgspmIFjL-A" name="visualization" specification="_szvI0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG7xrEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8YsEcyEe2rgspmIFjL-A" name="initializeGraphVizContent" specification="_szwW8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8YsUcyEe2rgspmIFjL-A" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8YskcyEe2rgspmIFjL-A" name="finalizeGraphVizContent" specification="_szwW8kcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8Ys0cyEe2rgspmIFjL-A" name="getGraphVizContent" specification="_szwW80cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8YtEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8YtUcyEe2rgspmIFjL-A" name="createGraphVizContent" specification="_szw-AEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8YtkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8Yt0cyEe2rgspmIFjL-A" name="addFlowToGraphViz" specification="_szw-AkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8YuEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8YuUcyEe2rgspmIFjL-A" name="addSrcNodeToGraphViz" specification="_szxlEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8YukcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8Yu0cyEe2rgspmIFjL-A" name="addSnkNodeToGraphViz" specification="_szxlEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8YvEcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8YvUcyEe2rgspmIFjL-A" name="finalizeCurrentFlowInGraphViz" specification="_szxlFEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8YvkcyEe2rgspmIFjL-A" name="addNodeName" specification="_szyMIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8Yv0cyEe2rgspmIFjL-A" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG8YwEcyEe2rgspmIFjL-A" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_szvI0EcyEe2rgspmIFjL-A" name="visualization" method="_tG7xq0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCc6R0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_szwW8EcyEe2rgspmIFjL-A" name="initializeGraphVizContent" method="_tG8YsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szwW8UcyEe2rgspmIFjL-A" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szwW8kcyEe2rgspmIFjL-A" name="finalizeGraphVizContent" method="_tG8YskcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_szwW80cyEe2rgspmIFjL-A" name="getGraphVizContent" method="_tG8Ys0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHkq0kcyEe2rgspmIFjL-A">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_szwW9EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szw-AEcyEe2rgspmIFjL-A" name="createGraphVizContent" method="_tG8YtUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szw-AUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szw-AkcyEe2rgspmIFjL-A" name="addFlowToGraphViz" method="_tG8Yt0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szw-A0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szxlEEcyEe2rgspmIFjL-A" name="addSrcNodeToGraphViz" method="_tG8YuUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szxlEUcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szxlEkcyEe2rgspmIFjL-A" name="addSnkNodeToGraphViz" method="_tG8Yu0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szxlE0cyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_szxlFEcyEe2rgspmIFjL-A" name="finalizeCurrentFlowInGraphViz" method="_tG8YvUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_szyMIEcyEe2rgspmIFjL-A" name="addNodeName" visibility="private" method="_tG8YvkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_szyMIUcyEe2rgspmIFjL-A" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_szyMIkcyEe2rgspmIFjL-A" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCcTMEcyEe2rgspmIFjL-A" name="GraphViz" visibility="package" method="_tG7xokcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCcTM0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCcTNEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCcTMUcyEe2rgspmIFjL-A" name="wfm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCcTMkcyEe2rgspmIFjL-A" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCcTNUcyEe2rgspmIFjL-A" type="_sztToEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCc6QEcyEe2rgspmIFjL-A" name="GraphViz" visibility="package" method="_tG7xpkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCc6REcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCc6RUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCc6QUcyEe2rgspmIFjL-A" name="wfm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCc6QkcyEe2rgspmIFjL-A" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCc6Q0cyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCc6RkcyEe2rgspmIFjL-A" type="_sztToEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sz1PcEcyEe2rgspmIFjL-A" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_tHkq00cyEe2rgspmIFjL-A">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_tEsV8EcyEe2rgspmIFjL-A" general="_tCgkoUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF4BsEcyEe2rgspmIFjL-A" name="gv" visibility="package" type="_sztToEcyEe2rgspmIFjL-A" association="_tIAvsUcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8_wEcyEe2rgspmIFjL-A" name="GraphVizListener" specification="_tChywUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8_wUcyEe2rgspmIFjL-A" name="gv" type="_sztToEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG8_wkcyEe2rgspmIFjL-A" type="_sz1PcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8_w0cyEe2rgspmIFjL-A" name="buildGraphViz" specification="_tCiZ0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8_xEcyEe2rgspmIFjL-A" name="gv" type="_sztToEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8_xUcyEe2rgspmIFjL-A" name="enterWarpName" specification="_tCiZ1EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8_xkcyEe2rgspmIFjL-A" name="ctx" type="_tCiZ0kcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8_x0cyEe2rgspmIFjL-A" name="exitWarp" specification="_tCjA5EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8_yEcyEe2rgspmIFjL-A" name="ctx" type="_tCjA4kcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG8_yUcyEe2rgspmIFjL-A" name="enterFlowName" specification="_tCkPAUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG8_ykcyEe2rgspmIFjL-A" name="ctx" type="_tCjn80cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m0EcyEe2rgspmIFjL-A" name="exitSrcNode" specification="_tCldIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m0UcyEe2rgspmIFjL-A" name="ctx" type="_tCk2EkcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m0kcyEe2rgspmIFjL-A" name="exitSnkNode" specification="_tCmEMkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m00cyEe2rgspmIFjL-A" name="ctx" type="_tCmEMEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m1EcyEe2rgspmIFjL-A" name="exitFlow" specification="_tCnSUUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m1UcyEe2rgspmIFjL-A" name="ctx" type="_tCmrQ0cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tChywUcyEe2rgspmIFjL-A" name="GraphVizListener" visibility="private" method="_tG8_wEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tChyw0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tChyxEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tChywkcyEe2rgspmIFjL-A" name="gv" type="_sztToEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tChyxUcyEe2rgspmIFjL-A" type="_sz1PcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCiZ0EcyEe2rgspmIFjL-A" name="buildGraphViz" isStatic="true" method="_tG8_w0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCiZ0UcyEe2rgspmIFjL-A" name="gv" type="_sztToEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCiZ1EcyEe2rgspmIFjL-A" name="enterWarpName" method="_tG8_xUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCiZ1UcyEe2rgspmIFjL-A" name="ctx" type="_tCiZ0kcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCjA5EcyEe2rgspmIFjL-A" name="exitWarp" method="_tG8_x0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCjA5UcyEe2rgspmIFjL-A" name="ctx" type="_tCjA4kcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCkPAUcyEe2rgspmIFjL-A" name="enterFlowName" method="_tG8_yUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCkPAkcyEe2rgspmIFjL-A" name="ctx" type="_tCjn80cyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCldIEcyEe2rgspmIFjL-A" name="exitSrcNode" method="_tG9m0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCldIUcyEe2rgspmIFjL-A" name="ctx" type="_tCk2EkcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCmEMkcyEe2rgspmIFjL-A" name="exitSnkNode" method="_tG9m0kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCmEM0cyEe2rgspmIFjL-A" name="ctx" type="_tCmEMEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCnSUUcyEe2rgspmIFjL-A" name="exitFlow" method="_tG9m1EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCnSUkcyEe2rgspmIFjL-A" name="ctx" type="_tCmrQ0cyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sz4SwEcyEe2rgspmIFjL-A" name="InputGraphFile">
              <ownedComment xmi:id="_tHkq1EcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tF4owEcyEe2rgspmIFjL-A" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF4owUcyEe2rgspmIFjL-A" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF4owkcyEe2rgspmIFjL-A" name="wfm" visibility="private" type="_szZKkEcyEe2rgspmIFjL-A" association="_tIAvtEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF5P0UcyEe2rgspmIFjL-A" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF5P0kcyEe2rgspmIFjL-A" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF524EcyEe2rgspmIFjL-A" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF524UcyEe2rgspmIFjL-A" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m1kcyEe2rgspmIFjL-A" name="InputGraphFile" specification="_tCqVoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m10cyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG9m2EcyEe2rgspmIFjL-A" type="_sz4SwEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m2UcyEe2rgspmIFjL-A" name="InputGraphFile" specification="_tCqVpUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m2kcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG9m20cyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG9m3EcyEe2rgspmIFjL-A" type="_sz4SwEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m3UcyEe2rgspmIFjL-A" name="setGraphFileName" specification="_sz6H8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m3kcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m30cyEe2rgspmIFjL-A" name="verifyGraphFileName" specification="_sz6H8kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m4EcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG9m4UcyEe2rgspmIFjL-A" name="readGraphFile" specification="_sz6vAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG9m4kcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG9m40cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-N4EcyEe2rgspmIFjL-A" name="getInputGraphFileName" specification="_sz6vA0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-N4UcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-N4kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-N40cyEe2rgspmIFjL-A" name="readGraphFileContents" specification="_sz7WEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-N5EcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-N5UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-N5kcyEe2rgspmIFjL-A" name="printVerboseMessage" specification="_sz79IUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-N50cyEe2rgspmIFjL-A" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-N6EcyEe2rgspmIFjL-A" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-N6UcyEe2rgspmIFjL-A" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sz6H8EcyEe2rgspmIFjL-A" name="setGraphFileName" visibility="private" method="_tG9m3UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sz6H8UcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sz6H8kcyEe2rgspmIFjL-A" name="verifyGraphFileName" visibility="private" method="_tG9m30cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sz6H80cyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sz6vAEcyEe2rgspmIFjL-A" name="readGraphFile" method="_tG9m4UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sz6vAUcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz6vAkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sz6vA0cyEe2rgspmIFjL-A" name="getInputGraphFileName" visibility="private" method="_tG-N4EcyEe2rgspmIFjL-A" raisedException="_tEs9AEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sz7WEEcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz7WEUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sz7WEkcyEe2rgspmIFjL-A" name="readGraphFileContents" visibility="private" method="_tG-N40cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sz7WE0cyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz79IEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sz79IUcyEe2rgspmIFjL-A" name="printVerboseMessage" visibility="private" method="_tG-N5kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_sz79IkcyEe2rgspmIFjL-A" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz79I0cyEe2rgspmIFjL-A" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz79JEcyEe2rgspmIFjL-A" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCqVoEcyEe2rgspmIFjL-A" name="InputGraphFile" method="_tG9m1kcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCqVokcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCqVo0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCqVoUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCqVpEcyEe2rgspmIFjL-A" type="_sz4SwEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCqVpUcyEe2rgspmIFjL-A" name="InputGraphFile" method="_tG9m2UcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCqVqEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCqVqUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCqVpkcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCqVp0cyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCqVqkcyEe2rgspmIFjL-A" type="_sz4SwEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sz9LQEcyEe2rgspmIFjL-A" name="InstructionTimeSlot">
              <generalization xmi:id="_tCrjwEcyEe2rgspmIFjL-A" general="_s1BiQEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF6d8EcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF6d8UcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-N6kcyEe2rgspmIFjL-A" name="InstructionTimeSlot" specification="_sz9yUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-N60cyEe2rgspmIFjL-A" type="_sz9LQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-N7EcyEe2rgspmIFjL-A" name="InstructionTimeSlot" specification="_sz-ZYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-N7UcyEe2rgspmIFjL-A" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-N7kcyEe2rgspmIFjL-A" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-N70cyEe2rgspmIFjL-A" type="_sz9LQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-08EcyEe2rgspmIFjL-A" name="InstructionTimeSlot" specification="_sz_ngEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-08UcyEe2rgspmIFjL-A" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tG-08kcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-080cyEe2rgspmIFjL-A" type="_sz9LQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sz9yUEcyEe2rgspmIFjL-A" name="InstructionTimeSlot" method="_tG-N6kcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_sz9yUUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sz9yUkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sz9yU0cyEe2rgspmIFjL-A" type="_sz9LQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sz-ZYEcyEe2rgspmIFjL-A" name="InstructionTimeSlot" visibility="package" method="_tG-N7EcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_sz_AcEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sz_AcUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sz-ZYUcyEe2rgspmIFjL-A" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz-ZYkcyEe2rgspmIFjL-A" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz_AckcyEe2rgspmIFjL-A" type="_sz9LQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sz_ngEcyEe2rgspmIFjL-A" name="InstructionTimeSlot" visibility="package" method="_tG-08EcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_sz_ngkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sz_ng0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sz_ngUcyEe2rgspmIFjL-A" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sz_nhUcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sz_nhEcyEe2rgspmIFjL-A" type="_sz9LQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0BcsEcyEe2rgspmIFjL-A" name="LatencyAnalysis">
              <ownedComment xmi:id="_tHkq1UcyEe2rgspmIFjL-A">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tF7FAEcyEe2rgspmIFjL-A" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF7FAUcyEe2rgspmIFjL-A" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF7FA0cyEe2rgspmIFjL-A" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF7sEUcyEe2rgspmIFjL-A" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF7sEkcyEe2rgspmIFjL-A" name="latencyReport" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIBWwUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF8TIEcyEe2rgspmIFjL-A" name="program" visibility="private" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tIBWxEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF8TIkcyEe2rgspmIFjL-A" name="workload" visibility="private" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tIB90EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF8TJEcyEe2rgspmIFjL-A" name="programTable" visibility="private" type="_s0rkAEcyEe2rgspmIFjL-A" association="_tIB900cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF86MUcyEe2rgspmIFjL-A" name="nodeIndex" visibility="private" type="_tB2dUEcyEe2rgspmIFjL-A" association="_tIB91kcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-09EcyEe2rgspmIFjL-A" name="LatencyAnalysis" specification="_tCsx4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-09UcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG-09kcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-090cyEe2rgspmIFjL-A" name="LatencyAnalysis" specification="_tCtY8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-0-EcyEe2rgspmIFjL-A" name="program" type="_s3IbEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG-0-UcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-0-kcyEe2rgspmIFjL-A" name="latencyReport" specification="_s0Cq0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-0-0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG-0_EcyEe2rgspmIFjL-A" name="numMatchingTx" specification="_s0DR4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG-0_UcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-0_kcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-0_0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-1AEcyEe2rgspmIFjL-A" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG-1AUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0Cq0EcyEe2rgspmIFjL-A" name="latencyReport" method="_tG-0-kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCtY9UcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0DR4EcyEe2rgspmIFjL-A" name="numMatchingTx" method="_tG-0_EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0DR4UcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0D48EcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0D48UcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0D48kcyEe2rgspmIFjL-A" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0D480cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCsx4EcyEe2rgspmIFjL-A" name="LatencyAnalysis" visibility="package" method="_tG-09EcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCsx4kcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCsx40cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCsx4UcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCsx5EcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tCtY8EcyEe2rgspmIFjL-A" name="LatencyAnalysis" visibility="package" method="_tG-090cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCtY8kcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCtY80cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCtY8UcyEe2rgspmIFjL-A" name="program" type="_s3IbEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCtY9EcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0FuIEcyEe2rgspmIFjL-A" name="LatencyVisualization">
              <ownedComment xmi:id="_tHkq1kcyEe2rgspmIFjL-A">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCunFUcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF9hQkcyEe2rgspmIFjL-A" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF-IUEcyEe2rgspmIFjL-A" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF-IUUcyEe2rgspmIFjL-A" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF-IUkcyEe2rgspmIFjL-A" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF-IU0cyEe2rgspmIFjL-A" name="warp" visibility="private" type="_s1_LkEcyEe2rgspmIFjL-A" association="_tICk4UcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF-vYEcyEe2rgspmIFjL-A" name="la" visibility="private" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tICk5EcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG_cAEcyEe2rgspmIFjL-A" name="LatencyVisualization" specification="_tCunEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG_cAUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG_cAkcyEe2rgspmIFjL-A" type="_s0FuIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tCunEEcyEe2rgspmIFjL-A" name="LatencyVisualization" visibility="package" method="_tG_cAEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCunEkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCunE0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCunEUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCunFEcyEe2rgspmIFjL-A" type="_s0FuIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0G8QEcyEe2rgspmIFjL-A" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_tEuyMEcyEe2rgspmIFjL-A" client="_s0G8QEcyEe2rgspmIFjL-A" supplier="_tCMblEcyEe2rgspmIFjL-A" contract="_tCMblEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG_cA0cyEe2rgspmIFjL-A" name="compare" specification="_tEwAUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG_cBEcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG_cBUcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG_cBkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tEwAUEcyEe2rgspmIFjL-A" name="compare" method="_tG_cA0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEwAUUcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEwAUkcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEwAU0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0IxcEcyEe2rgspmIFjL-A" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_tEwnY0cyEe2rgspmIFjL-A" client="_s0IxcEcyEe2rgspmIFjL-A" supplier="_tCMblEcyEe2rgspmIFjL-A" contract="_tCMblEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG_cB0cyEe2rgspmIFjL-A" name="compare" specification="_tEx1gEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG_cCEcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG_cCUcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG_cCkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tEx1gEcyEe2rgspmIFjL-A" name="compare" method="_tG_cB0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tEx1gUcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEx1gkcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tEx1g0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0LNsEcyEe2rgspmIFjL-A" name="Node">
              <generalization xmi:id="_tCxDUEcyEe2rgspmIFjL-A" general="_s2yc0EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF-vYkcyEe2rgspmIFjL-A" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tF-vY0cyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF_WcEcyEe2rgspmIFjL-A" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF_WcUcyEe2rgspmIFjL-A" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tF_WckcyEe2rgspmIFjL-A" name="edges" type="_tB3rcEcyEe2rgspmIFjL-A" isReadOnly="true" association="_tIDL8UcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF_9gUcyEe2rgspmIFjL-A" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tF_9gkcyEe2rgspmIFjL-A" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_tEyckUcyEe2rgspmIFjL-A" client="_s0LNsEcyEe2rgspmIFjL-A" supplier="_tEStUkcyEe2rgspmIFjL-A" contract="_tEStUkcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG_cC0cyEe2rgspmIFjL-A" name="Node" specification="_s0Mb0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG_cDEcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG_cDUcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG_cDkcyEe2rgspmIFjL-A" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tG_cD0cyEe2rgspmIFjL-A" type="_s0LNsEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tG_cEEcyEe2rgspmIFjL-A" name="compareTo" specification="_tCv1MEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tG_cEUcyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tG_cEkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADEEcyEe2rgspmIFjL-A" name="toString" specification="_s0Np8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHADEUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADEkcyEe2rgspmIFjL-A" name="addEdge" specification="_tCwcREcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHADE0cyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADFEcyEe2rgspmIFjL-A" name="addConflict" specification="_s0ORAkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHADFUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADFkcyEe2rgspmIFjL-A" name="numEdges" specification="_s0O4EEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHADF0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADGEcyEe2rgspmIFjL-A" name="print" specification="_s0O4EkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHADGUcyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADGkcyEe2rgspmIFjL-A" name="print" specification="_s0PfI0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0Mb0EcyEe2rgspmIFjL-A" name="Node" visibility="package" method="_tG_cC0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s0NC4kcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s0NC40cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s0Mb0UcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0NC4EcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0NC4UcyEe2rgspmIFjL-A" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0NC5EcyEe2rgspmIFjL-A" type="_s0LNsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0Np8EcyEe2rgspmIFjL-A" name="toString" method="_tHADEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0Np8UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0ORAkcyEe2rgspmIFjL-A" name="addConflict" method="_tHADFEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0ORA0cyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0O4EEcyEe2rgspmIFjL-A" name="numEdges" method="_tHADFkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0O4EUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0O4EkcyEe2rgspmIFjL-A" name="print" method="_tHADGEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0O4E0cyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0PfI0cyEe2rgspmIFjL-A" name="print" method="_tHADGkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_tCv1MEcyEe2rgspmIFjL-A" name="compareTo" method="_tG_cEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCv1MUcyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCwcQEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tCwcREcyEe2rgspmIFjL-A" name="addEdge" method="_tHADEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCwcRUcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0R7YEcyEe2rgspmIFjL-A" name="NodeMap">
              <ownedComment xmi:id="_tHlR4EcyEe2rgspmIFjL-A">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCxqYEcyEe2rgspmIFjL-A" general="_syJ0cEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tF_9g0cyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGAkkEcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0SicEcyEe2rgspmIFjL-A" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_tHlR4UcyEe2rgspmIFjL-A">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tCyRdkcyEe2rgspmIFjL-A" general="_s1KsMEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHADG0cyEe2rgspmIFjL-A" name="NonPreemptiveSchedule" specification="_tCyRcEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHADHEcyEe2rgspmIFjL-A" name="poset" type="_s0Z3MEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHADHUcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHADHkcyEe2rgspmIFjL-A" type="_s0SicEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tCyRcEcyEe2rgspmIFjL-A" name="NonPreemptiveSchedule" visibility="package" method="_tHADG0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tCyRc0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tCyRdEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tCyRcUcyEe2rgspmIFjL-A" name="poset" type="_s0Z3MEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tCyRckcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tCyRdUcyEe2rgspmIFjL-A" type="_s0SicEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0TwkEcyEe2rgspmIFjL-A" name="NotImplentedVisualization">
              <generalization xmi:id="_tCyReEcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGAkkUcyEe2rgspmIFjL-A" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGAkkkcyEe2rgspmIFjL-A" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGAkk0cyEe2rgspmIFjL-A" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGAklEcyEe2rgspmIFjL-A" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGAklUcyEe2rgspmIFjL-A" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGBLoEcyEe2rgspmIFjL-A" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqIEcyEe2rgspmIFjL-A" name="NotImplentedVisualization" specification="_s0U-sEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqIUcyEe2rgspmIFjL-A" type="_s0TwkEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqIkcyEe2rgspmIFjL-A" name="NotImplentedVisualization" specification="_s0VlwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqI0cyEe2rgspmIFjL-A" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHAqJEcyEe2rgspmIFjL-A" type="_s0TwkEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqJUcyEe2rgspmIFjL-A" name="visualization" specification="_s0WM0kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqJkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0U-sEcyEe2rgspmIFjL-A" name="NotImplentedVisualization" visibility="package" method="_tHAqIEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s0U-sUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s0U-skcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s0U-s0cyEe2rgspmIFjL-A" type="_s0TwkEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0VlwEcyEe2rgspmIFjL-A" name="NotImplentedVisualization" visibility="package" method="_tHAqIkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s0VlwkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s0WM0EcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s0VlwUcyEe2rgspmIFjL-A" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0WM0UcyEe2rgspmIFjL-A" type="_s0TwkEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0WM0kcyEe2rgspmIFjL-A" name="visualization" method="_tHAqJUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tCyRd0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0YCAEcyEe2rgspmIFjL-A" name="PeriodComparator">
              <interfaceRealization xmi:id="_tEzqsEcyEe2rgspmIFjL-A" client="_s0YCAEcyEe2rgspmIFjL-A" supplier="_tCMblEcyEe2rgspmIFjL-A" contract="_tCMblEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqJ0cyEe2rgspmIFjL-A" name="compare" specification="_tE0RwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqKEcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHAqKUcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHAqKkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tE0RwEcyEe2rgspmIFjL-A" name="compare" method="_tHAqJ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tE0RwUcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE0RwkcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE0Rw0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0Z3MEcyEe2rgspmIFjL-A" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_tHlR4kcyEe2rgspmIFjL-A">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGBLoUcyEe2rgspmIFjL-A" name="activations" visibility="private" type="_syiO8EcyEe2rgspmIFjL-A" association="_tIDL9EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGBysEcyEe2rgspmIFjL-A" name="workload" visibility="private" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tIDzAUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGByskcyEe2rgspmIFjL-A" name="flows" visibility="protected" type="_szeDEEcyEe2rgspmIFjL-A" association="_tIDzBEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tGBytEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tGBytUcyEe2rgspmIFjL-A" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tGBys0cyEe2rgspmIFjL-A" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGCZwUcyEe2rgspmIFjL-A" name="nodes" visibility="private" type="_s0LNsEcyEe2rgspmIFjL-A" association="_tIEaEUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tGCZw0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tGCZxEcyEe2rgspmIFjL-A" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tGCZwkcyEe2rgspmIFjL-A" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGDA0EcyEe2rgspmIFjL-A" name="nodeMap" visibility="private" type="_s0R7YEcyEe2rgspmIFjL-A" association="_tIEaFEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGDA0kcyEe2rgspmIFjL-A" name="priorityQueue" visibility="private" type="_s00t8EcyEe2rgspmIFjL-A" association="_tIFBIUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGDn4kcyEe2rgspmIFjL-A" name="nodeConnectivityMap" visibility="protected" type="_tB2dUEcyEe2rgspmIFjL-A" association="_tIFBJEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGEO8kcyEe2rgspmIFjL-A" name="activationMap" visibility="package" type="_szsFgEcyEe2rgspmIFjL-A" association="_tIFBJ0cyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqK0cyEe2rgspmIFjL-A" name="Poset" specification="_tC0GoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqLEcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHAqLUcyEe2rgspmIFjL-A" type="_s0Z3MEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqLkcyEe2rgspmIFjL-A" name="getNodeConnectivity" specification="_s0aeQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqL0cyEe2rgspmIFjL-A" type="_tB2dUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHAqMEcyEe2rgspmIFjL-A" name="getNodeNames" specification="_s0bFUUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHAqMUcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRMEcyEe2rgspmIFjL-A" name="getNodesNamesOrderedAlphabetically" specification="_s0bsYUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHBRMUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHBRMkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRM0cyEe2rgspmIFjL-A" name="buildPosetOfActivations" specification="_s0cTc0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRNEcyEe2rgspmIFjL-A" name="createEdgeLists" specification="_s0c6gEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRNUcyEe2rgspmIFjL-A" name="createConflictLists" specification="_s0c6gUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRNkcyEe2rgspmIFjL-A" name="createGlobalConflictLists" specification="_s0dhkEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRN0cyEe2rgspmIFjL-A" name="createLocalConflictLists" specification="_s0dhkUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBROEcyEe2rgspmIFjL-A" name="findCoordinator" specification="_tE1f4UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHBROUcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHBROkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRO0cyEe2rgspmIFjL-A" name="buildTxArray" specification="_tE2G8UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHBRPEcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHBRPUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHBRPkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHBRP0cyEe2rgspmIFjL-A" name="createInitialActivations" specification="_s0eIoEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4QEcyEe2rgspmIFjL-A" name="getMaxTx" specification="_tC0ttEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4QUcyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHB4QkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4Q0cyEe2rgspmIFjL-A" name="getActivation" specification="_tC1UwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4REcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHB4RUcyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHB4RkcyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4R0cyEe2rgspmIFjL-A" name="getHyperPeriod" specification="_s0evsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4SEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4SUcyEe2rgspmIFjL-A" name="getMaxPhase" specification="_s0fWwUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4SkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4S0cyEe2rgspmIFjL-A" name="orderActivations" specification="_s0f90EcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4TEcyEe2rgspmIFjL-A" name="getNextActivation" specification="_s0f90UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4TUcyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4TkcyEe2rgspmIFjL-A" name="addActivation" specification="_tC1UxUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4T0cyEe2rgspmIFjL-A" name="activation" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHB4UEcyEe2rgspmIFjL-A" name="findBaseStation" specification="_s0gk4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHB4UUcyEe2rgspmIFjL-A" type="_s0LNsEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0aeQEcyEe2rgspmIFjL-A" name="getNodeConnectivity" visibility="private" method="_tHAqLkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tE040kcyEe2rgspmIFjL-A" type="_tB2dUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0bFUUcyEe2rgspmIFjL-A" name="getNodeNames" method="_tHAqMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tE1f4EcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0bsYUcyEe2rgspmIFjL-A" name="getNodesNamesOrderedAlphabetically" method="_tHBRMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0cTcEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s0cTcUcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0cTc0cyEe2rgspmIFjL-A" name="buildPosetOfActivations" method="_tHBRM0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0c6gEcyEe2rgspmIFjL-A" name="createEdgeLists" visibility="private" method="_tHBRNEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0c6gUcyEe2rgspmIFjL-A" name="createConflictLists" visibility="private" method="_tHBRNUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0dhkEcyEe2rgspmIFjL-A" name="createGlobalConflictLists" visibility="private" method="_tHBRNkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0dhkUcyEe2rgspmIFjL-A" name="createLocalConflictLists" visibility="private" method="_tHBRN0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0eIoEcyEe2rgspmIFjL-A" name="createInitialActivations" visibility="private" method="_tHBRP0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0evsEcyEe2rgspmIFjL-A" name="getHyperPeriod" method="_tHB4R0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0fWwEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0fWwUcyEe2rgspmIFjL-A" name="getMaxPhase" method="_tHB4SUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s0fWwkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s0f90EcyEe2rgspmIFjL-A" name="orderActivations" method="_tHB4S0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s0f90UcyEe2rgspmIFjL-A" name="getNextActivation" method="_tHB4TEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHlR5UcyEe2rgspmIFjL-A">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_tC1UxEcyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0gk4EcyEe2rgspmIFjL-A" name="findBaseStation" visibility="protected" method="_tHB4UEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHlR50cyEe2rgspmIFjL-A">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_tC170UcyEe2rgspmIFjL-A" type="_s0LNsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC0GoEcyEe2rgspmIFjL-A" name="Poset" visibility="package" method="_tHAqK0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tC0tsUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tC0tskcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHlR40cyEe2rgspmIFjL-A">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_tC0tsEcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC0ts0cyEe2rgspmIFjL-A" type="_s0Z3MEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC0ttEcyEe2rgspmIFjL-A" name="getMaxTx" visibility="private" method="_tHB4QEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC0ttUcyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC0ttkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tC1UwEcyEe2rgspmIFjL-A" name="getActivation" visibility="private" method="_tHB4Q0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC1UwUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC1UwkcyEe2rgspmIFjL-A" name="node" type="_s0LNsEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC1Uw0cyEe2rgspmIFjL-A" type="_syNe0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC1UxUcyEe2rgspmIFjL-A" name="addActivation" method="_tHB4TkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHlR5kcyEe2rgspmIFjL-A">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_tC170EcyEe2rgspmIFjL-A" name="activation" type="_syNe0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tE1f4UcyEe2rgspmIFjL-A" name="findCoordinator" visibility="protected" method="_tHBROEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHlR5EcyEe2rgspmIFjL-A">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tE1f4kcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE1f40cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tE2G8UcyEe2rgspmIFjL-A" name="buildTxArray" visibility="private" method="_tHBRO0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tE2G8kcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE2G80cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tE2G9EcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0k2UEcyEe2rgspmIFjL-A" name="PreemptiveSchedule">
              <ownedComment xmi:id="_tHlR6EcyEe2rgspmIFjL-A">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tC7bYEcyEe2rgspmIFjL-A" general="_s1KsMEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHCfUEcyEe2rgspmIFjL-A" name="PreemptiveSchedule" specification="_tC3J8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHCfUUcyEe2rgspmIFjL-A" name="poset" type="_s0Z3MEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHCfUkcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfU0cyEe2rgspmIFjL-A" type="_s0k2UEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHCfVEcyEe2rgspmIFjL-A" name="continueSearch" specification="_tC3xAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHCfVUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfVkcyEe2rgspmIFjL-A" name="activation" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHCfV0cyEe2rgspmIFjL-A" type="_tE3VEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHCfWEcyEe2rgspmIFjL-A" name="toProgram" specification="_s0ldYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHCfWUcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHCfWkcyEe2rgspmIFjL-A" name="findPreeptiveChannelAndTime" specification="_tC4YE0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHCfW0cyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfXEcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHCfXUcyEe2rgspmIFjL-A" type="_tE3VEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHCfXkcyEe2rgspmIFjL-A" name="findAdditionalTime" specification="_tC4_IEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHCfX0cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfYEcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfYUcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHCfYkcyEe2rgspmIFjL-A" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfY0cyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHCfZEcyEe2rgspmIFjL-A" name="findMaxTimeAvailable" specification="_tC5mMUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHCfZUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHCfZkcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHCfZ0cyEe2rgspmIFjL-A" type="_tE3VEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDGYEcyEe2rgspmIFjL-A" name="availableTime" specification="_tC6NQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDGYUcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDGYkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGY0cyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGZEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDGZUcyEe2rgspmIFjL-A" name="addToSchedule" specification="_tC6NRUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDGZkcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDGZ0cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGaEcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGaUcyEe2rgspmIFjL-A" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGakcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDGa0cyEe2rgspmIFjL-A" name="addToSchedule" specification="_tC60UEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDGbEcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDGbUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0ldYEcyEe2rgspmIFjL-A" name="toProgram" method="_tHCfWEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC4YEkcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC3J8EcyEe2rgspmIFjL-A" name="PreemptiveSchedule" visibility="package" method="_tHCfUEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tC3J80cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tC3J9EcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tC3J8UcyEe2rgspmIFjL-A" name="poset" type="_s0Z3MEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC3J8kcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC3J9UcyEe2rgspmIFjL-A" type="_s0k2UEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC3xAEcyEe2rgspmIFjL-A" name="continueSearch" visibility="protected" method="_tHCfVEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC3xAUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC3xAkcyEe2rgspmIFjL-A" name="activation" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE38IUcyEe2rgspmIFjL-A" type="_tE3VEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC4YE0cyEe2rgspmIFjL-A" name="findPreeptiveChannelAndTime" visibility="private" method="_tHCfWkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC4YFEcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC4YFUcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE38IkcyEe2rgspmIFjL-A" type="_tE3VEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC4_IEcyEe2rgspmIFjL-A" name="findAdditionalTime" visibility="private" method="_tHCfXkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC4_IUcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC4_IkcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC4_I0cyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC4_JEcyEe2rgspmIFjL-A" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tE4jMEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC5mMUcyEe2rgspmIFjL-A" name="findMaxTimeAvailable" visibility="private" method="_tHCfZEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC5mMkcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC5mM0cyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE4jMUcyEe2rgspmIFjL-A" type="_tE3VEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC6NQEcyEe2rgspmIFjL-A" name="availableTime" visibility="private" method="_tHDGYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC6NQUcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC6NQkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC6NQ0cyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC6NREcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tC6NRUcyEe2rgspmIFjL-A" name="addToSchedule" visibility="private" method="_tHDGZUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC6NRkcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC6NR0cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC6NSEcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC6NSUcyEe2rgspmIFjL-A" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tC6NSkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tC60UEcyEe2rgspmIFjL-A" name="addToSchedule" visibility="protected" method="_tHDGa0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC60UUcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC60UkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0pu0EcyEe2rgspmIFjL-A" name="PriorityComparator">
              <interfaceRealization xmi:id="_tE5KQEcyEe2rgspmIFjL-A" client="_s0pu0EcyEe2rgspmIFjL-A" supplier="_tCMblEcyEe2rgspmIFjL-A" contract="_tCMblEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDGbkcyEe2rgspmIFjL-A" name="compare" specification="_tE5xUUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDGb0cyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDGcEcyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDGcUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tE5xUUcyEe2rgspmIFjL-A" name="compare" method="_tHDGbkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tE5xUkcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE5xU0cyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE5xVEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0rkAEcyEe2rgspmIFjL-A" name="ProgramSchedule">
              <generalization xmi:id="_tC8CcEcyEe2rgspmIFjL-A" general="_s1e1QEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGE2AUcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGFdEEcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDGckcyEe2rgspmIFjL-A" name="ProgramSchedule" specification="_s0sLEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDGc0cyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDGdEcyEe2rgspmIFjL-A" name="ProgramSchedule" specification="_s0syIkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDGdUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGdkcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHDGd0cyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0sLEEcyEe2rgspmIFjL-A" name="ProgramSchedule" method="_tHDGckcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s0sLEUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s0syIEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s0syIUcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0syIkcyEe2rgspmIFjL-A" name="ProgramSchedule" visibility="package" method="_tHDGdEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s0tZMEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s0tZMUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s0syI0cyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0syJEcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s0tZMkcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0tZM0cyEe2rgspmIFjL-A" name="ProgramVisualization">
              <ownedComment xmi:id="_tHlR6UcyEe2rgspmIFjL-A">
                <body>&lt;h1>Implementation of Program Visualization.&lt;/h1>&#xD;
&lt;p>The ProgramVisualization class allows a warp Interface to be converted to program and visualized.&lt;/p>&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.2</body>
              </ownedComment>
              <generalization xmi:id="_tC9QmEcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGFdEUcyEe2rgspmIFjL-A" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGFdEkcyEe2rgspmIFjL-A" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGFdE0cyEe2rgspmIFjL-A" name="sourceCode" visibility="private" type="_s0rkAEcyEe2rgspmIFjL-A" association="_tIFBKkcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGFdFUcyEe2rgspmIFjL-A" name="program" visibility="private" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tIFoMUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGGEIUcyEe2rgspmIFjL-A" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDtcEcyEe2rgspmIFjL-A" name="ProgramVisualization" specification="_tC9QkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDtcUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDtckcyEe2rgspmIFjL-A" type="_s0tZM0cyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDtc0cyEe2rgspmIFjL-A" name="visualization" specification="_s0unUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDtdEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
&#xD;
 /* create schedule output header of column node names in order, with \t as separator */&#xD;
 String nodeString = &quot;Time Slot\t&quot;;&#xD;
 /* loop through the node names, stopping just before last name */&#xD;
 for (int i = 0; i &lt; orderedNodes.length - 1; i++) {&#xD;
   /* add each name to the string, with \t between each name */&#xD;
   nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);&#xD;
 }&#xD;
 /* add the last name with \n instead of \t at the end */&#xD;
 nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length - 1]);&#xD;
 content.add(nodeString);&#xD;
&#xD;
 for (int rowIndex = 0; rowIndex &lt; sourceCode.size(); rowIndex++) {&#xD;
   ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);&#xD;
   var row = rowArrayList.toArray(new String[rowArrayList.size()]);&#xD;
   String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
   content.add(rowString);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDtdUcyEe2rgspmIFjL-A" name="createHeader" specification="_s0vOYUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDtdkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(String.format(&quot;WARP system for graph %s created with the following parameters:\n&quot;,&#xD;
     program.getName()));&#xD;
 header.add(String.format(&quot;Scheduler Name:\t%s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
   header.add(String.format(&quot;nTransmissions:\t%d\n&quot;, program.getNumTransmissions()));&#xD;
 } else if (program.getNumFaults() > 0) {&#xD;
   header.add(String.format(&quot;numFaults:\t%d\n&quot;, program.getNumFaults()));&#xD;
 } else {&#xD;
   header.add(String.format(&quot;M:\t%s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
   header.add(String.format(&quot;E2E:\t%s\n&quot;, String.valueOf(program.getE2e())));&#xD;
   header.add(String.format(&quot;nChannels:\t%d\n&quot;, program.getNumChannels()));&#xD;
 }&#xD;
 if (!program.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
   header.add(&quot;Optimization Requested:\tFalse\n&quot;);&#xD;
 }&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDtd0cyEe2rgspmIFjL-A" name="createFooter" specification="_s0vOZUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDteEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0unUEcyEe2rgspmIFjL-A" name="visualization" method="_tHDtc0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC9QlUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0vOYUcyEe2rgspmIFjL-A" name="createHeader" method="_tHDtdUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC9QlkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s0vOZUcyEe2rgspmIFjL-A" name="createFooter" method="_tHDtd0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tC9Ql0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC9QkEcyEe2rgspmIFjL-A" name="ProgramVisualization" visibility="package" method="_tHDtcEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tC9QkkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tC9Qk0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHlR6kcyEe2rgspmIFjL-A">
                  <body>Constructor converts WarpInterface to Program for visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to convert to program for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_tC9QkUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC9QlEcyEe2rgspmIFjL-A" type="_s0tZM0cyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0xDkEcyEe2rgspmIFjL-A" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_tE6_cEcyEe2rgspmIFjL-A" client="_s0xDkEcyEe2rgspmIFjL-A" supplier="_tCMblEcyEe2rgspmIFjL-A" contract="_tCMblEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDteUcyEe2rgspmIFjL-A" name="compare" specification="_tE7mgUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDtekcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDte0cyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDtfEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tE7mgUcyEe2rgspmIFjL-A" name="compare" method="_tHDteUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tE7mgkcyEe2rgspmIFjL-A" name="obj1" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE7mg0cyEe2rgspmIFjL-A" name="obj2" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE8NkEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0y4wEcyEe2rgspmIFjL-A" name="ReleaseTimeQueue">
              <generalization xmi:id="_s00t8kcyEe2rgspmIFjL-A" general="_s00t8EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGGEI0cyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGGEJEcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDtfUcyEe2rgspmIFjL-A" name="ReleaseTimeQueue" specification="_s00G4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDtfkcyEe2rgspmIFjL-A" type="_s0y4wEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHDtf0cyEe2rgspmIFjL-A" name="ReleaseTimeQueue" specification="_tC-esEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHDtgEcyEe2rgspmIFjL-A" name="schedulableObjects" type="_tCzfkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHDtgUcyEe2rgspmIFjL-A" type="_s0y4wEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s00G4EcyEe2rgspmIFjL-A" name="ReleaseTimeQueue" visibility="package" method="_tHDtfUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s00G4UcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s00G4kcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s00G40cyEe2rgspmIFjL-A" type="_s0y4wEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tC-esEcyEe2rgspmIFjL-A" name="ReleaseTimeQueue" visibility="package" method="_tHDtf0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tC_FwUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tC_FwkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tC_FwEcyEe2rgspmIFjL-A" name="schedulableObjects" type="_tCzfkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC_Fw0cyEe2rgspmIFjL-A" type="_s0y4wEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s018EEcyEe2rgspmIFjL-A" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_tHlR60cyEe2rgspmIFjL-A">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in WarpTester.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUgEcyEe2rgspmIFjL-A" name="ReliabilityAnalysis" specification="_tC_s0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUgUcyEe2rgspmIFjL-A" name="program" type="_s3IbEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHEUgkcyEe2rgspmIFjL-A" type="_s018EEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUg0cyEe2rgspmIFjL-A" name="verifyReliabilities" specification="_s02jIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUhEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s02jIEcyEe2rgspmIFjL-A" name="verifyReliabilities" method="_tHEUg0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s02jIUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tC_s0EcyEe2rgspmIFjL-A" name="ReliabilityAnalysis" method="_tHEUgEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tC_s0kcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tC_s00cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tC_s0UcyEe2rgspmIFjL-A" name="program" type="_s3IbEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tC_s1EcyEe2rgspmIFjL-A" type="_s018EEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_s03KMEcyEe2rgspmIFjL-A" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_tHl48EcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_s03xQEcyEe2rgspmIFjL-A" name="minPacketReceptionRate" type="_tE80oEcyEe2rgspmIFjL-A" isReadOnly="true"/>
              <ownedAttribute xmi:id="_s03xQUcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s04YUEcyEe2rgspmIFjL-A" name="ReliabilityRow">
              <generalization xmi:id="_tDAT4EcyEe2rgspmIFjL-A" general="_s1BiQEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGGrMEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGGrMUcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUhUcyEe2rgspmIFjL-A" name="ReliabilityRow" specification="_s04_YEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUhkcyEe2rgspmIFjL-A" type="_s04YUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUh0cyEe2rgspmIFjL-A" name="ReliabilityRow" specification="_tE9bsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUiEcyEe2rgspmIFjL-A" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHEUiUcyEe2rgspmIFjL-A" name="element" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHEUikcyEe2rgspmIFjL-A" type="_s04YUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUi0cyEe2rgspmIFjL-A" name="ReliabilityRow" specification="_tE-CwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUjEcyEe2rgspmIFjL-A" name="rowArray" type="_tE80oEcyEe2rgspmIFjL-A">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHEUjUcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHEUjkcyEe2rgspmIFjL-A" type="_s04YUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s04_YEcyEe2rgspmIFjL-A" name="ReliabilityRow" method="_tHEUhUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s04_YUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s04_YkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s04_Y0cyEe2rgspmIFjL-A" type="_s04YUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tE9bsEcyEe2rgspmIFjL-A" name="ReliabilityRow" visibility="package" method="_tHEUh0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tE9bs0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tE9btEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tE9bsUcyEe2rgspmIFjL-A" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tE9bskcyEe2rgspmIFjL-A" name="element" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE9btUcyEe2rgspmIFjL-A" type="_s04YUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tE-CwEcyEe2rgspmIFjL-A" name="ReliabilityRow" visibility="package" method="_tHEUi0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tE-CwkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tE-Cw0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tE-CwUcyEe2rgspmIFjL-A" name="rowArray" type="_tE80oEcyEe2rgspmIFjL-A">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tE-CxUcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tE-CxEcyEe2rgspmIFjL-A" type="_s04YUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s06NgEcyEe2rgspmIFjL-A" name="ReliabilityTable">
              <generalization xmi:id="_tDA68EcyEe2rgspmIFjL-A" general="_s1e1QEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGGrMkcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGGrM0cyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUj0cyEe2rgspmIFjL-A" name="ReliabilityTable" specification="_s060kEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUkEcyEe2rgspmIFjL-A" type="_s06NgEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHEUkUcyEe2rgspmIFjL-A" name="ReliabilityTable" specification="_s07boEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHEUkkcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHEUk0cyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHEUlEcyEe2rgspmIFjL-A" type="_s06NgEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s060kEcyEe2rgspmIFjL-A" name="ReliabilityTable" method="_tHEUj0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s060kUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s060kkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s060k0cyEe2rgspmIFjL-A" type="_s06NgEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s07boEcyEe2rgspmIFjL-A" name="ReliabilityTable" visibility="package" method="_tHEUkUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s07bo0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s07bpEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s07boUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s07bokcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s07bpUcyEe2rgspmIFjL-A" type="_s06NgEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s08CsEcyEe2rgspmIFjL-A" name="ReliabilityVisualization">
              <ownedComment xmi:id="_tHl48UcyEe2rgspmIFjL-A">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to create&#xD;
the file visualization that is requested in WarpTester.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tDCJE0cyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGGrNEcyEe2rgspmIFjL-A" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGGrNUcyEe2rgspmIFjL-A" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGGrNkcyEe2rgspmIFjL-A" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGGrN0cyEe2rgspmIFjL-A" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGHSQEcyEe2rgspmIFjL-A" name="warp" visibility="private" type="_s1_LkEcyEe2rgspmIFjL-A" association="_tIFoNEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGHSQkcyEe2rgspmIFjL-A" name="ra" visibility="private" type="_s018EEcyEe2rgspmIFjL-A" association="_tIGPQUcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHE7kEcyEe2rgspmIFjL-A" name="ReliabilityVisualization" specification="_tDBiAUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHE7kUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHE7kkcyEe2rgspmIFjL-A" type="_s08CsEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tDBiAUcyEe2rgspmIFjL-A" name="ReliabilityVisualization" visibility="package" method="_tHE7kEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDCJEEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDCJEUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDBiAkcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDCJEkcyEe2rgspmIFjL-A" type="_s08CsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s0934EcyEe2rgspmIFjL-A" name="ReportVisualization">
              <generalization xmi:id="_tDDXMkcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGH5UEcyEe2rgspmIFjL-A" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGH5UUcyEe2rgspmIFjL-A" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGH5UkcyEe2rgspmIFjL-A" name="content" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIGPREcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGH5VEcyEe2rgspmIFjL-A" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHE7k0cyEe2rgspmIFjL-A" name="ReportVisualization" specification="_tDCwIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHE7lEcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHE7lUcyEe2rgspmIFjL-A" name="warp" type="_s1bK4EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHE7lkcyEe2rgspmIFjL-A" name="content" type="_szLIIEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHE7l0cyEe2rgspmIFjL-A" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHE7mEcyEe2rgspmIFjL-A" type="_s0934EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHE7mUcyEe2rgspmIFjL-A" name="visualization" specification="_s0_GAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHE7mkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHE7m0cyEe2rgspmIFjL-A" name="createReport" specification="_s1AUIkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHE7nEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s0_GAEcyEe2rgspmIFjL-A" name="visualization" method="_tHE7mUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDDXMEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1AUIkcyEe2rgspmIFjL-A" name="createReport" visibility="private" method="_tHE7m0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDDXMUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDCwIEcyEe2rgspmIFjL-A" name="ReportVisualization" visibility="package" method="_tHE7k0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDCwJUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDCwJkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDCwIUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDCwIkcyEe2rgspmIFjL-A" name="warp" type="_s1bK4EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDCwI0cyEe2rgspmIFjL-A" name="content" type="_szLIIEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDCwJEcyEe2rgspmIFjL-A" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDCwJ0cyEe2rgspmIFjL-A" type="_s0934EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1BiQEcyEe2rgspmIFjL-A" name="Row">
              <generalization xmi:id="_tE_Q4UcyEe2rgspmIFjL-A" general="_tB3rcEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGIgYUcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGIgYkcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHE7nUcyEe2rgspmIFjL-A" name="Row" specification="_s1CJUUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHE7nkcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHE7n0cyEe2rgspmIFjL-A" name="Row" specification="_tE-p0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHE7oEcyEe2rgspmIFjL-A" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHE7oUcyEe2rgspmIFjL-A" name="element" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHE7okcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFioEcyEe2rgspmIFjL-A" name="Row" specification="_tE-p1kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFioUcyEe2rgspmIFjL-A" name="rowArray" type="_tEhW0UcyEe2rgspmIFjL-A">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHFiokcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHFio0cyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFipEcyEe2rgspmIFjL-A" name="Row" specification="_s1CwYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFipUcyEe2rgspmIFjL-A" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHFipkcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1CJUUcyEe2rgspmIFjL-A" name="Row" method="_tHE7nUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1CJUkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1CJU0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1CJVEcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1CwYEcyEe2rgspmIFjL-A" name="Row" visibility="package" method="_tHFipEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1CwYkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1CwY0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1CwYUcyEe2rgspmIFjL-A" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1CwZEcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tE-p0EcyEe2rgspmIFjL-A" name="Row" visibility="package" method="_tHE7n0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tE-p00cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tE-p1EcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tE-p0UcyEe2rgspmIFjL-A" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tE-p0kcyEe2rgspmIFjL-A" name="element" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tE-p1UcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tE-p1kcyEe2rgspmIFjL-A" name="Row" visibility="package" method="_tHFioEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tE-p2EcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tE-p2UcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tE-p10cyEe2rgspmIFjL-A" name="rowArray" type="_tEhW0UcyEe2rgspmIFjL-A">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tE_Q4EcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tE-p2kcyEe2rgspmIFjL-A" type="_s1BiQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1D-gEcyEe2rgspmIFjL-A" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_tHl48kcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tE_38EcyEe2rgspmIFjL-A" general="_tCgkoUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGJHcEcyEe2rgspmIFjL-A" name="workLoad" visibility="package" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tIG2UUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGJHckcyEe2rgspmIFjL-A" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFip0cyEe2rgspmIFjL-A" name="WorkLoadListener" specification="_tDElUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFiqEcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHFiqUcyEe2rgspmIFjL-A" type="_s1D-gEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFiqkcyEe2rgspmIFjL-A" name="buildNodesAndFlows" specification="_tDFMYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFiq0cyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFirEcyEe2rgspmIFjL-A" name="testPrintStdOut" specification="_s1ElkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFirUcyEe2rgspmIFjL-A" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFirkcyEe2rgspmIFjL-A" name="enterWarpName" specification="_tDFMYkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFir0cyEe2rgspmIFjL-A" name="ctx" type="_tCiZ0kcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFisEcyEe2rgspmIFjL-A" name="enterFlowName" specification="_tDFzckcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFisUcyEe2rgspmIFjL-A" name="ctx" type="_tCjn80cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFiskcyEe2rgspmIFjL-A" name="exitPriority" specification="_tDGahEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHFis0cyEe2rgspmIFjL-A" name="ctx" type="_tDGagkcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHFitEcyEe2rgspmIFjL-A" name="exitPeriod" specification="_tDHooUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJsEcyEe2rgspmIFjL-A" name="ctx" type="_tDHBk0cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJsUcyEe2rgspmIFjL-A" name="exitDeadline" specification="_tDIPskcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJskcyEe2rgspmIFjL-A" name="ctx" type="_tDIPsEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJs0cyEe2rgspmIFjL-A" name="exitPhase" specification="_tDJd0UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJtEcyEe2rgspmIFjL-A" name="ctx" type="_tDI2w0cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJtUcyEe2rgspmIFjL-A" name="exitSrcNode" specification="_tDKE40cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJtkcyEe2rgspmIFjL-A" name="ctx" type="_tCk2EkcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJt0cyEe2rgspmIFjL-A" name="exitSnkNode" specification="_tDKr8kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJuEcyEe2rgspmIFjL-A" name="ctx" type="_tCmEMEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJuUcyEe2rgspmIFjL-A" name="exitFlow" specification="_tDKr90cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJukcyEe2rgspmIFjL-A" name="ctx" type="_tCmrQ0cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1ElkEcyEe2rgspmIFjL-A" name="testPrintStdOut" method="_tHFirEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1ElkUcyEe2rgspmIFjL-A" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDElUEcyEe2rgspmIFjL-A" name="WorkLoadListener" visibility="private" method="_tHFip0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDElUkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDElU0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDElUUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDElVEcyEe2rgspmIFjL-A" type="_s1D-gEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDFMYEcyEe2rgspmIFjL-A" name="buildNodesAndFlows" isStatic="true" method="_tHFiqkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDFMYUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDFMYkcyEe2rgspmIFjL-A" name="enterWarpName" method="_tHFirkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDFMY0cyEe2rgspmIFjL-A" name="ctx" type="_tCiZ0kcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDFzckcyEe2rgspmIFjL-A" name="enterFlowName" method="_tHFisEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDFzc0cyEe2rgspmIFjL-A" name="ctx" type="_tCjn80cyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDGahEcyEe2rgspmIFjL-A" name="exitPriority" method="_tHFiskcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDGahUcyEe2rgspmIFjL-A" name="ctx" type="_tDGagkcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDHooUcyEe2rgspmIFjL-A" name="exitPeriod" method="_tHFitEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDHookcyEe2rgspmIFjL-A" name="ctx" type="_tDHBk0cyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDIPskcyEe2rgspmIFjL-A" name="exitDeadline" method="_tHGJsUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDIPs0cyEe2rgspmIFjL-A" name="ctx" type="_tDIPsEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDJd0UcyEe2rgspmIFjL-A" name="exitPhase" method="_tHGJs0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDJd0kcyEe2rgspmIFjL-A" name="ctx" type="_tDI2w0cyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDKE40cyEe2rgspmIFjL-A" name="exitSrcNode" method="_tHGJtUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDKE5EcyEe2rgspmIFjL-A" name="ctx" type="_tCk2EkcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDKr8kcyEe2rgspmIFjL-A" name="exitSnkNode" method="_tHGJt0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDKr80cyEe2rgspmIFjL-A" name="ctx" type="_tCmEMEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDKr90cyEe2rgspmIFjL-A" name="exitFlow" method="_tHGJuUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDKr-EcyEe2rgspmIFjL-A" name="ctx" type="_tCmrQ0cyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1HB0EcyEe2rgspmIFjL-A" name="SchedulableObjectQueue">
              <generalization xmi:id="_s1I3AEcyEe2rgspmIFjL-A" general="_s00t8EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGJugEcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGJugUcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJu0cyEe2rgspmIFjL-A" name="SchedulableObjectQueue" specification="_tFAfAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGJvEcyEe2rgspmIFjL-A" name="comparitor" type="_tCMblEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHGJvUcyEe2rgspmIFjL-A" type="_s1HB0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGJvkcyEe2rgspmIFjL-A" name="SchedulableObjectQueue" specification="_tFBGEUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGwwEcyEe2rgspmIFjL-A" name="comparitor" type="_tCMblEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHGwwUcyEe2rgspmIFjL-A" name="schedulableObjects" type="_tCzfkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHGwwkcyEe2rgspmIFjL-A" type="_s1HB0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tFAfAEcyEe2rgspmIFjL-A" name="SchedulableObjectQueue" visibility="package" method="_tHGJu0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFAfAkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFAfA0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tFAfAUcyEe2rgspmIFjL-A" name="comparitor" type="_tCMblEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFAfBEcyEe2rgspmIFjL-A" type="_s1HB0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFBGEUcyEe2rgspmIFjL-A" name="SchedulableObjectQueue" visibility="package" method="_tHGJvkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFBGFEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFBGFUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tFBGEkcyEe2rgspmIFjL-A" name="comparitor" type="_tCMblEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFBGE0cyEe2rgspmIFjL-A" name="schedulableObjects" type="_tCzfkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFBGFkcyEe2rgspmIFjL-A" type="_s1HB0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1KsMEcyEe2rgspmIFjL-A" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_tHl480cyEe2rgspmIFjL-A">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGJugkcyEe2rgspmIFjL-A" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGJug0cyEe2rgspmIFjL-A" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGKVkEcyEe2rgspmIFjL-A" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGKVkkcyEe2rgspmIFjL-A" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGKVlEcyEe2rgspmIFjL-A" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGKVlUcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGKVl0cyEe2rgspmIFjL-A" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGLjsEcyEe2rgspmIFjL-A" name="schedule" visibility="protected" type="_s1VrUEcyEe2rgspmIFjL-A" association="_tIG2VEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGLjskcyEe2rgspmIFjL-A" name="poset" visibility="protected" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIHdYUcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGww0cyEe2rgspmIFjL-A" name="Schedule" specification="_tDMhIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGwxEcyEe2rgspmIFjL-A" name="poset" type="_s0Z3MEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHGwxUcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHGwxkcyEe2rgspmIFjL-A" type="_s1KsMEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGw0UcyEe2rgspmIFjL-A" name="getSchedule" specification="_s1OWkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGw0kcyEe2rgspmIFjL-A" type="_s1VrUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGw00cyEe2rgspmIFjL-A" name="buildSchedule" specification="_s1OWkUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGw1EcyEe2rgspmIFjL-A" name="toProgram" specification="_s1OWkkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHGw1UcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX0EcyEe2rgspmIFjL-A" name="replaceNullWithSleep" specification="_tDNINUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX0UcyEe2rgspmIFjL-A" name="program" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX0kcyEe2rgspmIFjL-A" name="fakeSchedulingToTestRest" specification="_tDNIN0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX00cyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX1EcyEe2rgspmIFjL-A" name="getChannelAndSetStartTime" specification="_tDNvQUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX1UcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX1kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX10cyEe2rgspmIFjL-A" name="findChannelAndTime" specification="_tDNvREcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX2EcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX2UcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX2kcyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX20cyEe2rgspmIFjL-A" name="continueSearch" specification="_tDOWUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX3EcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX3UcyEe2rgspmIFjL-A" name="activation" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX3kcyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX30cyEe2rgspmIFjL-A" name="noOtherChannelConflicts" specification="_tDOWVEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX4EcyEe2rgspmIFjL-A" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX4UcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX4kcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX40cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX5EcyEe2rgspmIFjL-A" name="conflictsExist" specification="_tDO9YEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX5UcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX5kcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX50cyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX6EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX6UcyEe2rgspmIFjL-A" name="freeOfCoordinatorConflicts" specification="_tDO9ZUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX6kcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX60cyEe2rgspmIFjL-A" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX7EcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX7UcyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX7kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHHX70cyEe2rgspmIFjL-A" name="isAvailable" specification="_tDPkcEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHHX8EcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHHX8UcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX8kcyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX80cyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHHX9EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHIl8EcyEe2rgspmIFjL-A" name="isAvailable" specification="_tDPkdkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHIl8UcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHIl8kcyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHIl80cyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHIl9EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHIl9UcyEe2rgspmIFjL-A" name="timeRemaining" specification="_s1QLwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHIl9kcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHIl90cyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHIl-EcyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHIl-UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHIl-kcyEe2rgspmIFjL-A" name="canCombineEntriesInPlace" specification="_tDQLgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHIl-0cyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHIl_EcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHIl_UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHIl_kcyEe2rgspmIFjL-A" name="combinedEntriesInPlace" specification="_tDQLhEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHIl_0cyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHImAEcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHImAUcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHImAkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJNAEcyEe2rgspmIFjL-A" name="addToSchedule" specification="_tDQLiUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJNAUcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHJNAkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJNA0cyEe2rgspmIFjL-A" name="reportNotSchedulable" specification="_tDQykUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJNBEcyEe2rgspmIFjL-A" name="object" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJNBUcyEe2rgspmIFjL-A" name="printVerbose" specification="_s1Qy0UcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJNBkcyEe2rgspmIFjL-A" name="print" specification="_s1RZ4EcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1OWkEcyEe2rgspmIFjL-A" name="getSchedule" method="_tHGw0UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl49kcyEe2rgspmIFjL-A">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDNIM0cyEe2rgspmIFjL-A" type="_s1VrUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1OWkUcyEe2rgspmIFjL-A" name="buildSchedule" visibility="private" method="_tHGw00cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s1OWkkcyEe2rgspmIFjL-A" name="toProgram" method="_tHGw1EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDNINEcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1QLwEcyEe2rgspmIFjL-A" name="timeRemaining" visibility="protected" method="_tHIl9UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl4_EcyEe2rgspmIFjL-A">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_s1QLwUcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1QLwkcyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1QLw0cyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1Qy0EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1Qy0UcyEe2rgspmIFjL-A" name="printVerbose" method="_tHJNBUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s1RZ4EcyEe2rgspmIFjL-A" name="print" method="_tHJNBkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_tDMhIEcyEe2rgspmIFjL-A" name="Schedule" visibility="package" method="_tHGww0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDNIMEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDNIMUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDMhIUcyEe2rgspmIFjL-A" name="poset" type="_s0Z3MEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDMhIkcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDNIMkcyEe2rgspmIFjL-A" type="_s1KsMEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDNINUcyEe2rgspmIFjL-A" name="replaceNullWithSleep" visibility="private" method="_tHHX0EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl490cyEe2rgspmIFjL-A">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDNINkcyEe2rgspmIFjL-A" name="program" type="_s0rkAEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDNIN0cyEe2rgspmIFjL-A" name="fakeSchedulingToTestRest" visibility="private" method="_tHHX0kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDNvQEcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDNvQUcyEe2rgspmIFjL-A" name="getChannelAndSetStartTime" visibility="protected" method="_tHHX1EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl4-EcyEe2rgspmIFjL-A">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDNvQkcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDNvQ0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDNvREcyEe2rgspmIFjL-A" name="findChannelAndTime" visibility="protected" method="_tHHX10cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDNvRUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDNvRkcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDNvR0cyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDOWUEcyEe2rgspmIFjL-A" name="continueSearch" visibility="protected" method="_tHHX20cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl4-UcyEe2rgspmIFjL-A">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDOWUUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDOWUkcyEe2rgspmIFjL-A" name="activation" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDOWU0cyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDOWVEcyEe2rgspmIFjL-A" name="noOtherChannelConflicts" visibility="protected" method="_tHHX30cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDOWVUcyEe2rgspmIFjL-A" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDOWVkcyEe2rgspmIFjL-A" name="schedulableObject" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDOWV0cyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDOWWEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDO9YEcyEe2rgspmIFjL-A" name="conflictsExist" visibility="protected" method="_tHHX5EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDO9YUcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDO9YkcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDO9Y0cyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDO9ZEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDO9ZUcyEe2rgspmIFjL-A" name="freeOfCoordinatorConflicts" visibility="protected" method="_tHHX6UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDO9ZkcyEe2rgspmIFjL-A" name="obj" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDO9Z0cyEe2rgspmIFjL-A" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDO9aEcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDO9aUcyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDO9akcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDPkcEcyEe2rgspmIFjL-A" name="isAvailable" visibility="protected" method="_tHHX70cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl4-kcyEe2rgspmIFjL-A">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDPkcUcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDPkckcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDPkc0cyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDPkdEcyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDPkdUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDPkdkcyEe2rgspmIFjL-A" name="isAvailable" visibility="protected" method="_tHIl8EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHl4-0cyEe2rgspmIFjL-A">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDPkd0cyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDPkeEcyEe2rgspmIFjL-A" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDPkeUcyEe2rgspmIFjL-A" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDPkekcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDQLgEcyEe2rgspmIFjL-A" name="canCombineEntriesInPlace" visibility="private" method="_tHIl-kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDQLgUcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDQLgkcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDQLg0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDQLhEcyEe2rgspmIFjL-A" name="combinedEntriesInPlace" visibility="private" method="_tHIl_kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDQLhUcyEe2rgspmIFjL-A" name="a1" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDQLhkcyEe2rgspmIFjL-A" name="a2" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDQLh0cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDQLiEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDQLiUcyEe2rgspmIFjL-A" name="addToSchedule" visibility="protected" method="_tHJNAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDQLikcyEe2rgspmIFjL-A" name="next" type="_syNe0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDQykEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDQykUcyEe2rgspmIFjL-A" name="reportNotSchedulable" visibility="private" method="_tHJNA0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDQykkcyEe2rgspmIFjL-A" name="object" type="_syNe0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_s1MhYEcyEe2rgspmIFjL-A" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_tGLjtEcyEe2rgspmIFjL-A" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGLjtkcyEe2rgspmIFjL-A" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGwx0cyEe2rgspmIFjL-A" name="ScheduleLocation" specification="_s1MhYUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHGwyEcyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGwyUcyEe2rgspmIFjL-A" name="ScheduleLocation" specification="_s1NIcUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHGwykcyEe2rgspmIFjL-A" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_tHGwy0cyEe2rgspmIFjL-A" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_tHGwzEcyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGwzUcyEe2rgspmIFjL-A" name="getChannel" specification="_s1NvgEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHGwzkcyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHGwz0cyEe2rgspmIFjL-A" name="getTime" specification="_s1NvgkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHGw0EcyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_s1MhYUcyEe2rgspmIFjL-A" name="ScheduleLocation" visibility="package" method="_tHGwx0cyEe2rgspmIFjL-A">
                  <eAnnotations xmi:id="_s1MhYkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_s1MhY0cyEe2rgspmIFjL-A" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_s1NIcEcyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_s1NIcUcyEe2rgspmIFjL-A" name="ScheduleLocation" visibility="package" method="_tHGwyUcyEe2rgspmIFjL-A">
                  <eAnnotations xmi:id="_s1NIdEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_s1NIdUcyEe2rgspmIFjL-A" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_s1NIckcyEe2rgspmIFjL-A" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_s1NIc0cyEe2rgspmIFjL-A" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_s1NIdkcyEe2rgspmIFjL-A" type="_s1MhYEcyEe2rgspmIFjL-A" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_s1NvgEcyEe2rgspmIFjL-A" name="getChannel" visibility="protected" method="_tHGwzUcyEe2rgspmIFjL-A">
                  <ownedComment xmi:id="_tHl49EcyEe2rgspmIFjL-A">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_s1NvgUcyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s1NvgkcyEe2rgspmIFjL-A" name="getTime" visibility="protected" method="_tHGwz0cyEe2rgspmIFjL-A">
                  <ownedComment xmi:id="_tHl49UcyEe2rgspmIFjL-A">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_s1Nvg0cyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1VrUEcyEe2rgspmIFjL-A" name="ScheduleTable">
              <generalization xmi:id="_tDSAsEcyEe2rgspmIFjL-A" general="_s1e1QEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGMKwUcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGMx0EcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJNB0cyEe2rgspmIFjL-A" name="ScheduleTable" specification="_s1WSYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJNCEcyEe2rgspmIFjL-A" type="_s1VrUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJNCUcyEe2rgspmIFjL-A" name="ScheduleTable" specification="_s1W5cEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJNCkcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJNC0cyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJNDEcyEe2rgspmIFjL-A" type="_s1VrUEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1WSYEcyEe2rgspmIFjL-A" name="ScheduleTable" visibility="package" method="_tHJNB0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1WSYUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1WSYkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1WSY0cyEe2rgspmIFjL-A" type="_s1VrUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1W5cEcyEe2rgspmIFjL-A" name="ScheduleTable" visibility="package" method="_tHJNCUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1W5c0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1W5dEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1W5cUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1W5ckcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1W5dUcyEe2rgspmIFjL-A" type="_s1VrUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1XggEcyEe2rgspmIFjL-A" name="ScheduleTime">
              <ownedAttribute xmi:id="_tGMx0UcyEe2rgspmIFjL-A" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGMx0kcyEe2rgspmIFjL-A" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0EEcyEe2rgspmIFjL-A" name="ScheduleTime" specification="_s1XggUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0EUcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJ0EkcyEe2rgspmIFjL-A" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJ0E0cyEe2rgspmIFjL-A" type="_s1XggEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1XggUcyEe2rgspmIFjL-A" name="ScheduleTime" visibility="package" method="_tHJ0EEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1XghEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1YHkEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1XggkcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1Xgg0cyEe2rgspmIFjL-A" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1YHkUcyEe2rgspmIFjL-A" type="_s1XggEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1YHkkcyEe2rgspmIFjL-A" name="SimulatorInput">
              <ownedComment xmi:id="_tHl4_UcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1YuoEcyEe2rgspmIFjL-A" name="SortedPeriodQueue">
              <generalization xmi:id="_s1aj0EcyEe2rgspmIFjL-A" general="_s00t8EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGMx00cyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGMx1EcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0FEcyEe2rgspmIFjL-A" name="SortedPeriodQueue" specification="_s1Z8wEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0FUcyEe2rgspmIFjL-A" type="_s1YuoEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0FkcyEe2rgspmIFjL-A" name="SortedPeriodQueue" specification="_tDSnwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0F0cyEe2rgspmIFjL-A" name="schedulableObjects" type="_tCzfkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHJ0GEcyEe2rgspmIFjL-A" type="_s1YuoEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1Z8wEcyEe2rgspmIFjL-A" name="SortedPeriodQueue" visibility="package" method="_tHJ0FEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1Z8wUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1Z8wkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1Z8w0cyEe2rgspmIFjL-A" type="_s1YuoEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDSnwEcyEe2rgspmIFjL-A" name="SortedPeriodQueue" visibility="package" method="_tHJ0FkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDSnwkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDSnw0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDSnwUcyEe2rgspmIFjL-A" name="schedulableObjects" type="_tCzfkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDSnxEcyEe2rgspmIFjL-A" type="_s1YuoEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_s1bK4EcyEe2rgspmIFjL-A" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_tDT14EcyEe2rgspmIFjL-A" general="_s03KMEcyEe2rgspmIFjL-A"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_s1bx8EcyEe2rgspmIFjL-A" name="ScheduleChoices">
                <ownedLiteral xmi:id="_s1cZAUcyEe2rgspmIFjL-A" name="PRIORITY"/>
                <ownedLiteral xmi:id="_s1cZAkcyEe2rgspmIFjL-A" name="RM"/>
                <ownedLiteral xmi:id="_s1cZA0cyEe2rgspmIFjL-A" name="DM"/>
                <ownedLiteral xmi:id="_s1cZBEcyEe2rgspmIFjL-A" name="RTHART"/>
                <ownedLiteral xmi:id="_s1cZBUcyEe2rgspmIFjL-A" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_s1cZBkcyEe2rgspmIFjL-A" name="POSET_RM"/>
                <ownedLiteral xmi:id="_s1cZB0cyEe2rgspmIFjL-A" name="POSET_DM"/>
                <ownedLiteral xmi:id="_s1dAEEcyEe2rgspmIFjL-A" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_s1dAEUcyEe2rgspmIFjL-A" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_s1dAEkcyEe2rgspmIFjL-A" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_s1dAE0cyEe2rgspmIFjL-A" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_s1dAFEcyEe2rgspmIFjL-A" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_s1dAFUcyEe2rgspmIFjL-A" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_s1dAFkcyEe2rgspmIFjL-A" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_s1dAF0cyEe2rgspmIFjL-A" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_s1dnIEcyEe2rgspmIFjL-A" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_s1dnIUcyEe2rgspmIFjL-A" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_s1dnIkcyEe2rgspmIFjL-A" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_s1dnI0cyEe2rgspmIFjL-A" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1eOMEcyEe2rgspmIFjL-A" name="SystemFactory">
              <ownedComment xmi:id="_tHmgAEcyEe2rgspmIFjL-A">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0GUcyEe2rgspmIFjL-A" name="create" specification="_tDUc8UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0GkcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHJ0G0cyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJ0HEcyEe2rgspmIFjL-A" name="choice" type="_s1bx8EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHJ0HUcyEe2rgspmIFjL-A" type="_s1_LkEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tDUc8UcyEe2rgspmIFjL-A" name="create" isStatic="true" method="_tHJ0GUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDUc8kcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDUc80cyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDUc9EcyEe2rgspmIFjL-A" name="choice" type="_s1bx8EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDUc9UcyEe2rgspmIFjL-A" type="_s1_LkEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1e1QEcyEe2rgspmIFjL-A" name="Table">
              <generalization xmi:id="_tFC7RUcyEe2rgspmIFjL-A" general="_tB3rcEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGMx1UcyEe2rgspmIFjL-A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGNY4EcyEe2rgspmIFjL-A" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0HkcyEe2rgspmIFjL-A" name="Table" specification="_s1gDYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0H0cyEe2rgspmIFjL-A" type="_s1e1QEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0IEcyEe2rgspmIFjL-A" name="Table" specification="_s1gDZEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0IUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJ0IkcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHJ0I0cyEe2rgspmIFjL-A" type="_s1e1QEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHJ0JEcyEe2rgspmIFjL-A" name="getNumRows" specification="_s1gqcEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHJ0JUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHKbIEcyEe2rgspmIFjL-A" name="getNumColumns" specification="_s1gqckcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHKbIUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHKbIkcyEe2rgspmIFjL-A" name="set" specification="_tFC7QEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHKbI0cyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHKbJEcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHKbJUcyEe2rgspmIFjL-A" name="element" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHKbJkcyEe2rgspmIFjL-A" name="get" specification="_s1gqdEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHKbJ0cyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHKbKEcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHKbKUcyEe2rgspmIFjL-A" type="_tEhW0UcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1gDYEcyEe2rgspmIFjL-A" name="Table" method="_tHJ0HkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1gDYUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1gDYkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1gDY0cyEe2rgspmIFjL-A" type="_s1e1QEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1gDZEcyEe2rgspmIFjL-A" name="Table" method="_tHJ0IEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s1gDZ0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s1gDaEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s1gDZUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1gDZkcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1gDaUcyEe2rgspmIFjL-A" type="_s1e1QEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1gqcEcyEe2rgspmIFjL-A" name="getNumRows" method="_tHJ0JEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1gqcUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1gqckcyEe2rgspmIFjL-A" name="getNumColumns" method="_tHKbIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1gqc0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1gqdEcyEe2rgspmIFjL-A" name="get" method="_tHKbJkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1gqdUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1hRgEcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFC7REcyEe2rgspmIFjL-A" type="_tEhW0UcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFC7QEcyEe2rgspmIFjL-A" name="set" method="_tHKbIkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFC7QUcyEe2rgspmIFjL-A" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFC7QkcyEe2rgspmIFjL-A" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFC7Q0cyEe2rgspmIFjL-A" name="element" type="_tEhW0UcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_s1h4kEcyEe2rgspmIFjL-A" name="Visualization">
              <ownedComment xmi:id="_tHmgAUcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_s1ifoEcyEe2rgspmIFjL-A" name="SystemChoices">
                <ownedLiteral xmi:id="_s1ifokcyEe2rgspmIFjL-A" name="SOURCE"/>
                <ownedLiteral xmi:id="_s1ifo0cyEe2rgspmIFjL-A" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_s1ifpEcyEe2rgspmIFjL-A" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_s1ifpUcyEe2rgspmIFjL-A" name="LATENCY"/>
                <ownedLiteral xmi:id="_s1ifpkcyEe2rgspmIFjL-A" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_s1ifp0cyEe2rgspmIFjL-A" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_s1jGsEcyEe2rgspmIFjL-A" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_s1jGsUcyEe2rgspmIFjL-A" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_s1jGs0cyEe2rgspmIFjL-A" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_s1jGtEcyEe2rgspmIFjL-A" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_s1jGtUcyEe2rgspmIFjL-A" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_s1jtwEcyEe2rgspmIFjL-A" name="toDisplay"/>
              <ownedOperation xmi:id="_s1jtwUcyEe2rgspmIFjL-A" name="toFile"/>
              <ownedOperation xmi:id="_s1jtwkcyEe2rgspmIFjL-A" name="toString">
                <ownedParameter xmi:id="_s1jtw0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1jtxEcyEe2rgspmIFjL-A" name="VisualizationFactory">
              <ownedComment xmi:id="_tHmgAkcyEe2rgspmIFjL-A">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHKbKkcyEe2rgspmIFjL-A" name="createProgramVisualization" specification="_tDWSIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHKbK0cyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHKbLEcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHKbLUcyEe2rgspmIFjL-A" name="choice" type="_s1ifoEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHKbLkcyEe2rgspmIFjL-A" type="_s1h4kEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHKbL0cyEe2rgspmIFjL-A" name="createWorkLoadVisualization" specification="_tDWSJUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHKbMEcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHKbMUcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHKbMkcyEe2rgspmIFjL-A" name="choice" type="_s1jGsUcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHKbM0cyEe2rgspmIFjL-A" type="_s1h4kEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tDWSIEcyEe2rgspmIFjL-A" name="createProgramVisualization" isStatic="true" method="_tHKbKkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDWSIUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDWSIkcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDWSI0cyEe2rgspmIFjL-A" name="choice" type="_s1ifoEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDWSJEcyEe2rgspmIFjL-A" type="_s1h4kEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDWSJUcyEe2rgspmIFjL-A" name="createWorkLoadVisualization" isStatic="true" method="_tHKbL0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDWSJkcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDWSJ0cyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDWSKEcyEe2rgspmIFjL-A" name="choice" type="_s1jGsUcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDWSKUcyEe2rgspmIFjL-A" type="_s1h4kEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1li8EcyEe2rgspmIFjL-A" name="VisualizationImplementation">
              <ownedComment xmi:id="_tHmgA0cyEe2rgspmIFjL-A">
                <body>&lt;h1>Implementation of the Visualization Interface.&lt;/h1>&#xD;
&lt;p>The VisualizationImplementation class allows the user to request visualizations of various aspects of the given file content in Description object.&#xD;
Methods to print Workload Descriptions to the console, write to a file, and create string are defined.&#xD;
Visualizations are created based on system choices of SOURCE, RELIABILITIES, SIMULATOR_INPUT, LATENCY, LATENCY_REPORT, &#xD;
DEADLINE_REPORT, and CHANNEL. Workload choices include INPUT_GRAPH, COMUNICATION_GRAPH, GRAPHVIZ.&lt;/p>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGNY4UcyEe2rgspmIFjL-A" name="visualization" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIHdZEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGNY40cyEe2rgspmIFjL-A" name="fileContent" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIIEcUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGN_8EcyEe2rgspmIFjL-A" name="displayContent" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIIEdEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGN_8kcyEe2rgspmIFjL-A" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGN_9EcyEe2rgspmIFjL-A" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGN_9kcyEe2rgspmIFjL-A" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGOnAUcyEe2rgspmIFjL-A" name="fm" visibility="private" type="_szZKkEcyEe2rgspmIFjL-A" association="_tIIrgUcyEe2rgspmIFjL-A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGOnAkcyEe2rgspmIFjL-A" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGOnBEcyEe2rgspmIFjL-A" name="warp" visibility="private" type="_s1_LkEcyEe2rgspmIFjL-A" association="_tIIrhEcyEe2rgspmIFjL-A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGOnBUcyEe2rgspmIFjL-A" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGPOEEcyEe2rgspmIFjL-A" name="workLoad" visibility="private" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tIJSkEcyEe2rgspmIFjL-A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGPOEUcyEe2rgspmIFjL-A" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_tDW5MEcyEe2rgspmIFjL-A" client="_s1li8EcyEe2rgspmIFjL-A" supplier="_s1h4kEcyEe2rgspmIFjL-A" contract="_s1h4kEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCMEcyEe2rgspmIFjL-A" name="VisualizationImplementation" specification="_tFEJYkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCMUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLCMkcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLCM0cyEe2rgspmIFjL-A" name="choice" type="_tFEJYEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLCNEcyEe2rgspmIFjL-A" type="_s1li8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCNUcyEe2rgspmIFjL-A" name="VisualizationImplementation" specification="_tFFXgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCNkcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLCN0cyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLCOEcyEe2rgspmIFjL-A" name="choice" type="_tFEwc0cyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLCOUcyEe2rgspmIFjL-A" type="_s1li8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCOkcyEe2rgspmIFjL-A" name="toDisplay" specification="_s1nYIEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>System.out.println(displayContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCO0cyEe2rgspmIFjL-A" name="toFile" specification="_s1n_MkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCPEcyEe2rgspmIFjL-A" name="toString" specification="_s1n_NkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCPUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCPkcyEe2rgspmIFjL-A" name="createVisualization" specification="_tFFXh0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCP0cyEe2rgspmIFjL-A" name="choice" type="_tFEJYEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCQEcyEe2rgspmIFjL-A" name="createVisualization" specification="_tFF-kEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCQUcyEe2rgspmIFjL-A" name="choice" type="_tFEwc0cyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCQkcyEe2rgspmIFjL-A" name="createVisualization" specification="_tFF-kkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCQ0cyEe2rgspmIFjL-A" name="obj" type="_tEhW0UcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 displayContent = obj.displayVisualization();&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLCREcyEe2rgspmIFjL-A" name="createFileNameTemplate" specification="_s1pNUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLCRUcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLCRkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1nYIEcyEe2rgspmIFjL-A" name="toDisplay" method="_tHLCOkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s1n_MkcyEe2rgspmIFjL-A" name="toFile" method="_tHLCO0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s1n_NkcyEe2rgspmIFjL-A" name="toString" method="_tHLCPEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1omQEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1pNUEcyEe2rgspmIFjL-A" name="createFileNameTemplate" visibility="private" method="_tHLCREcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHmgCEcyEe2rgspmIFjL-A">
                  <body>Creates the fileNameTemplate using the full output path and input filename.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param outputDirectory The output used to create a new directory.&#xD;
   * @return fileNameTemplate, a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_s1pNUUcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1pNUkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tFEJYkcyEe2rgspmIFjL-A" name="VisualizationImplementation" method="_tHLCMEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFEwcEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFEwcUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHmgBEcyEe2rgspmIFjL-A">
                  <body>The first constructor method sets up the inputFileName and fileNameTemplate based on the WarpInterface&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The interface to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFEJY0cyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFEJZEcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFEJZUcyEe2rgspmIFjL-A" name="choice" type="_tFEJYEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFEwckcyEe2rgspmIFjL-A" type="_s1li8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFFXgEcyEe2rgspmIFjL-A" name="VisualizationImplementation" method="_tHLCNUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFFXhEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFFXhUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHmgBUcyEe2rgspmIFjL-A">
                  <body>The second constructor method sets up the inputFileName and fileNameTemplate based on the Workload&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The work load to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The work load visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFFXgUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFFXgkcyEe2rgspmIFjL-A" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFFXg0cyEe2rgspmIFjL-A" name="choice" type="_tFEwc0cyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFFXhkcyEe2rgspmIFjL-A" type="_s1li8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFFXh0cyEe2rgspmIFjL-A" name="createVisualization" visibility="private" method="_tHLCPkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHmgBkcyEe2rgspmIFjL-A">
                  <body>Given the SystemChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFFXiEcyEe2rgspmIFjL-A" name="choice" type="_tFEJYEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFF-kEcyEe2rgspmIFjL-A" name="createVisualization" visibility="private" method="_tHLCQEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHmgB0cyEe2rgspmIFjL-A">
                  <body>Given the WorkLoadChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The work load visualization selected.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFF-kUcyEe2rgspmIFjL-A" name="choice" type="_tFEwc0cyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFF-kkcyEe2rgspmIFjL-A" name="createVisualization" visibility="private" method="_tHLCQkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFF-k0cyEe2rgspmIFjL-A" name="obj" type="_tEhW0UcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1sQoEcyEe2rgspmIFjL-A" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_tHmgCUcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGPOE0cyEe2rgspmIFjL-A" name="fm" visibility="private" type="_szZKkEcyEe2rgspmIFjL-A" association="_tIJSk0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGP1IEcyEe2rgspmIFjL-A" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGP1IkcyEe2rgspmIFjL-A" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGP1JEcyEe2rgspmIFjL-A" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGP1JUcyEe2rgspmIFjL-A" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLpQEcyEe2rgspmIFjL-A" name="VisualizationObject" specification="_tDZVcEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLpQUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpQkcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpQ0cyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpREcyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); &#xD;
		this.suffix = suffix; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLpRUcyEe2rgspmIFjL-A" name="VisualizationObject" specification="_tDZVd0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLpRkcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpR0cyEe2rgspmIFjL-A" name="warp" type="_s1bK4EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpSEcyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpSUcyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()); &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()); &#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLpSkcyEe2rgspmIFjL-A" name="VisualizationObject" specification="_tDZ8gEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLpS0cyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpTEcyEe2rgspmIFjL-A" name="warp" type="_s1bK4EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpTUcyEe2rgspmIFjL-A" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpTkcyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpT0cyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()) + nameExtension; &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()) + nameExtension; &#xD;
		}&#xD;
		&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLpUEcyEe2rgspmIFjL-A" name="VisualizationObject" specification="_tDZ8iEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLpUUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpUkcyEe2rgspmIFjL-A" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpU0cyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpVEcyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension; &#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHLpVUcyEe2rgspmIFjL-A" name="nameExtension" specification="_tFHMsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHLpVkcyEe2rgspmIFjL-A" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpV0cyEe2rgspmIFjL-A" name="m" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHLpWEcyEe2rgspmIFjL-A" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHLpWUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,&#xD;
				schName,&#xD;
				String.valueOf(m),&#xD;
				String.valueOf(e2e)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQUEcyEe2rgspmIFjL-A" name="nameExtension" specification="_s1uF0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQUUcyEe2rgspmIFjL-A" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHMQUkcyEe2rgspmIFjL-A" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHMQU0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,&#xD;
				schName,&#xD;
				String.valueOf(numFaults)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQVEcyEe2rgspmIFjL-A" name="getFileManager" specification="_s1uF1EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQVUcyEe2rgspmIFjL-A" type="_szZKkEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQVkcyEe2rgspmIFjL-A" name="visualization" specification="_s1us4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQV0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		content.add(NOT_IMPLEMENTED);&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQWEcyEe2rgspmIFjL-A" name="createFile" specification="_s1us4UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQWUcyEe2rgspmIFjL-A" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHMQWkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQW0cyEe2rgspmIFjL-A" name="fileVisualization" specification="_s1us5EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQXEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 	fileContent.addAll(visualization());&#xD;
 	fileContent.addAll(createFooter());&#xD;
 	return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQXUcyEe2rgspmIFjL-A" name="displayVisualization" specification="_s1us5UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQXkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return visualization();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQX0cyEe2rgspmIFjL-A" name="createHeader" specification="_s1vT8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQYEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHMQYUcyEe2rgspmIFjL-A" name="createFooter" specification="_s1vT8UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHMQYkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1uF0EcyEe2rgspmIFjL-A" name="nameExtension" visibility="private" method="_tHMQUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1uF0UcyEe2rgspmIFjL-A" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1uF0kcyEe2rgspmIFjL-A" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1uF00cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1uF1EcyEe2rgspmIFjL-A" name="getFileManager" method="_tHMQVEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHmgCkcyEe2rgspmIFjL-A">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDajk0cyEe2rgspmIFjL-A" type="_szZKkEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1us4EcyEe2rgspmIFjL-A" name="visualization" method="_tHMQVkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDajlEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1us4UcyEe2rgspmIFjL-A" name="createFile" method="_tHMQWEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s1us4kcyEe2rgspmIFjL-A" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s1us40cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1us5EcyEe2rgspmIFjL-A" name="fileVisualization" method="_tHMQW0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDajlUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1us5UcyEe2rgspmIFjL-A" name="displayVisualization" method="_tHMQXUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDajlkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1vT8EcyEe2rgspmIFjL-A" name="createHeader" method="_tHMQX0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDajl0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1vT8UcyEe2rgspmIFjL-A" name="createFooter" method="_tHMQYUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDajmEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDZVcEcyEe2rgspmIFjL-A" name="VisualizationObject" visibility="package" method="_tHLpQEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDZVdEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDZVdUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDZVcUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZVckcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZVc0cyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDZVdkcyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDZVd0cyEe2rgspmIFjL-A" name="VisualizationObject" visibility="package" method="_tHLpRUcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDZVe0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDZVfEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDZVeEcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZVeUcyEe2rgspmIFjL-A" name="warp" type="_s1bK4EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZVekcyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDZVfUcyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDZ8gEcyEe2rgspmIFjL-A" name="VisualizationObject" visibility="package" method="_tHLpSkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDZ8hUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDZ8hkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDZ8gUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZ8gkcyEe2rgspmIFjL-A" name="warp" type="_s1bK4EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZ8g0cyEe2rgspmIFjL-A" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDZ8hEcyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDZ8h0cyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDZ8iEcyEe2rgspmIFjL-A" name="VisualizationObject" visibility="package" method="_tHLpUEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDajkEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDajkUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDZ8iUcyEe2rgspmIFjL-A" name="fm" type="_szZKkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDZ8ikcyEe2rgspmIFjL-A" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDZ8i0cyEe2rgspmIFjL-A" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDajkkcyEe2rgspmIFjL-A" type="_s1sQoEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFHMsEcyEe2rgspmIFjL-A" name="nameExtension" visibility="private" method="_tHLpVUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFHMsUcyEe2rgspmIFjL-A" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFHMskcyEe2rgspmIFjL-A" name="m" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFHMs0cyEe2rgspmIFjL-A" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFHMtEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s1yXQEcyEe2rgspmIFjL-A" name="WarpSystem">
              <ownedComment xmi:id="_tHmgC0cyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGQcMEcyEe2rgspmIFjL-A" name="program" visibility="private" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tIJ5oEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGQcMkcyEe2rgspmIFjL-A" name="workLoad" visibility="private" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tIJ5o0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGQcNEcyEe2rgspmIFjL-A" name="ra" visibility="private" type="_s018EEcyEe2rgspmIFjL-A" association="_tIJ5pkcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGRDQUcyEe2rgspmIFjL-A" name="la" visibility="private" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tIKgsUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGRDQ0cyEe2rgspmIFjL-A" name="ca" visibility="private" type="_sykEIEcyEe2rgspmIFjL-A" association="_tIKgtEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGRDRUcyEe2rgspmIFjL-A" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGSRY0cyEe2rgspmIFjL-A" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGSRZEcyEe2rgspmIFjL-A" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGS4cEcyEe2rgspmIFjL-A" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGS4cUcyEe2rgspmIFjL-A" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_tDbKoEcyEe2rgspmIFjL-A" client="_s1yXQEcyEe2rgspmIFjL-A" supplier="_s1_LkEcyEe2rgspmIFjL-A" contract="_s1_LkEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHM3YkcyEe2rgspmIFjL-A" name="WarpSystem" specification="_tFIa0kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHM3Y0cyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHM3ZEcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHM3ZUcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHM3ZkcyEe2rgspmIFjL-A" type="_s1yXQEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNecEcyEe2rgspmIFjL-A" name="toWorkload" specification="_s1zlYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNecUcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNeckcyEe2rgspmIFjL-A" name="toProgram" specification="_s10McEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNec0cyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNedEcyEe2rgspmIFjL-A" name="toReliabilityAnalysis" specification="_s10MdEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNedUcyEe2rgspmIFjL-A" type="_s018EEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNedkcyEe2rgspmIFjL-A" name="toSimulator" specification="_s10zg0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNed0cyEe2rgspmIFjL-A" type="_s1YHkkcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNeeEcyEe2rgspmIFjL-A" name="toLatencyAnalysis" specification="_s11akkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNeeUcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNeekcyEe2rgspmIFjL-A" name="toChannelAnalysis" specification="_s12BoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNee0cyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHNefEcyEe2rgspmIFjL-A" name="reliabilitiesMet" specification="_s12BpEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHNefUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFgEcyEe2rgspmIFjL-A" name="deadlinesMet" specification="_s12os0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFgUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFgkcyEe2rgspmIFjL-A" name="createProgram" specification="_tFJB4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFg0cyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHOFhEcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHOFhUcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFhkcyEe2rgspmIFjL-A" name="getNumFaults" specification="_s13PwUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFh0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFiEcyEe2rgspmIFjL-A" name="getMinPacketReceptionRate" specification="_s1320kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFiUcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFikcyEe2rgspmIFjL-A" name="getE2e" specification="_s1321kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFi0cyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFjEcyEe2rgspmIFjL-A" name="getName" specification="_s14d40cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFjUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFjkcyEe2rgspmIFjL-A" name="getSchedulerName" specification="_s15E80cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFj0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFkEcyEe2rgspmIFjL-A" name="getNumTransmissions" specification="_s15sAkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFkUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOFkkcyEe2rgspmIFjL-A" name="getOptimizationFlag" specification="_s16TEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOFk0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s1zlYEcyEe2rgspmIFjL-A" name="toWorkload" method="_tHNecEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDbxsEcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s10McEcyEe2rgspmIFjL-A" name="toProgram" method="_tHNeckcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDbxsUcyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s10MdEcyEe2rgspmIFjL-A" name="toReliabilityAnalysis" method="_tHNedEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDbxskcyEe2rgspmIFjL-A" type="_s018EEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s10zg0cyEe2rgspmIFjL-A" name="toSimulator" method="_tHNedkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDcYwEcyEe2rgspmIFjL-A" type="_s1YHkkcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s11akkcyEe2rgspmIFjL-A" name="toLatencyAnalysis" method="_tHNeeEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDcYwUcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s12BoEcyEe2rgspmIFjL-A" name="toChannelAnalysis" method="_tHNeekcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDcYwkcyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s12BpEcyEe2rgspmIFjL-A" name="reliabilitiesMet" method="_tHNefEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s12BpUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s12os0cyEe2rgspmIFjL-A" name="deadlinesMet" method="_tHOFgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s12otEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s13PwUcyEe2rgspmIFjL-A" name="getNumFaults" method="_tHOFhkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s13PwkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s1320kcyEe2rgspmIFjL-A" name="getMinPacketReceptionRate" method="_tHOFiEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFJB5EcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1321kcyEe2rgspmIFjL-A" name="getE2e" method="_tHOFikcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFJB5UcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s14d40cyEe2rgspmIFjL-A" name="getName" method="_tHOFjEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s14d5EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s15E80cyEe2rgspmIFjL-A" name="getSchedulerName" method="_tHOFjkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s15E9EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s15sAkcyEe2rgspmIFjL-A" name="getNumTransmissions" method="_tHOFkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s15sA0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s16TEkcyEe2rgspmIFjL-A" name="getOptimizationFlag" method="_tHOFkkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s16TE0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s16TF0cyEe2rgspmIFjL-A" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_tFIa0kcyEe2rgspmIFjL-A" name="WarpSystem" method="_tHM3YkcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFIa1kcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFIa10cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tFIa00cyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFIa1EcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFIa1UcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFIa2EcyEe2rgspmIFjL-A" type="_s1yXQEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFJB4EcyEe2rgspmIFjL-A" name="createProgram" visibility="private" method="_tHOFgkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFJB4UcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFJB4kcyEe2rgspmIFjL-A" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFJB40cyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s199cEcyEe2rgspmIFjL-A" name="WarpPoset">
              <ownedComment xmi:id="_tHnHEEcyEe2rgspmIFjL-A">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_tDeN9UcyEe2rgspmIFjL-A" general="_s0Z3MEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOskEcyEe2rgspmIFjL-A" name="WarpPoset" specification="_tDeN8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOskUcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHOskkcyEe2rgspmIFjL-A" type="_s199cEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOsk0cyEe2rgspmIFjL-A" name="findCoordinator" specification="_tFJo8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHOslEcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHOslUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_tDeN8EcyEe2rgspmIFjL-A" name="WarpPoset" visibility="package" method="_tHOskEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tDeN8kcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tDeN80cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tDeN8UcyEe2rgspmIFjL-A" name="workload" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDeN9EcyEe2rgspmIFjL-A" type="_s199cEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFJo8EcyEe2rgspmIFjL-A" name="findCoordinator" visibility="protected" method="_tHOsk0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFJo8UcyEe2rgspmIFjL-A" name="nodesInFlow" type="_tB3rcEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFKQAEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_s1_LkEcyEe2rgspmIFjL-A" name="WarpInterface">
              <ownedComment xmi:id="_tHnHEUcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_tDe1AEcyEe2rgspmIFjL-A" general="_s1bK4EcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s1_LkUcyEe2rgspmIFjL-A" name="toWorkload">
                <ownedParameter xmi:id="_tDe1AUcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1_LkkcyEe2rgspmIFjL-A" name="toProgram">
                <ownedParameter xmi:id="_tDe1AkcyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1_yoEcyEe2rgspmIFjL-A" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_tDe1A0cyEe2rgspmIFjL-A" type="_s018EEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1_yoUcyEe2rgspmIFjL-A" name="toSimulator">
                <ownedParameter xmi:id="_tDe1BEcyEe2rgspmIFjL-A" type="_s1YHkkcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1_yokcyEe2rgspmIFjL-A" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_tDe1BUcyEe2rgspmIFjL-A" type="_s0BcsEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s1_yo0cyEe2rgspmIFjL-A" name="toChannelAnalysis">
                <ownedParameter xmi:id="_tDe1BkcyEe2rgspmIFjL-A" type="_sykEIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s2AZsEcyEe2rgspmIFjL-A" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_s2AZsUcyEe2rgspmIFjL-A" name="reliabilitiesMet">
                <ownedParameter xmi:id="_s2AZskcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2AZs0cyEe2rgspmIFjL-A" name="deadlinesMet">
                <ownedParameter xmi:id="_s2AZtEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s2BAwEcyEe2rgspmIFjL-A" name="WarpDSL">
              <ownedComment xmi:id="_tHnHEkcyEe2rgspmIFjL-A">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGTfgEcyEe2rgspmIFjL-A" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGTfgUcyEe2rgspmIFjL-A" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGTfgkcyEe2rgspmIFjL-A" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGTfg0cyEe2rgspmIFjL-A" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGUGkEcyEe2rgspmIFjL-A" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUGkUcyEe2rgspmIFjL-A" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHP6skcyEe2rgspmIFjL-A" name="getInstructionParameters" specification="_s2FSMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHP6s0cyEe2rgspmIFjL-A" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHP6tEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s2FSMEcyEe2rgspmIFjL-A" name="getInstructionParameters" method="_tHP6skcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2FSMUcyEe2rgspmIFjL-A" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFK3EEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_s2CO4EcyEe2rgspmIFjL-A" name="InstructionParameters">
                <ownedAttribute xmi:id="_tGUGkkcyEe2rgspmIFjL-A" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUGk0cyEe2rgspmIFjL-A" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGUGlEcyEe2rgspmIFjL-A" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUGlUcyEe2rgspmIFjL-A" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGUtoEcyEe2rgspmIFjL-A" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUtoUcyEe2rgspmIFjL-A" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGUtokcyEe2rgspmIFjL-A" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUto0cyEe2rgspmIFjL-A" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGUtpEcyEe2rgspmIFjL-A" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUtpUcyEe2rgspmIFjL-A" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGUtpkcyEe2rgspmIFjL-A" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGUtp0cyEe2rgspmIFjL-A" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGVUsEcyEe2rgspmIFjL-A" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGVUsUcyEe2rgspmIFjL-A" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHOslkcyEe2rgspmIFjL-A" name="getCoordinator" specification="_s2C18EcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHOsl0cyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHPToEcyEe2rgspmIFjL-A" name="setCoordinator" specification="_s2DdAUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHPToUcyEe2rgspmIFjL-A" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHPTokcyEe2rgspmIFjL-A" name="setName" specification="_s2DdA0cyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHPTo0cyEe2rgspmIFjL-A" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHPTpEcyEe2rgspmIFjL-A" name="setFlow" specification="_s2EEEUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHPTpUcyEe2rgspmIFjL-A" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHPTpkcyEe2rgspmIFjL-A" name="setSrc" specification="_s2EEE0cyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHPTp0cyEe2rgspmIFjL-A" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHPTqEcyEe2rgspmIFjL-A" name="setSnk" specification="_s2EEFUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHPTqUcyEe2rgspmIFjL-A" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHPTqkcyEe2rgspmIFjL-A" name="setChannel" specification="_s2ErIEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHPTq0cyEe2rgspmIFjL-A" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHP6sEcyEe2rgspmIFjL-A" name="unused" specification="_s2ErIkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHP6sUcyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_s2C18EcyEe2rgspmIFjL-A" name="getCoordinator" method="_tHOslkcyEe2rgspmIFjL-A">
                  <ownedComment xmi:id="_tHnHE0cyEe2rgspmIFjL-A">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_s2DdAEcyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2DdAUcyEe2rgspmIFjL-A" name="setCoordinator" method="_tHPToEcyEe2rgspmIFjL-A">
                  <ownedComment xmi:id="_tHnHFEcyEe2rgspmIFjL-A">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_s2DdAkcyEe2rgspmIFjL-A" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2DdA0cyEe2rgspmIFjL-A" name="setName" visibility="private" method="_tHPTokcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_s2EEEEcyEe2rgspmIFjL-A" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2EEEUcyEe2rgspmIFjL-A" name="setFlow" visibility="private" method="_tHPTpEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_s2EEEkcyEe2rgspmIFjL-A" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2EEE0cyEe2rgspmIFjL-A" name="setSrc" visibility="private" method="_tHPTpkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_s2EEFEcyEe2rgspmIFjL-A" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2EEFUcyEe2rgspmIFjL-A" name="setSnk" visibility="private" method="_tHPTqEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_s2EEFkcyEe2rgspmIFjL-A" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2ErIEcyEe2rgspmIFjL-A" name="setChannel" visibility="private" method="_tHPTqkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_s2ErIUcyEe2rgspmIFjL-A" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_s2ErIkcyEe2rgspmIFjL-A" name="unused" method="_tHP6sEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_s2ErI0cyEe2rgspmIFjL-A" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_s2F5QUcyEe2rgspmIFjL-A" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_tFMFMUcyEe2rgspmIFjL-A" general="_tFLeIEcyEe2rgspmIFjL-A"/>
                <ownedAttribute xmi:id="_tGVUskcyEe2rgspmIFjL-A" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_tGVUtEcyEe2rgspmIFjL-A" name="instructionParametersArrayList" visibility="package" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tILHwUcyEe2rgspmIFjL-A"/>
                <ownedAttribute xmi:id="_tGV7wkcyEe2rgspmIFjL-A" name="instructionParameters" visibility="package" type="_s2CO4EcyEe2rgspmIFjL-A" association="_tILHxEcyEe2rgspmIFjL-A"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHP6tUcyEe2rgspmIFjL-A" name="ListenerDsl" specification="_s2GgUEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHP6tkcyEe2rgspmIFjL-A" type="_s2F5QUcyEe2rgspmIFjL-A" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHP6t0cyEe2rgspmIFjL-A" name="getInstructionParameters" specification="_s2GgVEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHP6uEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHP6uUcyEe2rgspmIFjL-A" name="enterAction" specification="_tDgDIUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHP6ukcyEe2rgspmIFjL-A" name="ctx" type="_tDfcEEcyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHP6u0cyEe2rgspmIFjL-A" name="exitAction" specification="_tDgqMkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHP6vEcyEe2rgspmIFjL-A" name="ctx" type="_tDfcEEcyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHQhwEcyEe2rgspmIFjL-A" name="exitFlowName" specification="_tDhRQkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHQhwUcyEe2rgspmIFjL-A" name="ctx" type="_tDhRQEcyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHQhwkcyEe2rgspmIFjL-A" name="exitCmd" specification="_tDh4VEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHQhw0cyEe2rgspmIFjL-A" name="ctx" type="_tDh4UkcyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHQhxEcyEe2rgspmIFjL-A" name="exitSrcNode" specification="_tDifZUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHQhxUcyEe2rgspmIFjL-A" name="ctx" type="_tDifY0cyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHQhxkcyEe2rgspmIFjL-A" name="exitSnkNode" specification="_tDjtgUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHQhx0cyEe2rgspmIFjL-A" name="ctx" type="_tDjGdEcyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHQhyEcyEe2rgspmIFjL-A" name="exitChannel" specification="_tDk7oUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tHQhyUcyEe2rgspmIFjL-A" name="ctx" type="_tDkUk0cyEe2rgspmIFjL-A"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_s2GgUEcyEe2rgspmIFjL-A" name="ListenerDsl" visibility="package" method="_tHP6tUcyEe2rgspmIFjL-A">
                  <eAnnotations xmi:id="_s2GgUUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_s2GgUkcyEe2rgspmIFjL-A" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_s2GgU0cyEe2rgspmIFjL-A" type="_s2F5QUcyEe2rgspmIFjL-A" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_s2GgVEcyEe2rgspmIFjL-A" name="getInstructionParameters" method="_tHP6t0cyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tFMFMEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDgDIUcyEe2rgspmIFjL-A" name="enterAction" method="_tHP6uUcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDgDIkcyEe2rgspmIFjL-A" name="ctx" type="_tDfcEEcyEe2rgspmIFjL-A"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDgqMkcyEe2rgspmIFjL-A" name="exitAction" method="_tHP6u0cyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDgqM0cyEe2rgspmIFjL-A" name="ctx" type="_tDfcEEcyEe2rgspmIFjL-A"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDhRQkcyEe2rgspmIFjL-A" name="exitFlowName" method="_tHQhwEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDhRQ0cyEe2rgspmIFjL-A" name="ctx" type="_tDhRQEcyEe2rgspmIFjL-A"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDh4VEcyEe2rgspmIFjL-A" name="exitCmd" method="_tHQhwkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDh4VUcyEe2rgspmIFjL-A" name="ctx" type="_tDh4UkcyEe2rgspmIFjL-A"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDifZUcyEe2rgspmIFjL-A" name="exitSrcNode" method="_tHQhxEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDjGcEcyEe2rgspmIFjL-A" name="ctx" type="_tDifY0cyEe2rgspmIFjL-A"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDjtgUcyEe2rgspmIFjL-A" name="exitSnkNode" method="_tHQhxkcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDjtgkcyEe2rgspmIFjL-A" name="ctx" type="_tDjGdEcyEe2rgspmIFjL-A"/>
                </ownedOperation>
                <ownedOperation xmi:id="_tDk7oUcyEe2rgspmIFjL-A" name="exitChannel" method="_tHQhyEcyEe2rgspmIFjL-A">
                  <ownedParameter xmi:id="_tDk7okcyEe2rgspmIFjL-A" name="ctx" type="_tDkUk0cyEe2rgspmIFjL-A"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s2KxwEcyEe2rgspmIFjL-A" name="Warp">
              <ownedComment xmi:id="_tHnHFUcyEe2rgspmIFjL-A">
                <body>&lt;h1>This is the main Java class for the Warp project.&lt;/h1>&#xD;
&lt;p>Takes an input file and creates either a WorkLoad or WarpInterface to process the file based&#xD;
on the arguments given on runtime. Outputs a file with visualization.&lt;/p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGWi0EcyEe2rgspmIFjL-A" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGWi0UcyEe2rgspmIFjL-A" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXJ4EcyEe2rgspmIFjL-A" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_tE80oEcyEe2rgspmIFjL-A" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGXJ4UcyEe2rgspmIFjL-A" value="1.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXJ4kcyEe2rgspmIFjL-A" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_tE80oEcyEe2rgspmIFjL-A" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGXJ40cyEe2rgspmIFjL-A" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXJ5EcyEe2rgspmIFjL-A" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGXJ5UcyEe2rgspmIFjL-A" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXJ5kcyEe2rgspmIFjL-A" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_s1bx8EcyEe2rgspmIFjL-A" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGXJ50cyEe2rgspmIFjL-A" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXJ6EcyEe2rgspmIFjL-A" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGXw8EcyEe2rgspmIFjL-A" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXw8UcyEe2rgspmIFjL-A" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGXw80cyEe2rgspmIFjL-A" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGYYAUcyEe2rgspmIFjL-A" name="minLQ" visibility="private" isStatic="true" type="_tE80oEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGYYA0cyEe2rgspmIFjL-A" name="e2e" visibility="private" isStatic="true" type="_tE80oEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGY_EEcyEe2rgspmIFjL-A" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGY_EkcyEe2rgspmIFjL-A" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGY_FEcyEe2rgspmIFjL-A" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGZmIUcyEe2rgspmIFjL-A" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGZmI0cyEe2rgspmIFjL-A" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGaNMUcyEe2rgspmIFjL-A" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGaNM0cyEe2rgspmIFjL-A" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGa0QEcyEe2rgspmIFjL-A" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGa0QkcyEe2rgspmIFjL-A" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGa0REcyEe2rgspmIFjL-A" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGbbUEcyEe2rgspmIFjL-A" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGbbUkcyEe2rgspmIFjL-A" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGbbVEcyEe2rgspmIFjL-A" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGbbVkcyEe2rgspmIFjL-A" name="schedulerSelected" visibility="private" isStatic="true" type="_s1bx8EcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI0EcyEe2rgspmIFjL-A" name="main" specification="_s2Mm8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI0UcyEe2rgspmIFjL-A" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHRI0kcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI00cyEe2rgspmIFjL-A" name="visualize" specification="_tDpNEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI1EcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHRI1UcyEe2rgspmIFjL-A" name="choice" type="_s1jGsUcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI1kcyEe2rgspmIFjL-A" name="visualize" specification="_tDp0IEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI10cyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHRI2EcyEe2rgspmIFjL-A" name="choice" type="_s1ifoEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI2UcyEe2rgspmIFjL-A" name="verifyPerformanceRequirements" specification="_tDp0I0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI2kcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI20cyEe2rgspmIFjL-A" name="verifyReliabilities" specification="_tDp0JUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI3EcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI3UcyEe2rgspmIFjL-A" name="verifyDeadlines" specification="_tDqbMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI3kcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRI30cyEe2rgspmIFjL-A" name="verifyNoChannelConflicts" specification="_tDqbMkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRI4EcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRv4EcyEe2rgspmIFjL-A" name="setWarpParameters" specification="_s2OcIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRv4UcyEe2rgspmIFjL-A" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHRv4kcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRv40cyEe2rgspmIFjL-A" name="printWarpParameters" specification="_s2OcI0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s2Mm8EcyEe2rgspmIFjL-A" name="main" isStatic="true" method="_tHRI0EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHFkcyEe2rgspmIFjL-A">
                  <body>The main method of Warp.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments passed in at runtime</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2NOAEcyEe2rgspmIFjL-A" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2NOAUcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2OcIEcyEe2rgspmIFjL-A" name="setWarpParameters" visibility="private" isStatic="true" method="_tHRv4EcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuIEcyEe2rgspmIFjL-A">
                  <body>Sets the class variables based on the arguments given at runtime.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments from the main method</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2OcIUcyEe2rgspmIFjL-A" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2OcIkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2OcI0cyEe2rgspmIFjL-A" name="printWarpParameters" visibility="private" isStatic="true" method="_tHRv40cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuIUcyEe2rgspmIFjL-A">
                  <body>Prints all system configuration parameters to the screen.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_tDpNEEcyEe2rgspmIFjL-A" name="visualize" visibility="private" isStatic="true" method="_tHRI00cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHF0cyEe2rgspmIFjL-A">
                  <body>Outputs a file with a visual representation of the WorkLoad based on the choice parameter.&lt;br>&#xD;
   * If verbose mode is enabled it will also print the results to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The WorkLoad to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off WorkLoadChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDpNEUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDpNEkcyEe2rgspmIFjL-A" name="choice" type="_s1jGsUcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDp0IEcyEe2rgspmIFjL-A" name="visualize" visibility="private" isStatic="true" method="_tHRI1kcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHGEcyEe2rgspmIFjL-A">
                  <body>Outputs a file with visual representation of the WarpInterface based on the choice parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off SystemChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDp0IUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDp0IkcyEe2rgspmIFjL-A" name="choice" type="_s1ifoEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDp0I0cyEe2rgspmIFjL-A" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_tHRI2UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHGUcyEe2rgspmIFjL-A">
                  <body>Verifies the Deadlines, Reliabilities, and Channel Conflicts with their respective method calls.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDp0JEcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDp0JUcyEe2rgspmIFjL-A" name="verifyReliabilities" visibility="private" isStatic="true" method="_tHRI20cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHGkcyEe2rgspmIFjL-A">
                  <body>Verifies that the WarpInterface reliabilities are met. If the WarpInterface fails to meet the reliabilities&#xD;
   * a system error will be printed out.&lt;br>&#xD;
   * If verbose mode is enabled and reliabilities are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDp0JkcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDqbMEcyEe2rgspmIFjL-A" name="verifyDeadlines" visibility="private" isStatic="true" method="_tHRI3UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHG0cyEe2rgspmIFjL-A">
                  <body>Verifies that the WarpInterface meets all deadlines. If the WarpInterface fails to meet the deadlines&#xD;
   * a system error will be printed out as well as a visualization of the WarpInterface based on the&#xD;
   * DEADLINE_REPORT of SystemChoices enum.&lt;br>&#xD;
   * If verbose is enabled and deadlines are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDqbMUcyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDqbMkcyEe2rgspmIFjL-A" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_tHRI30cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnHHEcyEe2rgspmIFjL-A">
                  <body>Verifies that the WarpInterface has no channel conflicts. If there is a channel conflict a system error&#xD;
   * will be printed to the screen along with a visualization of the WarpInterface based on CHANNEL of SystemChoice enum.&lt;br>&#xD;
   * If verbose mode is enabled and there are no channel conflicts verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to check for channel conflicts</body>
                </ownedComment>
                <ownedParameter xmi:id="_tDqbM0cyEe2rgspmIFjL-A" name="warp" type="_s1_LkEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s2T7sEcyEe2rgspmIFjL-A" name="WorkLoad">
              <ownedComment xmi:id="_tHnuIkcyEe2rgspmIFjL-A">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_tDwh1kcyEe2rgspmIFjL-A" general="_s2s9QEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGcCYUcyEe2rgspmIFjL-A" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcCYkcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcCY0cyEe2rgspmIFjL-A" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcCZEcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcCZUcyEe2rgspmIFjL-A" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcCZkcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcCZ0cyEe2rgspmIFjL-A" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcCaEcyEe2rgspmIFjL-A" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcCaUcyEe2rgspmIFjL-A" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcCakcyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcCa0cyEe2rgspmIFjL-A" name="minPacketReceptionRate" type="_tE80oEcyEe2rgspmIFjL-A" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcpcEcyEe2rgspmIFjL-A" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcpcUcyEe2rgspmIFjL-A" name="e2e" visibility="private" type="_tE80oEcyEe2rgspmIFjL-A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcpckcyEe2rgspmIFjL-A" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcpdEcyEe2rgspmIFjL-A" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcpdUcyEe2rgspmIFjL-A" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGcpdkcyEe2rgspmIFjL-A" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGcpd0cyEe2rgspmIFjL-A" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGdQgUcyEe2rgspmIFjL-A" name="flows" type="_szrecEcyEe2rgspmIFjL-A" association="_tHnuI0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGdQgkcyEe2rgspmIFjL-A" name="nodes" type="_s0R7YEcyEe2rgspmIFjL-A" association="_tHnuJUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGdQg0cyEe2rgspmIFjL-A" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGdQhUcyEe2rgspmIFjL-A" name="flowNamesInOriginalOrder" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tILu0UcyEe2rgspmIFjL-A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGd3kUcyEe2rgspmIFjL-A" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGd3kkcyEe2rgspmIFjL-A" name="flowNamesInPriorityOrder" type="_tB3rcEcyEe2rgspmIFjL-A" association="_tILu1EcyEe2rgspmIFjL-A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGeeoUcyEe2rgspmIFjL-A" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_tDuFk0cyEe2rgspmIFjL-A" client="_s2T7sEcyEe2rgspmIFjL-A" supplier="_s03KMEcyEe2rgspmIFjL-A" contract="_s03KMEcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRv5EcyEe2rgspmIFjL-A" name="WorkLoad" specification="_tFPIgEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRv5UcyEe2rgspmIFjL-A" name="m" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHRv5kcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHRv50cyEe2rgspmIFjL-A" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHRv6EcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHRv6UcyEe2rgspmIFjL-A" name="WorkLoad" specification="_tFPvkUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHRv6kcyEe2rgspmIFjL-A" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHRv60cyEe2rgspmIFjL-A" name="m" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHRv7EcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHRv7UcyEe2rgspmIFjL-A" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHRv7kcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW8EcyEe2rgspmIFjL-A" name="setDefaultParameters" specification="_s2WX8EcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW8UcyEe2rgspmIFjL-A" name="getE2e" specification="_s2W_AEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW8kcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW80cyEe2rgspmIFjL-A" name="getIntForFlowNames" specification="_s2W_AUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW9EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW9UcyEe2rgspmIFjL-A" name="getName" specification="_s2W_A0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW9kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW90cyEe2rgspmIFjL-A" name="setMinPacketReceptionRate" specification="_tFQWoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW-EcyEe2rgspmIFjL-A" name="minPacketReceptionRate" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW-UcyEe2rgspmIFjL-A" name="getMaxPhase" specification="_s2XmEUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW-kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW-0cyEe2rgspmIFjL-A" name="getMinPeriod" specification="_s2XmE0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW_EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHSW_UcyEe2rgspmIFjL-A" name="setE2e" specification="_tFQWokcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHSW_kcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-AEcyEe2rgspmIFjL-A" name="setIntForFlowNames" specification="_s2YNIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-AUcyEe2rgspmIFjL-A" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-AkcyEe2rgspmIFjL-A" name="setName" specification="_s2Y0MEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-A0cyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-BEcyEe2rgspmIFjL-A" name="setNodeChannel" specification="_s2ZbQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-BUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHS-BkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-B0cyEe2rgspmIFjL-A" name="getNodeChannel" specification="_s2ZbQ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-CEcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHS-CUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-CkcyEe2rgspmIFjL-A" name="addFlow" specification="_s2aCUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-C0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-DEcyEe2rgspmIFjL-A" name="isIntForNodeNames" specification="_s2aCUkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-DUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-DkcyEe2rgspmIFjL-A" name="isIntForFlowNames" specification="_s2aCVEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-D0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-EEcyEe2rgspmIFjL-A" name="addNodeToFlow" specification="_s2apYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-EUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHS-EkcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHS-E0cyEe2rgspmIFjL-A" name="getFlowPriority" specification="_s2apY0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHS-FEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHS-FUcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHS-FkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlEEcyEe2rgspmIFjL-A" name="setFlowPriority" specification="_s2apZ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlEUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlEkcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlE0cyEe2rgspmIFjL-A" name="setFlowPeriod" specification="_s2bQckcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlFEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlFUcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlFkcyEe2rgspmIFjL-A" name="setFlowDeadline" specification="_s2bQdUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlF0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlGEcyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlGUcyEe2rgspmIFjL-A" name="setFlowPhase" specification="_s2b3gUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlGkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlG0cyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlHEcyEe2rgspmIFjL-A" name="getFlowIndex" specification="_s2b3hEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlHUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlHkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlH0cyEe2rgspmIFjL-A" name="getFlowPriority" specification="_s2cekUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlIEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlIUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlIkcyEe2rgspmIFjL-A" name="getFlowPeriod" specification="_s2dFoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlI0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlJEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlJUcyEe2rgspmIFjL-A" name="getFlowDeadline" specification="_s2dFo0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlJkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlJ0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHTlKEcyEe2rgspmIFjL-A" name="getFlowPhase" specification="_s2dssUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHTlKUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHTlKkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMIEcyEe2rgspmIFjL-A" name="getFlowTxAttemptsPerLink" specification="_s2eTwEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMIUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUMIkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMI0cyEe2rgspmIFjL-A" name="setFlowsInPriorityOrder" specification="_s2eTw0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMJEcyEe2rgspmIFjL-A" name="setFlowsInDMorder" specification="_s2e60EcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMJUcyEe2rgspmIFjL-A" name="setFlowsInRMorder" specification="_s2e60UcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMJkcyEe2rgspmIFjL-A" name="setFlowsInRealTimeHARTorder" specification="_s2e60kcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMJ0cyEe2rgspmIFjL-A" name="finalizeCurrentFlow" specification="_s2e600cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMKEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMKUcyEe2rgspmIFjL-A" name="nextReleaseTime" specification="_s2fh4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMKkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUMK0cyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUMLEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMLUcyEe2rgspmIFjL-A" name="nextAbsoluteDeadline" specification="_s2fh5EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMLkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUML0cyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUMMEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMMUcyEe2rgspmIFjL-A" name="finalizeFlowWithE2eParameters" specification="_s2gI8UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMMkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMM0cyEe2rgspmIFjL-A" name="finalizeFlowWithFixedFaultTolerance" specification="_s2gI80cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMNEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUMNUcyEe2rgspmIFjL-A" name="getFixedTxPerLinkAndTotalTxCost" specification="_tDvTsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUMNkcyEe2rgspmIFjL-A" name="flow" type="_szeDEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHUMN0cyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUzMEcyEe2rgspmIFjL-A" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_tFQ9sEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUzMUcyEe2rgspmIFjL-A" name="flow" type="_szeDEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHUzMkcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHUzM0cyEe2rgspmIFjL-A" name="M" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHUzNEcyEe2rgspmIFjL-A" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUzNUcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUzNkcyEe2rgspmIFjL-A" name="getNodeNamesOrderedAlphabetically" specification="_s2gwAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUzN0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHUzOEcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUzOUcyEe2rgspmIFjL-A" name="getFlow" specification="_s2hXEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUzOkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUzO0cyEe2rgspmIFjL-A" type="_szeDEEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUzPEcyEe2rgspmIFjL-A" name="getFlowNames" specification="_s2hXEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUzPUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHUzPkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHUzP0cyEe2rgspmIFjL-A" name="getNodeIndex" specification="_s2h-IEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHUzQEcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHUzQUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHVaQEcyEe2rgspmIFjL-A" name="getNodesInFlow" specification="_s2h-I0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHVaQUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHVaQkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHVaQ0cyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHVaREcyEe2rgspmIFjL-A" name="getHyperPeriod" specification="_s2ilMUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHVaRUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHVaRkcyEe2rgspmIFjL-A" name="getTotalTxAttemptsInFlow" specification="_s2ilM0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHVaR0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHVaSEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHVaSUcyEe2rgspmIFjL-A" name="getNumTxAttemptsPerLink" specification="_s2jMQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHVaSkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHVaS0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHVaTEcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWBUEcyEe2rgspmIFjL-A" name="addEdge" specification="_tDwh0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWBUUcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHWBUkcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWBU0cyEe2rgspmIFjL-A" name="maxFlowLength" specification="_s2jMRUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWBVEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWBVUcyEe2rgspmIFjL-A" name="parser" specification="_tDwh00cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWBVkcyEe2rgspmIFjL-A" name="wkldDesc" type="_szLIIEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHWBV0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// loops through the workload description to find the flow name&#xD;
	  // that matches a specific flow name passed as the second input parameter.&#xD;
	  // prints the matching flow line&#xD;
	  for (String flowLine : wkldDesc) {&#xD;
		  if (flowLine.startsWith(flowName + ' ') || &#xD;
				  flowLine.startsWith(flowName + ':')) {   //accounts for .txt files where a colon follows flow name&#xD;
			  System.out.print(flowLine);&#xD;
		  }&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWBWEcyEe2rgspmIFjL-A" name="main" specification="_s2jzUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWBWUcyEe2rgspmIFjL-A" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHWBWkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	  System.out.println(wkld.name);&#xD;
	  wkld.setFlowsInDMorder();&#xD;
	  // loops through the sorted ArrayList of flow names calling parser &#xD;
	  // to match each flow name with associated workload description&#xD;
	  for (String flowName : wkld.getFlowNamesInPriorityOrder()) {&#xD;
		  parser(wkld.visualization(), flowName);&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s2WX8EcyEe2rgspmIFjL-A" name="setDefaultParameters" visibility="private" method="_tHSW8EcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s2W_AEcyEe2rgspmIFjL-A" name="getE2e" method="_tHSW8UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuKUcyEe2rgspmIFjL-A">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFPvmUcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s2W_AUcyEe2rgspmIFjL-A" name="getIntForFlowNames" method="_tHSW80cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuKkcyEe2rgspmIFjL-A">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2W_AkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2W_A0cyEe2rgspmIFjL-A" name="getName" method="_tHSW9UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuK0cyEe2rgspmIFjL-A">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2XmEEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2XmEUcyEe2rgspmIFjL-A" name="getMaxPhase" method="_tHSW-UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuLUcyEe2rgspmIFjL-A">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2XmEkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2XmE0cyEe2rgspmIFjL-A" name="getMinPeriod" method="_tHSW-0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVMEcyEe2rgspmIFjL-A">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2XmFEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2YNIEcyEe2rgspmIFjL-A" name="setIntForFlowNames" method="_tHS-AEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVMkcyEe2rgspmIFjL-A">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2YNIUcyEe2rgspmIFjL-A" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2Y0MEcyEe2rgspmIFjL-A" name="setName" method="_tHS-AkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVM0cyEe2rgspmIFjL-A">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2Y0MUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2ZbQEcyEe2rgspmIFjL-A" name="setNodeChannel" method="_tHS-BEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVNEcyEe2rgspmIFjL-A">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2ZbQUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2ZbQkcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2ZbQ0cyEe2rgspmIFjL-A" name="getNodeChannel" method="_tHS-B0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVNUcyEe2rgspmIFjL-A">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2ZbREcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2ZbRUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2aCUEcyEe2rgspmIFjL-A" name="addFlow" method="_tHS-CkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2aCUUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2aCUkcyEe2rgspmIFjL-A" name="isIntForNodeNames" method="_tHS-DEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2aCU0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2aCVEcyEe2rgspmIFjL-A" name="isIntForFlowNames" method="_tHS-DkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2aCVUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2apYEcyEe2rgspmIFjL-A" name="addNodeToFlow" method="_tHS-EEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2apYUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2apYkcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2apY0cyEe2rgspmIFjL-A" name="getFlowPriority" method="_tHS-E0cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVNkcyEe2rgspmIFjL-A">
                  <body>Iterates through the given flow to find the input node name. When found,&#xD;
   * gets the node's priority and returns it.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param nodeName&#xD;
   * @return priority (Integer value) of input node</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2apZEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2apZUcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2apZkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2apZ0cyEe2rgspmIFjL-A" name="setFlowPriority" method="_tHTlEEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVN0cyEe2rgspmIFjL-A">
                  <body>Method to set a given flow name to a new passed in priority value.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2bQcEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2bQcUcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2bQckcyEe2rgspmIFjL-A" name="setFlowPeriod" method="_tHTlE0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2bQc0cyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2bQdEcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2bQdUcyEe2rgspmIFjL-A" name="setFlowDeadline" method="_tHTlFkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2bQdkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2b3gEcyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2b3gUcyEe2rgspmIFjL-A" name="setFlowPhase" method="_tHTlGUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2b3gkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2b3g0cyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2b3hEcyEe2rgspmIFjL-A" name="getFlowIndex" method="_tHTlHEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2b3hUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2cekEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2cekUcyEe2rgspmIFjL-A" name="getFlowPriority" method="_tHTlH0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2cekkcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2cek0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2dFoEcyEe2rgspmIFjL-A" name="getFlowPeriod" method="_tHTlIkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2dFoUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2dFokcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2dFo0cyEe2rgspmIFjL-A" name="getFlowDeadline" method="_tHTlJUcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVOEcyEe2rgspmIFjL-A">
                  <body>Method to return the deadline value (Integer) of the flow name passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return deadline Integer value of flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2dFpEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2dssEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2dssUcyEe2rgspmIFjL-A" name="getFlowPhase" method="_tHTlKEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2dsskcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2dss0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2eTwEcyEe2rgspmIFjL-A" name="getFlowTxAttemptsPerLink" method="_tHUMIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2eTwUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2eTwkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2eTw0cyEe2rgspmIFjL-A" name="setFlowsInPriorityOrder" method="_tHUMI0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s2e60EcyEe2rgspmIFjL-A" name="setFlowsInDMorder" method="_tHUMJEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVOUcyEe2rgspmIFjL-A">
                  <body>This method creates a list of Flow objects from the FlowMap using the stream interface, sorts by a&#xD;
   * secondary key, then sorts by a primary key. Finally, it creates a new flowNamesInPriorityOrder that&#xD;
   * contains the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_s2e60UcyEe2rgspmIFjL-A" name="setFlowsInRMorder" method="_tHUMJUcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVOkcyEe2rgspmIFjL-A">
                  <body>This setter method creates a list of Flow objects from the FlowMap using the stream interface,&#xD;
   * sorting by a secondary key and primary key. Then it creates a new flowNamesInPriorityOrder that contains &#xD;
   * the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_s2e60kcyEe2rgspmIFjL-A" name="setFlowsInRealTimeHARTorder" method="_tHUMJkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s2e600cyEe2rgspmIFjL-A" name="finalizeCurrentFlow" method="_tHUMJ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2e61EcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2fh4EcyEe2rgspmIFjL-A" name="nextReleaseTime" method="_tHUMKUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2fh4UcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2fh4kcyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2fh40cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2fh5EcyEe2rgspmIFjL-A" name="nextAbsoluteDeadline" method="_tHUMLUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2fh5UcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2fh5kcyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2gI8EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2gI8UcyEe2rgspmIFjL-A" name="finalizeFlowWithE2eParameters" visibility="private" method="_tHUMMUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2gI8kcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2gI80cyEe2rgspmIFjL-A" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_tHUMM0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2gI9EcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2gwAEcyEe2rgspmIFjL-A" name="getNodeNamesOrderedAlphabetically" method="_tHUzNkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2gwAUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2gwAkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2hXEEcyEe2rgspmIFjL-A" name="getFlow" visibility="private" method="_tHUzOUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2hXEUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDv6wUcyEe2rgspmIFjL-A" type="_szeDEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s2hXEkcyEe2rgspmIFjL-A" name="getFlowNames" method="_tHUzPEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2hXE0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2hXFEcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2h-IEcyEe2rgspmIFjL-A" name="getNodeIndex" method="_tHUzP0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2h-IUcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2h-IkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2h-I0cyEe2rgspmIFjL-A" name="getNodesInFlow" method="_tHVaQEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVO0cyEe2rgspmIFjL-A">
                  <body>This method creates a String array of the node names from the input parameter flowName&#xD;
   * in the same order as they exist in the flow specification.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return Array of String node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_s2h-JEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2h-JUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2h-JkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2ilMUcyEe2rgspmIFjL-A" name="getHyperPeriod" method="_tHVaREcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2ilMkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2ilM0cyEe2rgspmIFjL-A" name="getTotalTxAttemptsInFlow" method="_tHVaRkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2ilNEcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2ilNUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2jMQEcyEe2rgspmIFjL-A" name="getNumTxAttemptsPerLink" method="_tHVaSUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2jMQUcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2jMQkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2jMQ0cyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2jMRUcyEe2rgspmIFjL-A" name="maxFlowLength" method="_tHWBU0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2jMRkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2jzUEcyEe2rgspmIFjL-A" name="main" isStatic="true" method="_tHWBWEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2jzUUcyEe2rgspmIFjL-A" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s2jzUkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tDvTsEcyEe2rgspmIFjL-A" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_tHUMNUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDvTsUcyEe2rgspmIFjL-A" name="flow" type="_szeDEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFQWpEcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDwh0EcyEe2rgspmIFjL-A" name="addEdge" method="_tHWBUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDwh0UcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tDwh0kcyEe2rgspmIFjL-A" name="edge" type="_szOygEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tDwh00cyEe2rgspmIFjL-A" name="parser" visibility="private" isStatic="true" method="_tHWBVUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tDwh1EcyEe2rgspmIFjL-A" name="wkldDesc" type="_szLIIEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tDwh1UcyEe2rgspmIFjL-A" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tFPIgEcyEe2rgspmIFjL-A" name="WorkLoad" visibility="package" method="_tHRv5EcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFPIhEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFPIhUcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHnuJ0cyEe2rgspmIFjL-A">
                  <body>The first constructor calls the parent class to set up file information. m and e2e are then initialized.&#xD;
   * Then it creates the listener object, which will read the workLoad description and then build the node and &#xD;
   * flow objects that instantiates the workLoad.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFPIgUcyEe2rgspmIFjL-A" name="m" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFPIgkcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFPIg0cyEe2rgspmIFjL-A" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFPvkEcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFPvkUcyEe2rgspmIFjL-A" name="WorkLoad" visibility="package" method="_tHRv6UcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFPvlkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFPvl0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHnuKEcyEe2rgspmIFjL-A">
                  <body>The second constructor is identical to the first with the exception of initializing the optional&#xD;
   * numFaults input parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFPvkkcyEe2rgspmIFjL-A" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFPvk0cyEe2rgspmIFjL-A" name="m" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFPvlEcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFPvlUcyEe2rgspmIFjL-A" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFPvmEcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFQWoEcyEe2rgspmIFjL-A" name="setMinPacketReceptionRate" method="_tHSW90cyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHnuLEcyEe2rgspmIFjL-A">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFQWoUcyEe2rgspmIFjL-A" name="minPacketReceptionRate" type="_tE80oEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFQWokcyEe2rgspmIFjL-A" name="setE2e" method="_tHSW_UcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHoVMUcyEe2rgspmIFjL-A">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFQWo0cyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFQ9sEcyEe2rgspmIFjL-A" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_tHUzMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFQ9sUcyEe2rgspmIFjL-A" name="flow" type="_szeDEEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFQ9skcyEe2rgspmIFjL-A" name="e2e" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFQ9s0cyEe2rgspmIFjL-A" name="M" type="_tE80oEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFQ9tEcyEe2rgspmIFjL-A" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFQ9tkcyEe2rgspmIFjL-A" type="_tB3rcEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s2s9QEcyEe2rgspmIFjL-A" name="WorkLoadDescription">
              <ownedComment xmi:id="_tHo8QEcyEe2rgspmIFjL-A">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_tD0MMkcyEe2rgspmIFjL-A" general="_s1sQoEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGfFsEcyEe2rgspmIFjL-A" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGfFsUcyEe2rgspmIFjL-A" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGfFskcyEe2rgspmIFjL-A" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGfswEcyEe2rgspmIFjL-A" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGfswUcyEe2rgspmIFjL-A" name="description" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIMV4UcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGfsw0cyEe2rgspmIFjL-A" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGfsxUcyEe2rgspmIFjL-A" name="fm" visibility="private" type="_szZKkEcyEe2rgspmIFjL-A" association="_tIMV5EcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGgT0UcyEe2rgspmIFjL-A" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWoYEcyEe2rgspmIFjL-A" name="WorkLoadDescription" specification="_s2uLYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWoYUcyEe2rgspmIFjL-A" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHWoYkcyEe2rgspmIFjL-A" type="_s2s9QEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWoY0cyEe2rgspmIFjL-A" name="visualization" specification="_s2uycUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWoZEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWoZUcyEe2rgspmIFjL-A" name="fileVisualization" specification="_s2vZgkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWoZkcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWoZ0cyEe2rgspmIFjL-A" name="toString" specification="_s2wAkkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWoaEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWoaUcyEe2rgspmIFjL-A" name="initialize" specification="_s2wnokcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWoakcyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s2uLYEcyEe2rgspmIFjL-A" name="WorkLoadDescription" visibility="package" method="_tHWoYEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s2uLYkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s2uLY0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s2uLYUcyEe2rgspmIFjL-A" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s2uycEcyEe2rgspmIFjL-A" type="_s2s9QEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s2uycUcyEe2rgspmIFjL-A" name="visualization" method="_tHWoY0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD0MMEcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s2vZgkcyEe2rgspmIFjL-A" name="fileVisualization" method="_tHWoZUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD0MMUcyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s2wAkkcyEe2rgspmIFjL-A" name="toString" method="_tHWoZ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2wAk0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s2wnokcyEe2rgspmIFjL-A" name="initialize" visibility="private" method="_tHWoaUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s2wno0cyEe2rgspmIFjL-A" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s2yc0EcyEe2rgspmIFjL-A" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_tGgT0kcyEe2rgspmIFjL-A" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGgT00cyEe2rgspmIFjL-A" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGgT1EcyEe2rgspmIFjL-A" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGg64EcyEe2rgspmIFjL-A" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGg64UcyEe2rgspmIFjL-A" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGg64kcyEe2rgspmIFjL-A" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGg640cyEe2rgspmIFjL-A" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGg65EcyEe2rgspmIFjL-A" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGg65UcyEe2rgspmIFjL-A" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGg65kcyEe2rgspmIFjL-A" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGg650cyEe2rgspmIFjL-A" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGhh8EcyEe2rgspmIFjL-A" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGhh8UcyEe2rgspmIFjL-A" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGhh8kcyEe2rgspmIFjL-A" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGhh80cyEe2rgspmIFjL-A" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGhh9UcyEe2rgspmIFjL-A" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGiJAUcyEe2rgspmIFjL-A" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGiJA0cyEe2rgspmIFjL-A" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGiJBEcyEe2rgspmIFjL-A" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGiJBUcyEe2rgspmIFjL-A" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGiJBkcyEe2rgspmIFjL-A" name="predecessor" type="_s2yc0EcyEe2rgspmIFjL-A" association="_tHo8QUcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGiwEEcyEe2rgspmIFjL-A" name="endTimes" visibility="private" type="_s00t8EcyEe2rgspmIFjL-A" association="_tIM88UcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGiwE0cyEe2rgspmIFjL-A" name="subObjects" type="_tD1aUEcyEe2rgspmIFjL-A" isReadOnly="true" association="_tIM89EcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHWoa0cyEe2rgspmIFjL-A" name="SchedulableObject" specification="_s20SAEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHWobEcyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPcEcyEe2rgspmIFjL-A" name="SchedulableObject" specification="_tD2BYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPcUcyEe2rgspmIFjL-A" name="obj" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHXPckcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPc0cyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPdEcyEe2rgspmIFjL-A" name="SchedulableObject" specification="_s205EEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPdUcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPdkcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPd0cyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPeEcyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPeUcyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPekcyEe2rgspmIFjL-A" name="SchedulableObject" specification="_s21gIEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPe0cyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPfEcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPfUcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPfkcyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPf0cyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHXPgEcyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPgUcyEe2rgspmIFjL-A" name="setDefaultParameters" specification="_s21gKUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPgkcyEe2rgspmIFjL-A" name="getAllEndTimes" specification="_s22HMEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPg0cyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPhEcyEe2rgspmIFjL-A" name="addToEndTimes" specification="_s22HMkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPhUcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPhkcyEe2rgspmIFjL-A" name="peekEndTimes" specification="_s22uQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPh0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPiEcyEe2rgspmIFjL-A" name="pollEndTimes" specification="_s22uQkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHXPiUcyEe2rgspmIFjL-A" name="addSubObject" specification="_tD2BZ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHXPikcyEe2rgspmIFjL-A" name="obj" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2gEcyEe2rgspmIFjL-A" name="getName" specification="_s22uQ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2gUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2gkcyEe2rgspmIFjL-A" name="setName" specification="_s23VUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2g0cyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2hEcyEe2rgspmIFjL-A" name="getReleaseTime" specification="_s23VUkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2hUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2hkcyEe2rgspmIFjL-A" name="getPhase" specification="_s23VVEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2h0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2iEcyEe2rgspmIFjL-A" name="getStartTime" specification="_s23VVkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2iUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2ikcyEe2rgspmIFjL-A" name="setEndTime" specification="_s23VWEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2i0cyEe2rgspmIFjL-A" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2jEcyEe2rgspmIFjL-A" name="setStartTime" specification="_s23VWkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2jUcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2jkcyEe2rgspmIFjL-A" name="setReleaseTime" specification="_s238YUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2j0cyEe2rgspmIFjL-A" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2kEcyEe2rgspmIFjL-A" name="setPeriod" specification="_s238Y0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHX2kUcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHX2kkcyEe2rgspmIFjL-A" name="setPhase" specification="_s238ZUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdkEcyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdkUcyEe2rgspmIFjL-A" name="setNextReleaseTime" specification="_s24jcEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdkkcyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdk0cyEe2rgspmIFjL-A" name="maxPhaseComparison" specification="_tD2ocEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdlEcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdlUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdlkcyEe2rgspmIFjL-A" name="maxPhaseComparison" specification="_tD2oc0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdl0cyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdmEcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdmUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdmkcyEe2rgspmIFjL-A" name="deadlineComparison" specification="_tD2od0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdm0cyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdnEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdnUcyEe2rgspmIFjL-A" name="deadlineComparison" specification="_tD3PgUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdnkcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdn0cyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdoEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdoUcyEe2rgspmIFjL-A" name="periodComparison" specification="_tD3PhUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdokcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdo0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdpEcyEe2rgspmIFjL-A" name="periodComparison" specification="_tD3PiEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdpUcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdpkcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdp0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHYdqEcyEe2rgspmIFjL-A" name="priorityComparison" specification="_tD32kkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHYdqUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHYdqkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZEoEcyEe2rgspmIFjL-A" name="priorityComparison" specification="_tD32lUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZEoUcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEokcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEo0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZEpEcyEe2rgspmIFjL-A" name="releaseTimeComparison" specification="_tD32mUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZEpUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEpkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZEp0cyEe2rgspmIFjL-A" name="releaseTimeComparison" specification="_tD4doEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZEqEcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEqUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEqkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZEq0cyEe2rgspmIFjL-A" name="LatestReleaseTimeComparison" specification="_tD4dpEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZErEcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZErUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZErkcyEe2rgspmIFjL-A" name="LatestReleaseTimeComparison" specification="_tD4dp0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZEr0cyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEsEcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHZEsUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZEskcyEe2rgspmIFjL-A" name="compareAscendingOrder" specification="_s25xkEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZEs0cyEe2rgspmIFjL-A" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHZEtEcyEe2rgspmIFjL-A" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHZEtUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZEtkcyEe2rgspmIFjL-A" name="compareDescendingOrder" specification="_s26YoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZEt0cyEe2rgspmIFjL-A" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHZEuEcyEe2rgspmIFjL-A" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHZEuUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrsEcyEe2rgspmIFjL-A" name="print" specification="_s26YpEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHZrsUcyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrskcyEe2rgspmIFjL-A" name="print" specification="_s26YpkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s20SAEcyEe2rgspmIFjL-A" name="SchedulableObject" visibility="package" method="_tHWoa0cyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s20SAUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s20SAkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s20SA0cyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s205EEcyEe2rgspmIFjL-A" name="SchedulableObject" visibility="package" method="_tHXPdEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s205FUcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s205FkcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s205EUcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s205EkcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s205E0cyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s205FEcyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s205F0cyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s21gIEcyEe2rgspmIFjL-A" name="SchedulableObject" visibility="package" method="_tHXPekcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_s21gJkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_s21gJ0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_s21gIUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s21gIkcyEe2rgspmIFjL-A" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s21gI0cyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s21gJEcyEe2rgspmIFjL-A" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s21gJUcyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s21gKEcyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s21gKUcyEe2rgspmIFjL-A" name="setDefaultParameters" visibility="private" method="_tHXPgUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s22HMEcyEe2rgspmIFjL-A" name="getAllEndTimes" method="_tHXPgkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8REcyEe2rgspmIFjL-A">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_tD2BZkcyEe2rgspmIFjL-A" type="_s00t8EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s22HMkcyEe2rgspmIFjL-A" name="addToEndTimes" method="_tHXPhEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s22HM0cyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s22uQEcyEe2rgspmIFjL-A" name="peekEndTimes" method="_tHXPhkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s22uQUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s22uQkcyEe2rgspmIFjL-A" name="pollEndTimes" method="_tHXPiEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s22uQ0cyEe2rgspmIFjL-A" name="getName" method="_tHX2gEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8RUcyEe2rgspmIFjL-A">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_s22uREcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s23VUEcyEe2rgspmIFjL-A" name="setName" method="_tHX2gkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8RkcyEe2rgspmIFjL-A">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s23VUUcyEe2rgspmIFjL-A" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s23VUkcyEe2rgspmIFjL-A" name="getReleaseTime" method="_tHX2hEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8R0cyEe2rgspmIFjL-A">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_s23VU0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s23VVEcyEe2rgspmIFjL-A" name="getPhase" method="_tHX2hkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8SEcyEe2rgspmIFjL-A">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_s23VVUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s23VVkcyEe2rgspmIFjL-A" name="getStartTime" method="_tHX2iEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8SUcyEe2rgspmIFjL-A">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_s23VV0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s23VWEcyEe2rgspmIFjL-A" name="setEndTime" method="_tHX2ikcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8SkcyEe2rgspmIFjL-A">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s23VWUcyEe2rgspmIFjL-A" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s23VWkcyEe2rgspmIFjL-A" name="setStartTime" method="_tHX2jEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8S0cyEe2rgspmIFjL-A">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s238YEcyEe2rgspmIFjL-A" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s238YUcyEe2rgspmIFjL-A" name="setReleaseTime" method="_tHX2jkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8TEcyEe2rgspmIFjL-A">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s238YkcyEe2rgspmIFjL-A" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s238Y0cyEe2rgspmIFjL-A" name="setPeriod" method="_tHX2kEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8TUcyEe2rgspmIFjL-A">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s238ZEcyEe2rgspmIFjL-A" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s238ZUcyEe2rgspmIFjL-A" name="setPhase" method="_tHX2kkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHo8TkcyEe2rgspmIFjL-A">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s238ZkcyEe2rgspmIFjL-A" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s24jcEcyEe2rgspmIFjL-A" name="setNextReleaseTime" method="_tHYdkUcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_tHpjUEcyEe2rgspmIFjL-A">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_s24jcUcyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s25xkEcyEe2rgspmIFjL-A" name="compareAscendingOrder" method="_tHZEskcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s25xkUcyEe2rgspmIFjL-A" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s25xkkcyEe2rgspmIFjL-A" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s25xk0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s26YoEcyEe2rgspmIFjL-A" name="compareDescendingOrder" method="_tHZEtkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s26YoUcyEe2rgspmIFjL-A" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s26YokcyEe2rgspmIFjL-A" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s26Yo0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s26YpEcyEe2rgspmIFjL-A" name="print" method="_tHZrsEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s26YpUcyEe2rgspmIFjL-A" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s26YpkcyEe2rgspmIFjL-A" name="print" method="_tHZrskcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_tD2BYEcyEe2rgspmIFjL-A" name="SchedulableObject" visibility="package" method="_tHXPcEcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tD2BY0cyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tD2BZEcyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_tHo8Q0cyEe2rgspmIFjL-A">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_tD2BYUcyEe2rgspmIFjL-A" name="obj" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD2BYkcyEe2rgspmIFjL-A" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD2BZUcyEe2rgspmIFjL-A" type="_s2yc0EcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tD2BZ0cyEe2rgspmIFjL-A" name="addSubObject" method="_tHXPiUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD2BaEcyEe2rgspmIFjL-A" name="obj" type="_s2yc0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tD2ocEcyEe2rgspmIFjL-A" name="maxPhaseComparison" method="_tHYdk0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD2ocUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD2ockcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD2oc0cyEe2rgspmIFjL-A" name="maxPhaseComparison" method="_tHYdlkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD2odEcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD2odUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD2odkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD2od0cyEe2rgspmIFjL-A" name="deadlineComparison" method="_tHYdmkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD2oeEcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD3PgEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD3PgUcyEe2rgspmIFjL-A" name="deadlineComparison" method="_tHYdnUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD3PgkcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD3Pg0cyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD3PhEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD3PhUcyEe2rgspmIFjL-A" name="periodComparison" method="_tHYdoUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD3PhkcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD3Ph0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD3PiEcyEe2rgspmIFjL-A" name="periodComparison" method="_tHYdpEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD3PiUcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD32kEcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD32kUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD32kkcyEe2rgspmIFjL-A" name="priorityComparison" method="_tHYdqEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD32k0cyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD32lEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD32lUcyEe2rgspmIFjL-A" name="priorityComparison" method="_tHZEoEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD32lkcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD32l0cyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD32mEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD32mUcyEe2rgspmIFjL-A" name="releaseTimeComparison" method="_tHZEpEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD32mkcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD32m0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD4doEcyEe2rgspmIFjL-A" name="releaseTimeComparison" method="_tHZEp0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD4doUcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD4dokcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD4do0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD4dpEcyEe2rgspmIFjL-A" name="LatestReleaseTimeComparison" method="_tHZEq0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD4dpUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD4dpkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD4dp0cyEe2rgspmIFjL-A" name="LatestReleaseTimeComparison" method="_tHZErkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD5EsEcyEe2rgspmIFjL-A" name="obj1" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD5EsUcyEe2rgspmIFjL-A" name="obj2" type="_s2yc0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD5EskcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s3AfQEcyEe2rgspmIFjL-A" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrs0cyEe2rgspmIFjL-A" name="testSetFlowsInDMorder_StressTest" specification="_s3AfQUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInDMorder&#xD;
		wkld.setFlowsInDMorder();&#xD;
		ArrayList&lt;String> DMorder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of DM order flow array&#xD;
		int DMorderLength = DMorder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, DMorderLength, &quot;Length after setting flows in DM Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the DM order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (DMorder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;Number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, DMorder, &quot;Check if setting in DM order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrtEcyEe2rgspmIFjL-A" name="testGetFlowNamesInPriorityOrder_NotEmpty" specification="_s3BGU0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if getter retrieved the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrtUcyEe2rgspmIFjL-A" name="testGetFlowNamesInPriorityOrder_Empty" specification="_s3BtYkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if getter retrieved the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrtkcyEe2rgspmIFjL-A" name="testGetNodeChannel_ValidNode" specification="_s3BtZkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//The expected value of the node channel before setting to anything should be zero&#xD;
		int actualWithoutSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(0, actualWithoutSet, &quot;Node channel prior to setting:&quot;);&#xD;
		&#xD;
		//check to see if getter retrieves correct new value after setting&#xD;
		wkld.setNodeChannel(&quot;A&quot;, 44);&#xD;
		int actualWithSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(44, actualWithSet, &quot;Node channel after setting:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHZrt0cyEe2rgspmIFjL-A" name="testGetNodeChannel_InvalidNode" specification="_s3CUckcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>assertThrows(NullPointerException.class,&#xD;
	            ()->{&#xD;
	            	WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	            	//if given an input that isn't a valid node, should throw NullPointerException&#xD;
	            	wkld.getNodeChannel(&quot;&quot;);&#xD;
	            });&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSwEcyEe2rgspmIFjL-A" name="testGetNodesInFlow_ValidFlow" specification="_s3CUdkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with a correct flow name&#xD;
		String[] actual = wkld.getNodesInFlow(&quot;F9&quot;);&#xD;
		String actualWithCorrectInput = Arrays.toString(actual);&#xD;
		//hard code of the expected string&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		//Test to see if we got the node names in the same order as they exist in the flow specification&#xD;
		assertEquals(expected, actualWithCorrectInput, &quot;Order of nodes of flow F9 in StressTest.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSwUcyEe2rgspmIFjL-A" name="testGetNodesInFlow_InvalidFlow" specification="_s3C7g0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with incorrect flow name&#xD;
		String[] actual2 = wkld.getNodesInFlow(&quot;test&quot;);&#xD;
		String actualWithIncorrectInput = Arrays.toString(actual2);&#xD;
		//hard code of the expected string&#xD;
		String expectedEmpty = &quot;[]&quot;;&#xD;
		//Test to see if we correctly went to the else case in getNodesInFlow&#xD;
		assertEquals(expectedEmpty, actualWithIncorrectInput, &quot;Check if using a non-valid flow name correctly returns empty array:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSwkcyEe2rgspmIFjL-A" name="testSetFlowNamesInOriginalOrder_NotEmpty" specification="_s3C7h0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list for setFlowNamesInOriginalOrder. Test array list is arbitrary&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from setter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if setter created the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSw0cyEe2rgspmIFjL-A" name="testSetFlowNamesInOriginalOrder_Empty" specification="_s3Dik0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list for setFlowNamesInOriginalOrder&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if setter created the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSxEcyEe2rgspmIFjL-A" name="testSetFlowsInPriorityOrder" specification="_s3EJoUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInPriorityorder&#xD;
		wkld.setFlowsInPriorityOrder();&#xD;
		ArrayList&lt;String> priorityOrder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of priority order flow array&#xD;
		int priorityOrderLength = priorityOrder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, priorityOrderLength, &quot;length after setting flows in Priority Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the priority order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (priorityOrder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, priorityOrder, &quot;Check if setting in Priority order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSxUcyEe2rgspmIFjL-A" name="testGetMinPeriod_Unique" specification="_s3EJpUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected minimum period in StreesTest.txt is 20&#xD;
		int testPeriod = wkld.getMinPeriod();&#xD;
		assertEquals(20, testPeriod, &quot;Minimum period gotten from StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSxkcyEe2rgspmIFjL-A" name="testGetMinPeriod_Default" specification="_s3EwskcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default period which is 100&#xD;
		int testPeriodDefault = wkld2.getMinPeriod();&#xD;
		assertEquals(100, testPeriodDefault, &quot;Minimum period gotten from Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSx0cyEe2rgspmIFjL-A" name="testMaxFlowLength_StressTest" specification="_s3EwtkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		int actual = wkld.maxFlowLength();&#xD;
		assertEquals(8, actual, &quot;Max flow length for StressTest.txt&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSyEcyEe2rgspmIFjL-A" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" specification="_s3FXwkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(5, actual2, &quot;Max flow length for WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSyUcyEe2rgspmIFjL-A" name="testMaxFlowLength_LongChain" specification="_s3FXxkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(26, actual2, &quot;Max flow length for LongChain.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSykcyEe2rgspmIFjL-A" name="testGetFlowDeadline_Unique" specification="_s3F-0kcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected deadline of flow F9 in StressTest.txt is 100&#xD;
		int testDeadline = wkld.getFlowDeadline(&quot;F9&quot;);&#xD;
		assertEquals(100, testDeadline, &quot;deadline gotten for flow F9 in StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSy0cyEe2rgspmIFjL-A" name="testGetFlowDeadline_Default" specification="_s3F-1kcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default deadline which is 100&#xD;
		int testDeadlineDefault = wkld2.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(100, testDeadlineDefault, &quot;deadline gotten for flow F0 in Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSzEcyEe2rgspmIFjL-A" name="testGetFlowDeadline_InvalidInput" specification="_s3Gl4kcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//Test the &quot;Bad situation&quot; where the flow name given does not exist&#xD;
		//Should give the default of 100&#xD;
		int testDeadlineFlowNameDNE = wkld3.getFlowDeadline(&quot;&quot;);&#xD;
		assertEquals(100, testDeadlineFlowNameDNE, &quot;check for a flow name that does not exist:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSzUcyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" specification="_s3Gl5kcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld1 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String[] alphaOrder1 = wkld1.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual1 = Arrays.toString(alphaOrder1); &#xD;
		String expected1 = &quot;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, Y]&quot;;&#xD;
		assertEquals(expected1, alphaOrderActual1, &quot;check if the node names in StressTest.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSzkcyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" specification="_s3HM80cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		String[] alphaOrder2 = wkld2.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual2 = Arrays.toString(alphaOrder2);&#xD;
		String expected2 = &quot;[A, B, C, D, E, F, G, H, I, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a]&quot;;&#xD;
		assertEquals(expected2, alphaOrderActual2, &quot;check if the node names in LongChain.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHaSz0cyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" specification="_s3HM90cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		String[] alphaOrder3 = wkld3.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual3 = Arrays.toString(alphaOrder3);&#xD;
		String expected3 = &quot;[0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, &quot;&#xD;
				+ &quot;38, 40, 41, 42, 48, 52, 53, 54, 55, 56, 58, 59, 64, 66, 68, 71, 72, 73, 74, 76, 80, 82, 83, 84]&quot;;&#xD;
		assertEquals(expected3, alphaOrderActual3, &#xD;
				&quot;check if the node names in WARP_MIX_Schedule0-WarpInput.txt were ordered alphabetically (numerically):&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHa50EcyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" specification="_s3H0A0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>WorkLoad wkld4 = new WorkLoad(1, 0.9, 0.99, &quot;SeeSpray.txt&quot;);&#xD;
		String[] alphaOrder4 = wkld4.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual4 = Arrays.toString(alphaOrder4);&#xD;
		String expected4 = &quot;[B1, B2, B3, B4, B5, B6, B7, B8, C1, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C2, C20, C21, &quot;&#xD;
				+ &quot;C22, C23, C24, C25, C26, C27, C28, C29, C3, C30, C4, C5, C6, C7, C8, C9]&quot;;&#xD;
		assertEquals(expected4, alphaOrderActual4, &quot;check if the node names in SeeSpray.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s3AfQUcyEe2rgspmIFjL-A" name="testSetFlowsInDMorder_StressTest" visibility="package" method="_tHZrs0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3BGU0cyEe2rgspmIFjL-A" name="testGetFlowNamesInPriorityOrder_NotEmpty" visibility="package" method="_tHZrtEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3BtYkcyEe2rgspmIFjL-A" name="testGetFlowNamesInPriorityOrder_Empty" visibility="package" method="_tHZrtUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3BtZkcyEe2rgspmIFjL-A" name="testGetNodeChannel_ValidNode" visibility="package" method="_tHZrtkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3CUckcyEe2rgspmIFjL-A" name="testGetNodeChannel_InvalidNode" method="_tHZrt0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3CUdkcyEe2rgspmIFjL-A" name="testGetNodesInFlow_ValidFlow" visibility="package" method="_tHaSwEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3C7g0cyEe2rgspmIFjL-A" name="testGetNodesInFlow_InvalidFlow" visibility="package" method="_tHaSwUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3C7h0cyEe2rgspmIFjL-A" name="testSetFlowNamesInOriginalOrder_NotEmpty" visibility="package" method="_tHaSwkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3Dik0cyEe2rgspmIFjL-A" name="testSetFlowNamesInOriginalOrder_Empty" visibility="package" method="_tHaSw0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3EJoUcyEe2rgspmIFjL-A" name="testSetFlowsInPriorityOrder" visibility="package" method="_tHaSxEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3EJpUcyEe2rgspmIFjL-A" name="testGetMinPeriod_Unique" visibility="package" method="_tHaSxUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3EwskcyEe2rgspmIFjL-A" name="testGetMinPeriod_Default" visibility="package" method="_tHaSxkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3EwtkcyEe2rgspmIFjL-A" name="testMaxFlowLength_StressTest" visibility="package" method="_tHaSx0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3FXwkcyEe2rgspmIFjL-A" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" visibility="package" method="_tHaSyEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3FXxkcyEe2rgspmIFjL-A" name="testMaxFlowLength_LongChain" visibility="package" method="_tHaSyUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3F-0kcyEe2rgspmIFjL-A" name="testGetFlowDeadline_Unique" visibility="package" method="_tHaSykcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3F-1kcyEe2rgspmIFjL-A" name="testGetFlowDeadline_Default" visibility="package" method="_tHaSy0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3Gl4kcyEe2rgspmIFjL-A" name="testGetFlowDeadline_InvalidInput" visibility="package" method="_tHaSzEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3Gl5kcyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" visibility="package" method="_tHaSzUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3HM80cyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" visibility="package" method="_tHaSzkcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3HM90cyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" visibility="package" method="_tHaSz0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3H0A0cyEe2rgspmIFjL-A" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" visibility="package" method="_tHa50EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_s3IbEEcyEe2rgspmIFjL-A" name="Program">
              <ownedComment xmi:id="_zKYHdV3_Ee2F0PVRnb5fbg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_tGj-MEcyEe2rgspmIFjL-A" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGj-MUcyEe2rgspmIFjL-A" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGj-MkcyEe2rgspmIFjL-A" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGklQEcyEe2rgspmIFjL-A" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGklQUcyEe2rgspmIFjL-A" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGklQkcyEe2rgspmIFjL-A" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGklQ0cyEe2rgspmIFjL-A" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_tGklREcyEe2rgspmIFjL-A" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGklRUcyEe2rgspmIFjL-A" name="workLoad" visibility="package" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tINkAEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGlMUUcyEe2rgspmIFjL-A" name="scheduleBuilt" visibility="package" type="_s0rkAEcyEe2rgspmIFjL-A" association="_tINkA0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGlMU0cyEe2rgspmIFjL-A" name="SchedulerSelected" visibility="package" type="_tFIa0EcyEe2rgspmIFjL-A" association="_tIOLEEcyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGlzYUcyEe2rgspmIFjL-A" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGlzY0cyEe2rgspmIFjL-A" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGmacUcyEe2rgspmIFjL-A" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGmac0cyEe2rgspmIFjL-A" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGnBgUcyEe2rgspmIFjL-A" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGnBg0cyEe2rgspmIFjL-A" name="channelsAvailable" visibility="package" type="_synugEcyEe2rgspmIFjL-A" association="_tIOLE0cyEe2rgspmIFjL-A"/>
              <ownedAttribute xmi:id="_tGnokEcyEe2rgspmIFjL-A" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGnokkcyEe2rgspmIFjL-A" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGnolEcyEe2rgspmIFjL-A" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_tGoPoUcyEe2rgspmIFjL-A" name="deadlineMisses" visibility="private" type="_szLIIEcyEe2rgspmIFjL-A" association="_tIOLFkcyEe2rgspmIFjL-A"/>
              <interfaceRealization xmi:id="_tD7g8EcyEe2rgspmIFjL-A" client="_s3IbEEcyEe2rgspmIFjL-A" supplier="_s1bK4EcyEe2rgspmIFjL-A" contract="_s1bK4EcyEe2rgspmIFjL-A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHa50UcyEe2rgspmIFjL-A" name="Program" specification="_tFUoEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHa50kcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHa500cyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHa51EcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHa51UcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHa51kcyEe2rgspmIFjL-A" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHa510cyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHa52EcyEe2rgspmIFjL-A" name="Program" specification="_tFUoGUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHa52UcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHa52kcyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHa520cyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHa53EcyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHa53UcyEe2rgspmIFjL-A" name="setDefaultParameters" specification="_tD8vEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHa53kcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHa530cyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHa54EcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHa54UcyEe2rgspmIFjL-A" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHa54kcyEe2rgspmIFjL-A" name="toWorkLoad" specification="_s3K3UEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHa540cyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg4EcyEe2rgspmIFjL-A" name="buildProgram" specification="_tFVPJUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHbg4UcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg4kcyEe2rgspmIFjL-A" name="buildOriginalProgram" specification="_s3K3UUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg40cyEe2rgspmIFjL-A" name="waitInstruction" specification="_s3LeYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHbg5EcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg5UcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg5kcyEe2rgspmIFjL-A" name="elseWaitInstruction" specification="_s3LeY0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHbg50cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg6EcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg6UcyEe2rgspmIFjL-A" name="elsePullClause" specification="_s3MFcEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHbg6kcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg60cyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg7EcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg7UcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg7kcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg70cyEe2rgspmIFjL-A" name="hasPushInstruction" specification="_s3MFdkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHbg8EcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg8UcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg8kcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg80cyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg9EcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHbg9UcyEe2rgspmIFjL-A" name="pushInstruction" specification="_s3MsgkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHbg9kcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg90cyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg-EcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg-UcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHbg-kcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcH8EcyEe2rgspmIFjL-A" name="getFirstChannelInInstruction" specification="_s3NTkkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcH8UcyEe2rgspmIFjL-A" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH8kcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcH80cyEe2rgspmIFjL-A" name="findNextAvailableInstructionTimeSlot" specification="_tD9WIUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcH9EcyEe2rgspmIFjL-A" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHcH9UcyEe2rgspmIFjL-A" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH9kcyEe2rgspmIFjL-A" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH90cyEe2rgspmIFjL-A" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH-EcyEe2rgspmIFjL-A" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH-UcyEe2rgspmIFjL-A" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHcH-kcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH-0cyEe2rgspmIFjL-A" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tHcH_EcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH_UcyEe2rgspmIFjL-A" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH_kcyEe2rgspmIFjL-A" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcH_0cyEe2rgspmIFjL-A" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIAEcyEe2rgspmIFjL-A" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIAUcyEe2rgspmIFjL-A" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIAkcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcIA0cyEe2rgspmIFjL-A" name="slotIsAvailable" specification="_tD-kQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcIBEcyEe2rgspmIFjL-A" name="currentInstructionTimeSlot" type="_sz9LQEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHcIBUcyEe2rgspmIFjL-A" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIBkcyEe2rgspmIFjL-A" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIB0cyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcICEcyEe2rgspmIFjL-A" name="findNextAvailableChannel" specification="_tD_LUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcICUcyEe2rgspmIFjL-A" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tHcICkcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIC0cyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIDEcyEe2rgspmIFjL-A" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIDUcyEe2rgspmIFjL-A" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tHcIDkcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>HashSet&lt;String> workingAvailableChannels = channelsAvailable.getChannelSet(currentTime);&#xD;
	  &#xD;
	  //find the channels used in the prior schedule time slot as they should not be used&#xD;
	  if (currentTime > 0)&#xD;
	  {&#xD;
		  Integer priorTime = currentTime - 1;&#xD;
		  &#xD;
		  //remove previous channels from working list for both srcNode and snkNode&#xD;
		  this.extractChannels(schedule, workingAvailableChannels, srcNodeIndex, priorTime);&#xD;
		  this.extractChannels(schedule, workingAvailableChannels, snkNodeIndex, priorTime);&#xD;
	  }&#xD;
	 &#xD;
	  //get the last used channel for the node&#xD;
	  Integer lastUsedChannel = workLoad.getNodeChannel(nodeName);&#xD;
	  &#xD;
	  //increment channel as we don't use the same channel in consecutive time slots&#xD;
	  Integer workingChannel = this.advanceChannel(lastUsedChannel);&#xD;
	  &#xD;
	  //search for next available channel from working set&#xD;
	  boolean channelFound = false;&#xD;
	  while (!channelFound &amp;&amp; !workingAvailableChannels.isEmpty())&#xD;
	  {&#xD;
		  String foundChannelName = workingChannel.toString();&#xD;
		  //channelRemoved is true if the channel removed from the working set,&#xD;
		  //making it a valid channel to use&#xD;
		  boolean channelRemoved = workingAvailableChannels.remove(foundChannelName);&#xD;
		  &#xD;
		  //if found a valid channel, return that channel, else continue searching&#xD;
		  if (channelRemoved)&#xD;
		  {&#xD;
			  return foundChannelName;&#xD;
		  }&#xD;
		  //setup next channel for loop&#xD;
		  else&#xD;
		  {&#xD;
			  workingChannel = this.advanceChannel(workingChannel);&#xD;
		  }&#xD;
	  }&#xD;
	  //return UNKNOWN to indicate no channel found. This should never happen.&#xD;
	  return UNKNOWN;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcID0cyEe2rgspmIFjL-A" name="selectPriority" specification="_s3PIwEcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcIEEcyEe2rgspmIFjL-A" name="selectRM" specification="_s3PIwUcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvAEcyEe2rgspmIFjL-A" name="selectDM" specification="_s3PIwkcyEe2rgspmIFjL-A">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvAUcyEe2rgspmIFjL-A" name="selectRtHART" specification="_s3PIw0cyEe2rgspmIFjL-A">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvAkcyEe2rgspmIFjL-A" name="setScheduleSelected" specification="_tFVPJ0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvA0cyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvBEcyEe2rgspmIFjL-A" name="setSchedule" specification="_tD_yYEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvBUcyEe2rgspmIFjL-A" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvBkcyEe2rgspmIFjL-A" name="getSchedule" specification="_s3Pv0EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvB0cyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvCEcyEe2rgspmIFjL-A" name="getSchedulerName" specification="_s3Pv0UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvCUcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvCkcyEe2rgspmIFjL-A" name="getSchChoice" specification="_s3QW40cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvC0cyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvDEcyEe2rgspmIFjL-A" name="getNumChannels" specification="_s3QW5UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvDUcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvDkcyEe2rgspmIFjL-A" name="getNumTransmissions" specification="_s3Q99EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvD0cyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHcvEEcyEe2rgspmIFjL-A" name="getRealTimeHartFlag" specification="_s3RlAkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHcvEUcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWEEcyEe2rgspmIFjL-A" name="setRealTimeHartFlag" specification="_s3RlBEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWEUcyEe2rgspmIFjL-A" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWEkcyEe2rgspmIFjL-A" name="getMinPacketReceptionRate" specification="_s3RlBkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWE0cyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWFEcyEe2rgspmIFjL-A" name="getE2e" specification="_s3SME0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWFUcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWFkcyEe2rgspmIFjL-A" name="getName" specification="_s3SzI0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWF0cyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWGEcyEe2rgspmIFjL-A" name="getOptimizationFlag" specification="_s3TaM0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWGUcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWGkcyEe2rgspmIFjL-A" name="deadlineMisses" specification="_s3UBQEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWG0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWHEcyEe2rgspmIFjL-A" name="getNumFaults" specification="_s3UBQUcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWHUcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tHdWHkcyEe2rgspmIFjL-A" name="getNodeMapIndex" specification="_s3UoUEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tHdWH0cyEe2rgspmIFjL-A" type="_tB2dUEcyEe2rgspmIFjL-A" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zKWSQF3_Ee2F0PVRnb5fbg" name="extractChannels" specification="_zKNIUF3_Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_zKWSQV3_Ee2F0PVRnb5fbg" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_zKWSQl3_Ee2F0PVRnb5fbg" name="workingChannelSet" type="_tB4SgUcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_zKWSQ13_Ee2F0PVRnb5fbg" name="nodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_zKWSRF3_Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>//create for parsing instructions&#xD;
	  WarpDSL dsl = new WarpDSL();&#xD;
	  &#xD;
	  String priorInstruction = schedule.get(timeSlot).get(nodeIndex);&#xD;
&#xD;
	  //get the parameters from the instruction in the node's prior time slot&#xD;
	  ArrayList&lt;InstructionParameters> instructionParametersList = dsl.getInstructionParameters(priorInstruction); &#xD;
  	&#xD;
	  for (int i = 0; i &lt; instructionParametersList.size(); i++) {&#xD;
		  //get a copy of the parameters&#xD;
		  InstructionParameters instructionParameters = instructionParametersList.get(i);&#xD;
		  &#xD;
		  //remove parameters from channels&#xD;
  		  workingChannelSet.remove(instructionParameters.getChannel());&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zKW5UF3_Ee2F0PVRnb5fbg" name="advanceChannel" specification="_zKO9gF3_Ee2F0PVRnb5fbg">
                <ownedParameter xmi:id="_zKW5UV3_Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_zKW5Ul3_Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (channel &lt; getNumChannels())&#xD;
		  return (channel + 1);&#xD;
	  return 0;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_s3K3UEcyEe2rgspmIFjL-A" name="toWorkLoad" method="_tHa54kcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_zKYugF3_Ee2F0PVRnb5fbg">
                  <body>Returns the WorkLoad attribute of the Program object.&#xD;
@return workLoad.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tD9WIEcyEe2rgspmIFjL-A" type="_s2T7sEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s3K3UUcyEe2rgspmIFjL-A" name="buildOriginalProgram" method="_tHbg4kcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3LeYEcyEe2rgspmIFjL-A" name="waitInstruction" visibility="private" method="_tHbg40cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3LeYUcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3LeYkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3LeY0cyEe2rgspmIFjL-A" name="elseWaitInstruction" visibility="private" method="_tHbg5kcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3LeZEcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3LeZUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3MFcEcyEe2rgspmIFjL-A" name="elsePullClause" visibility="private" method="_tHbg6UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3MFcUcyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MFckcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MFc0cyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MFdEcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MFdUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3MFdkcyEe2rgspmIFjL-A" name="hasPushInstruction" visibility="private" method="_tHbg70cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3MFd0cyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MFeEcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MFeUcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MsgEcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MsgUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3MsgkcyEe2rgspmIFjL-A" name="pushInstruction" visibility="private" method="_tHbg9UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3Msg0cyEe2rgspmIFjL-A" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MshEcyEe2rgspmIFjL-A" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3MshUcyEe2rgspmIFjL-A" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3NTkEcyEe2rgspmIFjL-A" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3NTkUcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3NTkkcyEe2rgspmIFjL-A" name="getFirstChannelInInstruction" visibility="private" method="_tHcH8EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3NTk0cyEe2rgspmIFjL-A" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_s3NTlEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3PIwEcyEe2rgspmIFjL-A" name="selectPriority" method="_tHcID0cyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3PIwUcyEe2rgspmIFjL-A" name="selectRM" method="_tHcIEEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3PIwkcyEe2rgspmIFjL-A" name="selectDM" method="_tHcvAEcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3PIw0cyEe2rgspmIFjL-A" name="selectRtHART" method="_tHcvAUcyEe2rgspmIFjL-A"/>
              <ownedOperation xmi:id="_s3Pv0EcyEe2rgspmIFjL-A" name="getSchedule" method="_tHcvBkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_zKYugl3_Ee2F0PVRnb5fbg">
                  <body>Returns the ProgramSchedule attribute of the Program object.&#xD;
   * @return scheduleBuilt.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tD_yYkcyEe2rgspmIFjL-A" type="_s0rkAEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s3Pv0UcyEe2rgspmIFjL-A" name="getSchedulerName" method="_tHcvCEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3Pv0kcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3QW40cyEe2rgspmIFjL-A" name="getSchChoice" method="_tHcvCkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3QW5EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3QW5UcyEe2rgspmIFjL-A" name="getNumChannels" method="_tHcvDEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3Q98EcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3Q99EcyEe2rgspmIFjL-A" name="getNumTransmissions" method="_tHcvDkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3Q99UcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3RlAkcyEe2rgspmIFjL-A" name="getRealTimeHartFlag" visibility="private" method="_tHcvEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3RlA0cyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3RlBEcyEe2rgspmIFjL-A" name="setRealTimeHartFlag" visibility="private" method="_tHdWEEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3RlBUcyEe2rgspmIFjL-A" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3RlBkcyEe2rgspmIFjL-A" name="getMinPacketReceptionRate" method="_tHdWEkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFV2MEcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s3SME0cyEe2rgspmIFjL-A" name="getE2e" method="_tHdWFEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFV2MUcyEe2rgspmIFjL-A" type="_tE80oEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s3SzI0cyEe2rgspmIFjL-A" name="getName" method="_tHdWFkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3SzJEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3TaM0cyEe2rgspmIFjL-A" name="getOptimizationFlag" method="_tHdWGEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3TaNEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3UBQEcyEe2rgspmIFjL-A" name="deadlineMisses" method="_tHdWGkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD_yY0cyEe2rgspmIFjL-A" type="_szLIIEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_s3UBQUcyEe2rgspmIFjL-A" name="getNumFaults" method="_tHdWHEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_s3UBQkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_s3UoUEcyEe2rgspmIFjL-A" name="getNodeMapIndex" method="_tHdWHkcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_zKYug13_Ee2F0PVRnb5fbg">
                  <body>Creates a new mapping from node names (sorted alphabetically) to their index in the&#xD;
   * schedule table and returns the mapping.&#xD;
   * &#xD;
   * @return A HashMap of the node to index mapping.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tFV2MkcyEe2rgspmIFjL-A" type="_tB2dUEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tD8vEEcyEe2rgspmIFjL-A" name="setDefaultParameters" visibility="private" method="_tHa53UcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD8vEUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD8vEkcyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD8vE0cyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD8vFEcyEe2rgspmIFjL-A" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD9WIUcyEe2rgspmIFjL-A" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_tHcH80cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD9WIkcyEe2rgspmIFjL-A" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD9WI0cyEe2rgspmIFjL-A" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD9WJEcyEe2rgspmIFjL-A" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD9WJUcyEe2rgspmIFjL-A" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD9WJkcyEe2rgspmIFjL-A" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD9WJ0cyEe2rgspmIFjL-A" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tD99NUcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD9WKEcyEe2rgspmIFjL-A" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tD99NkcyEe2rgspmIFjL-A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD9WKUcyEe2rgspmIFjL-A" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD99MEcyEe2rgspmIFjL-A" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD99MUcyEe2rgspmIFjL-A" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD99MkcyEe2rgspmIFjL-A" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD99M0cyEe2rgspmIFjL-A" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD99NEcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD-kQEcyEe2rgspmIFjL-A" name="slotIsAvailable" visibility="private" method="_tHcIA0cyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD-kQUcyEe2rgspmIFjL-A" name="currentInstructionTimeSlot" type="_sz9LQEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD-kQkcyEe2rgspmIFjL-A" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD-kQ0cyEe2rgspmIFjL-A" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD-kREcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD_LUEcyEe2rgspmIFjL-A" name="findNextAvailableChannel" visibility="private" method="_tHcICEcyEe2rgspmIFjL-A">
                <ownedComment xmi:id="_zKYugV3_Ee2F0PVRnb5fbg">
                  <body>For a given a node, returns the best channel to be used next in the schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param schedule, the ProgramSchedule to get the prior time slot&#xD;
   * @param nodeName, a String of the name of the node&#xD;
   * @param currentTime, an Integer of the current time&#xD;
   * @param srcNodeIndex, an Integer of the source node index value&#xD;
   * @param snkNodeIndex, an Integer of the sink node index value&#xD;
   * @return UNKNOWN (a string) to indicate no channel found.</body>
                </ownedComment>
                <ownedParameter xmi:id="_tD_LUUcyEe2rgspmIFjL-A" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tD_LUkcyEe2rgspmIFjL-A" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD_LU0cyEe2rgspmIFjL-A" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD_LVEcyEe2rgspmIFjL-A" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD_LVUcyEe2rgspmIFjL-A" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tD_LVkcyEe2rgspmIFjL-A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_tD_yYEcyEe2rgspmIFjL-A" name="setSchedule" visibility="private" method="_tHcvBEcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tD_yYUcyEe2rgspmIFjL-A" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFUoEEcyEe2rgspmIFjL-A" name="Program" visibility="package" method="_tHa50UcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFUoFkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFUoF0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tFUoEUcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFUoEkcyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFUoE0cyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFUoFEcyEe2rgspmIFjL-A" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFUoFUcyEe2rgspmIFjL-A" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFUoGEcyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFUoGUcyEe2rgspmIFjL-A" name="Program" visibility="package" method="_tHa52EcyEe2rgspmIFjL-A">
                <eAnnotations xmi:id="_tFVPIkcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_tFVPI0cyEe2rgspmIFjL-A" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_tFUoGkcyEe2rgspmIFjL-A" name="workLoad" type="_s2T7sEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFVPIEcyEe2rgspmIFjL-A" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_tFVPIUcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_tFVPJEcyEe2rgspmIFjL-A" type="_s3IbEEcyEe2rgspmIFjL-A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFVPJUcyEe2rgspmIFjL-A" name="buildProgram" method="_tHbg4EcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFVPJkcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_tFVPJ0cyEe2rgspmIFjL-A" name="setScheduleSelected" visibility="private" method="_tHcvAkcyEe2rgspmIFjL-A">
                <ownedParameter xmi:id="_tFVPKEcyEe2rgspmIFjL-A" name="choice" type="_tFIa0EcyEe2rgspmIFjL-A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_zKNIUF3_Ee2F0PVRnb5fbg" name="extractChannels" visibility="private" method="_zKWSQF3_Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_zKYuhF3_Ee2F0PVRnb5fbg">
                  <body>Helper method for findNextAvailableChannel(...). Finds the channels from&#xD;
   * the given node and time slot and removes it from the workingChannelSet. &lt;br> &lt;br>&#xD;
   * &#xD;
   * NOTE: Calls methods and modifies the @param workingChannelSet.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param schedule, the ProgramSchedule to get prior instruction&#xD;
   * @param workingChannelSet, a String HashSet of channels that are potentially viable&#xD;
   * @param nodeIndex, an Integer representing the node&#xD;
   * @param timeSlot, an Integer representing the time slot</body>
                </ownedComment>
                <ownedParameter xmi:id="_zKNIUV3_Ee2F0PVRnb5fbg" name="schedule" type="_s0rkAEcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_zKNIUl3_Ee2F0PVRnb5fbg" name="workingChannelSet" type="_tB4SgUcyEe2rgspmIFjL-A"/>
                <ownedParameter xmi:id="_zKNvYF3_Ee2F0PVRnb5fbg" name="nodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_zKNvYV3_Ee2F0PVRnb5fbg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_zKO9gF3_Ee2F0PVRnb5fbg" name="advanceChannel" visibility="private" method="_zKW5UF3_Ee2F0PVRnb5fbg">
                <ownedComment xmi:id="_zKZVkF3_Ee2F0PVRnb5fbg">
                  <body>Returns the next channel, rolling over to zero when channel reaches channel length.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param channel, an Integer of the given channel&#xD;
   * @return The next channel with rollover.</body>
                </ownedComment>
                <ownedParameter xmi:id="_zKO9gV3_Ee2F0PVRnb5fbg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_zKO9gl3_Ee2F0PVRnb5fbg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_tEhW0UcyEe2rgspmIFjL-A" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tE3VEEcyEe2rgspmIFjL-A" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tFEJYEcyEe2rgspmIFjL-A" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tFEwc0cyEe2rgspmIFjL-A" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tFIa0EcyEe2rgspmIFjL-A" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_tHjcsEcyEe2rgspmIFjL-A" name="" memberEnd="_tFuQskcyEe2rgspmIFjL-A _tHjcsUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tHjcsUcyEe2rgspmIFjL-A" name="" type="_szOygEcyEe2rgspmIFjL-A" association="_tHjcsEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tHnuI0cyEe2rgspmIFjL-A" name="" memberEnd="_tGdQgUcyEe2rgspmIFjL-A _tHnuJEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tHnuJEcyEe2rgspmIFjL-A" name="" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tHnuI0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tHnuJUcyEe2rgspmIFjL-A" name="" memberEnd="_tGdQgkcyEe2rgspmIFjL-A _tHnuJkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tHnuJkcyEe2rgspmIFjL-A" name="" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tHnuJUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tHo8QUcyEe2rgspmIFjL-A" name="" memberEnd="_tGiJBkcyEe2rgspmIFjL-A _tHo8QkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tHo8QkcyEe2rgspmIFjL-A" name="" type="_s2yc0EcyEe2rgspmIFjL-A" association="_tHo8QUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH7QIEcyEe2rgspmIFjL-A" name="" memberEnd="_tH7QIUcyEe2rgspmIFjL-A _tFeZEEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH7QIUcyEe2rgspmIFjL-A" name="" type="_syNe0EcyEe2rgspmIFjL-A" association="_tH7QIEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH73MUcyEe2rgspmIFjL-A" name="" memberEnd="_tH73MkcyEe2rgspmIFjL-A _tFfAIUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH73MkcyEe2rgspmIFjL-A" name="" type="_syNe0EcyEe2rgspmIFjL-A" association="_tH73MUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH73NEcyEe2rgspmIFjL-A" name="" memberEnd="_tH73NUcyEe2rgspmIFjL-A _tFfnMUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH73NUcyEe2rgspmIFjL-A" name="" type="_syNe0EcyEe2rgspmIFjL-A" association="_tH73NEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH8eQUcyEe2rgspmIFjL-A" name="" memberEnd="_tH8eQkcyEe2rgspmIFjL-A _tFhcYUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH8eQkcyEe2rgspmIFjL-A" name="" type="_sykEIEcyEe2rgspmIFjL-A" association="_tH8eQUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH8eREcyEe2rgspmIFjL-A" name="" memberEnd="_tH8eRUcyEe2rgspmIFjL-A _tFiDcUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH8eRUcyEe2rgspmIFjL-A" name="" type="_sykEIEcyEe2rgspmIFjL-A" association="_tH8eREcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH8eR0cyEe2rgspmIFjL-A" name="" memberEnd="_tH8eSEcyEe2rgspmIFjL-A _tFjRkUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH8eSEcyEe2rgspmIFjL-A" name="" type="_syl5UEcyEe2rgspmIFjL-A" association="_tH8eR0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH9FUUcyEe2rgspmIFjL-A" name="" memberEnd="_tH9FUkcyEe2rgspmIFjL-A _tFjRk0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH9FUkcyEe2rgspmIFjL-A" name="" type="_syl5UEcyEe2rgspmIFjL-A" association="_tH9FUUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH9FVEcyEe2rgspmIFjL-A" name="" memberEnd="_tH9FVUcyEe2rgspmIFjL-A _tFkfs0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH9FVUcyEe2rgspmIFjL-A" name="" type="_synugEcyEe2rgspmIFjL-A" association="_tH9FVEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH9sYUcyEe2rgspmIFjL-A" name="" memberEnd="_tH9sYkcyEe2rgspmIFjL-A _tFm78kcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH9sYkcyEe2rgspmIFjL-A" name="" type="_sy1w8EcyEe2rgspmIFjL-A" association="_tH9sYUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH9sZEcyEe2rgspmIFjL-A" name="" memberEnd="_tH9sZUcyEe2rgspmIFjL-A _tFoKEUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH9sZUcyEe2rgspmIFjL-A" name="" type="_sy1w8EcyEe2rgspmIFjL-A" association="_tH9sZEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH-TcUcyEe2rgspmIFjL-A" name="" memberEnd="_tH-TckcyEe2rgspmIFjL-A _tFqmUEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH-TckcyEe2rgspmIFjL-A" name="" type="_szDzYEcyEe2rgspmIFjL-A" association="_tH-TcUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH-TdEcyEe2rgspmIFjL-A" name="" memberEnd="_tH-TdUcyEe2rgspmIFjL-A _tFr0cEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH-TdUcyEe2rgspmIFjL-A" name="" type="_szDzYEcyEe2rgspmIFjL-A" association="_tH-TdEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH-6gUcyEe2rgspmIFjL-A" name="" memberEnd="_tH-6gkcyEe2rgspmIFjL-A _tFyiIUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH-6gkcyEe2rgspmIFjL-A" name="" type="_szeDEEcyEe2rgspmIFjL-A" association="_tH-6gUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH-6hEcyEe2rgspmIFjL-A" name="" memberEnd="_tH-6hUcyEe2rgspmIFjL-A _tFzJMEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH-6hUcyEe2rgspmIFjL-A" name="" type="_szeDEEcyEe2rgspmIFjL-A" association="_tH-6hEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH_hkEcyEe2rgspmIFjL-A" name="" memberEnd="_tH_hkUcyEe2rgspmIFjL-A _tFzJM0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH_hkUcyEe2rgspmIFjL-A" name="" type="_szeDEEcyEe2rgspmIFjL-A" association="_tH_hkEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH_hk0cyEe2rgspmIFjL-A" name="" memberEnd="_tH_hlEcyEe2rgspmIFjL-A _tF0XUEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH_hlEcyEe2rgspmIFjL-A" name="" type="_szeDEEcyEe2rgspmIFjL-A" association="_tH_hk0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tH_hlkcyEe2rgspmIFjL-A" name="" memberEnd="_tH_hl0cyEe2rgspmIFjL-A _tF0XUkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tH_hl0cyEe2rgspmIFjL-A" name="" type="_szeDEEcyEe2rgspmIFjL-A" association="_tH_hlkcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIAIoUcyEe2rgspmIFjL-A" name="" memberEnd="_tIAIokcyEe2rgspmIFjL-A _tF2zkEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIAIokcyEe2rgspmIFjL-A" name="" type="_sztToEcyEe2rgspmIFjL-A" association="_tIAIoUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIAIpEcyEe2rgspmIFjL-A" name="" memberEnd="_tIAIpUcyEe2rgspmIFjL-A _tF3aoUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIAIpUcyEe2rgspmIFjL-A" name="" type="_sztToEcyEe2rgspmIFjL-A" association="_tIAIpEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIAvsUcyEe2rgspmIFjL-A" name="" memberEnd="_tIAvskcyEe2rgspmIFjL-A _tF4BsEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIAvskcyEe2rgspmIFjL-A" name="" type="_sz1PcEcyEe2rgspmIFjL-A" association="_tIAvsUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIAvtEcyEe2rgspmIFjL-A" name="" memberEnd="_tIAvtUcyEe2rgspmIFjL-A _tF4owkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIAvtUcyEe2rgspmIFjL-A" name="" type="_sz4SwEcyEe2rgspmIFjL-A" association="_tIAvtEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIBWwUcyEe2rgspmIFjL-A" name="" memberEnd="_tIBWwkcyEe2rgspmIFjL-A _tF7sEkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIBWwkcyEe2rgspmIFjL-A" name="" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tIBWwUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIBWxEcyEe2rgspmIFjL-A" name="" memberEnd="_tIBWxUcyEe2rgspmIFjL-A _tF8TIEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIBWxUcyEe2rgspmIFjL-A" name="" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tIBWxEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIB90EcyEe2rgspmIFjL-A" name="" memberEnd="_tIB90UcyEe2rgspmIFjL-A _tF8TIkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIB90UcyEe2rgspmIFjL-A" name="" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tIB90EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIB900cyEe2rgspmIFjL-A" name="" memberEnd="_tIB91EcyEe2rgspmIFjL-A _tF8TJEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIB91EcyEe2rgspmIFjL-A" name="" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tIB900cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIB91kcyEe2rgspmIFjL-A" name="" memberEnd="_tIB910cyEe2rgspmIFjL-A _tF86MUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIB910cyEe2rgspmIFjL-A" name="" type="_s0BcsEcyEe2rgspmIFjL-A" association="_tIB91kcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tICk4UcyEe2rgspmIFjL-A" name="" memberEnd="_tICk4kcyEe2rgspmIFjL-A _tF-IU0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tICk4kcyEe2rgspmIFjL-A" name="" type="_s0FuIEcyEe2rgspmIFjL-A" association="_tICk4UcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tICk5EcyEe2rgspmIFjL-A" name="" memberEnd="_tICk5UcyEe2rgspmIFjL-A _tF-vYEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tICk5UcyEe2rgspmIFjL-A" name="" type="_s0FuIEcyEe2rgspmIFjL-A" association="_tICk5EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIDL8UcyEe2rgspmIFjL-A" name="" memberEnd="_tIDL8kcyEe2rgspmIFjL-A _tF_WckcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIDL8kcyEe2rgspmIFjL-A" name="" type="_s0LNsEcyEe2rgspmIFjL-A" association="_tIDL8UcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIDL9EcyEe2rgspmIFjL-A" name="" memberEnd="_tIDL9UcyEe2rgspmIFjL-A _tGBLoUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIDL9UcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIDL9EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIDzAUcyEe2rgspmIFjL-A" name="" memberEnd="_tIDzAkcyEe2rgspmIFjL-A _tGBysEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIDzAkcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIDzAUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIDzBEcyEe2rgspmIFjL-A" name="" memberEnd="_tIDzBUcyEe2rgspmIFjL-A _tGByskcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIDzBUcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIDzBEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIEaEUcyEe2rgspmIFjL-A" name="" memberEnd="_tIEaEkcyEe2rgspmIFjL-A _tGCZwUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIEaEkcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIEaEUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIEaFEcyEe2rgspmIFjL-A" name="" memberEnd="_tIEaFUcyEe2rgspmIFjL-A _tGDA0EcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIEaFUcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIEaFEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIFBIUcyEe2rgspmIFjL-A" name="" memberEnd="_tIFBIkcyEe2rgspmIFjL-A _tGDA0kcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIFBIkcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIFBIUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIFBJEcyEe2rgspmIFjL-A" name="" memberEnd="_tIFBJUcyEe2rgspmIFjL-A _tGDn4kcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIFBJUcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIFBJEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIFBJ0cyEe2rgspmIFjL-A" name="" memberEnd="_tIFBKEcyEe2rgspmIFjL-A _tGEO8kcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIFBKEcyEe2rgspmIFjL-A" name="" type="_s0Z3MEcyEe2rgspmIFjL-A" association="_tIFBJ0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIFBKkcyEe2rgspmIFjL-A" name="" memberEnd="_tIFBK0cyEe2rgspmIFjL-A _tGFdE0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIFBK0cyEe2rgspmIFjL-A" name="" type="_s0tZM0cyEe2rgspmIFjL-A" association="_tIFBKkcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIFoMUcyEe2rgspmIFjL-A" name="" memberEnd="_tIFoMkcyEe2rgspmIFjL-A _tGFdFUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIFoMkcyEe2rgspmIFjL-A" name="" type="_s0tZM0cyEe2rgspmIFjL-A" association="_tIFoMUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIFoNEcyEe2rgspmIFjL-A" name="" memberEnd="_tIFoNUcyEe2rgspmIFjL-A _tGHSQEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIFoNUcyEe2rgspmIFjL-A" name="" type="_s08CsEcyEe2rgspmIFjL-A" association="_tIFoNEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIGPQUcyEe2rgspmIFjL-A" name="" memberEnd="_tIGPQkcyEe2rgspmIFjL-A _tGHSQkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIGPQkcyEe2rgspmIFjL-A" name="" type="_s08CsEcyEe2rgspmIFjL-A" association="_tIGPQUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIGPREcyEe2rgspmIFjL-A" name="" memberEnd="_tIGPRUcyEe2rgspmIFjL-A _tGH5UkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIGPRUcyEe2rgspmIFjL-A" name="" type="_s0934EcyEe2rgspmIFjL-A" association="_tIGPREcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIG2UUcyEe2rgspmIFjL-A" name="" memberEnd="_tIG2UkcyEe2rgspmIFjL-A _tGJHcEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIG2UkcyEe2rgspmIFjL-A" name="" type="_s1D-gEcyEe2rgspmIFjL-A" association="_tIG2UUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIG2VEcyEe2rgspmIFjL-A" name="" memberEnd="_tIG2VUcyEe2rgspmIFjL-A _tGLjsEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIG2VUcyEe2rgspmIFjL-A" name="" type="_s1KsMEcyEe2rgspmIFjL-A" association="_tIG2VEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIHdYUcyEe2rgspmIFjL-A" name="" memberEnd="_tIHdYkcyEe2rgspmIFjL-A _tGLjskcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIHdYkcyEe2rgspmIFjL-A" name="" type="_s1KsMEcyEe2rgspmIFjL-A" association="_tIHdYUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIHdZEcyEe2rgspmIFjL-A" name="" memberEnd="_tIHdZUcyEe2rgspmIFjL-A _tGNY4UcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIHdZUcyEe2rgspmIFjL-A" name="" type="_s1li8EcyEe2rgspmIFjL-A" association="_tIHdZEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIIEcUcyEe2rgspmIFjL-A" name="" memberEnd="_tIIEckcyEe2rgspmIFjL-A _tGNY40cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIIEckcyEe2rgspmIFjL-A" name="" type="_s1li8EcyEe2rgspmIFjL-A" association="_tIIEcUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIIEdEcyEe2rgspmIFjL-A" name="" memberEnd="_tIIEdUcyEe2rgspmIFjL-A _tGN_8EcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIIEdUcyEe2rgspmIFjL-A" name="" type="_s1li8EcyEe2rgspmIFjL-A" association="_tIIEdEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIIrgUcyEe2rgspmIFjL-A" name="" memberEnd="_tIIrgkcyEe2rgspmIFjL-A _tGOnAUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIIrgkcyEe2rgspmIFjL-A" name="" type="_s1li8EcyEe2rgspmIFjL-A" association="_tIIrgUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIIrhEcyEe2rgspmIFjL-A" name="" memberEnd="_tIIrhUcyEe2rgspmIFjL-A _tGOnBEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIIrhUcyEe2rgspmIFjL-A" name="" type="_s1li8EcyEe2rgspmIFjL-A" association="_tIIrhEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIJSkEcyEe2rgspmIFjL-A" name="" memberEnd="_tIJSkUcyEe2rgspmIFjL-A _tGPOEEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIJSkUcyEe2rgspmIFjL-A" name="" type="_s1li8EcyEe2rgspmIFjL-A" association="_tIJSkEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIJSk0cyEe2rgspmIFjL-A" name="" memberEnd="_tIJSlEcyEe2rgspmIFjL-A _tGPOE0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIJSlEcyEe2rgspmIFjL-A" name="" type="_s1sQoEcyEe2rgspmIFjL-A" association="_tIJSk0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIJ5oEcyEe2rgspmIFjL-A" name="" memberEnd="_tIJ5oUcyEe2rgspmIFjL-A _tGQcMEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIJ5oUcyEe2rgspmIFjL-A" name="" type="_s1yXQEcyEe2rgspmIFjL-A" association="_tIJ5oEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIJ5o0cyEe2rgspmIFjL-A" name="" memberEnd="_tIJ5pEcyEe2rgspmIFjL-A _tGQcMkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIJ5pEcyEe2rgspmIFjL-A" name="" type="_s1yXQEcyEe2rgspmIFjL-A" association="_tIJ5o0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIJ5pkcyEe2rgspmIFjL-A" name="" memberEnd="_tIJ5p0cyEe2rgspmIFjL-A _tGQcNEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIJ5p0cyEe2rgspmIFjL-A" name="" type="_s1yXQEcyEe2rgspmIFjL-A" association="_tIJ5pkcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIKgsUcyEe2rgspmIFjL-A" name="" memberEnd="_tIKgskcyEe2rgspmIFjL-A _tGRDQUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIKgskcyEe2rgspmIFjL-A" name="" type="_s1yXQEcyEe2rgspmIFjL-A" association="_tIKgsUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIKgtEcyEe2rgspmIFjL-A" name="" memberEnd="_tIKgtUcyEe2rgspmIFjL-A _tGRDQ0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIKgtUcyEe2rgspmIFjL-A" name="" type="_s1yXQEcyEe2rgspmIFjL-A" association="_tIKgtEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tILHwUcyEe2rgspmIFjL-A" name="" memberEnd="_tILHwkcyEe2rgspmIFjL-A _tGVUtEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tILHwkcyEe2rgspmIFjL-A" name="" type="_s2F5QUcyEe2rgspmIFjL-A" association="_tILHwUcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tILHxEcyEe2rgspmIFjL-A" name="" memberEnd="_tILHxUcyEe2rgspmIFjL-A _tGV7wkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tILHxUcyEe2rgspmIFjL-A" name="" type="_s2F5QUcyEe2rgspmIFjL-A" association="_tILHxEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tILu0UcyEe2rgspmIFjL-A" name="" memberEnd="_tILu0kcyEe2rgspmIFjL-A _tGdQhUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tILu0kcyEe2rgspmIFjL-A" name="" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tILu0UcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tILu1EcyEe2rgspmIFjL-A" name="" memberEnd="_tILu1UcyEe2rgspmIFjL-A _tGd3kkcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tILu1UcyEe2rgspmIFjL-A" name="" type="_s2T7sEcyEe2rgspmIFjL-A" association="_tILu1EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIMV4UcyEe2rgspmIFjL-A" name="" memberEnd="_tIMV4kcyEe2rgspmIFjL-A _tGfswUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIMV4kcyEe2rgspmIFjL-A" name="" type="_s2s9QEcyEe2rgspmIFjL-A" association="_tIMV4UcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIMV5EcyEe2rgspmIFjL-A" name="" memberEnd="_tIMV5UcyEe2rgspmIFjL-A _tGfsxUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIMV5UcyEe2rgspmIFjL-A" name="" type="_s2s9QEcyEe2rgspmIFjL-A" association="_tIMV5EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIM88UcyEe2rgspmIFjL-A" name="" memberEnd="_tIM88kcyEe2rgspmIFjL-A _tGiwEEcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIM88kcyEe2rgspmIFjL-A" name="" type="_s2yc0EcyEe2rgspmIFjL-A" association="_tIM88UcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIM89EcyEe2rgspmIFjL-A" name="" memberEnd="_tIM89UcyEe2rgspmIFjL-A _tGiwE0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIM89UcyEe2rgspmIFjL-A" name="" type="_s2yc0EcyEe2rgspmIFjL-A" association="_tIM89EcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tINkAEcyEe2rgspmIFjL-A" name="" memberEnd="_tINkAUcyEe2rgspmIFjL-A _tGklRUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tINkAUcyEe2rgspmIFjL-A" name="" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tINkAEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tINkA0cyEe2rgspmIFjL-A" name="" memberEnd="_tINkBEcyEe2rgspmIFjL-A _tGlMUUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tINkBEcyEe2rgspmIFjL-A" name="" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tINkA0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIOLEEcyEe2rgspmIFjL-A" name="" memberEnd="_tIOLEUcyEe2rgspmIFjL-A _tGlMU0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIOLEUcyEe2rgspmIFjL-A" name="" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tIOLEEcyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIOLE0cyEe2rgspmIFjL-A" name="" memberEnd="_tIOLFEcyEe2rgspmIFjL-A _tGnBg0cyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIOLFEcyEe2rgspmIFjL-A" name="" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tIOLE0cyEe2rgspmIFjL-A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_tIOLFkcyEe2rgspmIFjL-A" name="" memberEnd="_tIOLF0cyEe2rgspmIFjL-A _tGoPoUcyEe2rgspmIFjL-A">
              <ownedEnd xmi:id="_tIOLF0cyEe2rgspmIFjL-A" name="" type="_s3IbEEcyEe2rgspmIFjL-A" association="_tIOLFkcyEe2rgspmIFjL-A"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_stZ3UEcyEe2rgspmIFjL-A" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_tCRUEEcyEe2rgspmIFjL-A" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tDsQYEcyEe2rgspmIFjL-A" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_stn5wUcyEe2rgspmIFjL-A" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_tCgkoUcyEe2rgspmIFjL-A" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tChLsUcyEe2rgspmIFjL-A" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tChLs0cyEe2rgspmIFjL-A" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tFLeIEcyEe2rgspmIFjL-A" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_sseDMEcyEe2rgspmIFjL-A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_sseDMUcyEe2rgspmIFjL-A" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_stCq8EcyEe2rgspmIFjL-A" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_tCFt4EcyEe2rgspmIFjL-A" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_svKx4EcyEe2rgspmIFjL-A" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_tDuFkUcyEe2rgspmIFjL-A" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_s00t8EcyEe2rgspmIFjL-A" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tB2dUEcyEe2rgspmIFjL-A" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tB3rcEcyEe2rgspmIFjL-A" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tB4SgUcyEe2rgspmIFjL-A" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tB45kUcyEe2rgspmIFjL-A" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tB45k0cyEe2rgspmIFjL-A" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tCMblEcyEe2rgspmIFjL-A" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tCzfkEcyEe2rgspmIFjL-A" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tDs3cUcyEe2rgspmIFjL-A" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tDs3c0cyEe2rgspmIFjL-A" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tDtegUcyEe2rgspmIFjL-A" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tDteg0cyEe2rgspmIFjL-A" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tD0zQEcyEe2rgspmIFjL-A" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tD1aUEcyEe2rgspmIFjL-A" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_stZ3UUcyEe2rgspmIFjL-A" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_tCR7IEcyEe2rgspmIFjL-A" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tCR7IkcyEe2rgspmIFjL-A" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tCpHgEcyEe2rgspmIFjL-A" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tCpukEcyEe2rgspmIFjL-A" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_staeYEcyEe2rgspmIFjL-A" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_staeYUcyEe2rgspmIFjL-A" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_tCSiMUcyEe2rgspmIFjL-A" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_tCTJQUcyEe2rgspmIFjL-A" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_tCTwUEcyEe2rgspmIFjL-A" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tEStUUcyEe2rgspmIFjL-A" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_tEStUkcyEe2rgspmIFjL-A" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tEs9AEcyEe2rgspmIFjL-A" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_tE80oEcyEe2rgspmIFjL-A" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ss7WMEcyEe2rgspmIFjL-A" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_ss79QEcyEe2rgspmIFjL-A" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_ss79QUcyEe2rgspmIFjL-A" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_ss79QkcyEe2rgspmIFjL-A" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_tCD4sEcyEe2rgspmIFjL-A" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_tCEfwEcyEe2rgspmIFjL-A" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_stnSsEcyEe2rgspmIFjL-A" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_stnSsUcyEe2rgspmIFjL-A" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_stnSskcyEe2rgspmIFjL-A" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_stn5wEcyEe2rgspmIFjL-A" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_tCf9kUcyEe2rgspmIFjL-A" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_tCf9k0cyEe2rgspmIFjL-A" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_tCeIYEcyEe2rgspmIFjL-A" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tCevcUcyEe2rgspmIFjL-A" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_tCfWgUcyEe2rgspmIFjL-A" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_staeYkcyEe2rgspmIFjL-A" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_staeY0cyEe2rgspmIFjL-A" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_tCTwUkcyEe2rgspmIFjL-A" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_staeZEcyEe2rgspmIFjL-A" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_staeZUcyEe2rgspmIFjL-A" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_staeZkcyEe2rgspmIFjL-A" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_tCUXYUcyEe2rgspmIFjL-A" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_stqWAEcyEe2rgspmIFjL-A" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_tCiZ0kcyEe2rgspmIFjL-A" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tCjA4kcyEe2rgspmIFjL-A" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tCjn80cyEe2rgspmIFjL-A" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tCk2EkcyEe2rgspmIFjL-A" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tCmEMEcyEe2rgspmIFjL-A" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tCmrQ0cyEe2rgspmIFjL-A" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDGagkcyEe2rgspmIFjL-A" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDHBk0cyEe2rgspmIFjL-A" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDIPsEcyEe2rgspmIFjL-A" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDI2w0cyEe2rgspmIFjL-A" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_su-koEcyEe2rgspmIFjL-A" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_tDfcEEcyEe2rgspmIFjL-A" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDhRQEcyEe2rgspmIFjL-A" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDh4UkcyEe2rgspmIFjL-A" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDifY0cyEe2rgspmIFjL-A" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDjGdEcyEe2rgspmIFjL-A" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDkUk0cyEe2rgspmIFjL-A" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_svErQEcyEe2rgspmIFjL-A" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_tDmw0EcyEe2rgspmIFjL-A" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDmw0kcyEe2rgspmIFjL-A" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDnX4UcyEe2rgspmIFjL-A" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDnX40cyEe2rgspmIFjL-A" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_tDn-8UcyEe2rgspmIFjL-A" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_rwfjIEcyEe2rgspmIFjL-A">
      <eAnnotations xmi:id="_rwh_YEcyEe2rgspmIFjL-A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_rwjNgEcyEe2rgspmIFjL-A" base_Package="_rtrfsEcyEe2rgspmIFjL-A">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_syLpoEcyEe2rgspmIFjL-A" genericsValue="T,E" base_Element="_syJ0cEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syP7EUcyEe2rgspmIFjL-A" base_Element="_syP7EEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syRJMEcyEe2rgspmIFjL-A" base_Element="_syP7EEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syRJMUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_syRwQEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_syRJMkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_sySXUEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_syRwQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_syTlcEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_syS-YEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_syUMgUcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_syUMgEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_syVaoEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_syUzkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_syrY4EcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_syqx0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sywRYEcyEe2rgspmIFjL-A" base_Element="_syvqUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_sywRYUcyEe2rgspmIFjL-A" base_Element="_syvqUEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_sywRYkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sywRZEcyEe2rgspmIFjL-A" base_Element="_sywRY0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syw4cEcyEe2rgspmIFjL-A" base_Element="_sywRY0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_syw4cUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syw4c0cyEe2rgspmIFjL-A" base_Element="_syw4ckcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syw4dEcyEe2rgspmIFjL-A" base_Element="_syw4ckcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syw4dUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syxfgEcyEe2rgspmIFjL-A" base_Element="_syw4dkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syxfgUcyEe2rgspmIFjL-A" base_Element="_syw4dkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syxfgkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syxfhEcyEe2rgspmIFjL-A" base_Element="_syxfg0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syxfhUcyEe2rgspmIFjL-A" base_Element="_syxfg0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_syxfhkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syyGkUcyEe2rgspmIFjL-A" base_Element="_syyGkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syyGkkcyEe2rgspmIFjL-A" base_Element="_syyGkEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syyGk0cyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syytoEcyEe2rgspmIFjL-A" base_Element="_syyGlEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syytoUcyEe2rgspmIFjL-A" base_Element="_syyGlEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syytokcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syytpEcyEe2rgspmIFjL-A" base_Element="_syyto0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syytpUcyEe2rgspmIFjL-A" base_Element="_syyto0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_syytpkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syzUsUcyEe2rgspmIFjL-A" base_Element="_syzUsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syzUskcyEe2rgspmIFjL-A" base_Element="_syzUsEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syzUs0cyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syzUtUcyEe2rgspmIFjL-A" base_Element="_syzUtEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syz7wEcyEe2rgspmIFjL-A" base_Element="_syzUtEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syz7wUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_syz7w0cyEe2rgspmIFjL-A" base_Element="_syz7wkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_syz7xEcyEe2rgspmIFjL-A" base_Element="_syz7wkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_syz7xUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sy0i0EcyEe2rgspmIFjL-A" base_Element="_syz7xkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_sy0i0UcyEe2rgspmIFjL-A" base_Element="_syz7xkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_sy0i0kcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sy0i1EcyEe2rgspmIFjL-A" base_Element="_sy0i00cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_sy1J4EcyEe2rgspmIFjL-A" base_Element="_sy0i00cyEe2rgspmIFjL-A">
    <annotations xmi:id="_sy1J4UcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sy40QEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_sy4NMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szFokEcyEe2rgspmIFjL-A" base_Element="_szFBgEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szFokUcyEe2rgspmIFjL-A" base_Element="_szFBgEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_szFokkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szGPoEcyEe2rgspmIFjL-A" base_Element="_szFok0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szGPoUcyEe2rgspmIFjL-A" base_Element="_szFok0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_szGPokcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szG2sEcyEe2rgspmIFjL-A" base_Element="_szGPo0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szG2sUcyEe2rgspmIFjL-A" base_Element="_szGPo0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_szG2skcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_szKhEEcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_szJ6AEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szNkYUcyEe2rgspmIFjL-A" base_Element="_szM9VUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szOLcEcyEe2rgspmIFjL-A" base_Element="_szM9VUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_szOLcUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szQnsUcyEe2rgspmIFjL-A" base_Element="_szQnsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szTrAEcyEe2rgspmIFjL-A" base_Element="_szTD8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szTrAUcyEe2rgspmIFjL-A" base_Element="_szTD8EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_szTrAkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szUSEEcyEe2rgspmIFjL-A" base_Element="_szTrA0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szUSEUcyEe2rgspmIFjL-A" base_Element="_szTrA0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_szUSEkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szU5IEcyEe2rgspmIFjL-A" base_Element="_szUSE0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szU5IUcyEe2rgspmIFjL-A" base_Element="_szUSE0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_szU5IkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_szjioEcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_szi7kkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_szkJsUcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_szkJsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_szlX0EcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_szkwwEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szml8kcyEe2rgspmIFjL-A" base_Element="_szml8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szml80cyEe2rgspmIFjL-A" base_Element="_szml8EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_szml9EcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_szvv4EcyEe2rgspmIFjL-A" base_Element="_szvI0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_szvv4UcyEe2rgspmIFjL-A" base_Element="_szvI0EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_szvv4kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s0HjUEcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s0G8QEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s0J_kEcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s0IxcEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0Np8kcyEe2rgspmIFjL-A" base_Element="_s0Np8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0ORAEcyEe2rgspmIFjL-A" base_Element="_s0Np8EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0ORAUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0PfIEcyEe2rgspmIFjL-A" base_Element="_s0O4EkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0PfIUcyEe2rgspmIFjL-A" base_Element="_s0O4EkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0PfIkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0PfJEcyEe2rgspmIFjL-A" base_Element="_s0PfI0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0QGMEcyEe2rgspmIFjL-A" base_Element="_s0PfI0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0QGMUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0Wz4EcyEe2rgspmIFjL-A" base_Element="_s0WM0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0Wz4UcyEe2rgspmIFjL-A" base_Element="_s0WM0kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0Wz4kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s0YpEEcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s0YCAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s0bFUEcyEe2rgspmIFjL-A" genericsValue="String, Integer" base_Element="_s0aeQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s0bsYEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_s0bFUUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_s0cTckcyEe2rgspmIFjL-A" base_Element="_s0bsYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0ldYUcyEe2rgspmIFjL-A" base_Element="_s0ldYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0ldYkcyEe2rgspmIFjL-A" base_Element="_s0ldYEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0ldY0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s0qV4EcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s0pu0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0unUUcyEe2rgspmIFjL-A" base_Element="_s0unUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0unUkcyEe2rgspmIFjL-A" base_Element="_s0unUEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0vOYEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0vOYkcyEe2rgspmIFjL-A" base_Element="_s0vOYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0vOY0cyEe2rgspmIFjL-A" base_Element="_s0vOYUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0vOZEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0vOZkcyEe2rgspmIFjL-A" base_Element="_s0vOZUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s0vOZ0cyEe2rgspmIFjL-A" base_Element="_s0vOZUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s0vOaEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s0xqoEcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s0xDkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s0zf0EcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s0y4wEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_s00t8UcyEe2rgspmIFjL-A" base_Element="_s00t8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s01VAEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_s00t8kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s0_tEEcyEe2rgspmIFjL-A" base_Element="_s0_GAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1AUIEcyEe2rgspmIFjL-A" base_Element="_s0_GAEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1AUIUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s1CJUEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_s1BiQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s1Ho4EcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s1HB0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s1JeEEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_s1I3AEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s1ZVsEcyEe2rgspmIFjL-A" genericsValue="T extends SchedulableObject" base_Element="_s1YuoEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s1aj0UcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_s1aj0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1cZAEcyEe2rgspmIFjL-A" base_Element="_s1bx8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s1fcUEcyEe2rgspmIFjL-A" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_s1e1QEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1ifoUcyEe2rgspmIFjL-A" base_Element="_s1ifoEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1jGskcyEe2rgspmIFjL-A" base_Element="_s1jGsUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1nYIUcyEe2rgspmIFjL-A" base_Element="_s1nYIEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1n_MEcyEe2rgspmIFjL-A" base_Element="_s1nYIEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1n_MUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1n_M0cyEe2rgspmIFjL-A" base_Element="_s1n_MkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1n_NEcyEe2rgspmIFjL-A" base_Element="_s1n_MkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1n_NUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1omQUcyEe2rgspmIFjL-A" base_Element="_s1n_NkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1omQkcyEe2rgspmIFjL-A" base_Element="_s1n_NkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1omQ0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s1zlYUcyEe2rgspmIFjL-A" base_Element="_s1zlYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1zlYkcyEe2rgspmIFjL-A" base_Element="_s1zlYEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1zlY0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s10McUcyEe2rgspmIFjL-A" base_Element="_s10McEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s10MckcyEe2rgspmIFjL-A" base_Element="_s10McEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s10Mc0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s10zgEcyEe2rgspmIFjL-A" base_Element="_s10MdEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s10zgUcyEe2rgspmIFjL-A" base_Element="_s10MdEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s10zgkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s10zhEcyEe2rgspmIFjL-A" base_Element="_s10zg0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s11akEcyEe2rgspmIFjL-A" base_Element="_s10zg0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s11akUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s11ak0cyEe2rgspmIFjL-A" base_Element="_s11akkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s11alEcyEe2rgspmIFjL-A" base_Element="_s11akkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s11alUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s12BoUcyEe2rgspmIFjL-A" base_Element="_s12BoEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s12BokcyEe2rgspmIFjL-A" base_Element="_s12BoEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s12Bo0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s12osEcyEe2rgspmIFjL-A" base_Element="_s12BpEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s12osUcyEe2rgspmIFjL-A" base_Element="_s12BpEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s12oskcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s12otUcyEe2rgspmIFjL-A" base_Element="_s12os0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s12otkcyEe2rgspmIFjL-A" base_Element="_s12os0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s13PwEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s13Pw0cyEe2rgspmIFjL-A" base_Element="_s13PwUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1320EcyEe2rgspmIFjL-A" base_Element="_s13PwUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1320UcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s13200cyEe2rgspmIFjL-A" base_Element="_s1320kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s1321EcyEe2rgspmIFjL-A" base_Element="_s1320kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s1321UcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s14d4EcyEe2rgspmIFjL-A" base_Element="_s1321kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s14d4UcyEe2rgspmIFjL-A" base_Element="_s1321kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s14d4kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s15E8EcyEe2rgspmIFjL-A" base_Element="_s14d40cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s15E8UcyEe2rgspmIFjL-A" base_Element="_s14d40cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s15E8kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s15E9UcyEe2rgspmIFjL-A" base_Element="_s15E80cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s15sAEcyEe2rgspmIFjL-A" base_Element="_s15E80cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s15sAUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s15sBEcyEe2rgspmIFjL-A" base_Element="_s15sAkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s16TEEcyEe2rgspmIFjL-A" base_Element="_s15sAkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s16TEUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s16TFEcyEe2rgspmIFjL-A" base_Element="_s16TEkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s16TFUcyEe2rgspmIFjL-A" base_Element="_s16TEkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s16TFkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s16TGEcyEe2rgspmIFjL-A" base_Element="_s16TF0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s16TGUcyEe2rgspmIFjL-A" base_Element="_s16TF0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s166IEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s2F5QEcyEe2rgspmIFjL-A" genericsValue="InstructionParameters" base_Element="_s2FSMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_s2HHYEcyEe2rgspmIFjL-A" genericsValue="InstructionParameters" base_Element="_s2GgVEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_s2NOAkcyEe2rgspmIFjL-A" base_Element="_s2NOAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_s2gwA0cyEe2rgspmIFjL-A" base_Element="_s2gwAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_s2hXFUcyEe2rgspmIFjL-A" base_Element="_s2hXEkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_s2ilMEcyEe2rgspmIFjL-A" base_Element="_s2h-I0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_s2jMREcyEe2rgspmIFjL-A" base_Element="_s2jMQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s2uyckcyEe2rgspmIFjL-A" base_Element="_s2uycUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s2vZgEcyEe2rgspmIFjL-A" base_Element="_s2uycUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s2vZgUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s2vZg0cyEe2rgspmIFjL-A" base_Element="_s2vZgkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s2wAkEcyEe2rgspmIFjL-A" base_Element="_s2vZgkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s2wAkUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s2wAlEcyEe2rgspmIFjL-A" base_Element="_s2wAkkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s2wnoEcyEe2rgspmIFjL-A" base_Element="_s2wAkkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s2wnoUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s22HMUcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_s22HMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3BGUEcyEe2rgspmIFjL-A" base_Element="_s3AfQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3BGUUcyEe2rgspmIFjL-A" base_Element="_s3AfQUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3BGUkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3BGVEcyEe2rgspmIFjL-A" base_Element="_s3BGU0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3BtYEcyEe2rgspmIFjL-A" base_Element="_s3BGU0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3BtYUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3BtY0cyEe2rgspmIFjL-A" base_Element="_s3BtYkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3BtZEcyEe2rgspmIFjL-A" base_Element="_s3BtYkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3BtZUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3BtZ0cyEe2rgspmIFjL-A" base_Element="_s3BtZkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3CUcEcyEe2rgspmIFjL-A" base_Element="_s3BtZkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3CUcUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3CUc0cyEe2rgspmIFjL-A" base_Element="_s3CUckcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3CUdEcyEe2rgspmIFjL-A" base_Element="_s3CUckcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3CUdUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3C7gEcyEe2rgspmIFjL-A" base_Element="_s3CUdkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3C7gUcyEe2rgspmIFjL-A" base_Element="_s3CUdkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3C7gkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3C7hEcyEe2rgspmIFjL-A" base_Element="_s3C7g0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3C7hUcyEe2rgspmIFjL-A" base_Element="_s3C7g0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3C7hkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3DikEcyEe2rgspmIFjL-A" base_Element="_s3C7h0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3DikUcyEe2rgspmIFjL-A" base_Element="_s3C7h0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3DikkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3DilEcyEe2rgspmIFjL-A" base_Element="_s3Dik0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3DilUcyEe2rgspmIFjL-A" base_Element="_s3Dik0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3EJoEcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3EJokcyEe2rgspmIFjL-A" base_Element="_s3EJoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3EJo0cyEe2rgspmIFjL-A" base_Element="_s3EJoUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3EJpEcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3EJpkcyEe2rgspmIFjL-A" base_Element="_s3EJpUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3EwsEcyEe2rgspmIFjL-A" base_Element="_s3EJpUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3EwsUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3Ews0cyEe2rgspmIFjL-A" base_Element="_s3EwskcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3EwtEcyEe2rgspmIFjL-A" base_Element="_s3EwskcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3EwtUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3Ewt0cyEe2rgspmIFjL-A" base_Element="_s3EwtkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3FXwEcyEe2rgspmIFjL-A" base_Element="_s3EwtkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3FXwUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3FXw0cyEe2rgspmIFjL-A" base_Element="_s3FXwkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3FXxEcyEe2rgspmIFjL-A" base_Element="_s3FXwkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3FXxUcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3FXx0cyEe2rgspmIFjL-A" base_Element="_s3FXxkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3F-0EcyEe2rgspmIFjL-A" base_Element="_s3FXxkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3F-0UcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3F-00cyEe2rgspmIFjL-A" base_Element="_s3F-0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3F-1EcyEe2rgspmIFjL-A" base_Element="_s3F-0kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3F-1UcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3F-10cyEe2rgspmIFjL-A" base_Element="_s3F-1kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3Gl4EcyEe2rgspmIFjL-A" base_Element="_s3F-1kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3Gl4UcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3Gl40cyEe2rgspmIFjL-A" base_Element="_s3Gl4kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3Gl5EcyEe2rgspmIFjL-A" base_Element="_s3Gl4kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3Gl5UcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3HM8EcyEe2rgspmIFjL-A" base_Element="_s3Gl5kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3HM8UcyEe2rgspmIFjL-A" base_Element="_s3Gl5kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3HM8kcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3HM9EcyEe2rgspmIFjL-A" base_Element="_s3HM80cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3HM9UcyEe2rgspmIFjL-A" base_Element="_s3HM80cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3HM9kcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3H0AEcyEe2rgspmIFjL-A" base_Element="_s3HM90cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3H0AUcyEe2rgspmIFjL-A" base_Element="_s3HM90cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3H0AkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3H0BEcyEe2rgspmIFjL-A" base_Element="_s3H0A0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3H0BUcyEe2rgspmIFjL-A" base_Element="_s3H0A0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3H0BkcyEe2rgspmIFjL-A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3QW4EcyEe2rgspmIFjL-A" base_Element="_s3Pv0UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3QW4UcyEe2rgspmIFjL-A" base_Element="_s3Pv0UcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3QW4kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3Q98UcyEe2rgspmIFjL-A" base_Element="_s3QW5UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3Q98kcyEe2rgspmIFjL-A" base_Element="_s3QW5UcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3Q980cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3Q99kcyEe2rgspmIFjL-A" base_Element="_s3Q99EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3RlAEcyEe2rgspmIFjL-A" base_Element="_s3Q99EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3RlAUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3SMEEcyEe2rgspmIFjL-A" base_Element="_s3RlBkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3SMEUcyEe2rgspmIFjL-A" base_Element="_s3RlBkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3SMEkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3SzIEcyEe2rgspmIFjL-A" base_Element="_s3SME0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3SzIUcyEe2rgspmIFjL-A" base_Element="_s3SME0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3SzIkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3TaMEcyEe2rgspmIFjL-A" base_Element="_s3SzI0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3TaMUcyEe2rgspmIFjL-A" base_Element="_s3SzI0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3TaMkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3TaNUcyEe2rgspmIFjL-A" base_Element="_s3TaM0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3TaNkcyEe2rgspmIFjL-A" base_Element="_s3TaM0cyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3TaN0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_s3UBQ0cyEe2rgspmIFjL-A" base_Element="_s3UBQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_s3UBREcyEe2rgspmIFjL-A" base_Element="_s3UBQUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_s3UBRUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_s3UoUUcyEe2rgspmIFjL-A" genericsValue="String, Integer" base_Element="_s3UoUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tB3EYEcyEe2rgspmIFjL-A" base_Element="_tB2dUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tB4SgEcyEe2rgspmIFjL-A" base_Element="_tB3rcEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tB45kEcyEe2rgspmIFjL-A" base_Element="_tB4SgUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tB45kkcyEe2rgspmIFjL-A" base_Element="_tB45kUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tB5goEcyEe2rgspmIFjL-A" base_Element="_tB45k0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tB7V00cyEe2rgspmIFjL-A" base_Element="_tB7V0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tB7V1EcyEe2rgspmIFjL-A" base_Element="_tB7V0EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tB7V1UcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tB8j80cyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tB8j8kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tB9LAkcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tB9LAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tB_nQEcyEe2rgspmIFjL-A" genericsValue="String, Activation" base_Element="_tB_AMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCD4sUcyEe2rgspmIFjL-A" base_Element="_tCD4sEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCEfwUcyEe2rgspmIFjL-A" base_Element="_tCEfwEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCFt4UcyEe2rgspmIFjL-A" base_Element="_tCFt4EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCJYQUcyEe2rgspmIFjL-A" base_Element="_tCIxNkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCJYQkcyEe2rgspmIFjL-A" base_Element="_tCIxNkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCJYQ0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCNCoEcyEe2rgspmIFjL-A" base_Element="_tCMblEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCPe4UcyEe2rgspmIFjL-A" base_Element="_tCO30EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCPe4kcyEe2rgspmIFjL-A" base_Element="_tCO30EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCPe40cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCRUEUcyEe2rgspmIFjL-A" base_Element="_tCRUEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCR7IUcyEe2rgspmIFjL-A" base_Element="_tCR7IEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCSiMEcyEe2rgspmIFjL-A" base_Element="_tCR7IkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCTJQEcyEe2rgspmIFjL-A" base_Element="_tCSiMUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCTJQkcyEe2rgspmIFjL-A" base_Element="_tCTJQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCTwUUcyEe2rgspmIFjL-A" base_Element="_tCTwUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCUXYEcyEe2rgspmIFjL-A" base_Element="_tCTwUkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCU-cEcyEe2rgspmIFjL-A" base_Element="_tCUXYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCYBwEcyEe2rgspmIFjL-A" base_Element="_tCXasEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCYBwUcyEe2rgspmIFjL-A" base_Element="_tCXasEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCYBwkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tCbFEEcyEe2rgspmIFjL-A" genericsValue="String, Flow" base_Element="_tCaeAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tCbsIEcyEe2rgspmIFjL-A" genericsValue="Node, Activation" base_Element="_tCbFEUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCevcEcyEe2rgspmIFjL-A" base_Element="_tCeIYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCfWgEcyEe2rgspmIFjL-A" base_Element="_tCevcUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCf9kEcyEe2rgspmIFjL-A" base_Element="_tCfWgUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCf9kkcyEe2rgspmIFjL-A" base_Element="_tCf9kUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCgkoEcyEe2rgspmIFjL-A" base_Element="_tCf9k0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tChLsEcyEe2rgspmIFjL-A" base_Element="_tCgkoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tChLskcyEe2rgspmIFjL-A" base_Element="_tChLsUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tChywEcyEe2rgspmIFjL-A" base_Element="_tChLs0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCiZ00cyEe2rgspmIFjL-A" base_Element="_tCiZ0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCiZ1kcyEe2rgspmIFjL-A" base_Element="_tCiZ1EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCjA4EcyEe2rgspmIFjL-A" base_Element="_tCiZ1EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCjA4UcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCjA40cyEe2rgspmIFjL-A" base_Element="_tCjA4kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCjn8EcyEe2rgspmIFjL-A" base_Element="_tCjA5EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCjn8UcyEe2rgspmIFjL-A" base_Element="_tCjA5EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCjn8kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCkPAEcyEe2rgspmIFjL-A" base_Element="_tCjn80cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCkPA0cyEe2rgspmIFjL-A" base_Element="_tCkPAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCk2EEcyEe2rgspmIFjL-A" base_Element="_tCkPAUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCk2EUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCk2E0cyEe2rgspmIFjL-A" base_Element="_tCk2EkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCldIkcyEe2rgspmIFjL-A" base_Element="_tCldIEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCldI0cyEe2rgspmIFjL-A" base_Element="_tCldIEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCldJEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCmEMUcyEe2rgspmIFjL-A" base_Element="_tCmEMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCmrQEcyEe2rgspmIFjL-A" base_Element="_tCmEMkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCmrQUcyEe2rgspmIFjL-A" base_Element="_tCmEMkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCmrQkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCnSUEcyEe2rgspmIFjL-A" base_Element="_tCmrQ0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCn5YEcyEe2rgspmIFjL-A" base_Element="_tCnSUUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCn5YUcyEe2rgspmIFjL-A" base_Element="_tCnSUUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCn5YkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tCpHgUcyEe2rgspmIFjL-A" base_Element="_tCpHgEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCpukUcyEe2rgspmIFjL-A" base_Element="_tCpukEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tCrjwUcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tCrjwEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCsK0UcyEe2rgspmIFjL-A" base_Element="_tCsK0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tCwcQUcyEe2rgspmIFjL-A" base_Element="_tCv1MEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tCwcQkcyEe2rgspmIFjL-A" base_Element="_tCv1MEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tCwcQ0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tCxqYUcyEe2rgspmIFjL-A" genericsValue="String, Node" base_Element="_tCxqYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tCzfkUcyEe2rgspmIFjL-A" base_Element="_tCzfkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tC3xA0cyEe2rgspmIFjL-A" base_Element="_tC3xAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tC4YEEcyEe2rgspmIFjL-A" base_Element="_tC3xAEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tC4YEUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tC5mMEcyEe2rgspmIFjL-A" genericsValue="ScheduleTime" base_Element="_tC4_IEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tC60U0cyEe2rgspmIFjL-A" base_Element="_tC60UEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tC60VEcyEe2rgspmIFjL-A" base_Element="_tC60UEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tC60VUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tC8pgEcyEe2rgspmIFjL-A" genericsValue="String,InstructionTimeSlot" base_Element="_tC8CcEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tC_FxEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tC_FwEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tDAT4UcyEe2rgspmIFjL-A" genericsValue="Double" base_Element="_tDAT4EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tDBiAEcyEe2rgspmIFjL-A" genericsValue="Double,ReliabilityRow" base_Element="_tDA68EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDFMZEcyEe2rgspmIFjL-A" base_Element="_tDFMYkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDFzcEcyEe2rgspmIFjL-A" base_Element="_tDFMYkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDFzcUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDFzdEcyEe2rgspmIFjL-A" base_Element="_tDFzckcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDGagEcyEe2rgspmIFjL-A" base_Element="_tDFzckcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDGagUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDGag0cyEe2rgspmIFjL-A" base_Element="_tDGagkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDHBkEcyEe2rgspmIFjL-A" base_Element="_tDGahEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDHBkUcyEe2rgspmIFjL-A" base_Element="_tDGahEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDHBkkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDHooEcyEe2rgspmIFjL-A" base_Element="_tDHBk0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDHoo0cyEe2rgspmIFjL-A" base_Element="_tDHooUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDHopEcyEe2rgspmIFjL-A" base_Element="_tDHooUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDHopUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDIPsUcyEe2rgspmIFjL-A" base_Element="_tDIPsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDI2wEcyEe2rgspmIFjL-A" base_Element="_tDIPskcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDI2wUcyEe2rgspmIFjL-A" base_Element="_tDIPskcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDI2wkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDJd0EcyEe2rgspmIFjL-A" base_Element="_tDI2w0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDKE4EcyEe2rgspmIFjL-A" base_Element="_tDJd0UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDKE4UcyEe2rgspmIFjL-A" base_Element="_tDJd0UcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDKE4kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDKE5UcyEe2rgspmIFjL-A" base_Element="_tDKE40cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDKr8EcyEe2rgspmIFjL-A" base_Element="_tDKE40cyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDKr8UcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDKr9EcyEe2rgspmIFjL-A" base_Element="_tDKr8kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDKr9UcyEe2rgspmIFjL-A" base_Element="_tDKr8kcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDKr9kcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDLTAEcyEe2rgspmIFjL-A" base_Element="_tDKr90cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDLTAUcyEe2rgspmIFjL-A" base_Element="_tDKr90cyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDLTAkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tDSAsUcyEe2rgspmIFjL-A" genericsValue="Activation,Row&lt;Activation>" base_Element="_tDSAsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tDSnxUcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tDSnwUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDUc8EcyEe2rgspmIFjL-A" base_Element="_tDT14UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDVrEEcyEe2rgspmIFjL-A" base_Element="_tDVEAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDVrEkcyEe2rgspmIFjL-A" base_Element="_tDVrEUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDgDIEcyEe2rgspmIFjL-A" base_Element="_tDfcEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDgDI0cyEe2rgspmIFjL-A" base_Element="_tDgDIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDgqMEcyEe2rgspmIFjL-A" base_Element="_tDgDIUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDgqMUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDgqNEcyEe2rgspmIFjL-A" base_Element="_tDgqMkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDgqNUcyEe2rgspmIFjL-A" base_Element="_tDgqMkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDgqNkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDhRQUcyEe2rgspmIFjL-A" base_Element="_tDhRQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDhRREcyEe2rgspmIFjL-A" base_Element="_tDhRQkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDh4UEcyEe2rgspmIFjL-A" base_Element="_tDhRQkcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDh4UUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDh4U0cyEe2rgspmIFjL-A" base_Element="_tDh4UkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDifYEcyEe2rgspmIFjL-A" base_Element="_tDh4VEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDifYUcyEe2rgspmIFjL-A" base_Element="_tDh4VEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDifYkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDifZEcyEe2rgspmIFjL-A" base_Element="_tDifY0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDjGcUcyEe2rgspmIFjL-A" base_Element="_tDifZUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDjGckcyEe2rgspmIFjL-A" base_Element="_tDifZUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDjGc0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDjtgEcyEe2rgspmIFjL-A" base_Element="_tDjGdEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDkUkEcyEe2rgspmIFjL-A" base_Element="_tDjtgUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDkUkUcyEe2rgspmIFjL-A" base_Element="_tDjtgUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDkUkkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDk7oEcyEe2rgspmIFjL-A" base_Element="_tDkUk0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tDk7o0cyEe2rgspmIFjL-A" base_Element="_tDk7oUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tDk7pEcyEe2rgspmIFjL-A" base_Element="_tDk7oUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tDk7pUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tDmw0UcyEe2rgspmIFjL-A" base_Element="_tDmw0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDnX4EcyEe2rgspmIFjL-A" base_Element="_tDmw0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDnX4kcyEe2rgspmIFjL-A" base_Element="_tDnX4UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDn-8EcyEe2rgspmIFjL-A" base_Element="_tDnX40cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDn-8kcyEe2rgspmIFjL-A" base_Element="_tDn-8UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDs3cEcyEe2rgspmIFjL-A" base_Element="_tDsQYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDs3ckcyEe2rgspmIFjL-A" base_Element="_tDs3cUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDtegEcyEe2rgspmIFjL-A" base_Element="_tDs3c0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDtegkcyEe2rgspmIFjL-A" base_Element="_tDtegUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDuFkEcyEe2rgspmIFjL-A" base_Element="_tDteg0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tDuFkkcyEe2rgspmIFjL-A" base_Element="_tDuFkUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tDv6wEcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_tDvTsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tD0zQUcyEe2rgspmIFjL-A" base_Element="_tD0zQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tD1aUUcyEe2rgspmIFjL-A" base_Element="_tD1aUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEStUEcyEe2rgspmIFjL-A" genericsValue="T, E" base_Element="_tESGQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tETUYEcyEe2rgspmIFjL-A" base_Element="_tEStUkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tET7cEcyEe2rgspmIFjL-A" genericsValue="Activation" base_Element="_tETUYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEVJkEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tEUigUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEVwoEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEVJkkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEWXsEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEVwokcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEW-wEcyEe2rgspmIFjL-A" genericsValue="ScheduleTime" base_Element="_tEWXskcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEZbAEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEYz8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEbQNUcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tEapIkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEb3QEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEbQMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEceUEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEb3Q0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEdscEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEdFYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEe6kEcyEe2rgspmIFjL-A" genericsValue="Activation" base_Element="_tEeTgEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tEgIsEcyEe2rgspmIFjL-A" base_Element="_tEfhoEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEgIsUcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tEfhoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tEgvwEcyEe2rgspmIFjL-A" base_Element="_tEfhoEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tEgvwUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tEhW0EcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tEgvwkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tEh94EcyEe2rgspmIFjL-A" base_Element="_tEhW0UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tEik9EcyEe2rgspmIFjL-A" base_Element="_tEik8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tEjMAEcyEe2rgspmIFjL-A" base_Element="_tEik8EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tEjMAUcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tEkaIEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tEjMAkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tElBMEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tEkaIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEndcEcyEe2rgspmIFjL-A" genericsValue="Flow" base_Element="_tEm2YEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEpSokcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tEpSoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEqgwEcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_tEp5sUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tEtkEEcyEe2rgspmIFjL-A" base_Element="_tEs9AEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEvZQEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tEuyMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tEwnYEcyEe2rgspmIFjL-A" base_Element="_tEwAUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tEwnYUcyEe2rgspmIFjL-A" base_Element="_tEwAUEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tEwnYkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tExOcEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tEwnY0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tEx1hEcyEe2rgspmIFjL-A" base_Element="_tEx1gEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tEx1hUcyEe2rgspmIFjL-A" base_Element="_tEx1gEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tEyckEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tEyckkcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tEyckUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tEzqsUcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tEzqsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tE0RxEcyEe2rgspmIFjL-A" base_Element="_tE0RwEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tE040EcyEe2rgspmIFjL-A" base_Element="_tE0RwEcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tE040UcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tE2G8EcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tE1f4kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Array xmi:id="_tE2G9UcyEe2rgspmIFjL-A" base_Element="_tE2G8UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tE2uAEcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tE2G8kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tE38IEcyEe2rgspmIFjL-A" base_Element="_tE3VEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tE5xUEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tE5KQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tE6YYEcyEe2rgspmIFjL-A" base_Element="_tE5xUUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tE6YYUcyEe2rgspmIFjL-A" base_Element="_tE5xUUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tE6YYkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_tE7mgEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tE6_cEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tE8NkUcyEe2rgspmIFjL-A" base_Element="_tE7mgUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tE8NkkcyEe2rgspmIFjL-A" base_Element="_tE7mgUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tE8Nk0cyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tE80oUcyEe2rgspmIFjL-A" base_Element="_tE80oEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tE_Q4kcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tE_Q4UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFBGEEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tFAfAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFBtIEcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tFBGEkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFBtIUcyEe2rgspmIFjL-A" genericsValue="T" base_Element="_tFBGE0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFDiUEcyEe2rgspmIFjL-A" genericsValue="E" base_Element="_tFC7RUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tFEJYUcyEe2rgspmIFjL-A" base_Element="_tFEJYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tFEwdEcyEe2rgspmIFjL-A" base_Element="_tFEwc0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_tFF-lEcyEe2rgspmIFjL-A" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_tFF-kkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFF-lUcyEe2rgspmIFjL-A" base_Element="_tFF-kkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tFIa0UcyEe2rgspmIFjL-A" base_Element="_tFIa0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFKQAUcyEe2rgspmIFjL-A" base_Element="_tFJo8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFKQAkcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tFJo8UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Annotations xmi:id="_tFKQA0cyEe2rgspmIFjL-A" base_Element="_tFJo8EcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tFKQBEcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tFLeIUcyEe2rgspmIFjL-A" base_Element="_tFLeIEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFQ9tUcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_tFQ9sEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFfAIEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tFeZEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFfnMEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tFfAIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFfnMkcyEe2rgspmIFjL-A" genericsValue="ScheduleTime" base_Element="_tFfnMUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFiDcEcyEe2rgspmIFjL-A" base_Element="_tFhcYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFiDckcyEe2rgspmIFjL-A" base_Element="_tFiDcUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFiqgEcyEe2rgspmIFjL-A" base_Element="_tFiDc0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFjRkkcyEe2rgspmIFjL-A" base_Element="_tFjRkUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFjRlEcyEe2rgspmIFjL-A" base_Element="_tFjRk0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFkfsEcyEe2rgspmIFjL-A" base_Element="_tFj4okcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFkfskcyEe2rgspmIFjL-A" base_Element="_tFkfsUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFlGwEcyEe2rgspmIFjL-A" genericsValue="ChannelSet" base_Element="_tFkfs0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFlGwUcyEe2rgspmIFjL-A" base_Element="_tFkfs0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFmU4EcyEe2rgspmIFjL-A" base_Element="_tFlt0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFnjAEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tFm78kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFnjAUcyEe2rgspmIFjL-A" base_Element="_tFm78kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFoKEEcyEe2rgspmIFjL-A" base_Element="_tFnjAkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFoKEkcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tFoKEUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFoxIEcyEe2rgspmIFjL-A" base_Element="_tFoKEUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFoxIkcyEe2rgspmIFjL-A" base_Element="_tFoxIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFpYMEcyEe2rgspmIFjL-A" base_Element="_tFoxI0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFqmUUcyEe2rgspmIFjL-A" base_Element="_tFqmUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFrNYEcyEe2rgspmIFjL-A" base_Element="_tFqmUkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFrNYkcyEe2rgspmIFjL-A" base_Element="_tFrNYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFr0cUcyEe2rgspmIFjL-A" base_Element="_tFr0cEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFwF40cyEe2rgspmIFjL-A" base_Element="_tFwF4kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFx7EEcyEe2rgspmIFjL-A" base_Element="_tFxUB0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFx7EkcyEe2rgspmIFjL-A" base_Element="_tFx7EUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFyiIEcyEe2rgspmIFjL-A" base_Element="_tFx7E0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFyiIkcyEe2rgspmIFjL-A" genericsValue="Node" base_Element="_tFyiIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFyiI0cyEe2rgspmIFjL-A" base_Element="_tFyiIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFzJMUcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_tFzJMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFzJMkcyEe2rgspmIFjL-A" base_Element="_tFzJMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tFzwQEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tFzJM0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tFzwQUcyEe2rgspmIFjL-A" base_Element="_tFzJM0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF0XUUcyEe2rgspmIFjL-A" base_Element="_tF0XUEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF0XU0cyEe2rgspmIFjL-A" base_Element="_tF0XUkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF2Mg0cyEe2rgspmIFjL-A" base_Element="_tF2MgkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF2MhUcyEe2rgspmIFjL-A" base_Element="_tF2MhEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF2zkUcyEe2rgspmIFjL-A" base_Element="_tF2zkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF2zk0cyEe2rgspmIFjL-A" base_Element="_tF2zkkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF3aoEcyEe2rgspmIFjL-A" base_Element="_tF2zlEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF3aokcyEe2rgspmIFjL-A" base_Element="_tF3aoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF4BsUcyEe2rgspmIFjL-A" base_Element="_tF4BsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF5P0EcyEe2rgspmIFjL-A" base_Element="_tF4owkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF5P00cyEe2rgspmIFjL-A" base_Element="_tF5P0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF524kcyEe2rgspmIFjL-A" base_Element="_tF524EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF7FAkcyEe2rgspmIFjL-A" base_Element="_tF7FAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF7sEEcyEe2rgspmIFjL-A" base_Element="_tF7FA0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF7sE0cyEe2rgspmIFjL-A" base_Element="_tF7sEkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF8TIUcyEe2rgspmIFjL-A" base_Element="_tF8TIEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF8TI0cyEe2rgspmIFjL-A" base_Element="_tF8TIkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF86MEcyEe2rgspmIFjL-A" base_Element="_tF8TJEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tF9hQEcyEe2rgspmIFjL-A" genericsValue="String, Integer" base_Element="_tF86MUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF9hQUcyEe2rgspmIFjL-A" base_Element="_tF86MUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF-IVEcyEe2rgspmIFjL-A" base_Element="_tF-IU0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tF-vYUcyEe2rgspmIFjL-A" base_Element="_tF-vYEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tF_9gEcyEe2rgspmIFjL-A" genericsValue="Edge" base_Element="_tF_WckcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGBLokcyEe2rgspmIFjL-A" base_Element="_tGBLoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGBysUcyEe2rgspmIFjL-A" base_Element="_tGBysEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGCZwEcyEe2rgspmIFjL-A" base_Element="_tGByskcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGCZxUcyEe2rgspmIFjL-A" base_Element="_tGCZwUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGDA0UcyEe2rgspmIFjL-A" base_Element="_tGDA0EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGDn4EcyEe2rgspmIFjL-A" genericsValue="Activation" base_Element="_tGDA0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGDn4UcyEe2rgspmIFjL-A" base_Element="_tGDA0kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGEO8EcyEe2rgspmIFjL-A" genericsValue="String, Integer" base_Element="_tGDn4kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGEO8UcyEe2rgspmIFjL-A" base_Element="_tGDn4kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGE2AEcyEe2rgspmIFjL-A" base_Element="_tGEO8kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGFdFEcyEe2rgspmIFjL-A" base_Element="_tGFdE0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGGEIEcyEe2rgspmIFjL-A" base_Element="_tGFdFUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGGEIkcyEe2rgspmIFjL-A" base_Element="_tGGEIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGHSQUcyEe2rgspmIFjL-A" base_Element="_tGHSQEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGHSQ0cyEe2rgspmIFjL-A" base_Element="_tGHSQkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGH5U0cyEe2rgspmIFjL-A" base_Element="_tGH5UkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGIgYEcyEe2rgspmIFjL-A" base_Element="_tGH5VEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGJHcUcyEe2rgspmIFjL-A" base_Element="_tGJHcEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGJHc0cyEe2rgspmIFjL-A" base_Element="_tGJHckcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGKVkUcyEe2rgspmIFjL-A" base_Element="_tGKVkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGKVk0cyEe2rgspmIFjL-A" base_Element="_tGKVkkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGKVlkcyEe2rgspmIFjL-A" base_Element="_tGKVlEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGKVmEcyEe2rgspmIFjL-A" base_Element="_tGKVl0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGLjsUcyEe2rgspmIFjL-A" base_Element="_tGLjsEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGLjs0cyEe2rgspmIFjL-A" base_Element="_tGLjskcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGLjtUcyEe2rgspmIFjL-A" base_Element="_tGLjtEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGMKwEcyEe2rgspmIFjL-A" base_Element="_tGLjtkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGNY4kcyEe2rgspmIFjL-A" base_Element="_tGNY4UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGNY5EcyEe2rgspmIFjL-A" base_Element="_tGNY40cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGN_8UcyEe2rgspmIFjL-A" base_Element="_tGN_8EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGN_80cyEe2rgspmIFjL-A" base_Element="_tGN_8kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGN_9UcyEe2rgspmIFjL-A" base_Element="_tGN_9EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGOnAEcyEe2rgspmIFjL-A" base_Element="_tGN_9kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGOnA0cyEe2rgspmIFjL-A" base_Element="_tGOnAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGOnBkcyEe2rgspmIFjL-A" base_Element="_tGOnBEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGPOEkcyEe2rgspmIFjL-A" base_Element="_tGPOEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGPOFEcyEe2rgspmIFjL-A" base_Element="_tGPOE0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGP1IUcyEe2rgspmIFjL-A" base_Element="_tGP1IEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGP1I0cyEe2rgspmIFjL-A" base_Element="_tGP1IkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGQcMUcyEe2rgspmIFjL-A" base_Element="_tGQcMEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGQcM0cyEe2rgspmIFjL-A" base_Element="_tGQcMkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGRDQEcyEe2rgspmIFjL-A" base_Element="_tGQcNEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGRDQkcyEe2rgspmIFjL-A" base_Element="_tGRDQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGRDREcyEe2rgspmIFjL-A" base_Element="_tGRDQ0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGRqUEcyEe2rgspmIFjL-A" base_Element="_tGRDRUcyEe2rgspmIFjL-A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_tGRqUUcyEe2rgspmIFjL-A" name="getNumChannels" method="_tHM3YEcyEe2rgspmIFjL-A">
      <ownedParameter xmi:id="_tGSRYEcyEe2rgspmIFjL-A" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_tGSRYUcyEe2rgspmIFjL-A" base_Element="_tGRqUUcyEe2rgspmIFjL-A">
    <annotations xmi:id="_tGSRYkcyEe2rgspmIFjL-A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGSRZUcyEe2rgspmIFjL-A" base_Element="_tGSRY0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGS4ckcyEe2rgspmIFjL-A" base_Element="_tGS4cEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGUtqEcyEe2rgspmIFjL-A" base_Element="_tGUtpkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGVUs0cyEe2rgspmIFjL-A" base_Element="_tGVUskcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGV7wEcyEe2rgspmIFjL-A" genericsValue="InstructionParameters" base_Element="_tGVUtEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGV7wUcyEe2rgspmIFjL-A" base_Element="_tGVUtEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGV7w0cyEe2rgspmIFjL-A" base_Element="_tGV7wkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGXw8kcyEe2rgspmIFjL-A" base_Element="_tGXw8UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGYYAEcyEe2rgspmIFjL-A" base_Element="_tGXw80cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGYYAkcyEe2rgspmIFjL-A" base_Element="_tGYYAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGYYBEcyEe2rgspmIFjL-A" base_Element="_tGYYA0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGY_EUcyEe2rgspmIFjL-A" base_Element="_tGY_EEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGY_E0cyEe2rgspmIFjL-A" base_Element="_tGY_EkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGZmIEcyEe2rgspmIFjL-A" base_Element="_tGY_FEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGZmIkcyEe2rgspmIFjL-A" base_Element="_tGZmIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGaNMEcyEe2rgspmIFjL-A" base_Element="_tGZmI0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGaNMkcyEe2rgspmIFjL-A" base_Element="_tGaNMUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGaNNEcyEe2rgspmIFjL-A" base_Element="_tGaNM0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGa0QUcyEe2rgspmIFjL-A" base_Element="_tGa0QEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGa0Q0cyEe2rgspmIFjL-A" base_Element="_tGa0QkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGbbUUcyEe2rgspmIFjL-A" base_Element="_tGa0REcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGbbU0cyEe2rgspmIFjL-A" base_Element="_tGbbUkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGbbVUcyEe2rgspmIFjL-A" base_Element="_tGbbVEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGcCYEcyEe2rgspmIFjL-A" base_Element="_tGbbVkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGcpc0cyEe2rgspmIFjL-A" base_Element="_tGcpcUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGdQgEcyEe2rgspmIFjL-A" base_Element="_tGcpdkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGdQhEcyEe2rgspmIFjL-A" base_Element="_tGdQg0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGd3kEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tGdQhUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGeeoEcyEe2rgspmIFjL-A" genericsValue="String" base_Element="_tGd3kkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGfswkcyEe2rgspmIFjL-A" base_Element="_tGfswUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGfsxEcyEe2rgspmIFjL-A" base_Element="_tGfsw0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGgT0EcyEe2rgspmIFjL-A" base_Element="_tGfsxUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGg66EcyEe2rgspmIFjL-A" base_Element="_tGg650cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGhh9EcyEe2rgspmIFjL-A" base_Element="_tGhh80cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGiJAEcyEe2rgspmIFjL-A" base_Element="_tGhh9UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGiJAkcyEe2rgspmIFjL-A" base_Element="_tGiJAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGiwEUcyEe2rgspmIFjL-A" genericsValue="Integer" base_Element="_tGiwEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGiwEkcyEe2rgspmIFjL-A" base_Element="_tGiwEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Generics xmi:id="_tGjXIEcyEe2rgspmIFjL-A" genericsValue="SchedulableObject" base_Element="_tGiwE0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGlMUEcyEe2rgspmIFjL-A" base_Element="_tGklRUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGlMUkcyEe2rgspmIFjL-A" base_Element="_tGlMUUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGlzYEcyEe2rgspmIFjL-A" base_Element="_tGlMU0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGlzYkcyEe2rgspmIFjL-A" base_Element="_tGlzYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGmacEcyEe2rgspmIFjL-A" base_Element="_tGlzY0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGmackcyEe2rgspmIFjL-A" base_Element="_tGmacUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGnBgEcyEe2rgspmIFjL-A" base_Element="_tGmac0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGnBgkcyEe2rgspmIFjL-A" base_Element="_tGnBgUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGnBhEcyEe2rgspmIFjL-A" base_Element="_tGnBg0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGnokUcyEe2rgspmIFjL-A" base_Element="_tGnokEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGnok0cyEe2rgspmIFjL-A" base_Element="_tGnokkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGoPoEcyEe2rgspmIFjL-A" base_Element="_tGnolEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tGoPokcyEe2rgspmIFjL-A" base_Element="_tGoPoUcyEe2rgspmIFjL-A"/>
  <uml:OpaqueBehavior xmi:id="_tHM3YEcyEe2rgspmIFjL-A" name="getNumChannels" specification="_tGRqUUcyEe2rgspmIFjL-A">
    <ownedParameter xmi:id="_tHM3YUcyEe2rgspmIFjL-A" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_tH73MEcyEe2rgspmIFjL-A" base_Element="_tH7QIEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH73M0cyEe2rgspmIFjL-A" base_Element="_tH73MUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH8eQEcyEe2rgspmIFjL-A" base_Element="_tH73NEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH8eQ0cyEe2rgspmIFjL-A" base_Element="_tH8eQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH8eRkcyEe2rgspmIFjL-A" base_Element="_tH8eREcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH9FUEcyEe2rgspmIFjL-A" base_Element="_tH8eR0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH9FU0cyEe2rgspmIFjL-A" base_Element="_tH9FUUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH9sYEcyEe2rgspmIFjL-A" base_Element="_tH9FVEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH9sY0cyEe2rgspmIFjL-A" base_Element="_tH9sYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH-TcEcyEe2rgspmIFjL-A" base_Element="_tH9sZEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH-Tc0cyEe2rgspmIFjL-A" base_Element="_tH-TcUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH-6gEcyEe2rgspmIFjL-A" base_Element="_tH-TdEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH-6g0cyEe2rgspmIFjL-A" base_Element="_tH-6gUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH-6hkcyEe2rgspmIFjL-A" base_Element="_tH-6hEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH_hkkcyEe2rgspmIFjL-A" base_Element="_tH_hkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tH_hlUcyEe2rgspmIFjL-A" base_Element="_tH_hk0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIAIoEcyEe2rgspmIFjL-A" base_Element="_tH_hlkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIAIo0cyEe2rgspmIFjL-A" base_Element="_tIAIoUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIAvsEcyEe2rgspmIFjL-A" base_Element="_tIAIpEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIAvs0cyEe2rgspmIFjL-A" base_Element="_tIAvsUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIBWwEcyEe2rgspmIFjL-A" base_Element="_tIAvtEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIBWw0cyEe2rgspmIFjL-A" base_Element="_tIBWwUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIBWxkcyEe2rgspmIFjL-A" base_Element="_tIBWxEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIB90kcyEe2rgspmIFjL-A" base_Element="_tIB90EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIB91UcyEe2rgspmIFjL-A" base_Element="_tIB900cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tICk4EcyEe2rgspmIFjL-A" base_Element="_tIB91kcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tICk40cyEe2rgspmIFjL-A" base_Element="_tICk4UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIDL8EcyEe2rgspmIFjL-A" base_Element="_tICk5EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIDL80cyEe2rgspmIFjL-A" base_Element="_tIDL8UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIDzAEcyEe2rgspmIFjL-A" base_Element="_tIDL9EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIDzA0cyEe2rgspmIFjL-A" base_Element="_tIDzAUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIEaEEcyEe2rgspmIFjL-A" base_Element="_tIDzBEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIEaE0cyEe2rgspmIFjL-A" base_Element="_tIEaEUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIFBIEcyEe2rgspmIFjL-A" base_Element="_tIEaFEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIFBI0cyEe2rgspmIFjL-A" base_Element="_tIFBIUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIFBJkcyEe2rgspmIFjL-A" base_Element="_tIFBJEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIFBKUcyEe2rgspmIFjL-A" base_Element="_tIFBJ0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIFoMEcyEe2rgspmIFjL-A" base_Element="_tIFBKkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIFoM0cyEe2rgspmIFjL-A" base_Element="_tIFoMUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIGPQEcyEe2rgspmIFjL-A" base_Element="_tIFoNEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIGPQ0cyEe2rgspmIFjL-A" base_Element="_tIGPQUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIG2UEcyEe2rgspmIFjL-A" base_Element="_tIGPREcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIG2U0cyEe2rgspmIFjL-A" base_Element="_tIG2UUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIHdYEcyEe2rgspmIFjL-A" base_Element="_tIG2VEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIHdY0cyEe2rgspmIFjL-A" base_Element="_tIHdYUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIIEcEcyEe2rgspmIFjL-A" base_Element="_tIHdZEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIIEc0cyEe2rgspmIFjL-A" base_Element="_tIIEcUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIIrgEcyEe2rgspmIFjL-A" base_Element="_tIIEdEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIIrg0cyEe2rgspmIFjL-A" base_Element="_tIIrgUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIIrhkcyEe2rgspmIFjL-A" base_Element="_tIIrhEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIJSkkcyEe2rgspmIFjL-A" base_Element="_tIJSkEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIJSlUcyEe2rgspmIFjL-A" base_Element="_tIJSk0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIJ5okcyEe2rgspmIFjL-A" base_Element="_tIJ5oEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIJ5pUcyEe2rgspmIFjL-A" base_Element="_tIJ5o0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIKgsEcyEe2rgspmIFjL-A" base_Element="_tIJ5pkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIKgs0cyEe2rgspmIFjL-A" base_Element="_tIKgsUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tILHwEcyEe2rgspmIFjL-A" base_Element="_tIKgtEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tILHw0cyEe2rgspmIFjL-A" base_Element="_tILHwUcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tILu0EcyEe2rgspmIFjL-A" base_Element="_tILHxEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tILu00cyEe2rgspmIFjL-A" base_Element="_tILu0UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIMV4EcyEe2rgspmIFjL-A" base_Element="_tILu1EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIMV40cyEe2rgspmIFjL-A" base_Element="_tIMV4UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIM88EcyEe2rgspmIFjL-A" base_Element="_tIMV5EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIM880cyEe2rgspmIFjL-A" base_Element="_tIM88UcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIM89kcyEe2rgspmIFjL-A" base_Element="_tIM89EcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tINkAkcyEe2rgspmIFjL-A" base_Element="_tINkAEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tINkBUcyEe2rgspmIFjL-A" base_Element="_tINkA0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIOLEkcyEe2rgspmIFjL-A" base_Element="_tIOLEEcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIOLFUcyEe2rgspmIFjL-A" base_Element="_tIOLE0cyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Reference xmi:id="_tIOyIEcyEe2rgspmIFjL-A" base_Element="_tIOLFkcyEe2rgspmIFjL-A"/>
  <UMLLabProfile:Patch xmi:id="_unciIEcyEe2rgspmIFjL-A" base_Element="_szOygEcyEe2rgspmIFjL-A" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_undJMEcyEe2rgspmIFjL-A" base_Element="_s0BcsEcyEe2rgspmIFjL-A" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_undwQEcyEe2rgspmIFjL-A" base_Element="_s1bK4EcyEe2rgspmIFjL-A" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_uneXUEcyEe2rgspmIFjL-A" base_Element="_s1h4kEcyEe2rgspmIFjL-A" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Generics xmi:id="_zKOWcF3_Ee2F0PVRnb5fbg" genericsValue="String" base_Element="_zKNIUl3_Ee2F0PVRnb5fbg"/>
</xmi:XMI>
