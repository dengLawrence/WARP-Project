<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_zeR-UET6Ee2_n5XNBGdaxw" name="Program">
    <eAnnotations xmi:id="_1BBjcET6Ee2_n5XNBGdaxw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_1BBjcUT6Ee2_n5XNBGdaxw" source="codegen">
        <details xmi:id="_1BBjckT6Ee2_n5XNBGdaxw" key="codegenDirectory" value="/cs2820-fall22/src"/>
        <details xmi:id="_6uCJkET6Ee2_n5XNBGdaxw" key="AssociatedSourceCode" value="/cs2820-fall22/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall22/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1458608893/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Channels.java;105405152/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelsTest.java;3718395581/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall22/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FileManager.java;2522714670/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Flow.java;889275975/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall22/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Program.java;2871276497/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramVisualization.java;867879725/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;384175461/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;2067458194/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1561738288/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationObject.java;823199562/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1981400958/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoad.java;727085344/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Warp.java;418770348/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadTest.java;2456256290/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_8PQCUEc3Ee2VGuPmUBocQA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_8PQCUUc3Ee2VGuPmUBocQA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_8PQCUkc3Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_8PQCU0c3Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_8PQCVEc3Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_1_dhoET6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_1_dhoUT6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_1_dhokT6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_1_dho0T6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_1_eIsET6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_1_eIsUT6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_1_eIskT6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_1_eIs0T6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_1_eItET6Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_1940UET6Ee2_n5XNBGdaxw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_1940UUT6Ee2_n5XNBGdaxw" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_1940UkT6Ee2_n5XNBGdaxw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_19-68ET6Ee2_n5XNBGdaxw" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_1_n5sET6Ee2_n5XNBGdaxw" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_2d3U4ET6Ee2_n5XNBGdaxw" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_2AcZEET6Ee2_n5XNBGdaxw" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_2er0QUT6Ee2_n5XNBGdaxw" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_2AgDcET6Ee2_n5XNBGdaxw" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_2etpcET6Ee2_n5XNBGdaxw" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_2euQgUT6Ee2_n5XNBGdaxw" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2DbboET6Ee2_n5XNBGdaxw" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_2fxZYET6Ee2_n5XNBGdaxw" general="_2dC1gET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hFoAET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hFoAUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i0tYET6Ee2_n5XNBGdaxw" name="AbstractMap" specification="_2Dg7MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i1UcET6Ee2_n5XNBGdaxw" type="_2DbboET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Dg7MET6Ee2_n5XNBGdaxw" name="AbstractMap" method="_2i0tYET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2DhiQET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2DhiQUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2DiJUET6Ee2_n5XNBGdaxw" type="_2DbboET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2DjXcET6Ee2_n5XNBGdaxw" name="Activation">
              <generalization xmi:id="_2dLYYUT6Ee2_n5XNBGdaxw" general="_2J_WoET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hGPEET6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw" isReadOnly="true" association="_2kjywET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hHdMET6Ee2_n5XNBGdaxw" name="edges" type="_2dEqsET6Ee2_n5XNBGdaxw" isReadOnly="true" association="_2klA4UT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hIEQUT6Ee2_n5XNBGdaxw" name="additionalScheduleTimes" type="_2dEqsET6Ee2_n5XNBGdaxw" isReadOnly="true" association="_2kln8UT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hIrUUT6Ee2_n5XNBGdaxw" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2hIrUkT6Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_2fzOkUT6Ee2_n5XNBGdaxw" client="_2DjXcET6Ee2_n5XNBGdaxw" supplier="_2fyngUT6Ee2_n5XNBGdaxw" contract="_2fyngUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i4-0ET6Ee2_n5XNBGdaxw" name="Activation" specification="_2DlzsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i4-0UT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i4-0kT6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i4-00T6Ee2_n5XNBGdaxw" name="Activation" specification="_2dHG8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i4-1ET6Ee2_n5XNBGdaxw" name="elem" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i4-1UT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i4-1kT6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i4-10T6Ee2_n5XNBGdaxw" name="clone" specification="_2Dno4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i4-2ET6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i4-2UT6Ee2_n5XNBGdaxw" name="getEdgesByReleaseTime" specification="_2DqsMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i4-2kT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i5l4ET6Ee2_n5XNBGdaxw" name="getEdgesByLatestReleaseTime" specification="_2DshYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i5l4UT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i5l4kT6Ee2_n5XNBGdaxw" name="getEdgesByPeriod" specification="_2DuWkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i5l40T6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i5l5ET6Ee2_n5XNBGdaxw" name="getEdgesByDeadline" specification="_2Dwy0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i5l5UT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i5l5kT6Ee2_n5XNBGdaxw" name="getEdgesByPriority" specification="_2DyA8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i5l50T6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i5l6ET6Ee2_n5XNBGdaxw" name="addEdges" specification="_2f0csET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i5l6UT6Ee2_n5XNBGdaxw" name="edges" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i5l6kT6Ee2_n5XNBGdaxw" name="addEdge" specification="_2dHuBkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i5l60T6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i6M8ET6Ee2_n5XNBGdaxw" name="increaseEdgePhases" specification="_2D0dMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i6M8UT6Ee2_n5XNBGdaxw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i6M8kT6Ee2_n5XNBGdaxw" name="updatePriorityAndRelease" specification="_2D1rUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i6M80T6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i6M9ET6Ee2_n5XNBGdaxw" name="addConflict" specification="_2D2SYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i6M9UT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i6M9kT6Ee2_n5XNBGdaxw" name="addConflicts" specification="_2f1q0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i6M90T6Ee2_n5XNBGdaxw" name="conflicts" type="_2dF40kT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i6M-ET6Ee2_n5XNBGdaxw" name="addCoordinator" specification="_2D25cET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i6M-UT6Ee2_n5XNBGdaxw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i60AET6Ee2_n5XNBGdaxw" name="addCoordinators" specification="_2f2R4UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i60AUT6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i60AkT6Ee2_n5XNBGdaxw" name="addScheduleTimes" specification="_2f248UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i60A0T6Ee2_n5XNBGdaxw" name="scheduleTime" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i60BET6Ee2_n5XNBGdaxw" name="getNextScheduleTime" specification="_2D4uoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i60BUT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i60BkT6Ee2_n5XNBGdaxw" type="_2H6TAkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i60B0T6Ee2_n5XNBGdaxw" name="getMatchingEndTime" specification="_2D5VsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i60CET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i60CUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i60CkT6Ee2_n5XNBGdaxw" name="getNextStartTime" specification="_2D6j0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i60C0T6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i60DET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i7bEET6Ee2_n5XNBGdaxw" name="getNextEndTime" specification="_2D7K4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i7bEUT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i7bEkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i7bE0T6Ee2_n5XNBGdaxw" name="getNumEdges" specification="_2D7x8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i7bFET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CIET6Ee2_n5XNBGdaxw" name="compareTo" specification="_2dIVEUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CIUT6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i8CIkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CI0T6Ee2_n5XNBGdaxw" name="conflictExists" specification="_2dI8I0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CJET6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i8CJUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CJkT6Ee2_n5XNBGdaxw" name="canCombine" specification="_2dJjMkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CJ0T6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i8CKET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CKUT6Ee2_n5XNBGdaxw" name="getDelta" specification="_2D9AEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CKkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CK0T6Ee2_n5XNBGdaxw" name="getExecutionDuration" specification="_2D9nIUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CLET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CLUT6Ee2_n5XNBGdaxw" name="getCombinedExecutionDuration" specification="_2dJjNUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CLkT6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i8CL0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8CMET6Ee2_n5XNBGdaxw" name="printAll" specification="_2D-1QET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8CMUT6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8pMET6Ee2_n5XNBGdaxw" name="printAll" specification="_2D_cUET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8pMUT6Ee2_n5XNBGdaxw" name="printEdges" specification="_2dKKQkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8pMkT6Ee2_n5XNBGdaxw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i8pM0T6Ee2_n5XNBGdaxw" name="edges" type="_2HVrQET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i8pNET6Ee2_n5XNBGdaxw" name="printEdges" specification="_2dKxUUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i8pNUT6Ee2_n5XNBGdaxw" name="edges" type="_2HVrQET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2DlzsET6Ee2_n5XNBGdaxw" name="Activation" visibility="package" method="_2i4-0ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2DmawET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2DmawUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2DlzsUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2DmawkT6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Dno4ET6Ee2_n5XNBGdaxw" name="clone" method="_2i4-10T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dHuAET6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2DqsMET6Ee2_n5XNBGdaxw" name="getEdgesByReleaseTime" method="_2i4-2UT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC4Ec3Ee2VGuPmUBocQA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dHuAUT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2DshYET6Ee2_n5XNBGdaxw" name="getEdgesByLatestReleaseTime" method="_2i5l4ET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC4Uc3Ee2VGuPmUBocQA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dHuAkT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2DuWkET6Ee2_n5XNBGdaxw" name="getEdgesByPeriod" method="_2i5l4kT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC4kc3Ee2VGuPmUBocQA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dHuA0T6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Dwy0ET6Ee2_n5XNBGdaxw" name="getEdgesByDeadline" method="_2i5l5ET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC40c3Ee2VGuPmUBocQA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dHuBET6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2DyA8ET6Ee2_n5XNBGdaxw" name="getEdgesByPriority" method="_2i5l5kT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC5Ec3Ee2VGuPmUBocQA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dHuBUT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2D0dMET6Ee2_n5XNBGdaxw" name="increaseEdgePhases" method="_2i6M8ET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC5Uc3Ee2VGuPmUBocQA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_2D0dMUT6Ee2_n5XNBGdaxw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D1rUET6Ee2_n5XNBGdaxw" name="updatePriorityAndRelease" method="_2i6M8kT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC5kc3Ee2VGuPmUBocQA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_2D1rUUT6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D2SYET6Ee2_n5XNBGdaxw" name="addConflict" method="_2i6M9ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2D2SYUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D25cET6Ee2_n5XNBGdaxw" name="addCoordinator" method="_2i6M-ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2D25cUT6Ee2_n5XNBGdaxw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D4uoET6Ee2_n5XNBGdaxw" name="getNextScheduleTime" method="_2i60BET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC6Ec3Ee2VGuPmUBocQA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_2D4uoUT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dIVEET6Ee2_n5XNBGdaxw" type="_2H6TAkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2D5VsET6Ee2_n5XNBGdaxw" name="getMatchingEndTime" method="_2i60B0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC6Uc3Ee2VGuPmUBocQA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_2D58wET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2D58wUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D6j0ET6Ee2_n5XNBGdaxw" name="getNextStartTime" method="_2i60CkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC6kc3Ee2VGuPmUBocQA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_2D6j0UT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2D6j0kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D7K4ET6Ee2_n5XNBGdaxw" name="getNextEndTime" method="_2i7bEET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC60c3Ee2VGuPmUBocQA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_2D7K4UT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2D7K4kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D7x8ET6Ee2_n5XNBGdaxw" name="getNumEdges" method="_2i7bE0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2D7x8UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D9AEET6Ee2_n5XNBGdaxw" name="getDelta" method="_2i8CKUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC7Ec3Ee2VGuPmUBocQA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2D9nIET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D9nIUT6Ee2_n5XNBGdaxw" name="getExecutionDuration" method="_2i8CK0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2D-OMET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D-1QET6Ee2_n5XNBGdaxw" name="printAll" method="_2i8CMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2D-1QUT6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2D_cUET6Ee2_n5XNBGdaxw" name="printAll" method="_2i8pMET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2dHG8ET6Ee2_n5XNBGdaxw" name="Activation" visibility="package" method="_2i4-00T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dHG80T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dHG9ET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dHG8UT6Ee2_n5XNBGdaxw" name="elem" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dHG8kT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dHG9UT6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dHuBkT6Ee2_n5XNBGdaxw" name="addEdge" method="_2i5l6kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dHuB0T6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dIVEUT6Ee2_n5XNBGdaxw" name="compareTo" method="_2i8CIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dIVEkT6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dIVE0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dI8I0T6Ee2_n5XNBGdaxw" name="conflictExists" method="_2i8CI0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dJjMET6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dJjMUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dJjMkT6Ee2_n5XNBGdaxw" name="canCombine" method="_2i8CJkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dJjM0T6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dJjNET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dJjNUT6Ee2_n5XNBGdaxw" name="getCombinedExecutionDuration" method="_2i8CLUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dKKQET6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dKKQUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dKKQkT6Ee2_n5XNBGdaxw" name="printEdges" visibility="private" method="_2i8pMUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dKKQ0T6Ee2_n5XNBGdaxw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dKKRET6Ee2_n5XNBGdaxw" name="edges" type="_2HVrQET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dKxUUT6Ee2_n5XNBGdaxw" name="printEdges" visibility="private" method="_2i8pNET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dKxUkT6Ee2_n5XNBGdaxw" name="edges" type="_2HVrQET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2f0csET6Ee2_n5XNBGdaxw" name="addEdges" method="_2i5l6ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2f0csUT6Ee2_n5XNBGdaxw" name="edges" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2f1q0ET6Ee2_n5XNBGdaxw" name="addConflicts" method="_2i6M9kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2f1q0UT6Ee2_n5XNBGdaxw" name="conflicts" type="_2dF40kT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2f2R4UT6Ee2_n5XNBGdaxw" name="addCoordinators" method="_2i60AET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2f2R4kT6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2f248UT6Ee2_n5XNBGdaxw" name="addScheduleTimes" method="_2i60AkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTC50c3Ee2VGuPmUBocQA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_2f248kT6Ee2_n5XNBGdaxw" name="scheduleTime" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2EOF0ET6Ee2_n5XNBGdaxw" name="Activations">
              <generalization xmi:id="_2dObsET6Ee2_n5XNBGdaxw" general="_2DbboET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hKggET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hKggUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2EPT8ET6Ee2_n5XNBGdaxw" name="BasicPoset">
              <ownedComment xmi:id="_-pTC7Uc3Ee2VGuPmUBocQA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_2dPCxUT6Ee2_n5XNBGdaxw" general="_2GevoET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i9QQET6Ee2_n5XNBGdaxw" name="BasicPoset" specification="_2dPCwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i9QQUT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i9QQkT6Ee2_n5XNBGdaxw" type="_2EPT8ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2dPCwET6Ee2_n5XNBGdaxw" name="BasicPoset" visibility="package" method="_2i9QQET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dPCwkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dPCw0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dPCwUT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dPCxET6Ee2_n5XNBGdaxw" type="_2EPT8ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2ERJIET6Ee2_n5XNBGdaxw" name="ChannelAnalysis">
              <ownedComment xmi:id="_84WpsEc3Ee2VGuPmUBocQA">
                <body>&lt;h1>Implementation of the ChannelAnalysis class&lt;/h1>&#xD;
Used to analyze either Program or WarpInterface by converting to program.&#xD;
Can be used to detect channel conflicts.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2hLHkET6Ee2_n5XNBGdaxw" name="program" visibility="private" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2kmPAUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hLHkkT6Ee2_n5XNBGdaxw" name="programTable" visibility="private" type="_2HNIYET6Ee2_n5XNBGdaxw" association="_2km2EUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hLuoUT6Ee2_n5XNBGdaxw" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i93UET6Ee2_n5XNBGdaxw" name="ChannelAnalysis" specification="_2dPp0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i93UUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i93UkT6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i93U0T6Ee2_n5XNBGdaxw" name="ChannelAnalysis" specification="_2dPp1UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i93VET6Ee2_n5XNBGdaxw" name="program" type="_2G0G0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i93VUT6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i93VkT6Ee2_n5XNBGdaxw" name="isChannelConflict" specification="_2ES-UET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i93V0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2ES-UET6Ee2_n5XNBGdaxw" name="isChannelConflict" method="_2i93VkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_84XQw0c3Ee2VGuPmUBocQA">
                  <body>Determines whether or not there is a channel conflict.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return boolean based on if there is a channel conflict or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_2ETlYET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dPp0ET6Ee2_n5XNBGdaxw" name="ChannelAnalysis" visibility="package" method="_2i93UET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dPp0kT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dPp00T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_84XQwEc3Ee2VGuPmUBocQA">
                  <body>Constructor that takes in a WarpInterface and converts it to a a program then sets the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dPp0UT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dPp1ET6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dPp1UT6Ee2_n5XNBGdaxw" name="ChannelAnalysis" visibility="package" method="_2i93U0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dPp10T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dPp2ET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_84XQwUc3Ee2VGuPmUBocQA">
                  <body>Constructor to set the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param program The program to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dPp1kT6Ee2_n5XNBGdaxw" name="program" type="_2G0G0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dPp2UT6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_84U0gEc3Ee2VGuPmUBocQA" name="getChannelAnalysisTable">
                <ownedComment xmi:id="_84XQwkc3Ee2VGuPmUBocQA">
                  <body>Method to be implemented that gets channelAnalysisTable.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return ProgramSchedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_84VbkEc3Ee2VGuPmUBocQA" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2EWBoET6Ee2_n5XNBGdaxw" name="ChannelVisualization">
              <ownedComment xmi:id="_-pTp8Ec3Ee2VGuPmUBocQA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2dQ38ET6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hMVsET6Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hM8wET6Ee2_n5XNBGdaxw" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hM8wUT6Ee2_n5XNBGdaxw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hM8wkT6Ee2_n5XNBGdaxw" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hM8w0T6Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_2IoEsET6Ee2_n5XNBGdaxw" association="_2kndIUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hNj0UT6Ee2_n5XNBGdaxw" name="ca" visibility="private" type="_2ERJIET6Ee2_n5XNBGdaxw" association="_2kndJET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i93WET6Ee2_n5XNBGdaxw" name="ChannelVisualization" specification="_2dQQ4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i93WUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i93WkT6Ee2_n5XNBGdaxw" type="_2EWBoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2dQQ4ET6Ee2_n5XNBGdaxw" name="ChannelVisualization" visibility="package" method="_2i93WET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dQQ4kT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dQQ40T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dQQ4UT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dQQ5ET6Ee2_n5XNBGdaxw" type="_2EWBoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2EZsAET6Ee2_n5XNBGdaxw" name="Channels">
              <ownedComment xmi:id="_-pTp8Uc3Ee2VGuPmUBocQA">
                <body>&lt;h1>Implementation of the Channel class.&lt;/h1>&#xD;
 The Channel class allows the user to handle the amount of wireless channels that are available for&#xD;
 scheduling using the private sub class ChannelSet and methods that can add or remove channel sets or&#xD;
 channels individually.&lt;p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2hOx8ET6Ee2_n5XNBGdaxw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hOx8kT6Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hPZAUT6Ee2_n5XNBGdaxw" name="channelsAvailable" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2koEMUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i-eZUT6Ee2_n5XNBGdaxw" name="Channels" specification="_2EekgET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i-eZkT6Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i-eZ0T6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i-eaET6Ee2_n5XNBGdaxw" type="_2EZsAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i-eaUT6Ee2_n5XNBGdaxw" name="getChannelSet" specification="_2EfyoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i-eakT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i-ea0T6Ee2_n5XNBGdaxw" type="_2dFRwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return null;&#xD;
 }&#xD;
&#xD;
 /* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_FcET6Ee2_n5XNBGdaxw" name="addNewChannelSet" specification="_2EhAwET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_FcUT6Ee2_n5XNBGdaxw" name="isEmpty" specification="_2Ehn0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i_FckT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_Fc0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_FdET6Ee2_n5XNBGdaxw" name="removeChannel" specification="_2EiO4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i_FdUT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_FdkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_Fd0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
&#xD;
 if(!checkIfChannelExists(channels, channel)){&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel removal failed, channel '%s' does not exist\n&quot;, channel);&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_FeET6Ee2_n5XNBGdaxw" name="addChannel" specification="_2Ei18ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i_FeUT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_FekT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_Fe0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
&#xD;
 if(checkIfChannelExists(channels, channel)){ // returns false if channel exists&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel add failed, channel '%s' already exists\n&quot;, channel);&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_FfET6Ee2_n5XNBGdaxw" name="getNumChannels" specification="_2EjdAUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i_FfUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_FfkT6Ee2_n5XNBGdaxw" name="checkIfTimeslotIsOutOfBounds" specification="_2EkEEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i_Ff0T6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_FgET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(timeSlot &lt; 0 || timeSlot >= channelsAvailable.size()){&#xD;
   if (verbose)&#xD;
     System.err.printf(&quot;Time slot '%d' does not exist\n&quot;, timeSlot);&#xD;
   return true;&#xD;
 }&#xD;
&#xD;
 return false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_sgET6Ee2_n5XNBGdaxw" name="checkIfChannelExists" specification="_2dRfAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2i_sgUT6Ee2_n5XNBGdaxw" name="channels" type="_2Ea6IET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2i_sgkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2i_sg0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return channels.contains(channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2EekgET6Ee2_n5XNBGdaxw" name="Channels" visibility="package" method="_2i-eZUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2EfLkUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2EfLkkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pTp9Uc3Ee2VGuPmUBocQA">
                  <body>Constructor that takes in number of channels and verbose flag.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param nChannels amount of channels&#xD;
   * @param verbose if true, prints data to the screen</body>
                </ownedComment>
                <ownedParameter xmi:id="_2EekgUT6Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2EfLkET6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2EfLk0T6Ee2_n5XNBGdaxw" type="_2EZsAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2EfyoET6Ee2_n5XNBGdaxw" name="getChannelSet" method="_2i-eaUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp9kc3Ee2VGuPmUBocQA">
                  <body>Gets the channel set for selected timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to retrieve channel set for&#xD;
   * @return HashSet of channels based on timeslot</body>
                </ownedComment>
                <ownedParameter xmi:id="_2EfyoUT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2f7KYET6Ee2_n5XNBGdaxw" type="_2dFRwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2EhAwET6Ee2_n5XNBGdaxw" name="addNewChannelSet" method="_2i_FcET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp90c3Ee2VGuPmUBocQA">
                  <body>Adds a new channel set to available channels.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_2Ehn0ET6Ee2_n5XNBGdaxw" name="isEmpty" method="_2i_FcUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp-Ec3Ee2VGuPmUBocQA">
                  <body>Checks if the channelSet is empty with the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to check channelSet&#xD;
   * @return boolean value based on if the channelSet at the given timeSlot is empty</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Ehn0UT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2Ehn0kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2EiO4ET6Ee2_n5XNBGdaxw" name="removeChannel" method="_2i_FdET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp-Uc3Ee2VGuPmUBocQA">
                  <body>Removes channel from available channels at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to get channelSet&#xD;
   * @param channel Channel to remove&#xD;
   * @return boolean value based on the success of the channel removal at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_2EiO4UT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2EiO4kT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2EiO40T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Ei18ET6Ee2_n5XNBGdaxw" name="addChannel" method="_2i_FeET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp-kc3Ee2VGuPmUBocQA">
                  <body>Adds channel at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to add channel at&#xD;
   * @param channel the channel to add&#xD;
   * @return boolean value based on success of channel being added at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Ei18UT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2Ei18kT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2EjdAET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2EjdAUT6Ee2_n5XNBGdaxw" name="getNumChannels" method="_2i_FfET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp-0c3Ee2VGuPmUBocQA">
                  <body>Gets the number of channels.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return Integer representing the number of channels</body>
                </ownedComment>
                <ownedParameter xmi:id="_2EjdAkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2EkEEET6Ee2_n5XNBGdaxw" name="checkIfTimeslotIsOutOfBounds" visibility="private" method="_2i_FfkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2EkEEUT6Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2EkrIET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dRfAET6Ee2_n5XNBGdaxw" name="checkIfChannelExists" visibility="private" method="_2i_sgET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dRfAUT6Ee2_n5XNBGdaxw" name="channels" type="_2Ea6IET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dRfAkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dRfA0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_2Ea6IET6Ee2_n5XNBGdaxw" name="ChannelSet" visibility="private">
                <ownedComment xmi:id="_-pTp8kc3Ee2VGuPmUBocQA">
                  <body>Private class that extends a string HashSet to keep track of channels as a set.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
                <generalization xmi:id="_2f58QET6Ee2_n5XNBGdaxw" general="_2dFRwET6Ee2_n5XNBGdaxw"/>
                <ownedAttribute xmi:id="_2hOK4ET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hOK4UT6Ee2_n5XNBGdaxw" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i-eYET6Ee2_n5XNBGdaxw" name="ChannelSet" specification="_2EcIQET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2i-eYUT6Ee2_n5XNBGdaxw" type="_2Ea6IET6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i-eYkT6Ee2_n5XNBGdaxw" name="ChannelSet" specification="_2EdWYET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2i-eY0T6Ee2_n5XNBGdaxw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_2i-eZET6Ee2_n5XNBGdaxw" type="_2Ea6IET6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_2EcIQET6Ee2_n5XNBGdaxw" name="ChannelSet" visibility="private" method="_2i-eYET6Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_2EcvUET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_2EcvUUT6Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_-pTp80c3Ee2VGuPmUBocQA">
                    <body>Default Constructor&#xD;
     * &#xD;
     * @author sgoddard</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_2EcvUkT6Ee2_n5XNBGdaxw" type="_2Ea6IET6Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2EdWYET6Ee2_n5XNBGdaxw" name="ChannelSet" visibility="private" method="_2i-eYkT6Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_2EdWYkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_2EdWY0T6Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_-pTp9Ec3Ee2VGuPmUBocQA">
                    <body>Constructor that takes in a channel amount on creation.&#xD;
     * &#xD;
     * @author sgoddard&#xD;
     * @param nChannels number of channels to add</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_2EdWYUT6Ee2_n5XNBGdaxw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_2EdWZET6Ee2_n5XNBGdaxw" type="_2Ea6IET6Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2EnHYET6Ee2_n5XNBGdaxw" name="ChannelsTest" visibility="package">
              <ownedAttribute xmi:id="_2hQnIET6Ee2_n5XNBGdaxw" name="channelSize" visibility="package" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hQnIUT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_shET6Ee2_n5XNBGdaxw" name="testGetChannelSetByChannelSetSize" specification="_2EnucET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var size = 10; // How many channelSets to be added.&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
&#xD;
		// Loop creates 'size' amount of channel sets, each timeSlot get i amount of channels added.&#xD;
		// timeSlot 0 = channelSet size of 0, timeSlot 1 = channelSet size of 1, ...timeSlot n = channelSet size of n&#xD;
		for(int i = 0; i &lt; size; i++){&#xD;
			channels.addNewChannelSet();&#xD;
			for(int j = 0; j &lt; i; j++) {&#xD;
				channels.addChannel(i,Integer.toString(j)); //add j as a filler channel&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Checks if getChannelSet works by comparing the timeSlot with channel size which should be equal from above loop&#xD;
		for(var i = 0; i &lt; size; i++){&#xD;
			var channelSet = channels.getChannelSet(i);&#xD;
			System.out.println(channelSet.size());&#xD;
			assertEquals(i, channelSet.size(), &quot;Error in getChannelSet returning correct Channel&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_shUT6Ee2_n5XNBGdaxw" name="testGetChannelSetByChannel" specification="_2Eo8k0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		channels.addChannel(0, &quot;Test 0&quot;);&#xD;
		channels.addChannel(1, &quot;Test 1&quot;);&#xD;
&#xD;
		assertTrue(channels.getChannelSet(0).contains(&quot;Test 0&quot;));&#xD;
		assertTrue(channels.getChannelSet(1).contains(&quot;Test 1&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2i_shkT6Ee2_n5XNBGdaxw" name="testAddNewChannelSetBySize" specification="_2EqxwET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		final var channelSetSize = 10;&#xD;
&#xD;
		// Checks if initial size is 0&#xD;
		assertEquals(0, channels.channelsAvailable.size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
&#xD;
		for(int i = 0; i &lt; channelSetSize; i++){ // Adds the channelSets&#xD;
			channels.addNewChannelSet();&#xD;
		}&#xD;
&#xD;
		// Checks if the channelSet count is accurate&#xD;
		assertEquals(channelSetSize, channels.channelsAvailable.size(), &quot;ChannelSet size error&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jATkET6Ee2_n5XNBGdaxw" name="testIsEmptyWhenCreatingEmptyChannels" specification="_2ErY0kT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.isEmpty(0), &quot;IsEmpty failed on zero ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jATkUT6Ee2_n5XNBGdaxw" name="testIsEmptyWhenChannelsStartAboveZero" specification="_2Er_4kT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertFalse(channels.isEmpty(0), &quot;IsEmpty retuned true on an non empty ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jATkkT6Ee2_n5XNBGdaxw" name="testEmptyAfterAdd" specification="_2Esm80T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
&#xD;
		assertTrue(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
		assertFalse(channels.isEmpty(0), &quot;ChannelSet empty after adding channel&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jATk0T6Ee2_n5XNBGdaxw" name="testEmptyAfterRemove" specification="_2EtOA0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 1;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created is not empty&#xD;
		assertFalse(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.removeChannel(0, &quot;0&quot;);&#xD;
&#xD;
		// Checks if removal of the only channel makes an empty ChannelSet&#xD;
		assertTrue(channels.isEmpty(0), &quot;ChannelSet not empty after channel removal&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jA6oET6Ee2_n5XNBGdaxw" name="testRemoveChannel" specification="_2Et1E0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created channelSet is 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if channel was added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
&#xD;
		// Checks if removeChannel returns true&#xD;
		assertTrue(channels.removeChannel(0, &quot;Test&quot;), &quot;Channel removal failed&quot;);&#xD;
&#xD;
		// Checks if channel was removed by size&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Channel removal failed&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jA6oUT6Ee2_n5XNBGdaxw" name="testAddChannelTimeSlots" specification="_2EvDMET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true); // Creates a channels class with no channels&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if channelSet is indeed 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;); //Adds a test channel&#xD;
&#xD;
		// Checks if the channel count increased for timeSlot 0 channelSet&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jA6okT6Ee2_n5XNBGdaxw" name="testAddChannelDuplicates" specification="_2EvqQkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, false);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if initial is zero&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if adding channel worked&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Confirms duplicate channels aren't added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Error, channel duplicate added&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jA6o0T6Ee2_n5XNBGdaxw" name="testAddChannel" specification="_2EwRU0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.addChannel(0, &quot;Test&quot;), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jBhsET6Ee2_n5XNBGdaxw" name="testGetNumChannelsNew" specification="_2Ew4Y0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		assertEquals(channelSize, channels.getNumChannels(), &quot;NumChannels has incorrect size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jBhsUT6Ee2_n5XNBGdaxw" name="testGetNumChannelsNChannels" specification="_2EyGgET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
		// getNumChannels returns nChannels, so this should never fail&#xD;
		assertEquals(channels.nChannels, channels.getNumChannels(), &quot;GetNumChannels does not equal nChannels&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2EnucET6Ee2_n5XNBGdaxw" name="testGetChannelSetByChannelSetSize" visibility="package" method="_2i_shET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Eo8k0T6Ee2_n5XNBGdaxw" name="testGetChannelSetByChannel" visibility="package" method="_2i_shUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2EqxwET6Ee2_n5XNBGdaxw" name="testAddNewChannelSetBySize" visibility="package" method="_2i_shkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2ErY0kT6Ee2_n5XNBGdaxw" name="testIsEmptyWhenCreatingEmptyChannels" visibility="package" method="_2jATkET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Er_4kT6Ee2_n5XNBGdaxw" name="testIsEmptyWhenChannelsStartAboveZero" visibility="package" method="_2jATkUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Esm80T6Ee2_n5XNBGdaxw" name="testEmptyAfterAdd" visibility="package" method="_2jATkkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2EtOA0T6Ee2_n5XNBGdaxw" name="testEmptyAfterRemove" visibility="package" method="_2jATk0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Et1E0T6Ee2_n5XNBGdaxw" name="testRemoveChannel" visibility="package" method="_2jA6oET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2EvDMET6Ee2_n5XNBGdaxw" name="testAddChannelTimeSlots" visibility="package" method="_2jA6oUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2EvqQkT6Ee2_n5XNBGdaxw" name="testAddChannelDuplicates" visibility="package" method="_2jA6okT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2EwRU0T6Ee2_n5XNBGdaxw" name="testAddChannel" visibility="package" method="_2jA6o0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Ew4Y0T6Ee2_n5XNBGdaxw" name="testGetNumChannelsNew" visibility="package" method="_2jBhsET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2EyGgET6Ee2_n5XNBGdaxw" name="testGetNumChannelsNChannels" visibility="package" method="_2jBhsUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Ez7sET6Ee2_n5XNBGdaxw" name="CodeFragment">
              <ownedAttribute xmi:id="_2hR1QET6Ee2_n5XNBGdaxw" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hScUET6Ee2_n5XNBGdaxw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hScUUT6Ee2_n5XNBGdaxw" name="edges" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2korQUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hTqcET6Ee2_n5XNBGdaxw" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hTqckT6Ee2_n5XNBGdaxw" name="codeFragment" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2kpSUUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hVfoET6Ee2_n5XNBGdaxw" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hVfokT6Ee2_n5XNBGdaxw" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jBhskT6Ee2_n5XNBGdaxw" name="CodeFragment" specification="_2E1J0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jBhs0T6Ee2_n5XNBGdaxw" type="_2Ez7sET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jBhtET6Ee2_n5XNBGdaxw" name="CodeFragment" specification="_2f8_kET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jBhtUT6Ee2_n5XNBGdaxw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jBhtkT6Ee2_n5XNBGdaxw" name="edges" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jBht0T6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jBhuET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jBhuUT6Ee2_n5XNBGdaxw" type="_2Ez7sET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCIwET6Ee2_n5XNBGdaxw" name="getCoordinator" specification="_2E2X8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCIwUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCIwkT6Ee2_n5XNBGdaxw" name="instructions" specification="_2E2_AUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCIw0T6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCIxET6Ee2_n5XNBGdaxw" name="size" specification="_2E4NIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCIxUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCIxkT6Ee2_n5XNBGdaxw" name="generateCodeFragment" specification="_2E40MET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCIx0T6Ee2_n5XNBGdaxw" name="getBaseInstruction" specification="_2E40MUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCIyET6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCIyUT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCIykT6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCIy0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCIzET6Ee2_n5XNBGdaxw" name="push" specification="_2E5bQUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCIzUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCIzkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCIz0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCI0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCv0ET6Ee2_n5XNBGdaxw" name="pull" specification="_2E6CUUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCv0UT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv0kT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv00T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv1ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCv1UT6Ee2_n5XNBGdaxw" name="ifHas" specification="_2E7QcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCv1kT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv10T6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv2ET6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv2UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCv2kT6Ee2_n5XNBGdaxw" name="ifNotHas" specification="_2E73gET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCv20T6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv3ET6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv3UT6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv3kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jCv30T6Ee2_n5XNBGdaxw" name="wait" specification="_2E8ekUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jCv4ET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jCv4UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jDW4ET6Ee2_n5XNBGdaxw" name="sleep" specification="_2E9FoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jDW4UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jDW4kT6Ee2_n5XNBGdaxw" name="reportIfDifferentCoordinators" specification="_2f-NskT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jDW40T6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jDW5ET6Ee2_n5XNBGdaxw" name="multipleCoordinators" specification="_2f-0wUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jDW5UT6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jDW5kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2E1J0ET6Ee2_n5XNBGdaxw" name="CodeFragment" visibility="package" method="_2jBhskT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2E1J0UT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2E1J0kT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pTp_Ec3Ee2VGuPmUBocQA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2E1w4ET6Ee2_n5XNBGdaxw" type="_2Ez7sET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2E2X8ET6Ee2_n5XNBGdaxw" name="getCoordinator" method="_2jCIwET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp_kc3Ee2VGuPmUBocQA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_2E2_AET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E2_AUT6Ee2_n5XNBGdaxw" name="instructions" method="_2jCIwkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTp_0c3Ee2VGuPmUBocQA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_2f-NsUT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2E4NIET6Ee2_n5XNBGdaxw" name="size" method="_2jCIxET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pTqAEc3Ee2VGuPmUBocQA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_2E4NIUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E40MET6Ee2_n5XNBGdaxw" name="generateCodeFragment" visibility="private" method="_2jCIxkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2E40MUT6Ee2_n5XNBGdaxw" name="getBaseInstruction" visibility="private" method="_2jCIx0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E40MkT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E40M0T6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E40NET6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E5bQET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E5bQUT6Ee2_n5XNBGdaxw" name="push" visibility="private" method="_2jCIzET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E5bQkT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E5bQ0T6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E5bRET6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E6CUET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E6CUUT6Ee2_n5XNBGdaxw" name="pull" visibility="private" method="_2jCv0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E6pYET6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E6pYUT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E6pYkT6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E6pY0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E7QcET6Ee2_n5XNBGdaxw" name="ifHas" visibility="private" method="_2jCv1UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E7QcUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E7QckT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E7Qc0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E7QdET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E73gET6Ee2_n5XNBGdaxw" name="ifNotHas" visibility="private" method="_2jCv2kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E73gUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E73gkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E73g0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E8ekET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E8ekUT6Ee2_n5XNBGdaxw" name="wait" method="_2jCv30T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E8ekkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2E8ek0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2E9FoET6Ee2_n5XNBGdaxw" name="sleep" isStatic="true" method="_2jDW4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2E9FoUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2f8_kET6Ee2_n5XNBGdaxw" name="CodeFragment" visibility="package" method="_2jBhtET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2f8_lUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2f8_lkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pTp_Uc3Ee2VGuPmUBocQA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_2f8_kUT6Ee2_n5XNBGdaxw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2f8_kkT6Ee2_n5XNBGdaxw" name="edges" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2f8_k0T6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2f8_lET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2f8_l0T6Ee2_n5XNBGdaxw" type="_2Ez7sET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2f-NskT6Ee2_n5XNBGdaxw" name="reportIfDifferentCoordinators" visibility="private" method="_2jDW4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2f-Ns0T6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2f-0wUT6Ee2_n5XNBGdaxw" name="multipleCoordinators" visibility="private" method="_2jDW5ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2f-0wkT6Ee2_n5XNBGdaxw" name="coordinators" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2f-0w0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FAI8ET6Ee2_n5XNBGdaxw" name="CombinedActivation">
              <generalization xmi:id="_2dYMtET6Ee2_n5XNBGdaxw" general="_2DjXcET6Ee2_n5XNBGdaxw"/>
              <interfaceRealization xmi:id="_2gAC4ET6Ee2_n5XNBGdaxw" client="_2FAI8ET6Ee2_n5XNBGdaxw" supplier="_2fyngUT6Ee2_n5XNBGdaxw" contract="_2fyngUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jD98ET6Ee2_n5XNBGdaxw" name="CombinedActivation" specification="_2FAwAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jD98UT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jD98kT6Ee2_n5XNBGdaxw" type="_2FAI8ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jD980T6Ee2_n5XNBGdaxw" name="CombinedActivation" specification="_2dW-kET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jD99ET6Ee2_n5XNBGdaxw" name="elem" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jD99UT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jD99kT6Ee2_n5XNBGdaxw" type="_2FAI8ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jD990T6Ee2_n5XNBGdaxw" name="CombinedActivation" specification="_2dXloET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jD9-ET6Ee2_n5XNBGdaxw" name="priorEntry" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jD9-UT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jD9-kT6Ee2_n5XNBGdaxw" type="_2FAI8ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jElAET6Ee2_n5XNBGdaxw" name="canCombine" specification="_2dXlpkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jElAUT6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jElAkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2FAwAET6Ee2_n5XNBGdaxw" name="CombinedActivation" visibility="package" method="_2jD98ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FAwAkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FAwA0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2FAwAUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FAwBET6Ee2_n5XNBGdaxw" type="_2FAI8ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dW-kET6Ee2_n5XNBGdaxw" name="CombinedActivation" visibility="package" method="_2jD980T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dW-k0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dW-lET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dW-kUT6Ee2_n5XNBGdaxw" name="elem" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dW-kkT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dW-lUT6Ee2_n5XNBGdaxw" type="_2FAI8ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dXloET6Ee2_n5XNBGdaxw" name="CombinedActivation" visibility="package" method="_2jD990T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dXlo0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dXlpET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dXloUT6Ee2_n5XNBGdaxw" name="priorEntry" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dXlokT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dXlpUT6Ee2_n5XNBGdaxw" type="_2FAI8ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dXlpkT6Ee2_n5XNBGdaxw" name="canCombine" method="_2jElAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dXlp0T6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dYMsET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FDMQET6Ee2_n5XNBGdaxw" name="CommunicationGraph">
              <ownedComment xmi:id="_-pTqAUc3Ee2VGuPmUBocQA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2daB4UT6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hXU0ET6Ee2_n5XNBGdaxw" name="wfm" visibility="package" type="_2FcN0ET6Ee2_n5XNBGdaxw" association="_2kp5YUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hYi8UT6Ee2_n5XNBGdaxw" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hZKAUT6Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hZxEET6Ee2_n5XNBGdaxw" name="workLoad" visibility="package" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2kqgcUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jElA0T6Ee2_n5XNBGdaxw" name="CommunicationGraph" specification="_2dYzwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jElBET6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jElBUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jElBkT6Ee2_n5XNBGdaxw" type="_2FDMQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jElB0T6Ee2_n5XNBGdaxw" name="CommunicationGraph" specification="_2dZa0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jElCET6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jElCUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jElCkT6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jElC0T6Ee2_n5XNBGdaxw" type="_2FDMQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jFMEET6Ee2_n5XNBGdaxw" name="createHeader" specification="_2FEaYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jFMEUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jFMEkT6Ee2_n5XNBGdaxw" name="createFooter" specification="_2FFogET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jFME0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jFzIET6Ee2_n5XNBGdaxw" name="visualization" specification="_2FGPk0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jFzIUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jFzIkT6Ee2_n5XNBGdaxw" name="createWarpFileContent" specification="_2FHdsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jFzI0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2FEaYET6Ee2_n5XNBGdaxw" name="createHeader" method="_2jFMEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dZa10T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FFogET6Ee2_n5XNBGdaxw" name="createFooter" method="_2jFMEkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dZa2ET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FGPk0T6Ee2_n5XNBGdaxw" name="visualization" method="_2jFzIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2daB4ET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FHdsET6Ee2_n5XNBGdaxw" name="createWarpFileContent" method="_2jFzIkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FHdsUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dYzwET6Ee2_n5XNBGdaxw" name="CommunicationGraph" method="_2jElA0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dYzw0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dYzxET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dYzwUT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dYzwkT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dYzxUT6Ee2_n5XNBGdaxw" type="_2FDMQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dZa0ET6Ee2_n5XNBGdaxw" name="CommunicationGraph" method="_2jElB0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dZa1ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dZa1UT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dZa0UT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dZa0kT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dZa00T6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dZa1kT6Ee2_n5XNBGdaxw" type="_2FDMQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FJ58ET6Ee2_n5XNBGdaxw" name="ConnectivityPoset">
              <ownedComment xmi:id="_-pTqAkc3Ee2VGuPmUBocQA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_2dao9UT6Ee2_n5XNBGdaxw" general="_2GevoET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jFzJET6Ee2_n5XNBGdaxw" name="ConnectivityPoset" specification="_2dao8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jFzJUT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jFzJkT6Ee2_n5XNBGdaxw" type="_2FJ58ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jFzJ0T6Ee2_n5XNBGdaxw" name="findCoordinator" specification="_2gBRAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jFzKET6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jFzKUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2dao8ET6Ee2_n5XNBGdaxw" name="ConnectivityPoset" visibility="package" method="_2jFzJET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dao8kT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dao80T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dao8UT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dao9ET6Ee2_n5XNBGdaxw" type="_2FJ58ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gBRAET6Ee2_n5XNBGdaxw" name="findCoordinator" visibility="protected" method="_2jFzJ0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gB4EET6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gB4EUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FLvIET6Ee2_n5XNBGdaxw" name="DeadlineComparator">
              <interfaceRealization xmi:id="_2gCfIkT6Ee2_n5XNBGdaxw" client="_2FLvIET6Ee2_n5XNBGdaxw" supplier="_2dbQAET6Ee2_n5XNBGdaxw" contract="_2dbQAET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jGaMET6Ee2_n5XNBGdaxw" name="compare" specification="_2gDtQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jGaMUT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jGaMkT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jGaM0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2gDtQET6Ee2_n5XNBGdaxw" name="compare" method="_2jGaMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gDtQUT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gDtQkT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gDtQ0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FOycET6Ee2_n5XNBGdaxw" name="Description">
              <ownedComment xmi:id="_-pTqA0c3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2gEUUkT6Ee2_n5XNBGdaxw" general="_2dEqsET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2haYIET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2haYIUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jGaNET6Ee2_n5XNBGdaxw" name="Description" specification="_2FQAkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jGaNUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jGaNkT6Ee2_n5XNBGdaxw" name="Description" specification="_2FQAlET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jGaN0T6Ee2_n5XNBGdaxw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jGaOET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jGaOUT6Ee2_n5XNBGdaxw" name="toString" specification="_2FQnpET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jGaOkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2FQAkET6Ee2_n5XNBGdaxw" name="Description" method="_2jGaNET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FQAkUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FQAkkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2FQAk0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FQAlET6Ee2_n5XNBGdaxw" name="Description" method="_2jGaNkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FQnoUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FQnokT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2FQnoET6Ee2_n5XNBGdaxw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FQno0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FQnpET6Ee2_n5XNBGdaxw" name="toString" method="_2jGaOUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FROsET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FR1wET6Ee2_n5XNBGdaxw" name="Edge">
              <generalization xmi:id="_2ddFNET6Ee2_n5XNBGdaxw" general="_2J_WoET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2ha_MET6Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ha_MUT6Ee2_n5XNBGdaxw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ha_MkT6Ee2_n5XNBGdaxw" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hbmQET6Ee2_n5XNBGdaxw" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hbmQUT6Ee2_n5XNBGdaxw" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hcNUET6Ee2_n5XNBGdaxw" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hcNUUT6Ee2_n5XNBGdaxw" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hcNUkT6Ee2_n5XNBGdaxw" name="state" type="_2FTq8ET6Ee2_n5XNBGdaxw" association="_2j9V0ET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hc0YET6Ee2_n5XNBGdaxw" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_2gFicET6Ee2_n5XNBGdaxw" client="_2FR1wET6Ee2_n5XNBGdaxw" supplier="_2fyngUT6Ee2_n5XNBGdaxw" contract="_2fyngUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHBQET6Ee2_n5XNBGdaxw" name="Edge" specification="_2FUSA0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHBQUT6Ee2_n5XNBGdaxw" type="_2FR1wET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHBQkT6Ee2_n5XNBGdaxw" name="Edge" specification="_2FVgIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHBQ0T6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBRET6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBRUT6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBRkT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBR0T6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBSET6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBSUT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBSkT6Ee2_n5XNBGdaxw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHBS0T6Ee2_n5XNBGdaxw" type="_2FR1wET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHBTET6Ee2_n5XNBGdaxw" name="compareTo" specification="_2dceIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHBTUT6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jHBTkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHoUET6Ee2_n5XNBGdaxw" name="toString" specification="_2FWuQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHoUUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHoUkT6Ee2_n5XNBGdaxw" name="print" specification="_2FXVU0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHoU0T6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHoVET6Ee2_n5XNBGdaxw" name="print" specification="_2FYjcUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2FUSA0T6Ee2_n5XNBGdaxw" name="Edge" visibility="package" method="_2jHBQET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FU5EET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FU5EUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2FU5EkT6Ee2_n5XNBGdaxw" type="_2FR1wET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FVgIET6Ee2_n5XNBGdaxw" name="Edge" visibility="package" method="_2jHBQkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FWHMET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FWHMUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2FVgIUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgIkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgI0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgJET6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgJUT6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgJkT6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgJ0T6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FVgKET6Ee2_n5XNBGdaxw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FWHMkT6Ee2_n5XNBGdaxw" type="_2FR1wET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FWuQET6Ee2_n5XNBGdaxw" name="toString" method="_2jHoUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FWuQUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FXVU0T6Ee2_n5XNBGdaxw" name="print" method="_2jHoUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FXVVET6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FYjcUT6Ee2_n5XNBGdaxw" name="print" method="_2jHoVET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2dceIET6Ee2_n5XNBGdaxw" name="compareTo" method="_2jHBTET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dceIUT6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ddFMET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_2FTq8ET6Ee2_n5XNBGdaxw" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_2FUSAET6Ee2_n5XNBGdaxw" name="RELEASED"/>
                <ownedLiteral xmi:id="_2FUSAUT6Ee2_n5XNBGdaxw" name="EXECUTING"/>
                <ownedLiteral xmi:id="_2FUSAkT6Ee2_n5XNBGdaxw" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FcN0ET6Ee2_n5XNBGdaxw" name="FileManager">
              <ownedComment xmi:id="_-pURAEc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2hdbcET6Ee2_n5XNBGdaxw" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hdbcUT6Ee2_n5XNBGdaxw" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hdbckT6Ee2_n5XNBGdaxw" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2heCgET6Ee2_n5XNBGdaxw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHoVUT6Ee2_n5XNBGdaxw" name="FileManager" specification="_2Fdb8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHoVkT6Ee2_n5XNBGdaxw" type="_2FcN0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class	&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jHoV0T6Ee2_n5XNBGdaxw" name="FileManager" specification="_2FeDAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jHoWET6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jHoWUT6Ee2_n5XNBGdaxw" type="_2FcN0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jIPYET6Ee2_n5XNBGdaxw" name="getDocumentsDirectory" specification="_2FeDBUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jIPYUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
		String documentsDirectory;&#xD;
		if ( OSValidator.isWindows() ) {&#xD;
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
		} else if ( OSValidator.isMac() ) {&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;&#xD;
		} else { // for all other Unix systems&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)&#xD;
		}&#xD;
		return documentsDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jIPYkT6Ee2_n5XNBGdaxw" name="getCurrentDirectory" specification="_2FeqEUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jIPY0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jIPZET6Ee2_n5XNBGdaxw" name="createFile" specification="_2FeqE0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jIPZUT6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jIPZkT6Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jIPZ0T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jIPaET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to&#xD;
		 * this routine really just creates the file name ;-)&#xD;
		 */&#xD;
		Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix&#xD;
		}&#xD;
		/* fileString has no suffix at this point (removed if it existed)&#xD;
		 * Now add file name extension and suffix&#xD;
		 */&#xD;
		fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jIPaUT6Ee2_n5XNBGdaxw" name="createFile" specification="_2Ff4MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jIPakT6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jIPa0T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jIPbET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix&#xD;
		}&#xD;
		// fileString has no suffix at this point (removed if it existed)&#xD;
		// Now add file name extension and suffix&#xD;
		fileString = fileString + suffix;&#xD;
		// we don't actually create the file...it will be created when written to&#xD;
		// this routine really just creates the file name ;-)&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jI2cET6Ee2_n5XNBGdaxw" name="createDirectory" specification="_2FgfQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jI2cUT6Ee2_n5XNBGdaxw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jI2ckT6Ee2_n5XNBGdaxw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jI2c0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; &#xD;
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided&#xD;
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.&#xD;
		} else { // subDirectory has relative path, so just append&#xD;
			newDirectory = directory + File.separator + subDirectory;&#xD;
		}&#xD;
		try {&#xD;
			Path path = Paths.get(newDirectory);&#xD;
			Files.createDirectories(path);&#xD;
			if (verbose) {&#xD;
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
			newDirectory = directory;  // in case of error, just use the initial directory&#xD;
		}&#xD;
		return newDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jI2dET6Ee2_n5XNBGdaxw" name="writeFile" specification="_2FgfRET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jI2dUT6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jI2dkT6Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);&#xD;
		Path fileName = Path.of(file);&#xD;
		try {&#xD;
			Files.writeString(fileName, tag.sign(fileContents));&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jI2d0T6Ee2_n5XNBGdaxw" name="readFile" specification="_2FhGUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jI2eET6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jI2eUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
		Path fileName = Path.of(file);&#xD;
		String contents = null;&#xD;
		try {&#xD;
			contents = Files.readString(fileName);&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
		return contents;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Fdb8ET6Ee2_n5XNBGdaxw" name="FileManager" method="_2jHoVUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2Fdb8UT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2Fdb8kT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pURAUc3Ee2VGuPmUBocQA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Fdb80T6Ee2_n5XNBGdaxw" type="_2FcN0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FeDAET6Ee2_n5XNBGdaxw" name="FileManager" method="_2jHoV0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FeDAkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FeDA0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2FeDAUT6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FeDBET6Ee2_n5XNBGdaxw" type="_2FcN0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FeDBUT6Ee2_n5XNBGdaxw" name="getDocumentsDirectory" method="_2jIPYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FeqEET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FeqEUT6Ee2_n5XNBGdaxw" name="getCurrentDirectory" method="_2jIPYkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FeqEkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FeqE0T6Ee2_n5XNBGdaxw" name="createFile" method="_2jIPZET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURAkc3Ee2VGuPmUBocQA">
                  <body>Build the name extension used for all files created by this tool.&#xD;
	 * The nameExtension will be added to the base input file name&#xD;
	 * so that all of the output files can be associated with the input file&#xD;
	 * The file naming pattern is:&#xD;
	 * baseFileNameFileType-NonDefaultParameterList&#xD;
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray&#xD;
	 * Default parameters are not identified in the NameExtension&#xD;
	 * All parameters used to create the file, should be listed near the top&#xD;
	 * of the file in the Parameter Section, followed by the file contents.&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_2FfRIET6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FfRIUT6Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FfRIkT6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FfRI0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Ff4MET6Ee2_n5XNBGdaxw" name="createFile" method="_2jIPaUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Ff4MUT6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2Ff4MkT6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2Ff4M0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FgfQET6Ee2_n5XNBGdaxw" name="createDirectory" method="_2jI2cET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FgfQUT6Ee2_n5XNBGdaxw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FgfQkT6Ee2_n5XNBGdaxw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FgfQ0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FgfRET6Ee2_n5XNBGdaxw" name="writeFile" method="_2jI2dET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FgfRUT6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FgfRkT6Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FhGUET6Ee2_n5XNBGdaxw" name="readFile" method="_2jI2d0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FhGUUT6Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FhGUkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Fi7gET6Ee2_n5XNBGdaxw" name="Flow">
              <ownedComment xmi:id="_-pURA0c3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2djy5ET6Ee2_n5XNBGdaxw" general="_2J_WoET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hepkET6Ee2_n5XNBGdaxw" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hepkUT6Ee2_n5XNBGdaxw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hepkkT6Ee2_n5XNBGdaxw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hepk0T6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hfQoET6Ee2_n5XNBGdaxw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hfQoUT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hfQokT6Ee2_n5XNBGdaxw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hfQo0T6Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hfQpET6Ee2_n5XNBGdaxw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hfQpUT6Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hf3sET6Ee2_n5XNBGdaxw" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hf3sUT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hf3skT6Ee2_n5XNBGdaxw" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hf3s0T6Ee2_n5XNBGdaxw" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hgewUT6Ee2_n5XNBGdaxw" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hhF0ET6Ee2_n5XNBGdaxw" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hhF0kT6Ee2_n5XNBGdaxw" name="nodes" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2krHgUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hiT8UT6Ee2_n5XNBGdaxw" name="linkTxAndTotalCost" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2krukUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hi7AUT6Ee2_n5XNBGdaxw" name="edges" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2ksVoET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hjiEUT6Ee2_n5XNBGdaxw" name="nodePredecessor" visibility="package" type="_2GQtMET6Ee2_n5XNBGdaxw" association="_2ksVo0T6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hkJIUT6Ee2_n5XNBGdaxw" name="edgePredecessor" visibility="package" type="_2FR1wET6Ee2_n5XNBGdaxw" association="_2ks8sUT6Ee2_n5XNBGdaxw"/>
              <interfaceRealization xmi:id="_2gHXoET6Ee2_n5XNBGdaxw" client="_2Fi7gET6Ee2_n5XNBGdaxw" supplier="_2fyngUT6Ee2_n5XNBGdaxw" contract="_2fyngUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jJdgET6Ee2_n5XNBGdaxw" name="Flow" specification="_2FkwsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jJdgUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jJdgkT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jJdg0T6Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jJdhET6Ee2_n5XNBGdaxw" type="_2Fi7gET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jJdhUT6Ee2_n5XNBGdaxw" name="Flow" specification="_2FlXwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jJdhkT6Ee2_n5XNBGdaxw" type="_2Fi7gET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jJdh0T6Ee2_n5XNBGdaxw" name="getInitialPriority" specification="_2Fl-0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jJdiET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jJdiUT6Ee2_n5XNBGdaxw" name="getIndex" specification="_2Fl-0kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jJdikT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKEkET6Ee2_n5XNBGdaxw" name="getNumTxPerLink" specification="_2Fml4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKEkUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKEkkT6Ee2_n5XNBGdaxw" name="getNodes" specification="_2Fml4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKEk0T6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKElET6Ee2_n5XNBGdaxw" name="getEdges" specification="_2FnM8UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKElUT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKElkT6Ee2_n5XNBGdaxw" name="addEdge" specification="_2dikwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKEl0T6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKEmET6Ee2_n5XNBGdaxw" name="addNode" specification="_2djL0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKEmUT6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKroET6Ee2_n5XNBGdaxw" name="getLinkTxAndTotalCost" specification="_2FobEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKroUT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKrokT6Ee2_n5XNBGdaxw" name="setInitialPriority" specification="_2FppMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKro0T6Ee2_n5XNBGdaxw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKrpET6Ee2_n5XNBGdaxw" name="setIndex" specification="_2FppMkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKrpUT6Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jKrpkT6Ee2_n5XNBGdaxw" name="setNumTxPerLink" specification="_2FqQQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jKrp0T6Ee2_n5XNBGdaxw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jLSsET6Ee2_n5XNBGdaxw" name="setNodes" specification="_2gJM0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jLSsUT6Ee2_n5XNBGdaxw" name="nodes" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jLSskT6Ee2_n5XNBGdaxw" name="setLinkTxAndTotalCost" specification="_2gJz4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jLSs0T6Ee2_n5XNBGdaxw" name="linkTxAndTotalCost" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jLStET6Ee2_n5XNBGdaxw" name="compareTo" specification="_2djL0kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jLStUT6Ee2_n5XNBGdaxw" name="flow" type="_2Fi7gET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jLStkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jLSt0T6Ee2_n5XNBGdaxw" name="toString" specification="_2Fq3UET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jLSuET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2FkwsET6Ee2_n5XNBGdaxw" name="Flow" visibility="package" method="_2jJdgET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FkwtET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FkwtUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pURBEc3Ee2VGuPmUBocQA">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_2FkwsUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FkwskT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2Fkws0T6Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2FkwtkT6Ee2_n5XNBGdaxw" type="_2Fi7gET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FlXwET6Ee2_n5XNBGdaxw" name="Flow" visibility="package" method="_2jJdhUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2FlXwUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2FlXwkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pURBUc3Ee2VGuPmUBocQA">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_2FlXw0T6Ee2_n5XNBGdaxw" type="_2Fi7gET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Fl-0ET6Ee2_n5XNBGdaxw" name="getInitialPriority" method="_2jJdh0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURBkc3Ee2VGuPmUBocQA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Fl-0UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Fl-0kT6Ee2_n5XNBGdaxw" name="getIndex" method="_2jJdiUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURB0c3Ee2VGuPmUBocQA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Fl-00T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Fml4ET6Ee2_n5XNBGdaxw" name="getNumTxPerLink" method="_2jKEkET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURCEc3Ee2VGuPmUBocQA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Fml4UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Fml4kT6Ee2_n5XNBGdaxw" name="getNodes" method="_2jKEkkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURCUc3Ee2VGuPmUBocQA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gIlwET6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FnM8UT6Ee2_n5XNBGdaxw" name="getEdges" method="_2jKElET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURCkc3Ee2VGuPmUBocQA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gIlwUT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FobEET6Ee2_n5XNBGdaxw" name="getLinkTxAndTotalCost" method="_2jKroET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURDUc3Ee2VGuPmUBocQA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gIlwkT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FppMET6Ee2_n5XNBGdaxw" name="setInitialPriority" method="_2jKrokT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURDkc3Ee2VGuPmUBocQA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2FppMUT6Ee2_n5XNBGdaxw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FppMkT6Ee2_n5XNBGdaxw" name="setIndex" method="_2jKrpET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURD0c3Ee2VGuPmUBocQA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2FppM0T6Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2FqQQET6Ee2_n5XNBGdaxw" name="setNumTxPerLink" method="_2jKrpkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pUREEc3Ee2VGuPmUBocQA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2FqQQUT6Ee2_n5XNBGdaxw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Fq3UET6Ee2_n5XNBGdaxw" name="toString" method="_2jLSt0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Fq3UUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dikwET6Ee2_n5XNBGdaxw" name="addEdge" method="_2jKElkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURC0c3Ee2VGuPmUBocQA">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2dikwUT6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2djL0ET6Ee2_n5XNBGdaxw" name="addNode" method="_2jKEmET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURDEc3Ee2VGuPmUBocQA">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2djL0UT6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2djL0kT6Ee2_n5XNBGdaxw" name="compareTo" method="_2jLStET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2djL00T6Ee2_n5XNBGdaxw" name="flow" type="_2Fi7gET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2djy4ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2gJM0ET6Ee2_n5XNBGdaxw" name="setNodes" method="_2jLSsET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pUREUc3Ee2VGuPmUBocQA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gJM0UT6Ee2_n5XNBGdaxw" name="nodes" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gJz4ET6Ee2_n5XNBGdaxw" name="setLinkTxAndTotalCost" method="_2jLSskT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pUREkc3Ee2VGuPmUBocQA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gJz4UT6Ee2_n5XNBGdaxw" name="linkTxAndTotalCost" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Fvv0ET6Ee2_n5XNBGdaxw" name="FlowMap">
              <ownedComment xmi:id="_-pURE0c3Ee2VGuPmUBocQA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2dm2MET6Ee2_n5XNBGdaxw" general="_2DbboET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hkwMET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hkwMUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2FwW4ET6Ee2_n5XNBGdaxw" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_-pURFEc3Ee2VGuPmUBocQA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2dndQUT6Ee2_n5XNBGdaxw" general="_2DbboET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hkwMkT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hkwM0T6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Fw98ET6Ee2_n5XNBGdaxw" name="GraphViz">
              <ownedComment xmi:id="_-pURFUc3Ee2VGuPmUBocQA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2dpSc0T6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hlXQET6Ee2_n5XNBGdaxw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hlXQUT6Ee2_n5XNBGdaxw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hlXQkT6Ee2_n5XNBGdaxw" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hlXQ0T6Ee2_n5XNBGdaxw" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hlXRET6Ee2_n5XNBGdaxw" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hl-UET6Ee2_n5XNBGdaxw" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hl-UkT6Ee2_n5XNBGdaxw" name="wfm" visibility="package" type="_2FcN0ET6Ee2_n5XNBGdaxw" association="_2ktjwUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hl-VET6Ee2_n5XNBGdaxw" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hmlYUT6Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hmlY0T6Ee2_n5XNBGdaxw" name="gv" visibility="package" type="_2Fw98ET6Ee2_n5XNBGdaxw" association="_2ktjxET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jL5wET6Ee2_n5XNBGdaxw" name="GraphViz" specification="_2dorYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jL5wUT6Ee2_n5XNBGdaxw" name="wfm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jL5wkT6Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jL5w0T6Ee2_n5XNBGdaxw" type="_2Fw98ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jMg0ET6Ee2_n5XNBGdaxw" name="GraphViz" specification="_2dorZkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jMg0UT6Ee2_n5XNBGdaxw" name="wfm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jMg0kT6Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jMg00T6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jMg1ET6Ee2_n5XNBGdaxw" type="_2Fw98ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jMg1UT6Ee2_n5XNBGdaxw" name="visualization" specification="_2FyzIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jMg1kT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jMg10T6Ee2_n5XNBGdaxw" name="initializeGraphVizContent" specification="_2FzaMkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jMg2ET6Ee2_n5XNBGdaxw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jMg2UT6Ee2_n5XNBGdaxw" name="finalizeGraphVizContent" specification="_2F0BQET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH4ET6Ee2_n5XNBGdaxw" name="getGraphVizContent" specification="_2F0BQUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNH4UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH4kT6Ee2_n5XNBGdaxw" name="createGraphVizContent" specification="_2F0oUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNH40T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH5ET6Ee2_n5XNBGdaxw" name="addFlowToGraphViz" specification="_2F0oUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNH5UT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH5kT6Ee2_n5XNBGdaxw" name="addSrcNodeToGraphViz" specification="_2F1PYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNH50T6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH6ET6Ee2_n5XNBGdaxw" name="addSnkNodeToGraphViz" specification="_2F1PYkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNH6UT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH6kT6Ee2_n5XNBGdaxw" name="finalizeCurrentFlowInGraphViz" specification="_2F12cET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNH60T6Ee2_n5XNBGdaxw" name="addNodeName" specification="_2F12cUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNH7ET6Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jNH7UT6Ee2_n5XNBGdaxw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2FyzIET6Ee2_n5XNBGdaxw" name="visualization" method="_2jMg1UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dpSckT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2FzaMkT6Ee2_n5XNBGdaxw" name="initializeGraphVizContent" method="_2jMg10T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2FzaM0T6Ee2_n5XNBGdaxw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F0BQET6Ee2_n5XNBGdaxw" name="finalizeGraphVizContent" method="_2jMg2UT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2F0BQUT6Ee2_n5XNBGdaxw" name="getGraphVizContent" method="_2jNH4ET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pURFkc3Ee2VGuPmUBocQA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_2F0BQkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F0oUET6Ee2_n5XNBGdaxw" name="createGraphVizContent" method="_2jNH4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F0oUUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F0oUkT6Ee2_n5XNBGdaxw" name="addFlowToGraphViz" method="_2jNH5ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F0oU0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F1PYET6Ee2_n5XNBGdaxw" name="addSrcNodeToGraphViz" method="_2jNH5kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F1PYUT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F1PYkT6Ee2_n5XNBGdaxw" name="addSnkNodeToGraphViz" method="_2jNH6ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F1PY0T6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F12cET6Ee2_n5XNBGdaxw" name="finalizeCurrentFlowInGraphViz" method="_2jNH6kT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2F12cUT6Ee2_n5XNBGdaxw" name="addNodeName" visibility="private" method="_2jNH60T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F12ckT6Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2F12c0T6Ee2_n5XNBGdaxw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2dorYET6Ee2_n5XNBGdaxw" name="GraphViz" visibility="package" method="_2jL5wET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dorY0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dorZET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dorYUT6Ee2_n5XNBGdaxw" name="wfm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2dorYkT6Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dorZUT6Ee2_n5XNBGdaxw" type="_2Fw98ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dorZkT6Ee2_n5XNBGdaxw" name="GraphViz" visibility="package" method="_2jMg0ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2dorakT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2dpScET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dorZ0T6Ee2_n5XNBGdaxw" name="wfm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2doraET6Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2doraUT6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2dpScUT6Ee2_n5XNBGdaxw" type="_2Fw98ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2F45wET6Ee2_n5XNBGdaxw" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_-pURF0c3Ee2VGuPmUBocQA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_2gMQIET6Ee2_n5XNBGdaxw" general="_2dsVwET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hnzgET6Ee2_n5XNBGdaxw" name="gv" visibility="package" type="_2Fw98ET6Ee2_n5XNBGdaxw" association="_2kuK0UT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNu8ET6Ee2_n5XNBGdaxw" name="GraphVizListener" specification="_2dtj4UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNu8UT6Ee2_n5XNBGdaxw" name="gv" type="_2Fw98ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jNu8kT6Ee2_n5XNBGdaxw" type="_2F45wET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNu80T6Ee2_n5XNBGdaxw" name="buildGraphViz" specification="_2duK80T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNu9ET6Ee2_n5XNBGdaxw" name="gv" type="_2Fw98ET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNu9UT6Ee2_n5XNBGdaxw" name="enterWarpName" specification="_2duyAUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNu9kT6Ee2_n5XNBGdaxw" name="ctx" type="_2duK9UT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNu90T6Ee2_n5XNBGdaxw" name="exitWarp" specification="_2dvZEUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNu-ET6Ee2_n5XNBGdaxw" name="ctx" type="_2duyBkT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jNu-UT6Ee2_n5XNBGdaxw" name="enterFlowName" specification="_2dwAJUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jNu-kT6Ee2_n5XNBGdaxw" name="ctx" type="_2dwAI0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jOWAET6Ee2_n5XNBGdaxw" name="exitSrcNode" specification="_2dwnNUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jOWAUT6Ee2_n5XNBGdaxw" name="ctx" type="_2dwnM0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jOWAkT6Ee2_n5XNBGdaxw" name="exitSnkNode" specification="_2dx1UUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jOWA0T6Ee2_n5XNBGdaxw" name="ctx" type="_2dxORET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jOWBET6Ee2_n5XNBGdaxw" name="exitFlow" specification="_2dycZET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jOWBUT6Ee2_n5XNBGdaxw" name="ctx" type="_2dycYkT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2dtj4UT6Ee2_n5XNBGdaxw" name="GraphVizListener" visibility="private" method="_2jNu8ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2duK8ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2duK8UT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2dtj4kT6Ee2_n5XNBGdaxw" name="gv" type="_2Fw98ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2duK8kT6Ee2_n5XNBGdaxw" type="_2F45wET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2duK80T6Ee2_n5XNBGdaxw" name="buildGraphViz" isStatic="true" method="_2jNu80T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2duK9ET6Ee2_n5XNBGdaxw" name="gv" type="_2Fw98ET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2duyAUT6Ee2_n5XNBGdaxw" name="enterWarpName" method="_2jNu9UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2duyAkT6Ee2_n5XNBGdaxw" name="ctx" type="_2duK9UT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dvZEUT6Ee2_n5XNBGdaxw" name="exitWarp" method="_2jNu90T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dvZEkT6Ee2_n5XNBGdaxw" name="ctx" type="_2duyBkT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dwAJUT6Ee2_n5XNBGdaxw" name="enterFlowName" method="_2jNu-UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dwAJkT6Ee2_n5XNBGdaxw" name="ctx" type="_2dwAI0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dwnNUT6Ee2_n5XNBGdaxw" name="exitSrcNode" method="_2jOWAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dxOQET6Ee2_n5XNBGdaxw" name="ctx" type="_2dwnM0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dx1UUT6Ee2_n5XNBGdaxw" name="exitSnkNode" method="_2jOWAkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dx1UkT6Ee2_n5XNBGdaxw" name="ctx" type="_2dxORET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2dycZET6Ee2_n5XNBGdaxw" name="exitFlow" method="_2jOWBET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2dycZUT6Ee2_n5XNBGdaxw" name="ctx" type="_2dycYkT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2F79EET6Ee2_n5XNBGdaxw" name="InputGraphFile">
              <ownedComment xmi:id="_-pU4EEc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2hoakET6Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hoakUT6Ee2_n5XNBGdaxw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hoakkT6Ee2_n5XNBGdaxw" name="wfm" visibility="private" type="_2FcN0ET6Ee2_n5XNBGdaxw" association="_2kuK1ET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hpBoUT6Ee2_n5XNBGdaxw" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hpBokT6Ee2_n5XNBGdaxw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hposUT6Ee2_n5XNBGdaxw" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hposkT6Ee2_n5XNBGdaxw" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jOWBkT6Ee2_n5XNBGdaxw" name="InputGraphFile" specification="_2d04oUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jOWB0T6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jOWCET6Ee2_n5XNBGdaxw" type="_2F79EET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jOWCUT6Ee2_n5XNBGdaxw" name="InputGraphFile" specification="_2d1fs0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jOWCkT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jOWC0T6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jOWDET6Ee2_n5XNBGdaxw" type="_2F79EET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jOWDUT6Ee2_n5XNBGdaxw" name="setGraphFileName" specification="_2F9yQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jOWDkT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jO9EET6Ee2_n5XNBGdaxw" name="verifyGraphFileName" specification="_2F_AYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jO9EUT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jO9EkT6Ee2_n5XNBGdaxw" name="readGraphFile" specification="_2F_ncET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jO9E0T6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jO9FET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jO9FUT6Ee2_n5XNBGdaxw" name="getInputGraphFileName" specification="_2F_nc0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jO9FkT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jO9F0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jO9GET6Ee2_n5XNBGdaxw" name="readGraphFileContents" specification="_2GAOgUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jO9GUT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jO9GkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jO9G0T6Ee2_n5XNBGdaxw" name="printVerboseMessage" specification="_2GA1kET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jO9HET6Ee2_n5XNBGdaxw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jO9HUT6Ee2_n5XNBGdaxw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jO9HkT6Ee2_n5XNBGdaxw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2F9yQET6Ee2_n5XNBGdaxw" name="setGraphFileName" visibility="private" method="_2jOWDUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F-ZUET6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F_AYET6Ee2_n5XNBGdaxw" name="verifyGraphFileName" visibility="private" method="_2jO9EET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F_AYUT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F_ncET6Ee2_n5XNBGdaxw" name="readGraphFile" method="_2jO9EkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F_ncUT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2F_nckT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2F_nc0T6Ee2_n5XNBGdaxw" name="getInputGraphFileName" visibility="private" method="_2jO9FUT6Ee2_n5XNBGdaxw" raisedException="_2gM3MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2F_ndET6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GAOgET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GAOgUT6Ee2_n5XNBGdaxw" name="readGraphFileContents" visibility="private" method="_2jO9GET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GAOgkT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GAOg0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GA1kET6Ee2_n5XNBGdaxw" name="printVerboseMessage" visibility="private" method="_2jO9G0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GA1kUT6Ee2_n5XNBGdaxw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GA1kkT6Ee2_n5XNBGdaxw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GA1k0T6Ee2_n5XNBGdaxw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2d04oUT6Ee2_n5XNBGdaxw" name="InputGraphFile" method="_2jOWBkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d1fsET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d1fsUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2d04okT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d1fskT6Ee2_n5XNBGdaxw" type="_2F79EET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2d1fs0T6Ee2_n5XNBGdaxw" name="InputGraphFile" method="_2jOWCUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d1ftkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d1ft0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2d1ftET6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d1ftUT6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2d1fuET6Ee2_n5XNBGdaxw" type="_2F79EET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GCqwET6Ee2_n5XNBGdaxw" name="InstructionTimeSlot">
              <generalization xmi:id="_2d2t0ET6Ee2_n5XNBGdaxw" general="_2HkUwET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hqPwUT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hqPwkT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jPkIET6Ee2_n5XNBGdaxw" name="InstructionTimeSlot" specification="_2GCqwUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jPkIUT6Ee2_n5XNBGdaxw" type="_2GCqwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jPkIkT6Ee2_n5XNBGdaxw" name="InstructionTimeSlot" specification="_2GDR00T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jPkI0T6Ee2_n5XNBGdaxw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jPkJET6Ee2_n5XNBGdaxw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jPkJUT6Ee2_n5XNBGdaxw" type="_2GCqwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jPkJkT6Ee2_n5XNBGdaxw" name="InstructionTimeSlot" specification="_2GEf8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jPkJ0T6Ee2_n5XNBGdaxw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jPkKET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jPkKUT6Ee2_n5XNBGdaxw" type="_2GCqwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2GCqwUT6Ee2_n5XNBGdaxw" name="InstructionTimeSlot" method="_2jPkIET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2GDR0ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2GDR0UT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2GDR0kT6Ee2_n5XNBGdaxw" type="_2GCqwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GDR00T6Ee2_n5XNBGdaxw" name="InstructionTimeSlot" visibility="package" method="_2jPkIkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2GD44UT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2GD44kT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2GDR1ET6Ee2_n5XNBGdaxw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GD44ET6Ee2_n5XNBGdaxw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GD440T6Ee2_n5XNBGdaxw" type="_2GCqwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GEf8ET6Ee2_n5XNBGdaxw" name="InstructionTimeSlot" visibility="package" method="_2jPkJkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2GEf8kT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2GEf80T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2GEf8UT6Ee2_n5XNBGdaxw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GEf9UT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GEf9ET6Ee2_n5XNBGdaxw" type="_2GCqwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GFHAET6Ee2_n5XNBGdaxw" name="LatencyAnalysis">
              <ownedComment xmi:id="_-pU4EUc3Ee2VGuPmUBocQA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2hq20ET6Ee2_n5XNBGdaxw" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hq20UT6Ee2_n5XNBGdaxw" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hrd4UT6Ee2_n5XNBGdaxw" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hrd40T6Ee2_n5XNBGdaxw" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hsE8ET6Ee2_n5XNBGdaxw" name="latencyReport" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2kux4UT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hsE8kT6Ee2_n5XNBGdaxw" name="program" visibility="private" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2kux5ET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hssAUT6Ee2_n5XNBGdaxw" name="workload" visibility="private" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2kvY8UT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hssA0T6Ee2_n5XNBGdaxw" name="programTable" visibility="private" type="_2HNIYET6Ee2_n5XNBGdaxw" association="_2kwAAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2htTEUT6Ee2_n5XNBGdaxw" name="nodeIndex" visibility="private" type="_2dC1gET6Ee2_n5XNBGdaxw" association="_2kwAA0T6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jQLMET6Ee2_n5XNBGdaxw" name="LatencyAnalysis" specification="_2d378ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jQLMUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jQLMkT6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jQLM0T6Ee2_n5XNBGdaxw" name="LatencyAnalysis" specification="_2d379UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jQLNET6Ee2_n5XNBGdaxw" name="program" type="_2G0G0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jQLNUT6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jQLNkT6Ee2_n5XNBGdaxw" name="latencyReport" specification="_2GGVIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jQLN0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jQyQET6Ee2_n5XNBGdaxw" name="numMatchingTx" specification="_2GG8MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jQyQUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jQyQkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jQyQ0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jQyRET6Ee2_n5XNBGdaxw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jQyRUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2GGVIET6Ee2_n5XNBGdaxw" name="latencyReport" method="_2jQLNkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2d4jAET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GG8MET6Ee2_n5XNBGdaxw" name="numMatchingTx" method="_2jQyQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GG8MUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GG8MkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GG8M0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GG8NET6Ee2_n5XNBGdaxw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GHjQET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2d378ET6Ee2_n5XNBGdaxw" name="LatencyAnalysis" visibility="package" method="_2jQLMET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d378kT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d3780T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2d378UT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d379ET6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2d379UT6Ee2_n5XNBGdaxw" name="LatencyAnalysis" visibility="package" method="_2jQLM0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d3790T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d37-ET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2d379kT6Ee2_n5XNBGdaxw" name="program" type="_2G0G0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d37-UT6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GJ_gET6Ee2_n5XNBGdaxw" name="LatencyVisualization">
              <ownedComment xmi:id="_-pU4Ekc3Ee2VGuPmUBocQA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2d5xIET6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2ht6IUT6Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ht6IkT6Ee2_n5XNBGdaxw" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ht6I0T6Ee2_n5XNBGdaxw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2huhMET6Ee2_n5XNBGdaxw" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2huhMUT6Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_2IoEsET6Ee2_n5XNBGdaxw" association="_2kwnEET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2huhM0T6Ee2_n5XNBGdaxw" name="la" visibility="private" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2kwnE0T6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jQyRkT6Ee2_n5XNBGdaxw" name="LatencyVisualization" specification="_2d5KEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jQyR0T6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jQySET6Ee2_n5XNBGdaxw" type="_2GJ_gET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2d5KEET6Ee2_n5XNBGdaxw" name="LatencyVisualization" visibility="package" method="_2jQyRkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d5KEkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d5KE0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2d5KEUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d5KFET6Ee2_n5XNBGdaxw" type="_2GJ_gET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GMbwET6Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_2gP6gET6Ee2_n5XNBGdaxw" client="_2GMbwET6Ee2_n5XNBGdaxw" supplier="_2dbQAET6Ee2_n5XNBGdaxw" contract="_2dbQAET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jQySUT6Ee2_n5XNBGdaxw" name="compare" specification="_2gQhkUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jQySkT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jQyS0T6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jQyTET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2gQhkUT6Ee2_n5XNBGdaxw" name="compare" method="_2jQySUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gQhkkT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gRIoET6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gRIoUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GOQ8ET6Ee2_n5XNBGdaxw" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_2gRvsUT6Ee2_n5XNBGdaxw" client="_2GOQ8ET6Ee2_n5XNBGdaxw" supplier="_2dbQAET6Ee2_n5XNBGdaxw" contract="_2dbQAET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jRZUET6Ee2_n5XNBGdaxw" name="compare" specification="_2gSWwUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jRZUUT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jRZUkT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jRZU0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2gSWwUT6Ee2_n5XNBGdaxw" name="compare" method="_2jRZUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gSWwkT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gSWw0T6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gS90ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GQtMET6Ee2_n5XNBGdaxw" name="Node">
              <generalization xmi:id="_2d7mVET6Ee2_n5XNBGdaxw" general="_2J_WoET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hvIQET6Ee2_n5XNBGdaxw" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hvIQUT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hvIQkT6Ee2_n5XNBGdaxw" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hvIQ0T6Ee2_n5XNBGdaxw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hvIRET6Ee2_n5XNBGdaxw" name="edges" type="_2dEqsET6Ee2_n5XNBGdaxw" isReadOnly="true" association="_2kwnFkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hvvUUT6Ee2_n5XNBGdaxw" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2hwWYET6Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_2gTk4UT6Ee2_n5XNBGdaxw" client="_2GQtMET6Ee2_n5XNBGdaxw" supplier="_2fyngUT6Ee2_n5XNBGdaxw" contract="_2fyngUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jRZVET6Ee2_n5XNBGdaxw" name="Node" specification="_2GR7UET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jRZVUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jRZVkT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jRZV0T6Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jRZWET6Ee2_n5XNBGdaxw" type="_2GQtMET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jRZWUT6Ee2_n5XNBGdaxw" name="compareTo" specification="_2d6_QET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jRZWkT6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jRZW0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSAYET6Ee2_n5XNBGdaxw" name="toString" specification="_2GSiYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSAYUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSAYkT6Ee2_n5XNBGdaxw" name="addEdge" specification="_2d7mUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSAY0T6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSAZET6Ee2_n5XNBGdaxw" name="addConflict" specification="_2GTJckT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSAZUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSAZkT6Ee2_n5XNBGdaxw" name="numEdges" specification="_2GTwgET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSAZ0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSAaET6Ee2_n5XNBGdaxw" name="print" specification="_2GTwgkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSAaUT6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSncET6Ee2_n5XNBGdaxw" name="print" specification="_2GUXkkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2GR7UET6Ee2_n5XNBGdaxw" name="Node" visibility="package" method="_2jRZVET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2GR7VET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2GR7VUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2GR7UUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GR7UkT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GR7U0T6Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GR7VkT6Ee2_n5XNBGdaxw" type="_2GQtMET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GSiYET6Ee2_n5XNBGdaxw" name="toString" method="_2jSAYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GSiYUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GTJckT6Ee2_n5XNBGdaxw" name="addConflict" method="_2jSAZET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GTJc0T6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GTwgET6Ee2_n5XNBGdaxw" name="numEdges" method="_2jSAZkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GTwgUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GTwgkT6Ee2_n5XNBGdaxw" name="print" method="_2jSAaET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GTwg0T6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GUXkkT6Ee2_n5XNBGdaxw" name="print" method="_2jSncET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2d6_QET6Ee2_n5XNBGdaxw" name="compareTo" method="_2jRZWUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2d6_QUT6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d6_QkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2d7mUkT6Ee2_n5XNBGdaxw" name="addEdge" method="_2jSAYkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2d7mU0T6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GWz0ET6Ee2_n5XNBGdaxw" name="NodeMap">
              <ownedComment xmi:id="_-pU4E0c3Ee2VGuPmUBocQA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2d80cET6Ee2_n5XNBGdaxw" general="_2DbboET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hwWYUT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hw9cET6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GYB8ET6Ee2_n5XNBGdaxw" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_-pU4FEc3Ee2VGuPmUBocQA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2d-CkET6Ee2_n5XNBGdaxw" general="_2HrpgET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSncUT6Ee2_n5XNBGdaxw" name="NonPreemptiveSchedule" specification="_2d9bgUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSnckT6Ee2_n5XNBGdaxw" name="poset" type="_2GevoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jSnc0T6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jSndET6Ee2_n5XNBGdaxw" type="_2GYB8ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2d9bgUT6Ee2_n5XNBGdaxw" name="NonPreemptiveSchedule" visibility="package" method="_2jSncUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d9bhET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d9bhUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2d9bgkT6Ee2_n5XNBGdaxw" name="poset" type="_2GevoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d9bg0T6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2d9bhkT6Ee2_n5XNBGdaxw" type="_2GYB8ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GYpAET6Ee2_n5XNBGdaxw" name="NotImplentedVisualization">
              <generalization xmi:id="_2d-CkkT6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hw9cUT6Ee2_n5XNBGdaxw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hw9ckT6Ee2_n5XNBGdaxw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hw9c0T6Ee2_n5XNBGdaxw" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hw9dET6Ee2_n5XNBGdaxw" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hw9dUT6Ee2_n5XNBGdaxw" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2hxkgET6Ee2_n5XNBGdaxw" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSndUT6Ee2_n5XNBGdaxw" name="NotImplentedVisualization" specification="_2GZQEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSndkT6Ee2_n5XNBGdaxw" type="_2GYpAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSnd0T6Ee2_n5XNBGdaxw" name="NotImplentedVisualization" specification="_2GZ3IUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSneET6Ee2_n5XNBGdaxw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jSneUT6Ee2_n5XNBGdaxw" type="_2GYpAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jSnekT6Ee2_n5XNBGdaxw" name="visualization" specification="_2GaeMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jSne0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2GZQEET6Ee2_n5XNBGdaxw" name="NotImplentedVisualization" visibility="package" method="_2jSndUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2GZQEUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2GZQEkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2GZ3IET6Ee2_n5XNBGdaxw" type="_2GYpAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GZ3IUT6Ee2_n5XNBGdaxw" name="NotImplentedVisualization" visibility="package" method="_2jSnd0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2GZ3I0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2GZ3JET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2GZ3IkT6Ee2_n5XNBGdaxw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2GZ3JUT6Ee2_n5XNBGdaxw" type="_2GYpAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GaeMET6Ee2_n5XNBGdaxw" name="visualization" method="_2jSnekT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2d-CkUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GcTYET6Ee2_n5XNBGdaxw" name="PeriodComparator">
              <interfaceRealization xmi:id="_2gVaEET6Ee2_n5XNBGdaxw" client="_2GcTYET6Ee2_n5XNBGdaxw" supplier="_2dbQAET6Ee2_n5XNBGdaxw" contract="_2dbQAET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jTOgET6Ee2_n5XNBGdaxw" name="compare" specification="_2gWBIUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jTOgUT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jTOgkT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jTOg0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2gWBIUT6Ee2_n5XNBGdaxw" name="compare" method="_2jTOgET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gWoMET6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gWoMUT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gWoMkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GevoET6Ee2_n5XNBGdaxw" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_-pU4FUc3Ee2VGuPmUBocQA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2hxkgUT6Ee2_n5XNBGdaxw" name="activations" visibility="private" type="_2EOF0ET6Ee2_n5XNBGdaxw" association="_2kxOIkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hxkg0T6Ee2_n5XNBGdaxw" name="workload" visibility="private" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2kx1MET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hyLkUT6Ee2_n5XNBGdaxw" name="flows" visibility="protected" type="_2Fi7gET6Ee2_n5XNBGdaxw" association="_2kx1M0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2hyLk0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2hyLlET6Ee2_n5XNBGdaxw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2hyLkkT6Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hyyoET6Ee2_n5XNBGdaxw" name="nodes" visibility="private" type="_2GQtMET6Ee2_n5XNBGdaxw" association="_2kycQET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2hyyokT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2hyyo0T6Ee2_n5XNBGdaxw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2hyyoUT6Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2hyypUT6Ee2_n5XNBGdaxw" name="nodeMap" visibility="private" type="_2GWz0ET6Ee2_n5XNBGdaxw" association="_2kycQ0T6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2hzZsUT6Ee2_n5XNBGdaxw" name="priorityQueue" visibility="private" type="_2HXgcET6Ee2_n5XNBGdaxw" association="_2kycRkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h0AwkT6Ee2_n5XNBGdaxw" name="nodeConnectivityMap" visibility="protected" type="_2dC1gET6Ee2_n5XNBGdaxw" association="_2kzDUUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h1O4UT6Ee2_n5XNBGdaxw" name="activationMap" visibility="package" type="_2FwW4ET6Ee2_n5XNBGdaxw" association="_2kzDVET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jTOhET6Ee2_n5XNBGdaxw" name="Poset" specification="_2d_3wET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jTOhUT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jTOhkT6Ee2_n5XNBGdaxw" type="_2GevoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jT1kET6Ee2_n5XNBGdaxw" name="getNodeConnectivity" specification="_2Gf9wET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jT1kUT6Ee2_n5XNBGdaxw" type="_2dC1gET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jT1kkT6Ee2_n5XNBGdaxw" name="getNodeNames" specification="_2GhL4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jT1k0T6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jT1lET6Ee2_n5XNBGdaxw" name="getNodesNamesOrderedAlphabetically" specification="_2GiaAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jT1lUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jT1lkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jT1l0T6Ee2_n5XNBGdaxw" name="buildPosetOfActivations" specification="_2GjBEET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jT1mET6Ee2_n5XNBGdaxw" name="createEdgeLists" specification="_2GjBEUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jT1mUT6Ee2_n5XNBGdaxw" name="createConflictLists" specification="_2GjBEkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jUcoET6Ee2_n5XNBGdaxw" name="createGlobalConflictLists" specification="_2GjoIET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jUcoUT6Ee2_n5XNBGdaxw" name="createLocalConflictLists" specification="_2GjoIUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jUcokT6Ee2_n5XNBGdaxw" name="findCoordinator" specification="_2gX2UkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jUco0T6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jUcpET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jUcpUT6Ee2_n5XNBGdaxw" name="buildTxArray" specification="_2gZEcUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jUcpkT6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jUcp0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jUcqET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jUcqUT6Ee2_n5XNBGdaxw" name="createInitialActivations" specification="_2GkPMET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jUcqkT6Ee2_n5XNBGdaxw" name="getMaxTx" specification="_2eAe0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVDsET6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jVDsUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVDskT6Ee2_n5XNBGdaxw" name="getActivation" specification="_2eBF4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVDs0T6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jVDtET6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jVDtUT6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVDtkT6Ee2_n5XNBGdaxw" name="getHyperPeriod" specification="_2Gk2QET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVDt0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVDuET6Ee2_n5XNBGdaxw" name="getMaxPhase" specification="_2Gk2QkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVDuUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVDukT6Ee2_n5XNBGdaxw" name="orderActivations" specification="_2GldUUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVDu0T6Ee2_n5XNBGdaxw" name="getNextActivation" specification="_2GldUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVDvET6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVqwET6Ee2_n5XNBGdaxw" name="addActivation" specification="_2eBs8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVqwUT6Ee2_n5XNBGdaxw" name="activation" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVqwkT6Ee2_n5XNBGdaxw" name="findBaseStation" specification="_2GmEYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVqw0T6Ee2_n5XNBGdaxw" type="_2GQtMET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Gf9wET6Ee2_n5XNBGdaxw" name="getNodeConnectivity" visibility="private" method="_2jT1kET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gX2UET6Ee2_n5XNBGdaxw" type="_2dC1gET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GhL4ET6Ee2_n5XNBGdaxw" name="getNodeNames" method="_2jT1kkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gX2UUT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GiaAET6Ee2_n5XNBGdaxw" name="getNodesNamesOrderedAlphabetically" method="_2jT1lET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GiaAUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GiaAkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GjBEET6Ee2_n5XNBGdaxw" name="buildPosetOfActivations" method="_2jT1l0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2GjBEUT6Ee2_n5XNBGdaxw" name="createEdgeLists" visibility="private" method="_2jT1mET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2GjBEkT6Ee2_n5XNBGdaxw" name="createConflictLists" visibility="private" method="_2jT1mUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2GjoIET6Ee2_n5XNBGdaxw" name="createGlobalConflictLists" visibility="private" method="_2jUcoET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2GjoIUT6Ee2_n5XNBGdaxw" name="createLocalConflictLists" visibility="private" method="_2jUcoUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2GkPMET6Ee2_n5XNBGdaxw" name="createInitialActivations" visibility="private" method="_2jUcqUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Gk2QET6Ee2_n5XNBGdaxw" name="getHyperPeriod" method="_2jVDtkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Gk2QUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Gk2QkT6Ee2_n5XNBGdaxw" name="getMaxPhase" method="_2jVDuET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2GldUET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2GldUUT6Ee2_n5XNBGdaxw" name="orderActivations" method="_2jVDukT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2GldUkT6Ee2_n5XNBGdaxw" name="getNextActivation" method="_2jVDu0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pU4GEc3Ee2VGuPmUBocQA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eBF5ET6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2GmEYET6Ee2_n5XNBGdaxw" name="findBaseStation" visibility="protected" method="_2jVqwkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pU4Gkc3Ee2VGuPmUBocQA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eBs8kT6Ee2_n5XNBGdaxw" type="_2GQtMET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2d_3wET6Ee2_n5XNBGdaxw" name="Poset" visibility="package" method="_2jTOhET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2d_3wkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2d_3w0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pU4Fkc3Ee2VGuPmUBocQA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_2d_3wUT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2d_3xET6Ee2_n5XNBGdaxw" type="_2GevoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eAe0ET6Ee2_n5XNBGdaxw" name="getMaxTx" visibility="private" method="_2jUcqkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eAe0UT6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eAe0kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eBF4ET6Ee2_n5XNBGdaxw" name="getActivation" visibility="private" method="_2jVDskT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eBF4UT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eBF4kT6Ee2_n5XNBGdaxw" name="node" type="_2GQtMET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eBF40T6Ee2_n5XNBGdaxw" type="_2DjXcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eBs8ET6Ee2_n5XNBGdaxw" name="addActivation" method="_2jVqwET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pU4GUc3Ee2VGuPmUBocQA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eBs8UT6Ee2_n5XNBGdaxw" name="activation" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gX2UkT6Ee2_n5XNBGdaxw" name="findCoordinator" visibility="protected" method="_2jUcokT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pU4F0c3Ee2VGuPmUBocQA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gX2U0T6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gYdYET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2gZEcUT6Ee2_n5XNBGdaxw" name="buildTxArray" visibility="private" method="_2jUcpUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gZEckT6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gZEc0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2gZEdET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GsyEET6Ee2_n5XNBGdaxw" name="PreemptiveSchedule">
              <ownedComment xmi:id="_-pU4G0c3Ee2VGuPmUBocQA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2eHMgkT6Ee2_n5XNBGdaxw" general="_2HrpgET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVqxET6Ee2_n5XNBGdaxw" name="PreemptiveSchedule" specification="_2eC7EET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVqxUT6Ee2_n5XNBGdaxw" name="poset" type="_2GevoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jVqxkT6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jVqx0T6Ee2_n5XNBGdaxw" type="_2GsyEET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jVqyET6Ee2_n5XNBGdaxw" name="continueSearch" specification="_2eDiI0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jVqyUT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jVqykT6Ee2_n5XNBGdaxw" name="activation" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jVqy0T6Ee2_n5XNBGdaxw" type="_2ga5oET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jWR0ET6Ee2_n5XNBGdaxw" name="toProgram" specification="_2GuAMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jWR0UT6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jWR0kT6Ee2_n5XNBGdaxw" name="findPreeptiveChannelAndTime" specification="_2eEJM0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jWR00T6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR1ET6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jWR1UT6Ee2_n5XNBGdaxw" type="_2ga5oET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jWR1kT6Ee2_n5XNBGdaxw" name="findAdditionalTime" specification="_2eEwQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jWR10T6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR2ET6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR2UT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jWR2kT6Ee2_n5XNBGdaxw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR20T6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jWR3ET6Ee2_n5XNBGdaxw" name="findMaxTimeAvailable" specification="_2eFXUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jWR3UT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR3kT6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jWR30T6Ee2_n5XNBGdaxw" type="_2ga5oET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jWR4ET6Ee2_n5XNBGdaxw" name="availableTime" specification="_2eFXU0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jWR4UT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jWR4kT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR40T6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR5ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jWR5UT6Ee2_n5XNBGdaxw" name="addToSchedule" specification="_2eF-ZET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jWR5kT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jWR50T6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR6ET6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR6UT6Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jWR6kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jW44ET6Ee2_n5XNBGdaxw" name="addToSchedule" specification="_2eGlcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jW44UT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jW44kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2GuAMET6Ee2_n5XNBGdaxw" name="toProgram" method="_2jWR0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eEJMkT6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eC7EET6Ee2_n5XNBGdaxw" name="PreemptiveSchedule" visibility="package" method="_2jVqxET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2eDiIET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2eDiIUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2eC7EUT6Ee2_n5XNBGdaxw" name="poset" type="_2GevoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eC7EkT6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eDiIkT6Ee2_n5XNBGdaxw" type="_2GsyEET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eDiI0T6Ee2_n5XNBGdaxw" name="continueSearch" visibility="protected" method="_2jVqyET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eDiJET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eDiJUT6Ee2_n5XNBGdaxw" name="activation" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gcHwET6Ee2_n5XNBGdaxw" type="_2ga5oET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eEJM0T6Ee2_n5XNBGdaxw" name="findPreeptiveChannelAndTime" visibility="private" method="_2jWR0kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eEJNET6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eEJNUT6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gcHwUT6Ee2_n5XNBGdaxw" type="_2ga5oET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eEwQET6Ee2_n5XNBGdaxw" name="findAdditionalTime" visibility="private" method="_2jWR1kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eEwQUT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eEwQkT6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eEwQ0T6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eEwRET6Ee2_n5XNBGdaxw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gcHwkT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eFXUET6Ee2_n5XNBGdaxw" name="findMaxTimeAvailable" visibility="private" method="_2jWR3ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eFXUUT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eFXUkT6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gcu0ET6Ee2_n5XNBGdaxw" type="_2ga5oET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eFXU0T6Ee2_n5XNBGdaxw" name="availableTime" visibility="private" method="_2jWR4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eF-YET6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eF-YUT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eF-YkT6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eF-Y0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eF-ZET6Ee2_n5XNBGdaxw" name="addToSchedule" visibility="private" method="_2jWR5UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eF-ZUT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eF-ZkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eF-Z0T6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eF-aET6Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eF-aUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eGlcET6Ee2_n5XNBGdaxw" name="addToSchedule" visibility="protected" method="_2jW44ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eGlcUT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eGlckT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2GyRoET6Ee2_n5XNBGdaxw" name="PriorityComparator">
              <interfaceRealization xmi:id="_2gcu0UT6Ee2_n5XNBGdaxw" client="_2GyRoET6Ee2_n5XNBGdaxw" supplier="_2dbQAET6Ee2_n5XNBGdaxw" contract="_2dbQAET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jW440T6Ee2_n5XNBGdaxw" name="compare" specification="_2gd88ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jW45ET6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jW45UT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jW45kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2gd88ET6Ee2_n5XNBGdaxw" name="compare" method="_2jW440T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gd88UT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gd88kT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gd880T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2G0G0ET6Ee2_n5XNBGdaxw" name="Program" visibility="public">
              <ownedComment xmi:id="_-pXUXkc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2h2dAET6Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h2dAUT6Ee2_n5XNBGdaxw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h3EEET6Ee2_n5XNBGdaxw" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h3EEUT6Ee2_n5XNBGdaxw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h3EEkT6Ee2_n5XNBGdaxw" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h3EE0T6Ee2_n5XNBGdaxw" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h3EFET6Ee2_n5XNBGdaxw" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h3rIET6Ee2_n5XNBGdaxw" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h3rIUT6Ee2_n5XNBGdaxw" name="workLoad" visibility="package" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2kzqYUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h3rI0T6Ee2_n5XNBGdaxw" name="scheduleBuilt" visibility="package" type="_2HNIYET6Ee2_n5XNBGdaxw" association="_2k0RcUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h4SMUT6Ee2_n5XNBGdaxw" name="SchedulerSelected" visibility="package" type="_2gfLEET6Ee2_n5XNBGdaxw" association="_2k04gUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h45QET6Ee2_n5XNBGdaxw" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h45QkT6Ee2_n5XNBGdaxw" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h5gUUT6Ee2_n5XNBGdaxw" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h5gU0T6Ee2_n5XNBGdaxw" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h6HYET6Ee2_n5XNBGdaxw" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h6HYkT6Ee2_n5XNBGdaxw" name="channelsAvailable" visibility="package" type="_2EZsAET6Ee2_n5XNBGdaxw" association="_2k1fkUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h6ucET6Ee2_n5XNBGdaxw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h6uckT6Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h6udET6Ee2_n5XNBGdaxw" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h7VgUT6Ee2_n5XNBGdaxw" name="deadlineMisses" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2k2GoET6Ee2_n5XNBGdaxw"/>
              <interfaceRealization xmi:id="_2eN6MET6Ee2_n5XNBGdaxw" client="_2G0G0ET6Ee2_n5XNBGdaxw" supplier="_2H_ykET6Ee2_n5XNBGdaxw" contract="_2H_ykET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXf8ET6Ee2_n5XNBGdaxw" name="Program" specification="_2ggZN0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jXf8UT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jXf8kT6Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jXf80T6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jXf9ET6Ee2_n5XNBGdaxw" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXf9UT6Ee2_n5XNBGdaxw" name="setDefaultParameters" specification="_2eQWcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jXf9kT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jXf90T6Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jXf-ET6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jXf-UT6Ee2_n5XNBGdaxw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXf-kT6Ee2_n5XNBGdaxw" name="toWorkLoad" specification="_2G3xMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jXf-0T6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXf_ET6Ee2_n5XNBGdaxw" name="buildProgram" specification="_2ghAQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jXf_UT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXf_kT6Ee2_n5XNBGdaxw" name="buildOriginalProgram" specification="_2G4YQET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXf_0T6Ee2_n5XNBGdaxw" name="waitInstruction" specification="_2G4YQUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jXgAET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jXgAUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jXgAkT6Ee2_n5XNBGdaxw" name="elseWaitInstruction" specification="_2G4_UUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jXgA0T6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jXgBET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYHAET6Ee2_n5XNBGdaxw" name="elsePullClause" specification="_2G5mYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYHAUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHAkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHA0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHBET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHBUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYHBkT6Ee2_n5XNBGdaxw" name="hasPushInstruction" specification="_2G6NcUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYHB0T6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHCET6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHCUT6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHCkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHC0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYHDET6Ee2_n5XNBGdaxw" name="pushInstruction" specification="_2G7bkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYHDUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHDkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHD0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHEET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHEUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYHEkT6Ee2_n5XNBGdaxw" name="getFirstChannelInInstruction" specification="_2G8CoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYHE0T6Ee2_n5XNBGdaxw">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHFET6Ee2_n5XNBGdaxw" name="Instruction" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYHFUT6Ee2_n5XNBGdaxw" name="findNextAvailableInstructionTimeSlot" specification="_2eRkkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYHFkT6Ee2_n5XNBGdaxw" name="schedule" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jYHF0T6Ee2_n5XNBGdaxw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHGET6Ee2_n5XNBGdaxw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHGUT6Ee2_n5XNBGdaxw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHGkT6Ee2_n5XNBGdaxw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHG0T6Ee2_n5XNBGdaxw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jYHHET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHHUT6Ee2_n5XNBGdaxw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jYHHkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHH0T6Ee2_n5XNBGdaxw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHIET6Ee2_n5XNBGdaxw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHIUT6Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHIkT6Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHI0T6Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYHJET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuEET6Ee2_n5XNBGdaxw" name="slotIsAvailable" specification="_2eSysET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_-H_FkEc3Ee2VGuPmUBocQA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-H_FkUc3Ee2VGuPmUBocQA" name="currentInstructionTimeSlot" type="_2GCqwET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-H_Fkkc3Ee2VGuPmUBocQA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-H_Fk0c3Ee2VGuPmUBocQA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuFUT6Ee2_n5XNBGdaxw" name="findNextAvailableChannel" specification="_2eTZwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYuFkT6Ee2_n5XNBGdaxw" name="schedule" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jYuF0T6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYuGET6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYuGUT6Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYuGkT6Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jYuG0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuHET6Ee2_n5XNBGdaxw" name="selectPriority" specification="_2G9QwET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuHUT6Ee2_n5XNBGdaxw" name="selectRM" specification="_2G9QwUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuHkT6Ee2_n5XNBGdaxw" name="selectDM" specification="_2G9QwkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuH0T6Ee2_n5XNBGdaxw" name="selectRtHART" specification="_2G9Qw0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jYuIET6Ee2_n5XNBGdaxw" name="setScheduleSelected" specification="_2ghnUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jYuIUT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVIET6Ee2_n5XNBGdaxw" name="setSchedule" specification="_2eUA0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVIUT6Ee2_n5XNBGdaxw" name="schedule" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVIkT6Ee2_n5XNBGdaxw" name="getSchedule" specification="_2G930ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVI0T6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVJET6Ee2_n5XNBGdaxw" name="getSchedulerName" specification="_2G930UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVJUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVJkT6Ee2_n5XNBGdaxw" name="getSchChoice" specification="_2G-e4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVJ0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVKET6Ee2_n5XNBGdaxw" name="getNumChannels" specification="_2G-e5ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVKUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVKkT6Ee2_n5XNBGdaxw" name="getNumTransmissions" specification="_2G_F80T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVK0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVLET6Ee2_n5XNBGdaxw" name="getRealTimeHartFlag" specification="_2G_tAkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVLUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVLkT6Ee2_n5XNBGdaxw" name="setRealTimeHartFlag" specification="_2G_tBET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVL0T6Ee2_n5XNBGdaxw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZVMET6Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" specification="_2HAUEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZVMUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZ8MET6Ee2_n5XNBGdaxw" name="getE2e" specification="_2HBiMUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZ8MUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZ8MkT6Ee2_n5XNBGdaxw" name="getName" specification="_2HCJQ0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZ8M0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZ8NET6Ee2_n5XNBGdaxw" name="getOptimizationFlag" specification="_2HDXYUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZ8NUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZ8NkT6Ee2_n5XNBGdaxw" name="deadlineMisses" specification="_2HD-ckT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZ8N0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZ8OET6Ee2_n5XNBGdaxw" name="getNumFaults" specification="_2HD-c0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZ8OUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jZ8OkT6Ee2_n5XNBGdaxw" name="getNodeMapIndex" specification="_2HFMkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jZ8O0T6Ee2_n5XNBGdaxw" type="_2dC1gET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 																 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 												   // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-H-egEc3Ee2VGuPmUBocQA" name="Program" specification="_-HiZoEc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-H-egUc3Ee2VGuPmUBocQA" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-H-egkc3Ee2VGuPmUBocQA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-H-eg0c3Ee2VGuPmUBocQA" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-H-ehEc3Ee2VGuPmUBocQA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-H-ehUc3Ee2VGuPmUBocQA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-H-ehkc3Ee2VGuPmUBocQA" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2G3xMET6Ee2_n5XNBGdaxw" name="toWorkLoad" method="_2jXf-kT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUX0c3Ee2VGuPmUBocQA">
                  <body>Method to cast compatible classes' objects to WorkLoad object.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return workLoad object</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eQ9gkT6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2G4YQET6Ee2_n5XNBGdaxw" name="buildOriginalProgram" method="_2jXf_kT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2G4YQUT6Ee2_n5XNBGdaxw" name="waitInstruction" visibility="private" method="_2jXf_0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G4YQkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G4_UET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G4_UUT6Ee2_n5XNBGdaxw" name="elseWaitInstruction" visibility="private" method="_2jXgAkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G4_UkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G4_U0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G5mYET6Ee2_n5XNBGdaxw" name="elsePullClause" visibility="private" method="_2jYHAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G5mYUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G5mYkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G5mY0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G5mZET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G6NcET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G6NcUT6Ee2_n5XNBGdaxw" name="hasPushInstruction" visibility="private" method="_2jYHBkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G6NckT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G6Nc0T6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G6NdET6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G6NdUT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G60gET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G7bkET6Ee2_n5XNBGdaxw" name="pushInstruction" visibility="private" method="_2jYHDET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G7bkUT6Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G7bkkT6Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G7bk0T6Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G7blET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G7blUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G8CoET6Ee2_n5XNBGdaxw" name="getFirstChannelInInstruction" visibility="private" method="_2jYHEkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G8CokT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2G8CoUT6Ee2_n5XNBGdaxw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G9QwET6Ee2_n5XNBGdaxw" name="selectPriority" method="_2jYuHET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2G9QwUT6Ee2_n5XNBGdaxw" name="selectRM" method="_2jYuHUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2G9QwkT6Ee2_n5XNBGdaxw" name="selectDM" method="_2jYuHkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2G9Qw0T6Ee2_n5XNBGdaxw" name="selectRtHART" method="_2jYuH0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2G930ET6Ee2_n5XNBGdaxw" name="getSchedule" method="_2jZVIkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUYEc3Ee2VGuPmUBocQA">
                  <body>Method to get the Table of the current schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return scheduleBuilt, a ProgramSchedule object</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eUn4ET6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2G930UT6Ee2_n5XNBGdaxw" name="getSchedulerName" method="_2jZVJET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G930kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G-e4kT6Ee2_n5XNBGdaxw" name="getSchChoice" method="_2jZVJkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G-e40T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G-e5ET6Ee2_n5XNBGdaxw" name="getNumChannels" method="_2jZVKET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G-e5UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G_F80T6Ee2_n5XNBGdaxw" name="getNumTransmissions" method="_2jZVKkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G_F9ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G_tAkT6Ee2_n5XNBGdaxw" name="getRealTimeHartFlag" visibility="private" method="_2jZVLET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G_tA0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2G_tBET6Ee2_n5XNBGdaxw" name="setRealTimeHartFlag" visibility="private" method="_2jZVLkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2G_tBUT6Ee2_n5XNBGdaxw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2HAUEET6Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" method="_2jZVMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2giOYET6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HBiMUT6Ee2_n5XNBGdaxw" name="getE2e" method="_2jZ8MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2giOYUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HCJQ0T6Ee2_n5XNBGdaxw" name="getName" method="_2jZ8MkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2HCwUET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2HDXYUT6Ee2_n5XNBGdaxw" name="getOptimizationFlag" method="_2jZ8NET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2HDXYkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2HD-ckT6Ee2_n5XNBGdaxw" name="deadlineMisses" method="_2jZ8NkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eUn4UT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HD-c0T6Ee2_n5XNBGdaxw" name="getNumFaults" method="_2jZ8OET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2HElgET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2HFMkkT6Ee2_n5XNBGdaxw" name="getNodeMapIndex" method="_2jZ8OkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUYUc3Ee2VGuPmUBocQA">
                  <body>This method creates an array of node names sorted alphabetically and a new mapping from node names to index&#xD;
   * in the schedule table. Then it adds the name, index mapping to nodeIndexMap, the HashMap to be returned.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return HashMap of node to index mapping</body>
                </ownedComment>
                <ownedParameter xmi:id="_2giOYkT6Ee2_n5XNBGdaxw" type="_2dC1gET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eQWcET6Ee2_n5XNBGdaxw" name="setDefaultParameters" visibility="private" method="_2jXf9UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eQWcUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eQWckT6Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eQ9gET6Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eQ9gUT6Ee2_n5XNBGdaxw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eRkkET6Ee2_n5XNBGdaxw" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_2jYHFUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eRkkUT6Ee2_n5XNBGdaxw" name="schedule" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eRkkkT6Ee2_n5XNBGdaxw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRkk0T6Ee2_n5XNBGdaxw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRklET6Ee2_n5XNBGdaxw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRklUT6Ee2_n5XNBGdaxw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRklkT6Ee2_n5XNBGdaxw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2eSLokT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRkl0T6Ee2_n5XNBGdaxw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2eSLo0T6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRkmET6Ee2_n5XNBGdaxw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRkmUT6Ee2_n5XNBGdaxw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRkmkT6Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eRkm0T6Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eSLoET6Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eSLoUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eSysET6Ee2_n5XNBGdaxw" name="slotIsAvailable" visibility="private" method="_2jYuEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eSytET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eSysUT6Ee2_n5XNBGdaxw" name="currentInstructionTimeSlot" type="_2GCqwET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eSyskT6Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eSys0T6Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eTZwET6Ee2_n5XNBGdaxw" name="findNextAvailableChannel" visibility="private" method="_2jYuFUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eTZwUT6Ee2_n5XNBGdaxw" name="schedule" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eTZwkT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eTZw0T6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eTZxET6Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eTZxUT6Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eTZxkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eUA0ET6Ee2_n5XNBGdaxw" name="setSchedule" visibility="private" method="_2jZVIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eUA0UT6Ee2_n5XNBGdaxw" name="schedule" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ggZN0T6Ee2_n5XNBGdaxw" name="Program" visibility="package" method="_2jXf8ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ggZO0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ggZPET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ggZOET6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ggZOUT6Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ggZOkT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ggZPUT6Ee2_n5XNBGdaxw" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ghAQET6Ee2_n5XNBGdaxw" name="buildProgram" method="_2jXf_ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ghAQUT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ghnUET6Ee2_n5XNBGdaxw" name="setScheduleSelected" visibility="private" method="_2jYuIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ghnUUT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_-HiZoEc3Ee2VGuPmUBocQA" name="Program" visibility="package" method="_-H-egEc3Ee2VGuPmUBocQA">
                <eAnnotations xmi:id="_-HjAtUc3Ee2VGuPmUBocQA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_-HjAtkc3Ee2VGuPmUBocQA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_-HiZoUc3Ee2VGuPmUBocQA" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HjAsEc3Ee2VGuPmUBocQA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-HjAsUc3Ee2VGuPmUBocQA" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HjAskc3Ee2VGuPmUBocQA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-HjAs0c3Ee2VGuPmUBocQA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-HjAtEc3Ee2VGuPmUBocQA" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HNIYET6Ee2_n5XNBGdaxw" name="ProgramSchedule">
              <generalization xmi:id="_2eY5UET6Ee2_n5XNBGdaxw" general="_2IGgQET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h9KsET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h9KsUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jajQET6Ee2_n5XNBGdaxw" name="ProgramSchedule" specification="_2HNvcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jajQUT6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jajQkT6Ee2_n5XNBGdaxw" name="ProgramSchedule" specification="_2HOWgUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jajQ0T6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jajRET6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jajRUT6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2HNvcET6Ee2_n5XNBGdaxw" name="ProgramSchedule" method="_2jajQET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2HNvcUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2HNvckT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2HOWgET6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HOWgUT6Ee2_n5XNBGdaxw" name="ProgramSchedule" visibility="package" method="_2jajQkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2HO9kET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2HO9kUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2HOWgkT6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2HOWg0T6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2HO9kkT6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HPkoET6Ee2_n5XNBGdaxw" name="ProgramVisualization">
              <ownedComment xmi:id="_-pU4HUc3Ee2VGuPmUBocQA">
                <body>&lt;h1>Implementation of Program Visualization.&lt;/h1>&#xD;
&lt;p>The ProgramVisualization class allows a warp Interface to be converted to program and visualized.&lt;/p>&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.2</body>
              </ownedComment>
              <generalization xmi:id="_2eaug0T6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h9xwET6Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h9xwUT6Ee2_n5XNBGdaxw" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2h9xwkT6Ee2_n5XNBGdaxw" name="sourceCode" visibility="private" type="_2HNIYET6Ee2_n5XNBGdaxw" association="_2k2Go0T6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h-Y0UT6Ee2_n5XNBGdaxw" name="program" visibility="private" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2k2tsUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h-Y00T6Ee2_n5XNBGdaxw" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jajRkT6Ee2_n5XNBGdaxw" name="ProgramVisualization" specification="_2eaHcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jajR0T6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jajSET6Ee2_n5XNBGdaxw" type="_2HPkoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jajSUT6Ee2_n5XNBGdaxw" name="visualization" specification="_2HQLsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jajSkT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
&#xD;
 /* create schedule output header of column node names in order, with \t as separator */&#xD;
 String nodeString = &quot;Time Slot\t&quot;;&#xD;
 /* loop through the node names, stopping just before last name */&#xD;
 for (int i = 0; i &lt; orderedNodes.length - 1; i++) {&#xD;
   /* add each name to the string, with \t between each name */&#xD;
   nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);&#xD;
 }&#xD;
 /* add the last name with \n instead of \t at the end */&#xD;
 nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length - 1]);&#xD;
 content.add(nodeString);&#xD;
&#xD;
 for (int rowIndex = 0; rowIndex &lt; sourceCode.size(); rowIndex++) {&#xD;
   ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);&#xD;
   var row = rowArrayList.toArray(new String[rowArrayList.size()]);&#xD;
   String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
   content.add(rowString);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbKUET6Ee2_n5XNBGdaxw" name="createHeader" specification="_2HQyw0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbKUUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(String.format(&quot;WARP system for graph %s created with the following parameters:\n&quot;,&#xD;
     program.getName()));&#xD;
 header.add(String.format(&quot;Scheduler Name:\t%s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
   header.add(String.format(&quot;nTransmissions:\t%d\n&quot;, program.getNumTransmissions()));&#xD;
 } else if (program.getNumFaults() > 0) {&#xD;
   header.add(String.format(&quot;numFaults:\t%d\n&quot;, program.getNumFaults()));&#xD;
 } else {&#xD;
   header.add(String.format(&quot;M:\t%s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
   header.add(String.format(&quot;E2E:\t%s\n&quot;, String.valueOf(program.getE2e())));&#xD;
   header.add(String.format(&quot;nChannels:\t%d\n&quot;, program.getNumChannels()));&#xD;
 }&#xD;
 if (!program.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
   header.add(&quot;Optimization Requested:\tFalse\n&quot;);&#xD;
 }&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbKUkT6Ee2_n5XNBGdaxw" name="createFooter" specification="_2HSA4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbKU0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2HQLsET6Ee2_n5XNBGdaxw" name="visualization" method="_2jajSUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eaugET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HQyw0T6Ee2_n5XNBGdaxw" name="createHeader" method="_2jbKUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eaugUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HSA4ET6Ee2_n5XNBGdaxw" name="createFooter" method="_2jbKUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eaugkT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eaHcET6Ee2_n5XNBGdaxw" name="ProgramVisualization" visibility="package" method="_2jajRkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2eaHckT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2eaHc0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pU4Hkc3Ee2VGuPmUBocQA">
                  <body>Constructor converts WarpInterface to Program for visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to convert to program for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eaHcUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eaHdET6Ee2_n5XNBGdaxw" type="_2HPkoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HT2EET6Ee2_n5XNBGdaxw" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_2gkDkET6Ee2_n5XNBGdaxw" client="_2HT2EET6Ee2_n5XNBGdaxw" supplier="_2dbQAET6Ee2_n5XNBGdaxw" contract="_2dbQAET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbKVET6Ee2_n5XNBGdaxw" name="compare" specification="_2gkqoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbKVUT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jbKVkT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jbKV0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2gkqoET6Ee2_n5XNBGdaxw" name="compare" method="_2jbKVET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gkqoUT6Ee2_n5XNBGdaxw" name="obj1" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gkqokT6Ee2_n5XNBGdaxw" name="obj2" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gkqo0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HVrQET6Ee2_n5XNBGdaxw" name="ReleaseTimeQueue">
              <generalization xmi:id="_2HYHgET6Ee2_n5XNBGdaxw" general="_2HXgcET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h-_4UT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h_m8ET6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbKWET6Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" specification="_2HW5YET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbKWUT6Ee2_n5XNBGdaxw" type="_2HVrQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbKWkT6Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" specification="_2eb8oET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbKW0T6Ee2_n5XNBGdaxw" name="schedulableObjects" type="_2d-poET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jbKXET6Ee2_n5XNBGdaxw" type="_2HVrQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2HW5YET6Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" visibility="package" method="_2jbKWET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2HW5YUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2HW5YkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2HW5Y0T6Ee2_n5XNBGdaxw" type="_2HVrQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eb8oET6Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" visibility="package" method="_2jbKWkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2eb8okT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2eb8o0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2eb8oUT6Ee2_n5XNBGdaxw" name="schedulableObjects" type="_2d-poET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eb8pET6Ee2_n5XNBGdaxw" type="_2HVrQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HYukET6Ee2_n5XNBGdaxw" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_-pVfIEc3Ee2VGuPmUBocQA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in WarpTester.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbKXUT6Ee2_n5XNBGdaxw" name="ReliabilityAnalysis" specification="_2ecjsUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbKXkT6Ee2_n5XNBGdaxw" name="program" type="_2G0G0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jbKX0T6Ee2_n5XNBGdaxw" type="_2HYukET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbxYET6Ee2_n5XNBGdaxw" name="verifyReliabilities" specification="_2HZVoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbxYUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2HZVoET6Ee2_n5XNBGdaxw" name="verifyReliabilities" method="_2jbxYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2HZVoUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2ecjsUT6Ee2_n5XNBGdaxw" name="ReliabilityAnalysis" method="_2jbKXUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ecjs0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ecjtET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ecjskT6Ee2_n5XNBGdaxw" name="program" type="_2G0G0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ecjtUT6Ee2_n5XNBGdaxw" type="_2HYukET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_2HZ8sET6Ee2_n5XNBGdaxw" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_-pVfIUc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2HajwET6Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_2ghnUkT6Ee2_n5XNBGdaxw" isReadOnly="true"/>
              <ownedAttribute xmi:id="_2HbK0ET6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Hbx4ET6Ee2_n5XNBGdaxw" name="ReliabilityRow">
              <generalization xmi:id="_2edKwET6Ee2_n5XNBGdaxw" general="_2HkUwET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2h_m8UT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2h_m8kT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbxYkT6Ee2_n5XNBGdaxw" name="ReliabilityRow" specification="_2Hbx4UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbxY0T6Ee2_n5XNBGdaxw" type="_2Hbx4ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbxZET6Ee2_n5XNBGdaxw" name="ReliabilityRow" specification="_2glRsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbxZUT6Ee2_n5XNBGdaxw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jbxZkT6Ee2_n5XNBGdaxw" name="element" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jbxZ0T6Ee2_n5XNBGdaxw" type="_2Hbx4ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbxaET6Ee2_n5XNBGdaxw" name="ReliabilityRow" specification="_2gl4w0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbxaUT6Ee2_n5XNBGdaxw" name="rowArray" type="_2ghnUkT6Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jbxakT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jbxa0T6Ee2_n5XNBGdaxw" type="_2Hbx4ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Hbx4UT6Ee2_n5XNBGdaxw" name="ReliabilityRow" method="_2jbxYkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2HcY8ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2HcY8UT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2HcY8kT6Ee2_n5XNBGdaxw" type="_2Hbx4ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2glRsET6Ee2_n5XNBGdaxw" name="ReliabilityRow" visibility="package" method="_2jbxZET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gl4wET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gl4wUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2glRsUT6Ee2_n5XNBGdaxw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2glRskT6Ee2_n5XNBGdaxw" name="element" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gl4wkT6Ee2_n5XNBGdaxw" type="_2Hbx4ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gl4w0T6Ee2_n5XNBGdaxw" name="ReliabilityRow" visibility="package" method="_2jbxaET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gl4xUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gl4xkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2gl4xET6Ee2_n5XNBGdaxw" name="rowArray" type="_2ghnUkT6Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2gl4yET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gl4x0T6Ee2_n5XNBGdaxw" type="_2Hbx4ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HdnEET6Ee2_n5XNBGdaxw" name="ReliabilityTable">
              <generalization xmi:id="_2eeY4ET6Ee2_n5XNBGdaxw" general="_2IGgQET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iAOAET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iAOAUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbxbET6Ee2_n5XNBGdaxw" name="ReliabilityTable" specification="_2HeOIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbxbUT6Ee2_n5XNBGdaxw" type="_2HdnEET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jbxbkT6Ee2_n5XNBGdaxw" name="ReliabilityTable" specification="_2He1MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jbxb0T6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jbxcET6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jbxcUT6Ee2_n5XNBGdaxw" type="_2HdnEET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2HeOIET6Ee2_n5XNBGdaxw" name="ReliabilityTable" method="_2jbxbET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2HeOIUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2HeOIkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2HeOI0T6Ee2_n5XNBGdaxw" type="_2HdnEET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2He1MET6Ee2_n5XNBGdaxw" name="ReliabilityTable" visibility="package" method="_2jbxbkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2He1M0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2He1NET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2He1MUT6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2He1MkT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2He1NUT6Ee2_n5XNBGdaxw" type="_2HdnEET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HfcQET6Ee2_n5XNBGdaxw" name="ReliabilityVisualization">
              <ownedComment xmi:id="_-pVfIkc3Ee2VGuPmUBocQA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to create&#xD;
the file visualization that is requested in WarpTester.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2egOE0T6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iA1EET6Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iA1EUT6Ee2_n5XNBGdaxw" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iA1EkT6Ee2_n5XNBGdaxw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iA1E0T6Ee2_n5XNBGdaxw" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iA1FET6Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_2IoEsET6Ee2_n5XNBGdaxw" association="_2k2ttET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iBcIUT6Ee2_n5XNBGdaxw" name="ra" visibility="private" type="_2HYukET6Ee2_n5XNBGdaxw" association="_2k3UwUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jcYcET6Ee2_n5XNBGdaxw" name="ReliabilityVisualization" specification="_2efnAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jcYcUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jcYckT6Ee2_n5XNBGdaxw" type="_2HfcQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2efnAET6Ee2_n5XNBGdaxw" name="ReliabilityVisualization" visibility="package" method="_2jcYcET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2egOEET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2egOEUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2efnAUT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2egOEkT6Ee2_n5XNBGdaxw" type="_2HfcQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HhRcET6Ee2_n5XNBGdaxw" name="ReportVisualization">
              <generalization xmi:id="_2ehcOUT6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iCDMET6Ee2_n5XNBGdaxw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iCDMUT6Ee2_n5XNBGdaxw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iCDMkT6Ee2_n5XNBGdaxw" name="content" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2k370UT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iCDNET6Ee2_n5XNBGdaxw" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jcYc0T6Ee2_n5XNBGdaxw" name="ReportVisualization" specification="_2eg1IET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jcYdET6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jcYdUT6Ee2_n5XNBGdaxw" name="warp" type="_2H_ykET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jcYdkT6Ee2_n5XNBGdaxw" name="content" type="_2FOycET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jcYd0T6Ee2_n5XNBGdaxw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jcYeET6Ee2_n5XNBGdaxw" type="_2HhRcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jcYeUT6Ee2_n5XNBGdaxw" name="visualization" specification="_2Hh4gET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jcYekT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jcYe0T6Ee2_n5XNBGdaxw" name="createReport" specification="_2Hifk0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jcYfET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Hh4gET6Ee2_n5XNBGdaxw" name="visualization" method="_2jcYeUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ehcN0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Hifk0T6Ee2_n5XNBGdaxw" name="createReport" visibility="private" method="_2jcYe0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ehcOET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eg1IET6Ee2_n5XNBGdaxw" name="ReportVisualization" visibility="package" method="_2jcYc0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ehcNET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ehcNUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ehcMET6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ehcMUT6Ee2_n5XNBGdaxw" name="warp" type="_2H_ykET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ehcMkT6Ee2_n5XNBGdaxw" name="content" type="_2FOycET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ehcM0T6Ee2_n5XNBGdaxw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ehcNkT6Ee2_n5XNBGdaxw" type="_2HhRcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HkUwET6Ee2_n5XNBGdaxw" name="Row">
              <generalization xmi:id="_2gnt9kT6Ee2_n5XNBGdaxw" general="_2dEqsET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iCqQUT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iCqQkT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jcYfUT6Ee2_n5XNBGdaxw" name="Row" specification="_2Hli4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jcYfkT6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jcYf0T6Ee2_n5XNBGdaxw" name="Row" specification="_2gnG4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jcYgET6Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jcYgUT6Ee2_n5XNBGdaxw" name="element" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jcYgkT6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jc_gET6Ee2_n5XNBGdaxw" name="Row" specification="_2gnt8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jc_gUT6Ee2_n5XNBGdaxw" name="rowArray" type="_2gDGMUT6Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jc_gkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jc_g0T6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jc_hET6Ee2_n5XNBGdaxw" name="Row" specification="_2HmJ8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jc_hUT6Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jc_hkT6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Hli4ET6Ee2_n5XNBGdaxw" name="Row" method="_2jcYfUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2Hli4UT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2Hli4kT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2Hli40T6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HmJ8ET6Ee2_n5XNBGdaxw" name="Row" visibility="package" method="_2jc_hET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2HmxAUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2HmxAkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2HmxAET6Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2HmxA0T6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gnG4ET6Ee2_n5XNBGdaxw" name="Row" visibility="package" method="_2jcYf0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gnG40T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gnG5ET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2gnG4UT6Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gnG4kT6Ee2_n5XNBGdaxw" name="element" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gnG5UT6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gnt8ET6Ee2_n5XNBGdaxw" name="Row" visibility="package" method="_2jc_gET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gnt8kT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gnt80T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2gnt8UT6Ee2_n5XNBGdaxw" name="rowArray" type="_2gDGMUT6Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2gnt9UT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gnt9ET6Ee2_n5XNBGdaxw" type="_2HkUwET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Hn_IET6Ee2_n5XNBGdaxw" name="SchedulableObjectQueue">
              <generalization xmi:id="_2Hp0UET6Ee2_n5XNBGdaxw" general="_2HXgcET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iCqQ0T6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iCqRET6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jc_h0T6Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" specification="_2go8EET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jc_iET6Ee2_n5XNBGdaxw" name="comparitor" type="_2dbQAET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jc_iUT6Ee2_n5XNBGdaxw" type="_2Hn_IET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jc_ikT6Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" specification="_2gpjIUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jc_i0T6Ee2_n5XNBGdaxw" name="comparitor" type="_2dbQAET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jc_jET6Ee2_n5XNBGdaxw" name="schedulableObjects" type="_2d-poET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jc_jUT6Ee2_n5XNBGdaxw" type="_2Hn_IET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2go8EET6Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" visibility="package" method="_2jc_h0T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2go8EkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2go8E0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2go8EUT6Ee2_n5XNBGdaxw" name="comparitor" type="_2dbQAET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2go8FET6Ee2_n5XNBGdaxw" type="_2Hn_IET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gpjIUT6Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" visibility="package" method="_2jc_ikT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gqKMET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gqKMUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2gpjIkT6Ee2_n5XNBGdaxw" name="comparitor" type="_2dbQAET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gpjI0T6Ee2_n5XNBGdaxw" name="schedulableObjects" type="_2d-poET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gqKMkT6Ee2_n5XNBGdaxw" type="_2Hn_IET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2HrpgET6Ee2_n5XNBGdaxw" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_-pVfJEc3Ee2VGuPmUBocQA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2iDRUET6Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iDRUUT6Ee2_n5XNBGdaxw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iDRUkT6Ee2_n5XNBGdaxw" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iDRVET6Ee2_n5XNBGdaxw" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iD4YUT6Ee2_n5XNBGdaxw" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iD4YkT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iD4ZET6Ee2_n5XNBGdaxw" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iEfcUT6Ee2_n5XNBGdaxw" name="schedule" visibility="protected" type="_2H4d0ET6Ee2_n5XNBGdaxw" association="_2k371ET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iFGgET6Ee2_n5XNBGdaxw" name="poset" visibility="protected" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2k4i4UT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jc_jkT6Ee2_n5XNBGdaxw" name="Schedule" specification="_2ej4cET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jc_j0T6Ee2_n5XNBGdaxw" name="poset" type="_2GevoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jc_kET6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jc_kUT6Ee2_n5XNBGdaxw" type="_2HrpgET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmmkT6Ee2_n5XNBGdaxw" name="getSchedule" specification="_2HvT4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jdmm0T6Ee2_n5XNBGdaxw" type="_2H4d0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmnET6Ee2_n5XNBGdaxw" name="buildSchedule" specification="_2HvT4UT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmnUT6Ee2_n5XNBGdaxw" name="toProgram" specification="_2Hv68ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jdmnkT6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmn0T6Ee2_n5XNBGdaxw" name="replaceNullWithSleep" specification="_2ekfgUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jdmoET6Ee2_n5XNBGdaxw" name="program" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNoET6Ee2_n5XNBGdaxw" name="fakeSchedulingToTestRest" specification="_2ekfg0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNoUT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNokT6Ee2_n5XNBGdaxw" name="getChannelAndSetStartTime" specification="_2ekfhUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNo0T6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jeNpET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNpUT6Ee2_n5XNBGdaxw" name="findChannelAndTime" specification="_2elGkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNpkT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNp0T6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jeNqET6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNqUT6Ee2_n5XNBGdaxw" name="continueSearch" specification="_2elGlkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNqkT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNq0T6Ee2_n5XNBGdaxw" name="activation" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jeNrET6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNrUT6Ee2_n5XNBGdaxw" name="noOtherChannelConflicts" specification="_2elto0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNrkT6Ee2_n5XNBGdaxw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNr0T6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jeNsET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNsUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNskT6Ee2_n5XNBGdaxw" name="conflictsExist" specification="_2eltqET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNs0T6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jeNtET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNtUT6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNtkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jeNt0T6Ee2_n5XNBGdaxw" name="freeOfCoordinatorConflicts" specification="_2emUs0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jeNuET6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jeNuUT6Ee2_n5XNBGdaxw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNukT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNu0T6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jeNvET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2je0sET6Ee2_n5XNBGdaxw" name="isAvailable" specification="_2em7wET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2je0sUT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2je0skT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0s0T6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0tET6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0tUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2je0tkT6Ee2_n5XNBGdaxw" name="isAvailable" specification="_2em7xkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2je0t0T6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2je0uET6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0uUT6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0ukT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2je0u0T6Ee2_n5XNBGdaxw" name="timeRemaining" specification="_2HxwIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2je0vET6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0vUT6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0vkT6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0v0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2je0wET6Ee2_n5XNBGdaxw" name="canCombineEntriesInPlace" specification="_2eni0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2je0wUT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2je0wkT6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2je0w0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2je0xET6Ee2_n5XNBGdaxw" name="combinedEntriesInPlace" specification="_2eni1ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2je0xUT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2je0xkT6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2je0x0T6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2je0yET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jfbwET6Ee2_n5XNBGdaxw" name="addToSchedule" specification="_2eoJ4UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jfbwUT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jfbwkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jfbw0T6Ee2_n5XNBGdaxw" name="reportNotSchedulable" specification="_2eoJ5ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jfbxET6Ee2_n5XNBGdaxw" name="object" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jfbxUT6Ee2_n5XNBGdaxw" name="printVerbose" specification="_2HyXMET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jfbxkT6Ee2_n5XNBGdaxw" name="print" specification="_2HyXMUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2HvT4ET6Ee2_n5XNBGdaxw" name="getSchedule" method="_2jdmmkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfJ0c3Ee2VGuPmUBocQA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_2ej4dkT6Ee2_n5XNBGdaxw" type="_2H4d0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HvT4UT6Ee2_n5XNBGdaxw" name="buildSchedule" visibility="private" method="_2jdmnET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Hv68ET6Ee2_n5XNBGdaxw" name="toProgram" method="_2jdmnUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ekfgET6Ee2_n5XNBGdaxw" type="_2HNIYET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2HxwIET6Ee2_n5XNBGdaxw" name="timeRemaining" visibility="protected" method="_2je0u0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfLUc3Ee2VGuPmUBocQA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_2HxwIUT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2HxwIkT6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2HxwI0T6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2HxwJET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2HyXMET6Ee2_n5XNBGdaxw" name="printVerbose" method="_2jfbxUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2HyXMUT6Ee2_n5XNBGdaxw" name="print" method="_2jfbxkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2ej4cET6Ee2_n5XNBGdaxw" name="Schedule" visibility="package" method="_2jc_jkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ej4c0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ej4dET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ej4cUT6Ee2_n5XNBGdaxw" name="poset" type="_2GevoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ej4ckT6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ej4dUT6Ee2_n5XNBGdaxw" type="_2HrpgET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ekfgUT6Ee2_n5XNBGdaxw" name="replaceNullWithSleep" visibility="private" method="_2jdmn0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfKEc3Ee2VGuPmUBocQA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_2ekfgkT6Ee2_n5XNBGdaxw" name="program" type="_2HNIYET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ekfg0T6Ee2_n5XNBGdaxw" name="fakeSchedulingToTestRest" visibility="private" method="_2jeNoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ekfhET6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ekfhUT6Ee2_n5XNBGdaxw" name="getChannelAndSetStartTime" visibility="protected" method="_2jeNokT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfKUc3Ee2VGuPmUBocQA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_2elGkET6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2elGkUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2elGkkT6Ee2_n5XNBGdaxw" name="findChannelAndTime" visibility="protected" method="_2jeNpUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2elGk0T6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2elGlET6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2elGlUT6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2elGlkT6Ee2_n5XNBGdaxw" name="continueSearch" visibility="protected" method="_2jeNqUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfKkc3Ee2VGuPmUBocQA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_2eltoET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eltoUT6Ee2_n5XNBGdaxw" name="activation" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eltokT6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2elto0T6Ee2_n5XNBGdaxw" name="noOtherChannelConflicts" visibility="protected" method="_2jeNrUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eltpET6Ee2_n5XNBGdaxw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eltpUT6Ee2_n5XNBGdaxw" name="schedulableObject" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eltpkT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eltp0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eltqET6Ee2_n5XNBGdaxw" name="conflictsExist" visibility="protected" method="_2jeNskT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eltqUT6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2emUsET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2emUsUT6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2emUskT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2emUs0T6Ee2_n5XNBGdaxw" name="freeOfCoordinatorConflicts" visibility="protected" method="_2jeNt0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2emUtET6Ee2_n5XNBGdaxw" name="obj" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2emUtUT6Ee2_n5XNBGdaxw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2emUtkT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2emUt0T6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2emUuET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2em7wET6Ee2_n5XNBGdaxw" name="isAvailable" visibility="protected" method="_2je0sET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfK0c3Ee2VGuPmUBocQA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_2em7wUT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2em7wkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2em7w0T6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2em7xET6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2em7xUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2em7xkT6Ee2_n5XNBGdaxw" name="isAvailable" visibility="protected" method="_2je0tkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pVfLEc3Ee2VGuPmUBocQA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_2em7x0T6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2em7yET6Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2em7yUT6Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2em7ykT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eni0ET6Ee2_n5XNBGdaxw" name="canCombineEntriesInPlace" visibility="private" method="_2je0wET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eni0UT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eni0kT6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eni00T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eni1ET6Ee2_n5XNBGdaxw" name="combinedEntriesInPlace" visibility="private" method="_2je0xET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eni1UT6Ee2_n5XNBGdaxw" name="a1" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eni1kT6Ee2_n5XNBGdaxw" name="a2" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eni10T6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eoJ4ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eoJ4UT6Ee2_n5XNBGdaxw" name="addToSchedule" visibility="protected" method="_2jfbwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eoJ4kT6Ee2_n5XNBGdaxw" name="next" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eoJ40T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2eoJ5ET6Ee2_n5XNBGdaxw" name="reportNotSchedulable" visibility="private" method="_2jfbw0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2eoJ5UT6Ee2_n5XNBGdaxw" name="object" type="_2DjXcET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_2HtesET6Ee2_n5XNBGdaxw" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_2iFGgkT6Ee2_n5XNBGdaxw" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2iFtkET6Ee2_n5XNBGdaxw" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmkET6Ee2_n5XNBGdaxw" name="ScheduleLocation" specification="_2HtesUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jdmkUT6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmkkT6Ee2_n5XNBGdaxw" name="ScheduleLocation" specification="_2HuFw0T6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jdmk0T6Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_2jdmlET6Ee2_n5XNBGdaxw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_2jdmlUT6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmlkT6Ee2_n5XNBGdaxw" name="getChannel" specification="_2Hus0UT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jdml0T6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jdmmET6Ee2_n5XNBGdaxw" name="getTime" specification="_2Hus00T6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jdmmUT6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_2HtesUT6Ee2_n5XNBGdaxw" name="ScheduleLocation" visibility="package" method="_2jdmkET6Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_2HuFwET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_2HuFwUT6Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_2HuFwkT6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2HuFw0T6Ee2_n5XNBGdaxw" name="ScheduleLocation" visibility="package" method="_2jdmkkT6Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_2HuFxkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_2HuFx0T6Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_2HuFxET6Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_2HuFxUT6Ee2_n5XNBGdaxw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_2Hus0ET6Ee2_n5XNBGdaxw" type="_2HtesET6Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2Hus0UT6Ee2_n5XNBGdaxw" name="getChannel" visibility="protected" method="_2jdmlkT6Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_-pVfJUc3Ee2VGuPmUBocQA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_2Hus0kT6Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2Hus00T6Ee2_n5XNBGdaxw" name="getTime" visibility="protected" method="_2jdmmET6Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_-pVfJkc3Ee2VGuPmUBocQA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_2Hus1ET6Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2H4d0ET6Ee2_n5XNBGdaxw" name="ScheduleTable">
              <generalization xmi:id="_2ep_EET6Ee2_n5XNBGdaxw" general="_2IGgQET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iGUoET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iGUoUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgC0ET6Ee2_n5XNBGdaxw" name="ScheduleTable" specification="_2H5E4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgC0UT6Ee2_n5XNBGdaxw" type="_2H4d0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgC0kT6Ee2_n5XNBGdaxw" name="ScheduleTable" specification="_2H5r8UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgC00T6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgC1ET6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgC1UT6Ee2_n5XNBGdaxw" type="_2H4d0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2H5E4ET6Ee2_n5XNBGdaxw" name="ScheduleTable" visibility="package" method="_2jgC0ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2H5E4UT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2H5E4kT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2H5r8ET6Ee2_n5XNBGdaxw" type="_2H4d0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2H5r8UT6Ee2_n5XNBGdaxw" name="ScheduleTable" visibility="package" method="_2jgC0kT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2H5r9ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2H6TAET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2H5r8kT6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2H5r80T6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2H6TAUT6Ee2_n5XNBGdaxw" type="_2H4d0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2H6TAkT6Ee2_n5XNBGdaxw" name="ScheduleTime">
              <ownedAttribute xmi:id="_2iG7sET6Ee2_n5XNBGdaxw" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iG7sUT6Ee2_n5XNBGdaxw" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgC1kT6Ee2_n5XNBGdaxw" name="ScheduleTime" specification="_2H66EET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgC10T6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgC2ET6Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgC2UT6Ee2_n5XNBGdaxw" type="_2H6TAkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2H66EET6Ee2_n5XNBGdaxw" name="ScheduleTime" visibility="package" method="_2jgC1kT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2H7hIkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2H7hI0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2H7hIET6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2H7hIUT6Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2H7hJET6Ee2_n5XNBGdaxw" type="_2H6TAkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2H8IMET6Ee2_n5XNBGdaxw" name="SimulatorInput">
              <ownedComment xmi:id="_-pVfLkc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2H8vQET6Ee2_n5XNBGdaxw" name="SortedPeriodQueue">
              <generalization xmi:id="_2H99YUT6Ee2_n5XNBGdaxw" general="_2HXgcET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iG7skT6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iG7s0T6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgC2kT6Ee2_n5XNBGdaxw" name="SortedPeriodQueue" specification="_2H9WUUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgC20T6Ee2_n5XNBGdaxw" type="_2H8vQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgC3ET6Ee2_n5XNBGdaxw" name="SortedPeriodQueue" specification="_2eqmIUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgC3UT6Ee2_n5XNBGdaxw" name="schedulableObjects" type="_2d-poET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jgC3kT6Ee2_n5XNBGdaxw" type="_2H8vQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2H9WUUT6Ee2_n5XNBGdaxw" name="SortedPeriodQueue" visibility="package" method="_2jgC2kT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2H9WUkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2H9WU0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2H99YET6Ee2_n5XNBGdaxw" type="_2H8vQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eqmIUT6Ee2_n5XNBGdaxw" name="SortedPeriodQueue" visibility="package" method="_2jgC3ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2erNMET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2erNMUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2eqmIkT6Ee2_n5XNBGdaxw" name="schedulableObjects" type="_2d-poET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2erNMkT6Ee2_n5XNBGdaxw" type="_2H8vQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_2H_ykET6Ee2_n5XNBGdaxw" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_2er0QET6Ee2_n5XNBGdaxw" general="_2HZ8sET6Ee2_n5XNBGdaxw"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_2IAZoET6Ee2_n5XNBGdaxw" name="ScheduleChoices">
                <ownedLiteral xmi:id="_2IBAsET6Ee2_n5XNBGdaxw" name="PRIORITY"/>
                <ownedLiteral xmi:id="_2IBAsUT6Ee2_n5XNBGdaxw" name="RM"/>
                <ownedLiteral xmi:id="_2IBAskT6Ee2_n5XNBGdaxw" name="DM"/>
                <ownedLiteral xmi:id="_2IBnwET6Ee2_n5XNBGdaxw" name="RTHART"/>
                <ownedLiteral xmi:id="_2IBnwUT6Ee2_n5XNBGdaxw" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_2IBnwkT6Ee2_n5XNBGdaxw" name="POSET_RM"/>
                <ownedLiteral xmi:id="_2IBnw0T6Ee2_n5XNBGdaxw" name="POSET_DM"/>
                <ownedLiteral xmi:id="_2ICO0ET6Ee2_n5XNBGdaxw" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_2ICO0UT6Ee2_n5XNBGdaxw" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_2ICO0kT6Ee2_n5XNBGdaxw" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_2ICO00T6Ee2_n5XNBGdaxw" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_2ICO1ET6Ee2_n5XNBGdaxw" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_2IC14ET6Ee2_n5XNBGdaxw" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_2IC14UT6Ee2_n5XNBGdaxw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2IDc8ET6Ee2_n5XNBGdaxw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2IDc8UT6Ee2_n5XNBGdaxw" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2IDc8kT6Ee2_n5XNBGdaxw" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2IEEAET6Ee2_n5XNBGdaxw" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2IEEAUT6Ee2_n5XNBGdaxw" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IErEET6Ee2_n5XNBGdaxw" name="SystemFactory">
              <ownedComment xmi:id="_-pVfL0c3Ee2VGuPmUBocQA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-IA6wEc3Ee2VGuPmUBocQA" name="create" specification="_-HmrEEc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-IA6wUc3Ee2VGuPmUBocQA" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-IA6wkc3Ee2VGuPmUBocQA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-IA6w0c3Ee2VGuPmUBocQA" name="choice" type="_2er0QUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-IA6xEc3Ee2VGuPmUBocQA" type="_2IoEsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_-HmrEEc3Ee2VGuPmUBocQA" name="create" isStatic="true" method="_-IA6wEc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-HmrEUc3Ee2VGuPmUBocQA" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HmrEkc3Ee2VGuPmUBocQA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-HmrE0c3Ee2VGuPmUBocQA" name="choice" type="_2er0QUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HmrFEc3Ee2VGuPmUBocQA" type="_2IoEsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IGgQET6Ee2_n5XNBGdaxw" name="Table">
              <generalization xmi:id="_2gsmcUT6Ee2_n5XNBGdaxw" general="_2dEqsET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iHiwET6Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iHiwUT6Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgp5UT6Ee2_n5XNBGdaxw" name="Table" specification="_2IHuYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgp5kT6Ee2_n5XNBGdaxw" type="_2IGgQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgp50T6Ee2_n5XNBGdaxw" name="Table" specification="_2IIVcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgp6ET6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgp6UT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgp6kT6Ee2_n5XNBGdaxw" type="_2IGgQET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgp60T6Ee2_n5XNBGdaxw" name="getNumRows" specification="_2II8gET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgp7ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgp7UT6Ee2_n5XNBGdaxw" name="getNumColumns" specification="_2II8gkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgp7kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgp70T6Ee2_n5XNBGdaxw" name="set" specification="_2gr_YET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgp8ET6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgp8UT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgp8kT6Ee2_n5XNBGdaxw" name="element" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jgp80T6Ee2_n5XNBGdaxw" name="get" specification="_2IKKoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jgp9ET6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgp9UT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jgp9kT6Ee2_n5XNBGdaxw" type="_2gDGMUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2IHuYET6Ee2_n5XNBGdaxw" name="Table" method="_2jgp5UT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2IHuYUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2IHuYkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2IHuY0T6Ee2_n5XNBGdaxw" type="_2IGgQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IIVcET6Ee2_n5XNBGdaxw" name="Table" method="_2jgp50T6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2IIVc0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2IIVdET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2IIVcUT6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IIVckT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IIVdUT6Ee2_n5XNBGdaxw" type="_2IGgQET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2II8gET6Ee2_n5XNBGdaxw" name="getNumRows" method="_2jgp60T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2II8gUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2II8gkT6Ee2_n5XNBGdaxw" name="getNumColumns" method="_2jgp7UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2II8g0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2IKKoET6Ee2_n5XNBGdaxw" name="get" method="_2jgp80T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2IKKoUT6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IKKokT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gsmcET6Ee2_n5XNBGdaxw" type="_2gDGMUT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gr_YET6Ee2_n5XNBGdaxw" name="set" method="_2jgp70T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gr_YUT6Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gr_YkT6Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gr_Y0T6Ee2_n5XNBGdaxw" name="element" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_2IL_0ET6Ee2_n5XNBGdaxw" name="Visualization">
              <ownedComment xmi:id="_-pVfMEc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_2IMm4ET6Ee2_n5XNBGdaxw" name="SystemChoices">
                <ownedLiteral xmi:id="_2INN8ET6Ee2_n5XNBGdaxw" name="SOURCE"/>
                <ownedLiteral xmi:id="_2INN8UT6Ee2_n5XNBGdaxw" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_2INN8kT6Ee2_n5XNBGdaxw" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_2INN80T6Ee2_n5XNBGdaxw" name="LATENCY"/>
                <ownedLiteral xmi:id="_2INN9ET6Ee2_n5XNBGdaxw" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_2INN9UT6Ee2_n5XNBGdaxw" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_2INN9kT6Ee2_n5XNBGdaxw" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_2IN1AET6Ee2_n5XNBGdaxw" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_2IN1AkT6Ee2_n5XNBGdaxw" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_2IOcEET6Ee2_n5XNBGdaxw" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_2IOcEUT6Ee2_n5XNBGdaxw" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_2IOcEkT6Ee2_n5XNBGdaxw" name="toDisplay"/>
              <ownedOperation xmi:id="_2IOcE0T6Ee2_n5XNBGdaxw" name="toFile"/>
              <ownedOperation xmi:id="_2IPDIET6Ee2_n5XNBGdaxw" name="toString">
                <ownedParameter xmi:id="_2IPDIUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IPDIkT6Ee2_n5XNBGdaxw" name="VisualizationFactory">
              <ownedComment xmi:id="_-pVfMUc3Ee2VGuPmUBocQA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-IA6xUc3Ee2VGuPmUBocQA" name="createProgramVisualization" specification="_-HnSIEc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-IA6xkc3Ee2VGuPmUBocQA" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-IA6x0c3Ee2VGuPmUBocQA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-IA6yEc3Ee2VGuPmUBocQA" name="choice" type="_2etpcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-IA6yUc3Ee2VGuPmUBocQA" type="_2IL_0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-IA6ykc3Ee2VGuPmUBocQA" name="createWorkLoadVisualization" specification="_-HnSJUc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-IA6y0c3Ee2VGuPmUBocQA" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-IA6zEc3Ee2VGuPmUBocQA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-IA6zUc3Ee2VGuPmUBocQA" name="choice" type="_2euQgUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-IA6zkc3Ee2VGuPmUBocQA" type="_2IL_0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_-HnSIEc3Ee2VGuPmUBocQA" name="createProgramVisualization" isStatic="true" method="_-IA6xUc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-HnSIUc3Ee2VGuPmUBocQA" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HnSIkc3Ee2VGuPmUBocQA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-HnSI0c3Ee2VGuPmUBocQA" name="choice" type="_2etpcET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HnSJEc3Ee2VGuPmUBocQA" type="_2IL_0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_-HnSJUc3Ee2VGuPmUBocQA" name="createWorkLoadVisualization" isStatic="true" method="_-IA6ykc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-HnSJkc3Ee2VGuPmUBocQA" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HnSJ0c3Ee2VGuPmUBocQA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_-HnSKEc3Ee2VGuPmUBocQA" name="choice" type="_2euQgUT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-HnSKUc3Ee2VGuPmUBocQA" type="_2IL_0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IQ4UET6Ee2_n5XNBGdaxw" name="VisualizationImplementation">
              <ownedComment xmi:id="_-pWGMEc3Ee2VGuPmUBocQA">
                <body>&lt;h1>Implementation of the Visualization Interface.&lt;/h1>&#xD;
&lt;p>The VisualizationImplementation class allows the user to request visualizations of various aspects of the given file content in Description object.&#xD;
Methods to print Workload Descriptions to the console, write to a file, and create string are defined.&#xD;
Visualizations are created based on system choices of SOURCE, RELIABILITIES, SIMULATOR_INPUT, LATENCY, LATENCY_REPORT, &#xD;
DEADLINE_REPORT, and CHANNEL. Workload choices include INPUT_GRAPH, COMUNICATION_GRAPH, GRAPHVIZ.&lt;/p>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2iIJ0ET6Ee2_n5XNBGdaxw" name="visualization" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2k4i5ET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iIw4UT6Ee2_n5XNBGdaxw" name="fileContent" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2k5J8UT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iIw40T6Ee2_n5XNBGdaxw" name="displayContent" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2k5xAUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iJX8UT6Ee2_n5XNBGdaxw" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iJX80T6Ee2_n5XNBGdaxw" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iJ_AUT6Ee2_n5XNBGdaxw" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iJ_A0T6Ee2_n5XNBGdaxw" name="fm" visibility="private" type="_2FcN0ET6Ee2_n5XNBGdaxw" association="_2k5xBET6Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iKmEET6Ee2_n5XNBGdaxw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iKmEkT6Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_2IoEsET6Ee2_n5XNBGdaxw" association="_2k5xB0T6Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iKmE0T6Ee2_n5XNBGdaxw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iLNIUT6Ee2_n5XNBGdaxw" name="workLoad" visibility="private" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2k5xCkT6Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iLNIkT6Ee2_n5XNBGdaxw" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_2evepUT6Ee2_n5XNBGdaxw" client="_2IQ4UET6Ee2_n5XNBGdaxw" supplier="_2IL_0ET6Ee2_n5XNBGdaxw" contract="_2IL_0ET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jhQ-kT6Ee2_n5XNBGdaxw" name="VisualizationImplementation" specification="_2gtNgkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jhQ-0T6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jhQ_ET6Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jhQ_UT6Ee2_n5XNBGdaxw" name="choice" type="_2gtNgET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jhQ_kT6Ee2_n5XNBGdaxw" type="_2IQ4UET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4AET6Ee2_n5XNBGdaxw" name="VisualizationImplementation" specification="_2gt0lUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jh4AUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jh4AkT6Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jh4A0T6Ee2_n5XNBGdaxw" name="choice" type="_2gt0k0T6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jh4BET6Ee2_n5XNBGdaxw" type="_2IQ4UET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4BUT6Ee2_n5XNBGdaxw" name="toDisplay" specification="_2ISGcET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.println(displayContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4BkT6Ee2_n5XNBGdaxw" name="toFile" specification="_2IStg0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4B0T6Ee2_n5XNBGdaxw" name="toString" specification="_2ITUkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jh4CET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4CUT6Ee2_n5XNBGdaxw" name="createVisualization" specification="_2gubokT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jh4CkT6Ee2_n5XNBGdaxw" name="choice" type="_2gtNgET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4C0T6Ee2_n5XNBGdaxw" name="createVisualization" specification="_2gubpET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jh4DET6Ee2_n5XNBGdaxw" name="choice" type="_2gt0k0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4DUT6Ee2_n5XNBGdaxw" name="createVisualization" specification="_2gubpkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jh4DkT6Ee2_n5XNBGdaxw" name="obj" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 displayContent = obj.displayVisualization();&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jh4D0T6Ee2_n5XNBGdaxw" name="createFileNameTemplate" specification="_2IT7oET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jh4EET6Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jh4EUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2ISGcET6Ee2_n5XNBGdaxw" name="toDisplay" method="_2jh4BUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2IStg0T6Ee2_n5XNBGdaxw" name="toFile" method="_2jh4BkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2ITUkkT6Ee2_n5XNBGdaxw" name="toString" method="_2jh4B0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ITUk0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2IT7oET6Ee2_n5XNBGdaxw" name="createFileNameTemplate" visibility="private" method="_2jh4D0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGNUc3Ee2VGuPmUBocQA">
                  <body>Creates the fileNameTemplate using the full output path and input filename.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param outputDirectory The output used to create a new directory.&#xD;
   * @return fileNameTemplate, a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_2IT7oUT6Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IT7okT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2gtNgkT6Ee2_n5XNBGdaxw" name="VisualizationImplementation" method="_2jhQ-kT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gt0kET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gt0kUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pWGMUc3Ee2VGuPmUBocQA">
                  <body>The first constructor method sets up the inputFileName and fileNameTemplate based on the WarpInterface&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The interface to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gtNg0T6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gtNhET6Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gtNhUT6Ee2_n5XNBGdaxw" name="choice" type="_2gtNgET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gt0kkT6Ee2_n5XNBGdaxw" type="_2IQ4UET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gt0lUT6Ee2_n5XNBGdaxw" name="VisualizationImplementation" method="_2jh4AET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gt0mUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2guboET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pWGMkc3Ee2VGuPmUBocQA">
                  <body>The second constructor method sets up the inputFileName and fileNameTemplate based on the Workload&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The work load to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The work load visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gt0lkT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gt0l0T6Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gt0mET6Ee2_n5XNBGdaxw" name="choice" type="_2gt0k0T6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2guboUT6Ee2_n5XNBGdaxw" type="_2IQ4UET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gubokT6Ee2_n5XNBGdaxw" name="createVisualization" visibility="private" method="_2jh4CUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGM0c3Ee2VGuPmUBocQA">
                  <body>Given the SystemChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gubo0T6Ee2_n5XNBGdaxw" name="choice" type="_2gtNgET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gubpET6Ee2_n5XNBGdaxw" name="createVisualization" visibility="private" method="_2jh4C0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGNEc3Ee2VGuPmUBocQA">
                  <body>Given the WorkLoadChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The work load visualization selected.</body>
                </ownedComment>
                <ownedParameter xmi:id="_2gubpUT6Ee2_n5XNBGdaxw" name="choice" type="_2gt0k0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gubpkT6Ee2_n5XNBGdaxw" name="createVisualization" visibility="private" method="_2jh4DUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gvCsET6Ee2_n5XNBGdaxw" name="obj" type="_2gDGMUT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IXmAET6Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_-pWGNkc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2iL0MET6Ee2_n5XNBGdaxw" name="fm" visibility="private" type="_2FcN0ET6Ee2_n5XNBGdaxw" association="_2k6YEUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iL0MkT6Ee2_n5XNBGdaxw" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iMbQUT6Ee2_n5XNBGdaxw" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iMbQ0T6Ee2_n5XNBGdaxw" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iNCUET6Ee2_n5XNBGdaxw" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jifEET6Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_2ex64ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jifEUT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifEkT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifE0T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jifFET6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); &#xD;
		this.suffix = suffix; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jifFUT6Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_2eyh8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jifFkT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifF0T6Ee2_n5XNBGdaxw" name="warp" type="_2H_ykET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifGET6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jifGUT6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()); &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()); &#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jifGkT6Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_2ezJAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jifG0T6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifHET6Ee2_n5XNBGdaxw" name="warp" type="_2H_ykET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifHUT6Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jifHkT6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jifH0T6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()) + nameExtension; &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()) + nameExtension; &#xD;
		}&#xD;
		&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jifIET6Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_2ezwEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jifIUT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jifIkT6Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jifI0T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jifJET6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension; &#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGIET6Ee2_n5XNBGdaxw" name="nameExtension" specification="_2gvpwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGIUT6Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jjGIkT6Ee2_n5XNBGdaxw" name="m" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jjGI0T6Ee2_n5XNBGdaxw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jjGJET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,&#xD;
				schName,&#xD;
				String.valueOf(m),&#xD;
				String.valueOf(e2e)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGJUT6Ee2_n5XNBGdaxw" name="nameExtension" specification="_2IZbMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGJkT6Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jjGJ0T6Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jjGKET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,&#xD;
				schName,&#xD;
				String.valueOf(numFaults)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGKUT6Ee2_n5XNBGdaxw" name="getFileManager" specification="_2IaCQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGKkT6Ee2_n5XNBGdaxw" type="_2FcN0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGK0T6Ee2_n5XNBGdaxw" name="visualization" specification="_2IaCQUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGLET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		content.add(NOT_IMPLEMENTED);&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGLUT6Ee2_n5XNBGdaxw" name="createFile" specification="_2IapUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGLkT6Ee2_n5XNBGdaxw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jjGL0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGMET6Ee2_n5XNBGdaxw" name="fileVisualization" specification="_2IbQYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGMUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 	fileContent.addAll(visualization());&#xD;
 	fileContent.addAll(createFooter());&#xD;
 	return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjGMkT6Ee2_n5XNBGdaxw" name="displayVisualization" specification="_2IbQYUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjGM0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjtMET6Ee2_n5XNBGdaxw" name="createHeader" specification="_2IbQYkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjtMUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjtMkT6Ee2_n5XNBGdaxw" name="createFooter" specification="_2Ib3cET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjtM0T6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2IZbMET6Ee2_n5XNBGdaxw" name="nameExtension" visibility="private" method="_2jjGJUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2IZbMUT6Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IZbMkT6Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IZbM0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2IaCQET6Ee2_n5XNBGdaxw" name="getFileManager" method="_2jjGKUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGN0c3Ee2VGuPmUBocQA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_2ezwF0T6Ee2_n5XNBGdaxw" type="_2FcN0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IaCQUT6Ee2_n5XNBGdaxw" name="visualization" method="_2jjGK0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ezwGET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IapUET6Ee2_n5XNBGdaxw" name="createFile" method="_2jjGLUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2IapUUT6Ee2_n5XNBGdaxw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IapUkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2IbQYET6Ee2_n5XNBGdaxw" name="fileVisualization" method="_2jjGMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ezwGUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IbQYUT6Ee2_n5XNBGdaxw" name="displayVisualization" method="_2jjGMkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e0XIET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IbQYkT6Ee2_n5XNBGdaxw" name="createHeader" method="_2jjtMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e0XIUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Ib3cET6Ee2_n5XNBGdaxw" name="createFooter" method="_2jjtMkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e0XIkT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ex64ET6Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_2jifEET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ex65ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ex65UT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ex64UT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ex64kT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ex640T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ex65kT6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2eyh8ET6Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_2jifFUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2eyh9ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2eyh9UT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2eyh8UT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eyh8kT6Ee2_n5XNBGdaxw" name="warp" type="_2H_ykET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2eyh80T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2eyh9kT6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ezJAET6Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_2jifGkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ezJBUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ezJBkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ezJAUT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ezJAkT6Ee2_n5XNBGdaxw" name="warp" type="_2H_ykET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ezJA0T6Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ezJBET6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ezJB0T6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2ezwEET6Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_2jifIET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2ezwFET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2ezwFUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2ezwEUT6Ee2_n5XNBGdaxw" name="fm" type="_2FcN0ET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ezwEkT6Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ezwE0T6Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2ezwFkT6Ee2_n5XNBGdaxw" type="_2IXmAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gvpwET6Ee2_n5XNBGdaxw" name="nameExtension" visibility="private" method="_2jjGIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gvpwUT6Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gvpwkT6Ee2_n5XNBGdaxw" name="m" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gvpw0T6Ee2_n5XNBGdaxw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gvpxET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Ie6wET6Ee2_n5XNBGdaxw" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_-pXUYkc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2gwQ0ET6Ee2_n5XNBGdaxw" general="_2dsVwET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iNCUUT6Ee2_n5XNBGdaxw" name="workLoad" visibility="package" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2k6YFET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iNpYUT6Ee2_n5XNBGdaxw" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjtNET6Ee2_n5XNBGdaxw" name="WorkLoadListener" specification="_2e0-MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjtNUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jjtNkT6Ee2_n5XNBGdaxw" type="_2Ie6wET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjtN0T6Ee2_n5XNBGdaxw" name="buildNodesAndFlows" specification="_2e1lQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjtOET6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjtOUT6Ee2_n5XNBGdaxw" name="testPrintStdOut" specification="_2IgI4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjtOkT6Ee2_n5XNBGdaxw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jjtO0T6Ee2_n5XNBGdaxw" name="enterWarpName" specification="_2e1lQkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jjtPET6Ee2_n5XNBGdaxw" name="ctx" type="_2duK9UT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkUQET6Ee2_n5XNBGdaxw" name="enterFlowName" specification="_2e2MUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUQUT6Ee2_n5XNBGdaxw" name="ctx" type="_2dwAI0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkUQkT6Ee2_n5XNBGdaxw" name="exitPriority" specification="_2e3acUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUQ0T6Ee2_n5XNBGdaxw" name="ctx" type="_2e2zY0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkURET6Ee2_n5XNBGdaxw" name="exitPeriod" specification="_2e4BhET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkURUT6Ee2_n5XNBGdaxw" name="ctx" type="_2e4BgkT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkURkT6Ee2_n5XNBGdaxw" name="exitDeadline" specification="_2e5PoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUR0T6Ee2_n5XNBGdaxw" name="ctx" type="_2e4ok0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkUSET6Ee2_n5XNBGdaxw" name="exitPhase" specification="_2e52sUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUSUT6Ee2_n5XNBGdaxw" name="ctx" type="_2e5PpUT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkUSkT6Ee2_n5XNBGdaxw" name="exitSrcNode" specification="_2e6dwET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUS0T6Ee2_n5XNBGdaxw" name="ctx" type="_2dwnM0T6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkUTET6Ee2_n5XNBGdaxw" name="exitSnkNode" specification="_2e7E0ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUTUT6Ee2_n5XNBGdaxw" name="ctx" type="_2dxORET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jkUTkT6Ee2_n5XNBGdaxw" name="exitFlow" specification="_2e7r4UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jkUT0T6Ee2_n5XNBGdaxw" name="ctx" type="_2dycYkT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2IgI4ET6Ee2_n5XNBGdaxw" name="testPrintStdOut" method="_2jjtOUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Igv8ET6Ee2_n5XNBGdaxw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2e0-MET6Ee2_n5XNBGdaxw" name="WorkLoadListener" visibility="private" method="_2jjtNET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2e0-MkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2e0-M0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2e0-MUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2e0-NET6Ee2_n5XNBGdaxw" type="_2Ie6wET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e1lQET6Ee2_n5XNBGdaxw" name="buildNodesAndFlows" isStatic="true" method="_2jjtN0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e1lQUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e1lQkT6Ee2_n5XNBGdaxw" name="enterWarpName" method="_2jjtO0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e1lQ0T6Ee2_n5XNBGdaxw" name="ctx" type="_2duK9UT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e2MUkT6Ee2_n5XNBGdaxw" name="enterFlowName" method="_2jkUQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e2MU0T6Ee2_n5XNBGdaxw" name="ctx" type="_2dwAI0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e3acUT6Ee2_n5XNBGdaxw" name="exitPriority" method="_2jkUQkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e3ackT6Ee2_n5XNBGdaxw" name="ctx" type="_2e2zY0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e4BhET6Ee2_n5XNBGdaxw" name="exitPeriod" method="_2jkURET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e4BhUT6Ee2_n5XNBGdaxw" name="ctx" type="_2e4BgkT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e5PoET6Ee2_n5XNBGdaxw" name="exitDeadline" method="_2jkURkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e5PoUT6Ee2_n5XNBGdaxw" name="ctx" type="_2e4ok0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e52sUT6Ee2_n5XNBGdaxw" name="exitPhase" method="_2jkUSET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e52skT6Ee2_n5XNBGdaxw" name="ctx" type="_2e5PpUT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e6dwET6Ee2_n5XNBGdaxw" name="exitSrcNode" method="_2jkUSkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e6dwUT6Ee2_n5XNBGdaxw" name="ctx" type="_2dwnM0T6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e7E0ET6Ee2_n5XNBGdaxw" name="exitSnkNode" method="_2jkUTET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e7E0UT6Ee2_n5XNBGdaxw" name="ctx" type="_2dxORET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2e7r4UT6Ee2_n5XNBGdaxw" name="exitFlow" method="_2jkUTkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e7r4kT6Ee2_n5XNBGdaxw" name="ctx" type="_2dycYkT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IjMMET6Ee2_n5XNBGdaxw" name="WorkLoadDescription">
              <ownedComment xmi:id="_-pU4HEc3Ee2VGuPmUBocQA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_2e9hEkT6Ee2_n5XNBGdaxw" general="_2IXmAET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iOQcUT6Ee2_n5XNBGdaxw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iO3gET6Ee2_n5XNBGdaxw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iO3gUT6Ee2_n5XNBGdaxw" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iO3gkT6Ee2_n5XNBGdaxw" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iO3g0T6Ee2_n5XNBGdaxw" name="description" visibility="private" type="_2FOycET6Ee2_n5XNBGdaxw" association="_2k6_IUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iPekUT6Ee2_n5XNBGdaxw" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iPek0T6Ee2_n5XNBGdaxw" name="fm" visibility="private" type="_2FcN0ET6Ee2_n5XNBGdaxw" association="_2k6_JET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iQFoUT6Ee2_n5XNBGdaxw" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jk7UET6Ee2_n5XNBGdaxw" name="WorkLoadDescription" specification="_2IjzQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jk7UUT6Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jk7UkT6Ee2_n5XNBGdaxw" type="_2IjMMET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jk7U0T6Ee2_n5XNBGdaxw" name="visualization" specification="_2IkaVET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jk7VET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jliYET6Ee2_n5XNBGdaxw" name="fileVisualization" specification="_2IlocET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jliYUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jliYkT6Ee2_n5XNBGdaxw" name="toString" specification="_2IlodET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jliY0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jliZET6Ee2_n5XNBGdaxw" name="initialize" specification="_2ImPhET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jliZUT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2IjzQET6Ee2_n5XNBGdaxw" name="WorkLoadDescription" visibility="package" method="_2jk7UET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2IkaUUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2IkaUkT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2IkaUET6Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2IkaU0T6Ee2_n5XNBGdaxw" type="_2IjMMET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IkaVET6Ee2_n5XNBGdaxw" name="visualization" method="_2jk7U0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e9hEET6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IlocET6Ee2_n5XNBGdaxw" name="fileVisualization" method="_2jliYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2e9hEUT6Ee2_n5XNBGdaxw" type="_2FOycET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IlodET6Ee2_n5XNBGdaxw" name="toString" method="_2jliYkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ImPgET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2ImPhET6Ee2_n5XNBGdaxw" name="initialize" visibility="private" method="_2jliZET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2ImPhUT6Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_2IoEsET6Ee2_n5XNBGdaxw" name="WarpInterface">
              <ownedComment xmi:id="_-pWGOEc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_2e-IIET6Ee2_n5XNBGdaxw" general="_2H_ykET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2IoEsUT6Ee2_n5XNBGdaxw" name="toWorkload">
                <ownedParameter xmi:id="_2e-IIUT6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IoEskT6Ee2_n5XNBGdaxw" name="toProgram">
                <ownedParameter xmi:id="_2e-vMET6Ee2_n5XNBGdaxw" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IorwET6Ee2_n5XNBGdaxw" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_2e-vMUT6Ee2_n5XNBGdaxw" type="_2HYukET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IorwUT6Ee2_n5XNBGdaxw" name="toSimulator">
                <ownedParameter xmi:id="_2e-vMkT6Ee2_n5XNBGdaxw" type="_2H8IMET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IorwkT6Ee2_n5XNBGdaxw" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_2e-vM0T6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Iorw0T6Ee2_n5XNBGdaxw" name="toChannelAnalysis">
                <ownedParameter xmi:id="_2e-vNET6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IpS0ET6Ee2_n5XNBGdaxw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_2IpS0UT6Ee2_n5XNBGdaxw" name="reliabilitiesMet">
                <ownedParameter xmi:id="_2IpS0kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2IpS00T6Ee2_n5XNBGdaxw" name="deadlinesMet">
                <ownedParameter xmi:id="_2IpS1ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Iqg8ET6Ee2_n5XNBGdaxw" name="WarpPoset">
              <ownedComment xmi:id="_-pVfI0c3Ee2VGuPmUBocQA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_2e_WQUT6Ee2_n5XNBGdaxw" general="_2GevoET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jliZkT6Ee2_n5XNBGdaxw" name="WarpPoset" specification="_2e-vNUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jliZ0T6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jliaET6Ee2_n5XNBGdaxw" type="_2Iqg8ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jliaUT6Ee2_n5XNBGdaxw" name="findCoordinator" specification="_2gw34ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jliakT6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jlia0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2e-vNUT6Ee2_n5XNBGdaxw" name="WarpPoset" visibility="package" method="_2jliZkT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2e-vN0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2e-vOET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2e-vNkT6Ee2_n5XNBGdaxw" name="workload" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2e_WQET6Ee2_n5XNBGdaxw" type="_2Iqg8ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gw34ET6Ee2_n5XNBGdaxw" name="findCoordinator" visibility="protected" method="_2jliaUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gw34UT6Ee2_n5XNBGdaxw" name="nodesInFlow" type="_2dEqsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gw34kT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2IrvEET6Ee2_n5XNBGdaxw" name="WarpSystem">
              <ownedComment xmi:id="_-pWtTUc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2iQssET6Ee2_n5XNBGdaxw" name="program" visibility="private" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2k7mMUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iQsskT6Ee2_n5XNBGdaxw" name="workLoad" visibility="private" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2k7mNET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iRTwUT6Ee2_n5XNBGdaxw" name="ra" visibility="private" type="_2HYukET6Ee2_n5XNBGdaxw" association="_2k8NQUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iRTw0T6Ee2_n5XNBGdaxw" name="la" visibility="private" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2k8NRET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iR60ET6Ee2_n5XNBGdaxw" name="ca" visibility="private" type="_2ERJIET6Ee2_n5XNBGdaxw" association="_2k80UUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iR60kT6Ee2_n5XNBGdaxw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iTI8kT6Ee2_n5XNBGdaxw" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iTI80T6Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iTwAUT6Ee2_n5XNBGdaxw" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iTwAkT6Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_2e_9UET6Ee2_n5XNBGdaxw" client="_2IrvEET6Ee2_n5XNBGdaxw" supplier="_2IoEsET6Ee2_n5XNBGdaxw" contract="_2IoEsET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmJckT6Ee2_n5XNBGdaxw" name="WarpSystem" specification="_2gyGAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmJc0T6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jmJdET6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jmJdUT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jmJdkT6Ee2_n5XNBGdaxw" type="_2IrvEET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmJd0T6Ee2_n5XNBGdaxw" name="toWorkload" specification="_2Is9MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmJeET6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmJeUT6Ee2_n5XNBGdaxw" name="toProgram" specification="_2IuLUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmJekT6Ee2_n5XNBGdaxw" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmJe0T6Ee2_n5XNBGdaxw" name="toReliabilityAnalysis" specification="_2IuLVET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmJfET6Ee2_n5XNBGdaxw" type="_2HYukET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwgET6Ee2_n5XNBGdaxw" name="toSimulator" specification="_2IuyY0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwgUT6Ee2_n5XNBGdaxw" type="_2H8IMET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwgkT6Ee2_n5XNBGdaxw" name="toLatencyAnalysis" specification="_2IvZc0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwg0T6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwhET6Ee2_n5XNBGdaxw" name="toChannelAnalysis" specification="_2IwAg0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwhUT6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwhkT6Ee2_n5XNBGdaxw" name="reliabilitiesMet" specification="_2IwnkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwh0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwiET6Ee2_n5XNBGdaxw" name="deadlinesMet" specification="_2IxOokT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwiUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwikT6Ee2_n5XNBGdaxw" name="createProgram" specification="_2gytEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwi0T6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jmwjET6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jmwjUT6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwjkT6Ee2_n5XNBGdaxw" name="getNumFaults" specification="_2Ix1skT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwj0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jmwkET6Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" specification="_2Iycw0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jmwkUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jnXkET6Ee2_n5XNBGdaxw" name="getE2e" specification="_2IzD0kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jnXkUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jnXkkT6Ee2_n5XNBGdaxw" name="getName" specification="_2Izq4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jnXk0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jnXlET6Ee2_n5XNBGdaxw" name="getSchedulerName" specification="_2I0R8kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jnXlUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jnXlkT6Ee2_n5XNBGdaxw" name="getNumTransmissions" specification="_2I05A0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jnXl0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jnXmET6Ee2_n5XNBGdaxw" name="getOptimizationFlag" specification="_2I1gFET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jnXmUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Is9MET6Ee2_n5XNBGdaxw" name="toWorkload" method="_2jmJd0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fAkYET6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IuLUET6Ee2_n5XNBGdaxw" name="toProgram" method="_2jmJeUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fAkYUT6Ee2_n5XNBGdaxw" type="_2G0G0ET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IuLVET6Ee2_n5XNBGdaxw" name="toReliabilityAnalysis" method="_2jmJe0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fAkYkT6Ee2_n5XNBGdaxw" type="_2HYukET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IuyY0T6Ee2_n5XNBGdaxw" name="toSimulator" method="_2jmwgET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fAkY0T6Ee2_n5XNBGdaxw" type="_2H8IMET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IvZc0T6Ee2_n5XNBGdaxw" name="toLatencyAnalysis" method="_2jmwgkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fAkZET6Ee2_n5XNBGdaxw" type="_2GFHAET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IwAg0T6Ee2_n5XNBGdaxw" name="toChannelAnalysis" method="_2jmwhET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fAkZUT6Ee2_n5XNBGdaxw" type="_2ERJIET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IwnkkT6Ee2_n5XNBGdaxw" name="reliabilitiesMet" method="_2jmwhkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Iwnk0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2IxOokT6Ee2_n5XNBGdaxw" name="deadlinesMet" method="_2jmwiET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2IxOo0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Ix1skT6Ee2_n5XNBGdaxw" name="getNumFaults" method="_2jmwjkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Ix1s0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Iycw0T6Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" method="_2jmwkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gytFET6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2IzD0kT6Ee2_n5XNBGdaxw" name="getE2e" method="_2jnXkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gytFUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2Izq4kT6Ee2_n5XNBGdaxw" name="getName" method="_2jnXkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Izq40T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I0R8kT6Ee2_n5XNBGdaxw" name="getSchedulerName" method="_2jnXlET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2I0R80T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I05A0T6Ee2_n5XNBGdaxw" name="getNumTransmissions" method="_2jnXlkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2I1gEET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I1gFET6Ee2_n5XNBGdaxw" name="getOptimizationFlag" method="_2jnXmET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2I2HIET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I2HJET6Ee2_n5XNBGdaxw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_2gyGAET6Ee2_n5XNBGdaxw" name="WarpSystem" method="_2jmJckT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2gyGBET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2gyGBUT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2gyGAUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gyGAkT6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gyGA0T6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gyGBkT6Ee2_n5XNBGdaxw" type="_2IrvEET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2gytEET6Ee2_n5XNBGdaxw" name="createProgram" visibility="private" method="_2jmwikT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2gytEUT6Ee2_n5XNBGdaxw" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2gytEkT6Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2gytE0T6Ee2_n5XNBGdaxw" name="choice" type="_2gfLEET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2I6YkET6Ee2_n5XNBGdaxw" name="WorkLoad">
              <ownedComment xmi:id="_-pWtTkc3Ee2VGuPmUBocQA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_2fHSE0T6Ee2_n5XNBGdaxw" general="_2IjMMET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iUXEET6Ee2_n5XNBGdaxw" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iU-IET6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iU-IUT6Ee2_n5XNBGdaxw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iU-IkT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iU-I0T6Ee2_n5XNBGdaxw" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iU-JET6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iVlMET6Ee2_n5XNBGdaxw" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iVlMUT6Ee2_n5XNBGdaxw" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iVlMkT6Ee2_n5XNBGdaxw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iVlM0T6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iVlNET6Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_2ghnUkT6Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iVlNUT6Ee2_n5XNBGdaxw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iWMQET6Ee2_n5XNBGdaxw" name="e2e" visibility="private" type="_2ghnUkT6Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iWMQUT6Ee2_n5XNBGdaxw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iWMQ0T6Ee2_n5XNBGdaxw" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iWzUET6Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iWzUUT6Ee2_n5XNBGdaxw" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iWzUkT6Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iWzVET6Ee2_n5XNBGdaxw" name="flows" type="_2Fvv0ET6Ee2_n5XNBGdaxw" association="_2kCOUET6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iXaYET6Ee2_n5XNBGdaxw" name="nodes" type="_2GWz0ET6Ee2_n5XNBGdaxw" association="_2kCOUkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2iXaYUT6Ee2_n5XNBGdaxw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iYBcUT6Ee2_n5XNBGdaxw" name="flowNamesInOriginalOrder" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2k9bYUT6Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iYBc0T6Ee2_n5XNBGdaxw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iYogET6Ee2_n5XNBGdaxw" name="flowNamesInPriorityOrder" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2k9bZET6Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iYogkT6Ee2_n5XNBGdaxw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_2fEOwUT6Ee2_n5XNBGdaxw" client="_2I6YkET6Ee2_n5XNBGdaxw" supplier="_2HZ8sET6Ee2_n5XNBGdaxw" contract="_2HZ8sET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jn-oET6Ee2_n5XNBGdaxw" name="WorkLoad" specification="_2gz7MET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jn-oUT6Ee2_n5XNBGdaxw" name="m" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jn-okT6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jn-o0T6Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jn-pET6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jn-pUT6Ee2_n5XNBGdaxw" name="WorkLoad" specification="_2g0iRkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jn-pkT6Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jn-p0T6Ee2_n5XNBGdaxw" name="m" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jn-qET6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jn-qUT6Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jn-qkT6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jn-q0T6Ee2_n5XNBGdaxw" name="setDefaultParameters" specification="_2I800ET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jn-rET6Ee2_n5XNBGdaxw" name="getE2e" specification="_2I800UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jn-rUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jn-rkT6Ee2_n5XNBGdaxw" name="getIntForFlowNames" specification="_2I9b4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jn-r0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jn-sET6Ee2_n5XNBGdaxw" name="getName" specification="_2I9b4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jn-sUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jolsET6Ee2_n5XNBGdaxw" name="setMinPacketReceptionRate" specification="_2g1JVkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jolsUT6Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jolskT6Ee2_n5XNBGdaxw" name="getMaxPhase" specification="_2I-C8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jols0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2joltET6Ee2_n5XNBGdaxw" name="getMinPeriod" specification="_2I-C8kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2joltUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2joltkT6Ee2_n5XNBGdaxw" name="setE2e" specification="_2g1wYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jolt0T6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2joluET6Ee2_n5XNBGdaxw" name="setIntForFlowNames" specification="_2I-qAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2joluUT6Ee2_n5XNBGdaxw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jolukT6Ee2_n5XNBGdaxw" name="setName" specification="_2I-qAkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jolu0T6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMwET6Ee2_n5XNBGdaxw" name="setNodeChannel" specification="_2I_REET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpMwUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpMwkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMw0T6Ee2_n5XNBGdaxw" name="getNodeChannel" specification="_2I_RE0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpMxET6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpMxUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMxkT6Ee2_n5XNBGdaxw" name="addFlow" specification="_2I_4IET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpMx0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMyET6Ee2_n5XNBGdaxw" name="isIntForNodeNames" specification="_2I_4IkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpMyUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMykT6Ee2_n5XNBGdaxw" name="isIntForFlowNames" specification="_2I_4JET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpMy0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMzET6Ee2_n5XNBGdaxw" name="addNodeToFlow" specification="_2JAfMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpMzUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpMzkT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpMz0T6Ee2_n5XNBGdaxw" name="getFlowPriority" specification="_2JAfM0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpM0ET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpM0UT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpM0kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpz0ET6Ee2_n5XNBGdaxw" name="setFlowPriority" specification="_2JBGQET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpz0UT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpz0kT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpz00T6Ee2_n5XNBGdaxw" name="setFlowPeriod" specification="_2JBGQ0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpz1ET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpz1UT6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpz1kT6Ee2_n5XNBGdaxw" name="setFlowDeadline" specification="_2JBtUET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpz10T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpz2ET6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpz2UT6Ee2_n5XNBGdaxw" name="setFlowPhase" specification="_2JBtU0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpz2kT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpz20T6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpz3ET6Ee2_n5XNBGdaxw" name="getFlowIndex" specification="_2JBtVkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpz3UT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpz3kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jpz30T6Ee2_n5XNBGdaxw" name="getFlowPriority" specification="_2JBtWUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jpz4ET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jpz4UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa4ET6Ee2_n5XNBGdaxw" name="getFlowPeriod" specification="_2JCUYUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jqa4UT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jqa4kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa40T6Ee2_n5XNBGdaxw" name="getFlowDeadline" specification="_2JCUZET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jqa5ET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jqa5UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa5kT6Ee2_n5XNBGdaxw" name="getFlowPhase" specification="_2JC7cUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jqa50T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jqa6ET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa6UT6Ee2_n5XNBGdaxw" name="getFlowTxAttemptsPerLink" specification="_2JC7dET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jqa6kT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jqa60T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa7ET6Ee2_n5XNBGdaxw" name="setFlowsInPriorityOrder" specification="_2JDigUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa7UT6Ee2_n5XNBGdaxw" name="setFlowsInDMorder" specification="_2JDigkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa7kT6Ee2_n5XNBGdaxw" name="setFlowsInRMorder" specification="_2JDig0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jqa70T6Ee2_n5XNBGdaxw" name="setFlowsInRealTimeHARTorder" specification="_2JDihET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrB8ET6Ee2_n5XNBGdaxw" name="finalizeCurrentFlow" specification="_2JEJkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrB8UT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrB8kT6Ee2_n5XNBGdaxw" name="nextReleaseTime" specification="_2JEJkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrB80T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jrB9ET6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jrB9UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrB9kT6Ee2_n5XNBGdaxw" name="nextAbsoluteDeadline" specification="_2JEwoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrB90T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jrB-ET6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jrB-UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrB-kT6Ee2_n5XNBGdaxw" name="finalizeFlowWithE2eParameters" specification="_2JFXsET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrB-0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrpAET6Ee2_n5XNBGdaxw" name="finalizeFlowWithFixedFaultTolerance" specification="_2JFXskT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrpAUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrpAkT6Ee2_n5XNBGdaxw" name="getFixedTxPerLinkAndTotalTxCost" specification="_2fFc4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrpA0T6Ee2_n5XNBGdaxw" name="flow" type="_2Fi7gET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jrpBET6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrpBUT6Ee2_n5XNBGdaxw" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_2g2XcET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrpBkT6Ee2_n5XNBGdaxw" name="flow" type="_2Fi7gET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jrpB0T6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jrpCET6Ee2_n5XNBGdaxw" name="M" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jrpCUT6Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jrpCkT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jrpC0T6Ee2_n5XNBGdaxw" name="getNodeNamesOrderedAlphabetically" specification="_2JF-wET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jrpDET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jrpDUT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jsQEET6Ee2_n5XNBGdaxw" name="getFlow" specification="_2JHM4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jsQEUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jsQEkT6Ee2_n5XNBGdaxw" type="_2Fi7gET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jsQE0T6Ee2_n5XNBGdaxw" name="getFlowNames" specification="_2JHM4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jsQFET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jsQFUT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jsQFkT6Ee2_n5XNBGdaxw" name="getNodeIndex" specification="_2JHz8kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jsQF0T6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jsQGET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jsQGUT6Ee2_n5XNBGdaxw" name="getNodesInFlow" specification="_2JIbAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jsQGkT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jsQG0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jsQHET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jsQHUT6Ee2_n5XNBGdaxw" name="getHyperPeriod" specification="_2JJCEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jsQHkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jsQH0T6Ee2_n5XNBGdaxw" name="getTotalTxAttemptsInFlow" specification="_2JJpIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jsQIET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jsQIUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2js3IET6Ee2_n5XNBGdaxw" name="getNumTxAttemptsPerLink" specification="_2JJpI0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2js3IUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2js3IkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2js3I0T6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2js3JET6Ee2_n5XNBGdaxw" name="addEdge" specification="_2fGrAUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2js3JUT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2js3JkT6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2js3J0T6Ee2_n5XNBGdaxw" name="maxFlowLength" specification="_2JKQM0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2js3KET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2js3KUT6Ee2_n5XNBGdaxw" name="parser" specification="_2fHSEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2js3KkT6Ee2_n5XNBGdaxw" name="wkldDesc" type="_2FOycET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2js3K0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// loops through the workload description to find the flow name&#xD;
	  // that matches a specific flow name passed as the second input parameter.&#xD;
	  // prints the matching flow line&#xD;
	  for (String flowLine : wkldDesc) {&#xD;
		  if (flowLine.startsWith(flowName + ' ') || &#xD;
				  flowLine.startsWith(flowName + ':')) {   //accounts for .txt files where a colon follows flow name&#xD;
			  System.out.print(flowLine);&#xD;
		  }&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2js3LET6Ee2_n5XNBGdaxw" name="main" specification="_2JK3QUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2js3LUT6Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2js3LkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	  System.out.println(wkld.name);&#xD;
	  wkld.setFlowsInDMorder();&#xD;
	  // loops through the sorted ArrayList of flow names calling parser &#xD;
	  // to match each flow name with associated workload description&#xD;
	  for (String flowName : wkld.getFlowNamesInPriorityOrder()) {&#xD;
		  parser(wkld.visualization(), flowName);&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2I800ET6Ee2_n5XNBGdaxw" name="setDefaultParameters" visibility="private" method="_2jn-q0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2I800UT6Ee2_n5XNBGdaxw" name="getE2e" method="_2jn-rET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtUUc3Ee2VGuPmUBocQA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_2g1JVUT6Ee2_n5XNBGdaxw" type="_2ghnUkT6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2I9b4ET6Ee2_n5XNBGdaxw" name="getIntForFlowNames" method="_2jn-rkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtUkc3Ee2VGuPmUBocQA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I9b4UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I9b4kT6Ee2_n5XNBGdaxw" name="getName" method="_2jn-sET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtU0c3Ee2VGuPmUBocQA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I9b40T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I-C8ET6Ee2_n5XNBGdaxw" name="getMaxPhase" method="_2jolskT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUUUc3Ee2VGuPmUBocQA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I-C8UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I-C8kT6Ee2_n5XNBGdaxw" name="getMinPeriod" method="_2joltET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUUkc3Ee2VGuPmUBocQA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I-C80T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I-qAET6Ee2_n5XNBGdaxw" name="setIntForFlowNames" method="_2joluET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUVEc3Ee2VGuPmUBocQA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I-qAUT6Ee2_n5XNBGdaxw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I-qAkT6Ee2_n5XNBGdaxw" name="setName" method="_2jolukT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUVUc3Ee2VGuPmUBocQA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I-qA0T6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I_REET6Ee2_n5XNBGdaxw" name="setNodeChannel" method="_2jpMwET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUVkc3Ee2VGuPmUBocQA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I_REUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2I_REkT6Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I_RE0T6Ee2_n5XNBGdaxw" name="getNodeChannel" method="_2jpMw0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUV0c3Ee2VGuPmUBocQA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_2I_RFET6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2I_RFUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I_4IET6Ee2_n5XNBGdaxw" name="addFlow" method="_2jpMxkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2I_4IUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I_4IkT6Ee2_n5XNBGdaxw" name="isIntForNodeNames" method="_2jpMyET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2I_4I0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2I_4JET6Ee2_n5XNBGdaxw" name="isIntForFlowNames" method="_2jpMykT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2I_4JUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JAfMET6Ee2_n5XNBGdaxw" name="addNodeToFlow" method="_2jpMzET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JAfMUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JAfMkT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JAfM0T6Ee2_n5XNBGdaxw" name="getFlowPriority" method="_2jpMz0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUWEc3Ee2VGuPmUBocQA">
                  <body>Iterates through the given flow to find the input node name. When found,&#xD;
   * gets the node's priority and returns it.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param nodeName&#xD;
   * @return priority (Integer value) of input node</body>
                </ownedComment>
                <ownedParameter xmi:id="_2JAfNET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JAfNUT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JAfNkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JBGQET6Ee2_n5XNBGdaxw" name="setFlowPriority" method="_2jpz0ET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUWUc3Ee2VGuPmUBocQA">
                  <body>Method to set a given flow name to a new passed in priority value.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_2JBGQUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JBGQkT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JBGQ0T6Ee2_n5XNBGdaxw" name="setFlowPeriod" method="_2jpz00T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JBGRET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JBGRUT6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JBtUET6Ee2_n5XNBGdaxw" name="setFlowDeadline" method="_2jpz1kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JBtUUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JBtUkT6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JBtU0T6Ee2_n5XNBGdaxw" name="setFlowPhase" method="_2jpz2UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JBtVET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JBtVUT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JBtVkT6Ee2_n5XNBGdaxw" name="getFlowIndex" method="_2jpz3ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JBtV0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JBtWET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JBtWUT6Ee2_n5XNBGdaxw" name="getFlowPriority" method="_2jpz30T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JBtWkT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JCUYET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JCUYUT6Ee2_n5XNBGdaxw" name="getFlowPeriod" method="_2jqa4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JCUYkT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JCUY0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JCUZET6Ee2_n5XNBGdaxw" name="getFlowDeadline" method="_2jqa40T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUWkc3Ee2VGuPmUBocQA">
                  <body>Method to return the deadline value (Integer) of the flow name passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return deadline Integer value of flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_2JCUZUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JC7cET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JC7cUT6Ee2_n5XNBGdaxw" name="getFlowPhase" method="_2jqa5kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JC7ckT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JC7c0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JC7dET6Ee2_n5XNBGdaxw" name="getFlowTxAttemptsPerLink" method="_2jqa6UT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JC7dUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JDigET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JDigUT6Ee2_n5XNBGdaxw" name="setFlowsInPriorityOrder" method="_2jqa7ET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2JDigkT6Ee2_n5XNBGdaxw" name="setFlowsInDMorder" method="_2jqa7UT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUW0c3Ee2VGuPmUBocQA">
                  <body>This method creates a list of Flow objects from the FlowMap using the stream interface, sorts by a&#xD;
   * secondary key, then sorts by a primary key. Finally, it creates a new flowNamesInPriorityOrder that&#xD;
   * contains the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_2JDig0T6Ee2_n5XNBGdaxw" name="setFlowsInRMorder" method="_2jqa7kT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUXEc3Ee2VGuPmUBocQA">
                  <body>This setter method creates a list of Flow objects from the FlowMap using the stream interface,&#xD;
   * sorting by a secondary key and primary key. Then it creates a new flowNamesInPriorityOrder that contains &#xD;
   * the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_2JDihET6Ee2_n5XNBGdaxw" name="setFlowsInRealTimeHARTorder" method="_2jqa70T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2JEJkET6Ee2_n5XNBGdaxw" name="finalizeCurrentFlow" method="_2jrB8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JEJkUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JEJkkT6Ee2_n5XNBGdaxw" name="nextReleaseTime" method="_2jrB8kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JEJk0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JEJlET6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JEJlUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JEwoET6Ee2_n5XNBGdaxw" name="nextAbsoluteDeadline" method="_2jrB9kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JEwoUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JEwokT6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JEwo0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JFXsET6Ee2_n5XNBGdaxw" name="finalizeFlowWithE2eParameters" visibility="private" method="_2jrB-kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JFXsUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JFXskT6Ee2_n5XNBGdaxw" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_2jrpAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JFXs0T6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JF-wET6Ee2_n5XNBGdaxw" name="getNodeNamesOrderedAlphabetically" method="_2jrpC0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JGl0ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JGl0UT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JHM4ET6Ee2_n5XNBGdaxw" name="getFlow" visibility="private" method="_2jsQEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JHM4UT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2fGrAET6Ee2_n5XNBGdaxw" type="_2Fi7gET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2JHM4kT6Ee2_n5XNBGdaxw" name="getFlowNames" method="_2jsQE0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JHM40T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JHz8ET6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JHz8kT6Ee2_n5XNBGdaxw" name="getNodeIndex" method="_2jsQFkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JHz80T6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JHz9ET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JIbAET6Ee2_n5XNBGdaxw" name="getNodesInFlow" method="_2jsQGUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUXUc3Ee2VGuPmUBocQA">
                  <body>This method creates a String array of the node names from the input parameter flowName&#xD;
   * in the same order as they exist in the flow specification.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return Array of String node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_2JIbAUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JIbAkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JIbA0T6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JJCEET6Ee2_n5XNBGdaxw" name="getHyperPeriod" method="_2jsQHUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JJCEUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JJpIET6Ee2_n5XNBGdaxw" name="getTotalTxAttemptsInFlow" method="_2jsQH0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JJpIUT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JJpIkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JJpI0T6Ee2_n5XNBGdaxw" name="getNumTxAttemptsPerLink" method="_2js3IET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JJpJET6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2JKQMET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JKQMUT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JKQM0T6Ee2_n5XNBGdaxw" name="maxFlowLength" method="_2js3J0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JK3QET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JK3QUT6Ee2_n5XNBGdaxw" name="main" isStatic="true" method="_2js3LET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2JK3QkT6Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JK3Q0T6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fFc4ET6Ee2_n5XNBGdaxw" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_2jrpAkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fFc4UT6Ee2_n5XNBGdaxw" name="flow" type="_2Fi7gET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g1wYkT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fGrAUT6Ee2_n5XNBGdaxw" name="addEdge" method="_2js3JET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fGrAkT6Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2fGrA0T6Ee2_n5XNBGdaxw" name="edge" type="_2FR1wET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fHSEET6Ee2_n5XNBGdaxw" name="parser" visibility="private" isStatic="true" method="_2js3KUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fHSEUT6Ee2_n5XNBGdaxw" name="wkldDesc" type="_2FOycET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fHSEkT6Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2gz7MET6Ee2_n5XNBGdaxw" name="WorkLoad" visibility="package" method="_2jn-oET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2g0iQ0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2g0iRET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pWtT0c3Ee2VGuPmUBocQA">
                  <body>The first constructor calls the parent class to set up file information. m and e2e are then initialized.&#xD;
   * Then it creates the listener object, which will read the workLoad description and then build the node and &#xD;
   * flow objects that instantiates the workLoad.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_2g0iQET6Ee2_n5XNBGdaxw" name="m" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g0iQUT6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g0iQkT6Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2g0iRUT6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2g0iRkT6Ee2_n5XNBGdaxw" name="WorkLoad" visibility="package" method="_2jn-pUT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2g1JUkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2g1JU0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pWtUEc3Ee2VGuPmUBocQA">
                  <body>The second constructor is identical to the first with the exception of initializing the optional&#xD;
   * numFaults input parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_2g0iR0T6Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2g0iSET6Ee2_n5XNBGdaxw" name="m" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g1JUET6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g1JUUT6Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2g1JVET6Ee2_n5XNBGdaxw" type="_2I6YkET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2g1JVkT6Ee2_n5XNBGdaxw" name="setMinPacketReceptionRate" method="_2jolsET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUUEc3Ee2VGuPmUBocQA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2g1JV0T6Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2g1wYET6Ee2_n5XNBGdaxw" name="setE2e" method="_2joltkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pXUU0c3Ee2VGuPmUBocQA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2g1wYUT6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2g2XcET6Ee2_n5XNBGdaxw" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_2jrpBUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2g2XcUT6Ee2_n5XNBGdaxw" name="flow" type="_2Fi7gET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g2XckT6Ee2_n5XNBGdaxw" name="e2e" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g2Xc0T6Ee2_n5XNBGdaxw" name="M" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2g2XdET6Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2g2-gET6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2JUoQET6Ee2_n5XNBGdaxw" name="WarpDSL">
              <ownedComment xmi:id="_-pWGOUc3Ee2VGuPmUBocQA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2iadsET6Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iadsUT6Ee2_n5XNBGdaxw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iadskT6Ee2_n5XNBGdaxw" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iads0T6Ee2_n5XNBGdaxw" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iadtET6Ee2_n5XNBGdaxw" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ibEwET6Ee2_n5XNBGdaxw" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jvTYET6Ee2_n5XNBGdaxw" name="getInstructionParameters" specification="_2Jau4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jvTYUT6Ee2_n5XNBGdaxw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jvTYkT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2Jau4ET6Ee2_n5XNBGdaxw" name="getInstructionParameters" method="_2jvTYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2Jau4UT6Ee2_n5XNBGdaxw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2g4MoET6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_2JV2YET6Ee2_n5XNBGdaxw" name="InstructionParameters">
                <ownedAttribute xmi:id="_2ibEwUT6Ee2_n5XNBGdaxw" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ibEwkT6Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2ibEw0T6Ee2_n5XNBGdaxw" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ibExET6Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2ibr0ET6Ee2_n5XNBGdaxw" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ibr0UT6Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2ibr0kT6Ee2_n5XNBGdaxw" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ibr00T6Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2ibr1ET6Ee2_n5XNBGdaxw" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ibr1UT6Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2icS4ET6Ee2_n5XNBGdaxw" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2icS4UT6Ee2_n5XNBGdaxw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2icS40T6Ee2_n5XNBGdaxw" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ic58ET6Ee2_n5XNBGdaxw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2juFQET6Ee2_n5XNBGdaxw" name="getCoordinator" specification="_2JXEgET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2juFQUT6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2juFQkT6Ee2_n5XNBGdaxw" name="setCoordinator" specification="_2JXEgkT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2juFQ0T6Ee2_n5XNBGdaxw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2juFRET6Ee2_n5XNBGdaxw" name="setName" specification="_2JXrkUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2juFRUT6Ee2_n5XNBGdaxw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jusUET6Ee2_n5XNBGdaxw" name="setFlow" specification="_2JYSoET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jusUUT6Ee2_n5XNBGdaxw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jusUkT6Ee2_n5XNBGdaxw" name="setSrc" specification="_2JYSokT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jusU0T6Ee2_n5XNBGdaxw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jusVET6Ee2_n5XNBGdaxw" name="setSnk" specification="_2JY5sET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jusVUT6Ee2_n5XNBGdaxw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jusVkT6Ee2_n5XNBGdaxw" name="setChannel" specification="_2JY5skT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jusV0T6Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jusWET6Ee2_n5XNBGdaxw" name="unused" specification="_2JZgwET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jusWUT6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_2JXEgET6Ee2_n5XNBGdaxw" name="getCoordinator" method="_2juFQET6Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_-pWGOkc3Ee2VGuPmUBocQA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_2JXEgUT6Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JXEgkT6Ee2_n5XNBGdaxw" name="setCoordinator" method="_2juFQkT6Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_-pWGO0c3Ee2VGuPmUBocQA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_2JXrkET6Ee2_n5XNBGdaxw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JXrkUT6Ee2_n5XNBGdaxw" name="setName" visibility="private" method="_2juFRET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2JXrkkT6Ee2_n5XNBGdaxw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JYSoET6Ee2_n5XNBGdaxw" name="setFlow" visibility="private" method="_2jusUET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2JYSoUT6Ee2_n5XNBGdaxw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JYSokT6Ee2_n5XNBGdaxw" name="setSrc" visibility="private" method="_2jusUkT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2JYSo0T6Ee2_n5XNBGdaxw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JY5sET6Ee2_n5XNBGdaxw" name="setSnk" visibility="private" method="_2jusVET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2JY5sUT6Ee2_n5XNBGdaxw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JY5skT6Ee2_n5XNBGdaxw" name="setChannel" visibility="private" method="_2jusVkT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2JY5s0T6Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_2JZgwET6Ee2_n5XNBGdaxw" name="unused" method="_2jusWET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2JZgwUT6Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_2Jb9AET6Ee2_n5XNBGdaxw" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_2g5awUT6Ee2_n5XNBGdaxw" general="_2g4zsET6Ee2_n5XNBGdaxw"/>
                <ownedAttribute xmi:id="_2ic58UT6Ee2_n5XNBGdaxw" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_2idhAUT6Ee2_n5XNBGdaxw" name="instructionParametersArrayList" visibility="package" type="_2dEqsET6Ee2_n5XNBGdaxw" association="_2k-CcUT6Ee2_n5XNBGdaxw"/>
                <ownedAttribute xmi:id="_2ieIEUT6Ee2_n5XNBGdaxw" name="instructionParameters" visibility="package" type="_2d3U4ET6Ee2_n5XNBGdaxw" association="_2k-CdET6Ee2_n5XNBGdaxw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jvTY0T6Ee2_n5XNBGdaxw" name="ListenerDsl" specification="_2JckEET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jvTZET6Ee2_n5XNBGdaxw" type="_2Jb9AET6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jvTZUT6Ee2_n5XNBGdaxw" name="getInstructionParameters" specification="_2JdLIET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jvTZkT6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jvTZ0T6Ee2_n5XNBGdaxw" name="enterAction" specification="_2fMKkUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jvTaET6Ee2_n5XNBGdaxw" name="ctx" type="_2fLjgET6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jvTaUT6Ee2_n5XNBGdaxw" name="exitAction" specification="_2fMxoET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jvTakT6Ee2_n5XNBGdaxw" name="ctx" type="_2fLjgET6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jvTa0T6Ee2_n5XNBGdaxw" name="exitFlowName" specification="_2fNYskT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jvTbET6Ee2_n5XNBGdaxw" name="ctx" type="_2fNYsET6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jv6cET6Ee2_n5XNBGdaxw" name="exitCmd" specification="_2fN_xUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jv6cUT6Ee2_n5XNBGdaxw" name="ctx" type="_2fN_w0T6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jv6ckT6Ee2_n5XNBGdaxw" name="exitSrcNode" specification="_2fPN4UT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jv6c0T6Ee2_n5XNBGdaxw" name="ctx" type="_2fOm1ET6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jv6dET6Ee2_n5XNBGdaxw" name="exitSnkNode" specification="_2fP080T6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jv6dUT6Ee2_n5XNBGdaxw" name="ctx" type="_2fP08UT6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jv6dkT6Ee2_n5XNBGdaxw" name="exitChannel" specification="_2fRDEUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2jv6d0T6Ee2_n5XNBGdaxw" name="ctx" type="_2fQcBET6Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_2JckEET6Ee2_n5XNBGdaxw" name="ListenerDsl" visibility="package" method="_2jvTY0T6Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_2JckEUT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_2JckEkT6Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_2JckE0T6Ee2_n5XNBGdaxw" type="_2Jb9AET6Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2JdLIET6Ee2_n5XNBGdaxw" name="getInstructionParameters" method="_2jvTZUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2g5awET6Ee2_n5XNBGdaxw" type="_2dEqsET6Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fMKkUT6Ee2_n5XNBGdaxw" name="enterAction" method="_2jvTZ0T6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fMKkkT6Ee2_n5XNBGdaxw" name="ctx" type="_2fLjgET6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fMxoET6Ee2_n5XNBGdaxw" name="exitAction" method="_2jvTaUT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fMxoUT6Ee2_n5XNBGdaxw" name="ctx" type="_2fLjgET6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fNYskT6Ee2_n5XNBGdaxw" name="exitFlowName" method="_2jvTa0T6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fNYs0T6Ee2_n5XNBGdaxw" name="ctx" type="_2fNYsET6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fN_xUT6Ee2_n5XNBGdaxw" name="exitCmd" method="_2jv6cET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fOm0ET6Ee2_n5XNBGdaxw" name="ctx" type="_2fN_w0T6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fPN4UT6Ee2_n5XNBGdaxw" name="exitSrcNode" method="_2jv6ckT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fPN4kT6Ee2_n5XNBGdaxw" name="ctx" type="_2fOm1ET6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fP080T6Ee2_n5XNBGdaxw" name="exitSnkNode" method="_2jv6dET6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fQcAET6Ee2_n5XNBGdaxw" name="ctx" type="_2fP08UT6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_2fRDEUT6Ee2_n5XNBGdaxw" name="exitChannel" method="_2jv6dkT6Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_2fRDEkT6Ee2_n5XNBGdaxw" name="ctx" type="_2fQcBET6Ee2_n5XNBGdaxw"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2JjRwET6Ee2_n5XNBGdaxw" name="Warp">
              <ownedComment xmi:id="_-pWGPEc3Ee2VGuPmUBocQA">
                <body>&lt;h1>This is the main Java class for the Warp project.&lt;/h1>&#xD;
&lt;p>Takes an input file and creates either a WorkLoad or WarpInterface to process the file based&#xD;
on the arguments given on runtime. Outputs a file with visualization.&lt;/p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_2ifWMET6Ee2_n5XNBGdaxw" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ifWMUT6Ee2_n5XNBGdaxw" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ifWMkT6Ee2_n5XNBGdaxw" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_2ghnUkT6Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ifWM0T6Ee2_n5XNBGdaxw" value="1.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ifWNET6Ee2_n5XNBGdaxw" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_2ghnUkT6Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ifWNUT6Ee2_n5XNBGdaxw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ifWNkT6Ee2_n5XNBGdaxw" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2if9QET6Ee2_n5XNBGdaxw" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2if9QUT6Ee2_n5XNBGdaxw" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_2er0QUT6Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2if9QkT6Ee2_n5XNBGdaxw" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2if9Q0T6Ee2_n5XNBGdaxw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2if9RET6Ee2_n5XNBGdaxw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2if9RUT6Ee2_n5XNBGdaxw" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2igkUUT6Ee2_n5XNBGdaxw" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ihLYUT6Ee2_n5XNBGdaxw" name="minLQ" visibility="private" isStatic="true" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2ihLY0T6Ee2_n5XNBGdaxw" name="e2e" visibility="private" isStatic="true" type="_2ghnUkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2ihycUT6Ee2_n5XNBGdaxw" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ihyc0T6Ee2_n5XNBGdaxw" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iiZgUT6Ee2_n5XNBGdaxw" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ijAkET6Ee2_n5XNBGdaxw" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ijAkkT6Ee2_n5XNBGdaxw" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ijAlET6Ee2_n5XNBGdaxw" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ijnoUT6Ee2_n5XNBGdaxw" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ijno0T6Ee2_n5XNBGdaxw" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ijnpUT6Ee2_n5XNBGdaxw" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ikOsUT6Ee2_n5XNBGdaxw" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ikOskT6Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ikOtET6Ee2_n5XNBGdaxw" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ikOtkT6Ee2_n5XNBGdaxw" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ik1wUT6Ee2_n5XNBGdaxw" name="schedulerSelected" visibility="private" isStatic="true" type="_2er0QUT6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jwhgET6Ee2_n5XNBGdaxw" name="main" specification="_2JluAET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jwhgUT6Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jwhgkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxIk0T6Ee2_n5XNBGdaxw" name="verifyPerformanceRequirements" specification="_2fVUhkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jxIlET6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxIlUT6Ee2_n5XNBGdaxw" name="verifyReliabilities" specification="_2fV7kUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jxIlkT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxIl0T6Ee2_n5XNBGdaxw" name="verifyDeadlines" specification="_2fV7k0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jxImET6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxImUT6Ee2_n5XNBGdaxw" name="verifyNoChannelConflicts" specification="_2fV7lUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jxImkT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxIm0T6Ee2_n5XNBGdaxw" name="setWarpParameters" specification="_2Jm8IET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jxInET6Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2jxInUT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxvoET6Ee2_n5XNBGdaxw" name="printWarpParameters" specification="_2JnjMET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-ICv8Ec3Ee2VGuPmUBocQA" name="visualize" specification="_-GxkoEc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-ICv8Uc3Ee2VGuPmUBocQA" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-ICv8kc3Ee2VGuPmUBocQA" name="choice" type="_2euQgUT6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-ICv80c3Ee2VGuPmUBocQA" name="visualize" specification="_-GyLskc3Ee2VGuPmUBocQA">
                <ownedParameter xmi:id="_-ICv9Ec3Ee2VGuPmUBocQA" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-ICv9Uc3Ee2VGuPmUBocQA" name="choice" type="_2etpcET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2JluAET6Ee2_n5XNBGdaxw" name="main" isStatic="true" method="_2jwhgET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGPUc3Ee2VGuPmUBocQA">
                  <body>The main method of Warp.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments passed in at runtime</body>
                </ownedComment>
                <ownedParameter xmi:id="_2JluAUT6Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JluAkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2Jm8IET6Ee2_n5XNBGdaxw" name="setWarpParameters" visibility="private" isStatic="true" method="_2jxIm0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGREc3Ee2VGuPmUBocQA">
                  <body>Sets the class variables based on the arguments given at runtime.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments from the main method</body>
                </ownedComment>
                <ownedParameter xmi:id="_2Jm8IUT6Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2Jm8IkT6Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2JnjMET6Ee2_n5XNBGdaxw" name="printWarpParameters" visibility="private" isStatic="true" method="_2jxvoET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGRUc3Ee2VGuPmUBocQA">
                  <body>Prints all system configuration parameters to the screen.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_2fVUhkT6Ee2_n5XNBGdaxw" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_2jxIk0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGQEc3Ee2VGuPmUBocQA">
                  <body>Verifies the Deadlines, Reliabilities, and Channel Conflicts with their respective method calls.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_2fV7kET6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fV7kUT6Ee2_n5XNBGdaxw" name="verifyReliabilities" visibility="private" isStatic="true" method="_2jxIlUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGQUc3Ee2VGuPmUBocQA">
                  <body>Verifies that the WarpInterface reliabilities are met. If the WarpInterface fails to meet the reliabilities&#xD;
   * a system error will be printed out.&lt;br>&#xD;
   * If verbose mode is enabled and reliabilities are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_2fV7kkT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fV7k0T6Ee2_n5XNBGdaxw" name="verifyDeadlines" visibility="private" isStatic="true" method="_2jxIl0T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGQkc3Ee2VGuPmUBocQA">
                  <body>Verifies that the WarpInterface meets all deadlines. If the WarpInterface fails to meet the deadlines&#xD;
   * a system error will be printed out as well as a visualization of the WarpInterface based on the&#xD;
   * DEADLINE_REPORT of SystemChoices enum.&lt;br>&#xD;
   * If verbose is enabled and deadlines are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_2fV7lET6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fV7lUT6Ee2_n5XNBGdaxw" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_2jxImUT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWGQ0c3Ee2VGuPmUBocQA">
                  <body>Verifies that the WarpInterface has no channel conflicts. If there is a channel conflict a system error&#xD;
   * will be printed to the screen along with a visualization of the WarpInterface based on CHANNEL of SystemChoice enum.&lt;br>&#xD;
   * If verbose mode is enabled and there are no channel conflicts verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to check for channel conflicts</body>
                </ownedComment>
                <ownedParameter xmi:id="_2fV7lkT6Ee2_n5XNBGdaxw" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_-GxkoEc3Ee2VGuPmUBocQA" name="visualize" visibility="private" isStatic="true" method="_-ICv8Ec3Ee2VGuPmUBocQA">
                <ownedComment xmi:id="_-pWGPkc3Ee2VGuPmUBocQA">
                  <body>Outputs a file with a visual representation of the WorkLoad based on the choice parameter.&lt;br>&#xD;
   * If verbose mode is enabled it will also print the results to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The WorkLoad to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off WorkLoadChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_-GyLsEc3Ee2VGuPmUBocQA" name="workLoad" type="_2I6YkET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-GyLsUc3Ee2VGuPmUBocQA" name="choice" type="_2euQgUT6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_-GyLskc3Ee2VGuPmUBocQA" name="visualize" visibility="private" isStatic="true" method="_-ICv80c3Ee2VGuPmUBocQA">
                <ownedComment xmi:id="_-pWGP0c3Ee2VGuPmUBocQA">
                  <body>Outputs a file with visual representation of the WarpInterface based on the choice parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off SystemChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_-GyLs0c3Ee2VGuPmUBocQA" name="warp" type="_2IoEsET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_-GyLtEc3Ee2VGuPmUBocQA" name="choice" type="_2etpcET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2Ju38ET6Ee2_n5XNBGdaxw" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxvoUT6Ee2_n5XNBGdaxw" name="testSetFlowsInDMorder_StressTest" specification="_2JvfAET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInDMorder&#xD;
		wkld.setFlowsInDMorder();&#xD;
		ArrayList&lt;String> DMorder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of DM order flow array&#xD;
		int DMorderLength = DMorder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, DMorderLength, &quot;Length after setting flows in DM Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the DM order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (DMorder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;Number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, DMorder, &quot;Check if setting in DM order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxvokT6Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_NotEmpty" specification="_2JwtIkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if getter retrieved the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxvo0T6Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_Empty" specification="_2JxUMkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if getter retrieved the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxvpET6Ee2_n5XNBGdaxw" name="testGetNodeChannel_ValidNode" specification="_2Jx7Q0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//The expected value of the node channel before setting to anything should be zero&#xD;
		int actualWithoutSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(0, actualWithoutSet, &quot;Node channel prior to setting:&quot;);&#xD;
		&#xD;
		//check to see if getter retrieves correct new value after setting&#xD;
		wkld.setNodeChannel(&quot;A&quot;, 44);&#xD;
		int actualWithSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(44, actualWithSet, &quot;Node channel after setting:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jxvpUT6Ee2_n5XNBGdaxw" name="testGetNodeChannel_InvalidNode" specification="_2JyiU0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>assertThrows(NullPointerException.class,&#xD;
	            ()->{&#xD;
	            	WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	            	//if given an input that isn't a valid node, should throw NullPointerException&#xD;
	            	wkld.getNodeChannel(&quot;&quot;);&#xD;
	            });&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWsET6Ee2_n5XNBGdaxw" name="testGetNodesInFlow_ValidFlow" specification="_2JzJY0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with a correct flow name&#xD;
		String[] actual = wkld.getNodesInFlow(&quot;F9&quot;);&#xD;
		String actualWithCorrectInput = Arrays.toString(actual);&#xD;
		//hard code of the expected string&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		//Test to see if we got the node names in the same order as they exist in the flow specification&#xD;
		assertEquals(expected, actualWithCorrectInput, &quot;Order of nodes of flow F9 in StressTest.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWsUT6Ee2_n5XNBGdaxw" name="testGetNodesInFlow_InvalidFlow" specification="_2Jzwc0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with incorrect flow name&#xD;
		String[] actual2 = wkld.getNodesInFlow(&quot;test&quot;);&#xD;
		String actualWithIncorrectInput = Arrays.toString(actual2);&#xD;
		//hard code of the expected string&#xD;
		String expectedEmpty = &quot;[]&quot;;&#xD;
		//Test to see if we correctly went to the else case in getNodesInFlow&#xD;
		assertEquals(expectedEmpty, actualWithIncorrectInput, &quot;Check if using a non-valid flow name correctly returns empty array:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWskT6Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_NotEmpty" specification="_2J0Xg0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list for setFlowNamesInOriginalOrder. Test array list is arbitrary&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from setter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if setter created the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWs0T6Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_Empty" specification="_2J0-k0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list for setFlowNamesInOriginalOrder&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if setter created the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWtET6Ee2_n5XNBGdaxw" name="testSetFlowsInPriorityOrder" specification="_2J1lo0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInPriorityorder&#xD;
		wkld.setFlowsInPriorityOrder();&#xD;
		ArrayList&lt;String> priorityOrder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of priority order flow array&#xD;
		int priorityOrderLength = priorityOrder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, priorityOrderLength, &quot;length after setting flows in Priority Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the priority order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (priorityOrder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, priorityOrder, &quot;Check if setting in Priority order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWtUT6Ee2_n5XNBGdaxw" name="testGetMinPeriod_Unique" specification="_2J2Ms0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected minimum period in StreesTest.txt is 20&#xD;
		int testPeriod = wkld.getMinPeriod();&#xD;
		assertEquals(20, testPeriod, &quot;Minimum period gotten from StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWtkT6Ee2_n5XNBGdaxw" name="testGetMinPeriod_Default" specification="_2J2zw0T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default period which is 100&#xD;
		int testPeriodDefault = wkld2.getMinPeriod();&#xD;
		assertEquals(100, testPeriodDefault, &quot;Minimum period gotten from Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWt0T6Ee2_n5XNBGdaxw" name="testMaxFlowLength_StressTest" specification="_2J3a00T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		int actual = wkld.maxFlowLength();&#xD;
		assertEquals(8, actual, &quot;Max flow length for StressTest.txt&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jyWuET6Ee2_n5XNBGdaxw" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" specification="_2J4B40T6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(5, actual2, &quot;Max flow length for WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9wET6Ee2_n5XNBGdaxw" name="testMaxFlowLength_LongChain" specification="_2J4o8kT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(26, actual2, &quot;Max flow length for LongChain.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9wUT6Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Unique" specification="_2J5QAkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected deadline of flow F9 in StressTest.txt is 100&#xD;
		int testDeadline = wkld.getFlowDeadline(&quot;F9&quot;);&#xD;
		assertEquals(100, testDeadline, &quot;deadline gotten for flow F9 in StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9wkT6Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Default" specification="_2J53EkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default deadline which is 100&#xD;
		int testDeadlineDefault = wkld2.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(100, testDeadlineDefault, &quot;deadline gotten for flow F0 in Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9w0T6Ee2_n5XNBGdaxw" name="testGetFlowDeadline_InvalidInput" specification="_2J6eIkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//Test the &quot;Bad situation&quot; where the flow name given does not exist&#xD;
		//Should give the default of 100&#xD;
		int testDeadlineFlowNameDNE = wkld3.getFlowDeadline(&quot;&quot;);&#xD;
		assertEquals(100, testDeadlineFlowNameDNE, &quot;check for a flow name that does not exist:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9xET6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" specification="_2J7FMkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld1 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String[] alphaOrder1 = wkld1.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual1 = Arrays.toString(alphaOrder1); &#xD;
		String expected1 = &quot;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, Y]&quot;;&#xD;
		assertEquals(expected1, alphaOrderActual1, &quot;check if the node names in StressTest.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9xUT6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" specification="_2J7sQUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		String[] alphaOrder2 = wkld2.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual2 = Arrays.toString(alphaOrder2);&#xD;
		String expected2 = &quot;[A, B, C, D, E, F, G, H, I, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a]&quot;;&#xD;
		assertEquals(expected2, alphaOrderActual2, &quot;check if the node names in LongChain.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9xkT6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" specification="_2J8TUkT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		String[] alphaOrder3 = wkld3.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual3 = Arrays.toString(alphaOrder3);&#xD;
		String expected3 = &quot;[0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, &quot;&#xD;
				+ &quot;38, 40, 41, 42, 48, 52, 53, 54, 55, 56, 58, 59, 64, 66, 68, 71, 72, 73, 74, 76, 80, 82, 83, 84]&quot;;&#xD;
		assertEquals(expected3, alphaOrderActual3, &#xD;
				&quot;check if the node names in WARP_MIX_Schedule0-WarpInput.txt were ordered alphabetically (numerically):&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jy9x0T6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" specification="_2J9hcET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld4 = new WorkLoad(1, 0.9, 0.99, &quot;SeeSpray.txt&quot;);&#xD;
		String[] alphaOrder4 = wkld4.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual4 = Arrays.toString(alphaOrder4);&#xD;
		String expected4 = &quot;[B1, B2, B3, B4, B5, B6, B7, B8, C1, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C2, C20, C21, &quot;&#xD;
				+ &quot;C22, C23, C24, C25, C26, C27, C28, C29, C3, C30, C4, C5, C6, C7, C8, C9]&quot;;&#xD;
		assertEquals(expected4, alphaOrderActual4, &quot;check if the node names in SeeSpray.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2JvfAET6Ee2_n5XNBGdaxw" name="testSetFlowsInDMorder_StressTest" visibility="package" method="_2jxvoUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2JwtIkT6Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_NotEmpty" visibility="package" method="_2jxvokT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2JxUMkT6Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_Empty" visibility="package" method="_2jxvo0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Jx7Q0T6Ee2_n5XNBGdaxw" name="testGetNodeChannel_ValidNode" visibility="package" method="_2jxvpET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2JyiU0T6Ee2_n5XNBGdaxw" name="testGetNodeChannel_InvalidNode" method="_2jxvpUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2JzJY0T6Ee2_n5XNBGdaxw" name="testGetNodesInFlow_ValidFlow" visibility="package" method="_2jyWsET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2Jzwc0T6Ee2_n5XNBGdaxw" name="testGetNodesInFlow_InvalidFlow" visibility="package" method="_2jyWsUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J0Xg0T6Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_NotEmpty" visibility="package" method="_2jyWskT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J0-k0T6Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_Empty" visibility="package" method="_2jyWs0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J1lo0T6Ee2_n5XNBGdaxw" name="testSetFlowsInPriorityOrder" visibility="package" method="_2jyWtET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J2Ms0T6Ee2_n5XNBGdaxw" name="testGetMinPeriod_Unique" visibility="package" method="_2jyWtUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J2zw0T6Ee2_n5XNBGdaxw" name="testGetMinPeriod_Default" visibility="package" method="_2jyWtkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J3a00T6Ee2_n5XNBGdaxw" name="testMaxFlowLength_StressTest" visibility="package" method="_2jyWt0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J4B40T6Ee2_n5XNBGdaxw" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" visibility="package" method="_2jyWuET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J4o8kT6Ee2_n5XNBGdaxw" name="testMaxFlowLength_LongChain" visibility="package" method="_2jy9wET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J5QAkT6Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Unique" visibility="package" method="_2jy9wUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J53EkT6Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Default" visibility="package" method="_2jy9wkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J6eIkT6Ee2_n5XNBGdaxw" name="testGetFlowDeadline_InvalidInput" visibility="package" method="_2jy9w0T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J7FMkT6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" visibility="package" method="_2jy9xET6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J7sQUT6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" visibility="package" method="_2jy9xUT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J8TUkT6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" visibility="package" method="_2jy9xkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2J9hcET6Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" visibility="package" method="_2jy9x0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2J_WoET6Ee2_n5XNBGdaxw" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_2ilc0ET6Ee2_n5XNBGdaxw" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ilc0UT6Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2ilc0kT6Ee2_n5XNBGdaxw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2ilc00T6Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2imD4ET6Ee2_n5XNBGdaxw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2imD4UT6Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2imD4kT6Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2imD40T6Ee2_n5XNBGdaxw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2imD5ET6Ee2_n5XNBGdaxw" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2imD5UT6Ee2_n5XNBGdaxw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2imD5kT6Ee2_n5XNBGdaxw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2imq8UT6Ee2_n5XNBGdaxw" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2imq8kT6Ee2_n5XNBGdaxw" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2inSAET6Ee2_n5XNBGdaxw" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2inSAUT6Ee2_n5XNBGdaxw" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2in5EET6Ee2_n5XNBGdaxw" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2in5EkT6Ee2_n5XNBGdaxw" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iogIET6Ee2_n5XNBGdaxw" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iogIUT6Ee2_n5XNBGdaxw" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_2iogIkT6Ee2_n5XNBGdaxw" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_2iogI0T6Ee2_n5XNBGdaxw" name="predecessor" type="_2J_WoET6Ee2_n5XNBGdaxw" association="_2kEqlkT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2ipHMET6Ee2_n5XNBGdaxw" name="endTimes" visibility="private" type="_2HXgcET6Ee2_n5XNBGdaxw" association="_2k-pgUT6Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_2ipuQUT6Ee2_n5XNBGdaxw" name="subObjects" type="_2fZl8kT6Ee2_n5XNBGdaxw" isReadOnly="true" association="_2k_QkET6Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jzk0ET6Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_2KBy4ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jzk0UT6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jzk0kT6Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_2fa0EET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jzk00T6Ee2_n5XNBGdaxw" name="obj" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2jzk1ET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jzk1UT6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2jzk1kT6Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_2KCZ8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2jzk10T6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jzk2ET6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jzk2UT6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jzk2kT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2jzk20T6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0L4ET6Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_2KDoEET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0L4UT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j0L4kT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j0L40T6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j0L5ET6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j0L5UT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j0L5kT6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0L50T6Ee2_n5XNBGdaxw" name="setDefaultParameters" specification="_2KDoGUT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0L6ET6Ee2_n5XNBGdaxw" name="getAllEndTimes" specification="_2KEPIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0L6UT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0L6kT6Ee2_n5XNBGdaxw" name="addToEndTimes" specification="_2KE2MUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0L60T6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0y8ET6Ee2_n5XNBGdaxw" name="peekEndTimes" specification="_2KFdQUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0y8UT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0y8kT6Ee2_n5XNBGdaxw" name="pollEndTimes" specification="_2KGEUET6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0y80T6Ee2_n5XNBGdaxw" name="addSubObject" specification="_2fbbIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0y9ET6Ee2_n5XNBGdaxw" name="obj" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0y9UT6Ee2_n5XNBGdaxw" name="getName" specification="_2KGEUUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0y9kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0y90T6Ee2_n5XNBGdaxw" name="setName" specification="_2KGrYET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0y-ET6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j0y-UT6Ee2_n5XNBGdaxw" name="getReleaseTime" specification="_2KHScET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j0y-kT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j1aAET6Ee2_n5XNBGdaxw" name="getPhase" specification="_2KHSckT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j1aAUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j1aAkT6Ee2_n5XNBGdaxw" name="getStartTime" specification="_2KHSdET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j1aA0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j1aBET6Ee2_n5XNBGdaxw" name="setEndTime" specification="_2KH5gUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j1aBUT6Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j1aBkT6Ee2_n5XNBGdaxw" name="setStartTime" specification="_2KH5g0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j1aB0T6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j1aCET6Ee2_n5XNBGdaxw" name="setReleaseTime" specification="_2KIgkET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j1aCUT6Ee2_n5XNBGdaxw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j1aCkT6Ee2_n5XNBGdaxw" name="setPeriod" specification="_2KIgkkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j1aC0T6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BEET6Ee2_n5XNBGdaxw" name="setPhase" specification="_2KJHoET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BEUT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BEkT6Ee2_n5XNBGdaxw" name="setNextReleaseTime" specification="_2KJHokT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BE0T6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BFET6Ee2_n5XNBGdaxw" name="maxPhaseComparison" specification="_2fbbIkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BFUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BFkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BF0T6Ee2_n5XNBGdaxw" name="maxPhaseComparison" specification="_2fbbJUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BGET6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BGUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BGkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BG0T6Ee2_n5XNBGdaxw" name="deadlineComparison" specification="_2fcCMUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BHET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BHUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BHkT6Ee2_n5XNBGdaxw" name="deadlineComparison" specification="_2fcCNET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BH0T6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BIET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BIUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BIkT6Ee2_n5XNBGdaxw" name="periodComparison" specification="_2fcCOET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BI0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BJET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2BJUT6Ee2_n5XNBGdaxw" name="periodComparison" specification="_2fcpQUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2BJkT6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BJ0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2BKET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oIET6Ee2_n5XNBGdaxw" name="priorityComparison" specification="_2fcpRUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oIUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oIkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oI0T6Ee2_n5XNBGdaxw" name="priorityComparison" specification="_2fdQUkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oJET6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oJUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oJkT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oJ0T6Ee2_n5XNBGdaxw" name="releaseTimeComparison" specification="_2fd3YET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oKET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oKUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oKkT6Ee2_n5XNBGdaxw" name="releaseTimeComparison" specification="_2fd3Y0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oK0T6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oLET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oLUT6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oLkT6Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" specification="_2feecET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oL0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oMET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oMUT6Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" specification="_2feec0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oMkT6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oM0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2j2oNET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j2oNUT6Ee2_n5XNBGdaxw" name="compareAscendingOrder" specification="_2KK80ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j2oNkT6Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j2oN0T6Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j2oOET6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j3PMET6Ee2_n5XNBGdaxw" name="compareDescendingOrder" specification="_2KLj4kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j3PMUT6Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j3PMkT6Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2j3PM0T6Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j3PNET6Ee2_n5XNBGdaxw" name="print" specification="_2KMK8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2j3PNUT6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2j3PNkT6Ee2_n5XNBGdaxw" name="print" specification="_2KMK8kT6Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_2KBy4ET6Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_2jzk0ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2KBy4UT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2KBy4kT6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2KBy40T6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2KCZ8ET6Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_2jzk1kT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2KDBAkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2KDBA0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2KCZ8UT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KCZ8kT6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDBAET6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDBAUT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDBBET6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2KDoEET6Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_2j0L4ET6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2KDoFkT6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2KDoF0T6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_2KDoEUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDoEkT6Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDoE0T6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDoFET6Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDoFUT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KDoGET6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2KDoGUT6Ee2_n5XNBGdaxw" name="setDefaultParameters" visibility="private" method="_2j0L50T6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2KEPIET6Ee2_n5XNBGdaxw" name="getAllEndTimes" method="_2j0L6ET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtQUc3Ee2VGuPmUBocQA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_2fa0FkT6Ee2_n5XNBGdaxw" type="_2HXgcET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2KE2MUT6Ee2_n5XNBGdaxw" name="addToEndTimes" method="_2j0L6kT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2KFdQET6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KFdQUT6Ee2_n5XNBGdaxw" name="peekEndTimes" method="_2j0y8ET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2KFdQkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KGEUET6Ee2_n5XNBGdaxw" name="pollEndTimes" method="_2j0y8kT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2KGEUUT6Ee2_n5XNBGdaxw" name="getName" method="_2j0y9UT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtQkc3Ee2VGuPmUBocQA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KGEUkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KGrYET6Ee2_n5XNBGdaxw" name="setName" method="_2j0y90T6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtQ0c3Ee2VGuPmUBocQA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KGrYUT6Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KHScET6Ee2_n5XNBGdaxw" name="getReleaseTime" method="_2j0y-UT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtREc3Ee2VGuPmUBocQA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KHScUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KHSckT6Ee2_n5XNBGdaxw" name="getPhase" method="_2j1aAET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtRUc3Ee2VGuPmUBocQA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KHSc0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KHSdET6Ee2_n5XNBGdaxw" name="getStartTime" method="_2j1aAkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtRkc3Ee2VGuPmUBocQA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KH5gET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KH5gUT6Ee2_n5XNBGdaxw" name="setEndTime" method="_2j1aBET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtR0c3Ee2VGuPmUBocQA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KH5gkT6Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KH5g0T6Ee2_n5XNBGdaxw" name="setStartTime" method="_2j1aBkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtSEc3Ee2VGuPmUBocQA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KH5hET6Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KIgkET6Ee2_n5XNBGdaxw" name="setReleaseTime" method="_2j1aCET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtSUc3Ee2VGuPmUBocQA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KIgkUT6Ee2_n5XNBGdaxw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KIgkkT6Ee2_n5XNBGdaxw" name="setPeriod" method="_2j1aCkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtSkc3Ee2VGuPmUBocQA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KIgk0T6Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KJHoET6Ee2_n5XNBGdaxw" name="setPhase" method="_2j2BEET6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtS0c3Ee2VGuPmUBocQA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KJHoUT6Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KJHokT6Ee2_n5XNBGdaxw" name="setNextReleaseTime" method="_2j2BEkT6Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_-pWtTEc3Ee2VGuPmUBocQA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_2KJHo0T6Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KK80ET6Ee2_n5XNBGdaxw" name="compareAscendingOrder" method="_2j2oNUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2KK80UT6Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KLj4ET6Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KLj4UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KLj4kT6Ee2_n5XNBGdaxw" name="compareDescendingOrder" method="_2j3PMET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2KLj40T6Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KLj5ET6Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2KLj5UT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KMK8ET6Ee2_n5XNBGdaxw" name="print" method="_2j3PNET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2KMK8UT6Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2KMK8kT6Ee2_n5XNBGdaxw" name="print" method="_2j3PNkT6Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_2fa0EET6Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_2jzk0kT6Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_2fa0E0T6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_2fa0FET6Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_-pWtQEc3Ee2VGuPmUBocQA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_2fa0EUT6Ee2_n5XNBGdaxw" name="obj" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fa0EkT6Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_2fa0FUT6Ee2_n5XNBGdaxw" type="_2J_WoET6Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fbbIET6Ee2_n5XNBGdaxw" name="addSubObject" method="_2j0y80T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fbbIUT6Ee2_n5XNBGdaxw" name="obj" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_2fbbIkT6Ee2_n5XNBGdaxw" name="maxPhaseComparison" method="_2j2BFET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fbbI0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fbbJET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fbbJUT6Ee2_n5XNBGdaxw" name="maxPhaseComparison" method="_2j2BF0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fbbJkT6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fbbJ0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcCMET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fcCMUT6Ee2_n5XNBGdaxw" name="deadlineComparison" method="_2j2BG0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fcCMkT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcCM0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fcCNET6Ee2_n5XNBGdaxw" name="deadlineComparison" method="_2j2BHkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fcCNUT6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcCNkT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcCN0T6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fcCOET6Ee2_n5XNBGdaxw" name="periodComparison" method="_2j2BIkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fcCOUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcpQET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fcpQUT6Ee2_n5XNBGdaxw" name="periodComparison" method="_2j2BJUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fcpQkT6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcpQ0T6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fcpRET6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fcpRUT6Ee2_n5XNBGdaxw" name="priorityComparison" method="_2j2oIET6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fdQUET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fdQUUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fdQUkT6Ee2_n5XNBGdaxw" name="priorityComparison" method="_2j2oI0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fdQU0T6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fdQVET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fdQVUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fd3YET6Ee2_n5XNBGdaxw" name="releaseTimeComparison" method="_2j2oJ0T6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fd3YUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fd3YkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2fd3Y0T6Ee2_n5XNBGdaxw" name="releaseTimeComparison" method="_2j2oKkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2fd3ZET6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fd3ZUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2fd3ZkT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2feecET6Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" method="_2j2oLkT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2feecUT6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2feeckT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_2feec0T6Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" method="_2j2oMUT6Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_2feedET6Ee2_n5XNBGdaxw" name="obj1" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ffFgET6Ee2_n5XNBGdaxw" name="obj2" type="_2J_WoET6Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_2ffFgUT6Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_2gDGMUT6Ee2_n5XNBGdaxw" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2ga5oET6Ee2_n5XNBGdaxw" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2gfLEET6Ee2_n5XNBGdaxw" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2gtNgET6Ee2_n5XNBGdaxw" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2gt0k0T6Ee2_n5XNBGdaxw" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_2j9V0ET6Ee2_n5XNBGdaxw" name="" memberEnd="_2hcNUkT6Ee2_n5XNBGdaxw _2j984ET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2j984ET6Ee2_n5XNBGdaxw" name="" type="_2FR1wET6Ee2_n5XNBGdaxw" association="_2j9V0ET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kCOUET6Ee2_n5XNBGdaxw" name="" memberEnd="_2iWzVET6Ee2_n5XNBGdaxw _2kCOUUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kCOUUT6Ee2_n5XNBGdaxw" name="" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2kCOUET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kCOUkT6Ee2_n5XNBGdaxw" name="" memberEnd="_2iXaYET6Ee2_n5XNBGdaxw _2kCOU0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kCOU0T6Ee2_n5XNBGdaxw" name="" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2kCOUkT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kEqlkT6Ee2_n5XNBGdaxw" name="" memberEnd="_2iogI0T6Ee2_n5XNBGdaxw _2kFRoET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kFRoET6Ee2_n5XNBGdaxw" name="" type="_2J_WoET6Ee2_n5XNBGdaxw" association="_2kEqlkT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kjywET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kjywUT6Ee2_n5XNBGdaxw _2hGPEET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kjywUT6Ee2_n5XNBGdaxw" name="" type="_2DjXcET6Ee2_n5XNBGdaxw" association="_2kjywET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2klA4UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2klA4kT6Ee2_n5XNBGdaxw _2hHdMET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2klA4kT6Ee2_n5XNBGdaxw" name="" type="_2DjXcET6Ee2_n5XNBGdaxw" association="_2klA4UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kln8UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kln8kT6Ee2_n5XNBGdaxw _2hIEQUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kln8kT6Ee2_n5XNBGdaxw" name="" type="_2DjXcET6Ee2_n5XNBGdaxw" association="_2kln8UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kmPAUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kmPAkT6Ee2_n5XNBGdaxw _2hLHkET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kmPAkT6Ee2_n5XNBGdaxw" name="" type="_2ERJIET6Ee2_n5XNBGdaxw" association="_2kmPAUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2km2EUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2km2EkT6Ee2_n5XNBGdaxw _2hLHkkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2km2EkT6Ee2_n5XNBGdaxw" name="" type="_2ERJIET6Ee2_n5XNBGdaxw" association="_2km2EUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kndIUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kndIkT6Ee2_n5XNBGdaxw _2hM8w0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kndIkT6Ee2_n5XNBGdaxw" name="" type="_2EWBoET6Ee2_n5XNBGdaxw" association="_2kndIUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kndJET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kndJUT6Ee2_n5XNBGdaxw _2hNj0UT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kndJUT6Ee2_n5XNBGdaxw" name="" type="_2EWBoET6Ee2_n5XNBGdaxw" association="_2kndJET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2koEMUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2koEMkT6Ee2_n5XNBGdaxw _2hPZAUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2koEMkT6Ee2_n5XNBGdaxw" name="" type="_2EZsAET6Ee2_n5XNBGdaxw" association="_2koEMUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2korQUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2korQkT6Ee2_n5XNBGdaxw _2hScUUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2korQkT6Ee2_n5XNBGdaxw" name="" type="_2Ez7sET6Ee2_n5XNBGdaxw" association="_2korQUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kpSUUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kpSUkT6Ee2_n5XNBGdaxw _2hTqckT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kpSUkT6Ee2_n5XNBGdaxw" name="" type="_2Ez7sET6Ee2_n5XNBGdaxw" association="_2kpSUUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kp5YUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kp5YkT6Ee2_n5XNBGdaxw _2hXU0ET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kp5YkT6Ee2_n5XNBGdaxw" name="" type="_2FDMQET6Ee2_n5XNBGdaxw" association="_2kp5YUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kqgcUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kqgckT6Ee2_n5XNBGdaxw _2hZxEET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kqgckT6Ee2_n5XNBGdaxw" name="" type="_2FDMQET6Ee2_n5XNBGdaxw" association="_2kqgcUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2krHgUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2krHgkT6Ee2_n5XNBGdaxw _2hhF0kT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2krHgkT6Ee2_n5XNBGdaxw" name="" type="_2Fi7gET6Ee2_n5XNBGdaxw" association="_2krHgUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2krukUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2krukkT6Ee2_n5XNBGdaxw _2hiT8UT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2krukkT6Ee2_n5XNBGdaxw" name="" type="_2Fi7gET6Ee2_n5XNBGdaxw" association="_2krukUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2ksVoET6Ee2_n5XNBGdaxw" name="" memberEnd="_2ksVoUT6Ee2_n5XNBGdaxw _2hi7AUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2ksVoUT6Ee2_n5XNBGdaxw" name="" type="_2Fi7gET6Ee2_n5XNBGdaxw" association="_2ksVoET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2ksVo0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2ksVpET6Ee2_n5XNBGdaxw _2hjiEUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2ksVpET6Ee2_n5XNBGdaxw" name="" type="_2Fi7gET6Ee2_n5XNBGdaxw" association="_2ksVo0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2ks8sUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2ks8skT6Ee2_n5XNBGdaxw _2hkJIUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2ks8skT6Ee2_n5XNBGdaxw" name="" type="_2Fi7gET6Ee2_n5XNBGdaxw" association="_2ks8sUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2ktjwUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2ktjwkT6Ee2_n5XNBGdaxw _2hl-UkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2ktjwkT6Ee2_n5XNBGdaxw" name="" type="_2Fw98ET6Ee2_n5XNBGdaxw" association="_2ktjwUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2ktjxET6Ee2_n5XNBGdaxw" name="" memberEnd="_2ktjxUT6Ee2_n5XNBGdaxw _2hmlY0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2ktjxUT6Ee2_n5XNBGdaxw" name="" type="_2Fw98ET6Ee2_n5XNBGdaxw" association="_2ktjxET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kuK0UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kuK0kT6Ee2_n5XNBGdaxw _2hnzgET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kuK0kT6Ee2_n5XNBGdaxw" name="" type="_2F45wET6Ee2_n5XNBGdaxw" association="_2kuK0UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kuK1ET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kuK1UT6Ee2_n5XNBGdaxw _2hoakkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kuK1UT6Ee2_n5XNBGdaxw" name="" type="_2F79EET6Ee2_n5XNBGdaxw" association="_2kuK1ET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kux4UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kux4kT6Ee2_n5XNBGdaxw _2hsE8ET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kux4kT6Ee2_n5XNBGdaxw" name="" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2kux4UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kux5ET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kux5UT6Ee2_n5XNBGdaxw _2hsE8kT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kux5UT6Ee2_n5XNBGdaxw" name="" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2kux5ET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kvY8UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kvY8kT6Ee2_n5XNBGdaxw _2hssAUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kvY8kT6Ee2_n5XNBGdaxw" name="" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2kvY8UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kwAAET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kwAAUT6Ee2_n5XNBGdaxw _2hssA0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kwAAUT6Ee2_n5XNBGdaxw" name="" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2kwAAET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kwAA0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2kwABET6Ee2_n5XNBGdaxw _2htTEUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kwABET6Ee2_n5XNBGdaxw" name="" type="_2GFHAET6Ee2_n5XNBGdaxw" association="_2kwAA0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kwnEET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kwnEUT6Ee2_n5XNBGdaxw _2huhMUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kwnEUT6Ee2_n5XNBGdaxw" name="" type="_2GJ_gET6Ee2_n5XNBGdaxw" association="_2kwnEET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kwnE0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2kwnFET6Ee2_n5XNBGdaxw _2huhM0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kwnFET6Ee2_n5XNBGdaxw" name="" type="_2GJ_gET6Ee2_n5XNBGdaxw" association="_2kwnE0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kwnFkT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kxOIET6Ee2_n5XNBGdaxw _2hvIRET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kxOIET6Ee2_n5XNBGdaxw" name="" type="_2GQtMET6Ee2_n5XNBGdaxw" association="_2kwnFkT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kxOIkT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kxOI0T6Ee2_n5XNBGdaxw _2hxkgUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kxOI0T6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kxOIkT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kx1MET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kx1MUT6Ee2_n5XNBGdaxw _2hxkg0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kx1MUT6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kx1MET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kx1M0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2kx1NET6Ee2_n5XNBGdaxw _2hyLkUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kx1NET6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kx1M0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kycQET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kycQUT6Ee2_n5XNBGdaxw _2hyyoET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kycQUT6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kycQET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kycQ0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2kycRET6Ee2_n5XNBGdaxw _2hyypUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kycRET6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kycQ0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kycRkT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kycR0T6Ee2_n5XNBGdaxw _2hzZsUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kycR0T6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kycRkT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kzDUUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kzDUkT6Ee2_n5XNBGdaxw _2h0AwkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kzDUkT6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kzDUUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kzDVET6Ee2_n5XNBGdaxw" name="" memberEnd="_2kzDVUT6Ee2_n5XNBGdaxw _2h1O4UT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kzDVUT6Ee2_n5XNBGdaxw" name="" type="_2GevoET6Ee2_n5XNBGdaxw" association="_2kzDVET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2kzqYUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2kzqYkT6Ee2_n5XNBGdaxw _2h3rIUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2kzqYkT6Ee2_n5XNBGdaxw" name="" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2kzqYUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k0RcUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k0RckT6Ee2_n5XNBGdaxw _2h3rI0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k0RckT6Ee2_n5XNBGdaxw" name="" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2k0RcUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k04gUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k04gkT6Ee2_n5XNBGdaxw _2h4SMUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k04gkT6Ee2_n5XNBGdaxw" name="" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2k04gUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k1fkUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k1fkkT6Ee2_n5XNBGdaxw _2h6HYkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k1fkkT6Ee2_n5XNBGdaxw" name="" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2k1fkUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k2GoET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k2GoUT6Ee2_n5XNBGdaxw _2h7VgUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k2GoUT6Ee2_n5XNBGdaxw" name="" type="_2G0G0ET6Ee2_n5XNBGdaxw" association="_2k2GoET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k2Go0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2k2GpET6Ee2_n5XNBGdaxw _2h9xwkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k2GpET6Ee2_n5XNBGdaxw" name="" type="_2HPkoET6Ee2_n5XNBGdaxw" association="_2k2Go0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k2tsUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k2tskT6Ee2_n5XNBGdaxw _2h-Y0UT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k2tskT6Ee2_n5XNBGdaxw" name="" type="_2HPkoET6Ee2_n5XNBGdaxw" association="_2k2tsUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k2ttET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k2ttUT6Ee2_n5XNBGdaxw _2iA1FET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k2ttUT6Ee2_n5XNBGdaxw" name="" type="_2HfcQET6Ee2_n5XNBGdaxw" association="_2k2ttET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k3UwUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k3UwkT6Ee2_n5XNBGdaxw _2iBcIUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k3UwkT6Ee2_n5XNBGdaxw" name="" type="_2HfcQET6Ee2_n5XNBGdaxw" association="_2k3UwUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k370UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k370kT6Ee2_n5XNBGdaxw _2iCDMkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k370kT6Ee2_n5XNBGdaxw" name="" type="_2HhRcET6Ee2_n5XNBGdaxw" association="_2k370UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k371ET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k371UT6Ee2_n5XNBGdaxw _2iEfcUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k371UT6Ee2_n5XNBGdaxw" name="" type="_2HrpgET6Ee2_n5XNBGdaxw" association="_2k371ET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k4i4UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k4i4kT6Ee2_n5XNBGdaxw _2iFGgET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k4i4kT6Ee2_n5XNBGdaxw" name="" type="_2HrpgET6Ee2_n5XNBGdaxw" association="_2k4i4UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k4i5ET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k4i5UT6Ee2_n5XNBGdaxw _2iIJ0ET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k4i5UT6Ee2_n5XNBGdaxw" name="" type="_2IQ4UET6Ee2_n5XNBGdaxw" association="_2k4i5ET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k5J8UT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k5J8kT6Ee2_n5XNBGdaxw _2iIw4UT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k5J8kT6Ee2_n5XNBGdaxw" name="" type="_2IQ4UET6Ee2_n5XNBGdaxw" association="_2k5J8UT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k5xAUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k5xAkT6Ee2_n5XNBGdaxw _2iIw40T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k5xAkT6Ee2_n5XNBGdaxw" name="" type="_2IQ4UET6Ee2_n5XNBGdaxw" association="_2k5xAUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k5xBET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k5xBUT6Ee2_n5XNBGdaxw _2iJ_A0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k5xBUT6Ee2_n5XNBGdaxw" name="" type="_2IQ4UET6Ee2_n5XNBGdaxw" association="_2k5xBET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k5xB0T6Ee2_n5XNBGdaxw" name="" memberEnd="_2k5xCET6Ee2_n5XNBGdaxw _2iKmEkT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k5xCET6Ee2_n5XNBGdaxw" name="" type="_2IQ4UET6Ee2_n5XNBGdaxw" association="_2k5xB0T6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k5xCkT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k5xC0T6Ee2_n5XNBGdaxw _2iLNIUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k5xC0T6Ee2_n5XNBGdaxw" name="" type="_2IQ4UET6Ee2_n5XNBGdaxw" association="_2k5xCkT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k6YEUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k6YEkT6Ee2_n5XNBGdaxw _2iL0MET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k6YEkT6Ee2_n5XNBGdaxw" name="" type="_2IXmAET6Ee2_n5XNBGdaxw" association="_2k6YEUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k6YFET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k6YFUT6Ee2_n5XNBGdaxw _2iNCUUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k6YFUT6Ee2_n5XNBGdaxw" name="" type="_2Ie6wET6Ee2_n5XNBGdaxw" association="_2k6YFET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k6_IUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k6_IkT6Ee2_n5XNBGdaxw _2iO3g0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k6_IkT6Ee2_n5XNBGdaxw" name="" type="_2IjMMET6Ee2_n5XNBGdaxw" association="_2k6_IUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k6_JET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k6_JUT6Ee2_n5XNBGdaxw _2iPek0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k6_JUT6Ee2_n5XNBGdaxw" name="" type="_2IjMMET6Ee2_n5XNBGdaxw" association="_2k6_JET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k7mMUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k7mMkT6Ee2_n5XNBGdaxw _2iQssET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k7mMkT6Ee2_n5XNBGdaxw" name="" type="_2IrvEET6Ee2_n5XNBGdaxw" association="_2k7mMUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k7mNET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k7mNUT6Ee2_n5XNBGdaxw _2iQsskT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k7mNUT6Ee2_n5XNBGdaxw" name="" type="_2IrvEET6Ee2_n5XNBGdaxw" association="_2k7mNET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k8NQUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k8NQkT6Ee2_n5XNBGdaxw _2iRTwUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k8NQkT6Ee2_n5XNBGdaxw" name="" type="_2IrvEET6Ee2_n5XNBGdaxw" association="_2k8NQUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k8NRET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k8NRUT6Ee2_n5XNBGdaxw _2iRTw0T6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k8NRUT6Ee2_n5XNBGdaxw" name="" type="_2IrvEET6Ee2_n5XNBGdaxw" association="_2k8NRET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k80UUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k80UkT6Ee2_n5XNBGdaxw _2iR60ET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k80UkT6Ee2_n5XNBGdaxw" name="" type="_2IrvEET6Ee2_n5XNBGdaxw" association="_2k80UUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k9bYUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k9bYkT6Ee2_n5XNBGdaxw _2iYBcUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k9bYkT6Ee2_n5XNBGdaxw" name="" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2k9bYUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k9bZET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k9bZUT6Ee2_n5XNBGdaxw _2iYogET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k9bZUT6Ee2_n5XNBGdaxw" name="" type="_2I6YkET6Ee2_n5XNBGdaxw" association="_2k9bZET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k-CcUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k-CckT6Ee2_n5XNBGdaxw _2idhAUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k-CckT6Ee2_n5XNBGdaxw" name="" type="_2Jb9AET6Ee2_n5XNBGdaxw" association="_2k-CcUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k-CdET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k-CdUT6Ee2_n5XNBGdaxw _2ieIEUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k-CdUT6Ee2_n5XNBGdaxw" name="" type="_2Jb9AET6Ee2_n5XNBGdaxw" association="_2k-CdET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k-pgUT6Ee2_n5XNBGdaxw" name="" memberEnd="_2k-pgkT6Ee2_n5XNBGdaxw _2ipHMET6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k-pgkT6Ee2_n5XNBGdaxw" name="" type="_2J_WoET6Ee2_n5XNBGdaxw" association="_2k-pgUT6Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_2k_QkET6Ee2_n5XNBGdaxw" name="" memberEnd="_2k_QkUT6Ee2_n5XNBGdaxw _2ipuQUT6Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_2k_QkUT6Ee2_n5XNBGdaxw" name="" type="_2J_WoET6Ee2_n5XNBGdaxw" association="_2k_QkET6Ee2_n5XNBGdaxw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_1_FuMET6Ee2_n5XNBGdaxw" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_2deTUET6Ee2_n5XNBGdaxw" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2eIaoET6Ee2_n5XNBGdaxw" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_1_cTgET6Ee2_n5XNBGdaxw" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_2dsVwET6Ee2_n5XNBGdaxw" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2dsVwkT6Ee2_n5XNBGdaxw" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2ds80UT6Ee2_n5XNBGdaxw" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2g4zsET6Ee2_n5XNBGdaxw" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_197QkET6Ee2_n5XNBGdaxw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_197QkUT6Ee2_n5XNBGdaxw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_1-vv8ET6Ee2_n5XNBGdaxw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_2dUiUET6Ee2_n5XNBGdaxw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_2A1aoET6Ee2_n5XNBGdaxw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_2fDns0T6Ee2_n5XNBGdaxw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_2HXgcET6Ee2_n5XNBGdaxw" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2dC1gET6Ee2_n5XNBGdaxw" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2dEqsET6Ee2_n5XNBGdaxw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2dFRwET6Ee2_n5XNBGdaxw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_2dF40ET6Ee2_n5XNBGdaxw" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_2dF40kT6Ee2_n5XNBGdaxw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_2dbQAET6Ee2_n5XNBGdaxw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_2d-poET6Ee2_n5XNBGdaxw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2eJBsUT6Ee2_n5XNBGdaxw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2fDAoET6Ee2_n5XNBGdaxw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_2fDAokT6Ee2_n5XNBGdaxw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2fDnsUT6Ee2_n5XNBGdaxw" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2fZl8ET6Ee2_n5XNBGdaxw" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_2fZl8kT6Ee2_n5XNBGdaxw" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_1_GVQET6Ee2_n5XNBGdaxw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_2de6YUT6Ee2_n5XNBGdaxw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2de6Y0T6Ee2_n5XNBGdaxw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2dzqgET6Ee2_n5XNBGdaxw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2d0RkUT6Ee2_n5XNBGdaxw" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_1_GVQUT6Ee2_n5XNBGdaxw" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_1_GVQkT6Ee2_n5XNBGdaxw" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_2de6ZUT6Ee2_n5XNBGdaxw" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_2dgIgUT6Ee2_n5XNBGdaxw" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_2dgvkET6Ee2_n5XNBGdaxw" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_2fyngET6Ee2_n5XNBGdaxw" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_2fyngUT6Ee2_n5XNBGdaxw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_2gM3MET6Ee2_n5XNBGdaxw" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_2ghnUkT6Ee2_n5XNBGdaxw" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1-qQYET6Ee2_n5XNBGdaxw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_1-qQYUT6Ee2_n5XNBGdaxw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_1-q3cET6Ee2_n5XNBGdaxw" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_1-q3cUT6Ee2_n5XNBGdaxw" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_2dStIET6Ee2_n5XNBGdaxw" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_2dStIkT6Ee2_n5XNBGdaxw" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_1_bFYET6Ee2_n5XNBGdaxw" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_1_bscET6Ee2_n5XNBGdaxw" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_1_bscUT6Ee2_n5XNBGdaxw" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_1_bsckT6Ee2_n5XNBGdaxw" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_2drHo0T6Ee2_n5XNBGdaxw" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_2drusUT6Ee2_n5XNBGdaxw" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_2dqgkET6Ee2_n5XNBGdaxw" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2dqgkkT6Ee2_n5XNBGdaxw" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_2drHoUT6Ee2_n5XNBGdaxw" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1_G8UET6Ee2_n5XNBGdaxw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_1_G8UUT6Ee2_n5XNBGdaxw" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_2dgvkkT6Ee2_n5XNBGdaxw" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1_G8UkT6Ee2_n5XNBGdaxw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_1_G8U0T6Ee2_n5XNBGdaxw" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_1_G8VET6Ee2_n5XNBGdaxw" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_2dhWoUT6Ee2_n5XNBGdaxw" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1_fW0ET6Ee2_n5XNBGdaxw" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_2duK9UT6Ee2_n5XNBGdaxw" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2duyBkT6Ee2_n5XNBGdaxw" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2dwAI0T6Ee2_n5XNBGdaxw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2dwnM0T6Ee2_n5XNBGdaxw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2dxORET6Ee2_n5XNBGdaxw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2dycYkT6Ee2_n5XNBGdaxw" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2e2zY0T6Ee2_n5XNBGdaxw" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2e4BgkT6Ee2_n5XNBGdaxw" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2e4ok0T6Ee2_n5XNBGdaxw" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2e5PpUT6Ee2_n5XNBGdaxw" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_2BGgYET6Ee2_n5XNBGdaxw" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_2fLjgET6Ee2_n5XNBGdaxw" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fNYsET6Ee2_n5XNBGdaxw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fN_w0T6Ee2_n5XNBGdaxw" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fOm1ET6Ee2_n5XNBGdaxw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fP08UT6Ee2_n5XNBGdaxw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fQcBET6Ee2_n5XNBGdaxw" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_2BL_8ET6Ee2_n5XNBGdaxw" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_2fS4QET6Ee2_n5XNBGdaxw" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fTfUUT6Ee2_n5XNBGdaxw" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fTfU0T6Ee2_n5XNBGdaxw" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fUGYUT6Ee2_n5XNBGdaxw" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_2fUGY0T6Ee2_n5XNBGdaxw" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_1BDYoET6Ee2_n5XNBGdaxw">
      <eAnnotations xmi:id="_1BF04ET6Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_1BJfQET6Ee2_n5XNBGdaxw" base_Package="_zeR-UET6Ee2_n5XNBGdaxw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_2Dee8ET6Ee2_n5XNBGdaxw" genericsValue="T,E" base_Element="_2DbboET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2DoP8ET6Ee2_n5XNBGdaxw" base_Element="_2Dno4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2DpeEET6Ee2_n5XNBGdaxw" base_Element="_2Dno4ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2DpeEUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2Dr6UET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2DqsMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2DtvgET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2DshYET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2DwLwET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2DuWkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2DxZ4ET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2Dwy0ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2DzPEET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2DyA8ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2EgZsET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2EfyoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2Eo8kET6Ee2_n5XNBGdaxw" base_Element="_2EnucET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Eo8kUT6Ee2_n5XNBGdaxw" base_Element="_2EnucET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Eo8kkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EpjoET6Ee2_n5XNBGdaxw" base_Element="_2Eo8k0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2EpjoUT6Ee2_n5XNBGdaxw" base_Element="_2Eo8k0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2EpjokT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EqxwUT6Ee2_n5XNBGdaxw" base_Element="_2EqxwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ErY0ET6Ee2_n5XNBGdaxw" base_Element="_2EqxwET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ErY0UT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ErY00T6Ee2_n5XNBGdaxw" base_Element="_2ErY0kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Er_4ET6Ee2_n5XNBGdaxw" base_Element="_2ErY0kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Er_4UT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2Esm8ET6Ee2_n5XNBGdaxw" base_Element="_2Er_4kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Esm8UT6Ee2_n5XNBGdaxw" base_Element="_2Er_4kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Esm8kT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EtOAET6Ee2_n5XNBGdaxw" base_Element="_2Esm80T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2EtOAUT6Ee2_n5XNBGdaxw" base_Element="_2Esm80T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2EtOAkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2Et1EET6Ee2_n5XNBGdaxw" base_Element="_2EtOA0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Et1EUT6Ee2_n5XNBGdaxw" base_Element="_2EtOA0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Et1EkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EucIET6Ee2_n5XNBGdaxw" base_Element="_2Et1E0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2EucIUT6Ee2_n5XNBGdaxw" base_Element="_2Et1E0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2EucIkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EvDMUT6Ee2_n5XNBGdaxw" base_Element="_2EvDMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2EvqQET6Ee2_n5XNBGdaxw" base_Element="_2EvDMET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2EvqQUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EwRUET6Ee2_n5XNBGdaxw" base_Element="_2EvqQkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2EwRUUT6Ee2_n5XNBGdaxw" base_Element="_2EvqQkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2EwRUkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2Ew4YET6Ee2_n5XNBGdaxw" base_Element="_2EwRU0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Ew4YUT6Ee2_n5XNBGdaxw" base_Element="_2EwRU0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Ew4YkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ExfcET6Ee2_n5XNBGdaxw" base_Element="_2Ew4Y0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ExfcUT6Ee2_n5XNBGdaxw" base_Element="_2Ew4Y0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ExfckT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2EyGgUT6Ee2_n5XNBGdaxw" base_Element="_2EyGgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2EytkET6Ee2_n5XNBGdaxw" base_Element="_2EyGgET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2EytkUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2E3mEET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2E2_AUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FFBcET6Ee2_n5XNBGdaxw" base_Element="_2FEaYET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FFBcUT6Ee2_n5XNBGdaxw" base_Element="_2FEaYET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FFBckT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FGPkET6Ee2_n5XNBGdaxw" base_Element="_2FFogET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FGPkUT6Ee2_n5XNBGdaxw" base_Element="_2FFogET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FGPkkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FG2oET6Ee2_n5XNBGdaxw" base_Element="_2FGPk0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FG2oUT6Ee2_n5XNBGdaxw" base_Element="_2FGPk0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FG2okT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2FM9QET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2FLvIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FROsUT6Ee2_n5XNBGdaxw" base_Element="_2FQnpET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FROskT6Ee2_n5XNBGdaxw" base_Element="_2FQnpET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FROs0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FTq8UT6Ee2_n5XNBGdaxw" base_Element="_2FTq8ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FXVUET6Ee2_n5XNBGdaxw" base_Element="_2FWuQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FXVUUT6Ee2_n5XNBGdaxw" base_Element="_2FWuQET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FXVUkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FX8YET6Ee2_n5XNBGdaxw" base_Element="_2FXVU0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FX8YUT6Ee2_n5XNBGdaxw" base_Element="_2FXVU0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FYjcET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FYjckT6Ee2_n5XNBGdaxw" base_Element="_2FYjcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FZKgET6Ee2_n5XNBGdaxw" base_Element="_2FYjcUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FZKgUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2FnM8ET6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2Fml4kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2Fn0AET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2FnM8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2FpCIET6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2FobEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FreYET6Ee2_n5XNBGdaxw" base_Element="_2Fq3UET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FreYUT6Ee2_n5XNBGdaxw" base_Element="_2Fq3UET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FreYkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2FyzIUT6Ee2_n5XNBGdaxw" base_Element="_2FyzIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2FzaMET6Ee2_n5XNBGdaxw" base_Element="_2FyzIET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2FzaMUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2GNp4ET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2GMbwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2GPfEET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2GOQ8ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2GSiYkT6Ee2_n5XNBGdaxw" base_Element="_2GSiYET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2GTJcET6Ee2_n5XNBGdaxw" base_Element="_2GSiYET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2GTJcUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2GTwhET6Ee2_n5XNBGdaxw" base_Element="_2GTwgkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2GUXkET6Ee2_n5XNBGdaxw" base_Element="_2GTwgkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2GUXkUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2GUXk0T6Ee2_n5XNBGdaxw" base_Element="_2GUXkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2GU-oET6Ee2_n5XNBGdaxw" base_Element="_2GUXkkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2GU-oUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2GaeMUT6Ee2_n5XNBGdaxw" base_Element="_2GaeMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2GbFQET6Ee2_n5XNBGdaxw" base_Element="_2GaeMET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2GbFQUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2Gc6cET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2GcTYET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2Ggk0ET6Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_2Gf9wET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2Ghy8ET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2GhL4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_2GiaA0T6Ee2_n5XNBGdaxw" base_Element="_2GiaAET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2GunQET6Ee2_n5XNBGdaxw" base_Element="_2GuAMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2GunQUT6Ee2_n5XNBGdaxw" base_Element="_2GuAMET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2GunQkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2Gy4sET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2GyRoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2G9300T6Ee2_n5XNBGdaxw" base_Element="_2G930UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2G-e4ET6Ee2_n5XNBGdaxw" base_Element="_2G930UT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2G-e4UT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2G_F8ET6Ee2_n5XNBGdaxw" base_Element="_2G-e5ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2G_F8UT6Ee2_n5XNBGdaxw" base_Element="_2G-e5ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2G_F8kT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2G_F9UT6Ee2_n5XNBGdaxw" base_Element="_2G_F80T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2G_tAET6Ee2_n5XNBGdaxw" base_Element="_2G_F80T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2G_tAUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HA7IET6Ee2_n5XNBGdaxw" base_Element="_2HAUEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HA7IUT6Ee2_n5XNBGdaxw" base_Element="_2HAUEET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HBiMET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HCJQET6Ee2_n5XNBGdaxw" base_Element="_2HBiMUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HCJQUT6Ee2_n5XNBGdaxw" base_Element="_2HBiMUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HCJQkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HCwUUT6Ee2_n5XNBGdaxw" base_Element="_2HCJQ0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HCwUkT6Ee2_n5XNBGdaxw" base_Element="_2HCJQ0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HDXYET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HDXY0T6Ee2_n5XNBGdaxw" base_Element="_2HDXYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HD-cET6Ee2_n5XNBGdaxw" base_Element="_2HDXYUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HD-cUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HElgUT6Ee2_n5XNBGdaxw" base_Element="_2HD-c0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HFMkET6Ee2_n5XNBGdaxw" base_Element="_2HD-c0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HFMkUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2HFzoET6Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_2HFMkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HQywET6Ee2_n5XNBGdaxw" base_Element="_2HQLsET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HQywUT6Ee2_n5XNBGdaxw" base_Element="_2HQLsET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HQywkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HRZ0ET6Ee2_n5XNBGdaxw" base_Element="_2HQyw0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HRZ0UT6Ee2_n5XNBGdaxw" base_Element="_2HQyw0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HRZ0kT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HSA4UT6Ee2_n5XNBGdaxw" base_Element="_2HSA4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HSA4kT6Ee2_n5XNBGdaxw" base_Element="_2HSA4ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HSA40T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2HUdIET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2HT2EET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2HWSUET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2HVrQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2HXgcUT6Ee2_n5XNBGdaxw" base_Element="_2HXgcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2HYHgUT6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2HYHgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2HifkET6Ee2_n5XNBGdaxw" base_Element="_2Hh4gET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2HifkUT6Ee2_n5XNBGdaxw" base_Element="_2Hh4gET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2HifkkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2Hk70ET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2HkUwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2HomMET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2Hn_IET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2HqbYET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2Hp0UET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2H9WUET6Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_2H8vQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2H-kcET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2H99YUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IAZoUT6Ee2_n5XNBGdaxw" base_Element="_2IAZoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2IHHUET6Ee2_n5XNBGdaxw" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_2IGgQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IMm4UT6Ee2_n5XNBGdaxw" base_Element="_2IMm4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IN1AUT6Ee2_n5XNBGdaxw" base_Element="_2IN1AET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IStgET6Ee2_n5XNBGdaxw" base_Element="_2ISGcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IStgUT6Ee2_n5XNBGdaxw" base_Element="_2ISGcET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IStgkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ISthET6Ee2_n5XNBGdaxw" base_Element="_2IStg0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ITUkET6Ee2_n5XNBGdaxw" base_Element="_2IStg0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ITUkUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ITUlET6Ee2_n5XNBGdaxw" base_Element="_2ITUkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ITUlUT6Ee2_n5XNBGdaxw" base_Element="_2ITUkkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ITUlkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IlBYET6Ee2_n5XNBGdaxw" base_Element="_2IkaVET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IlBYUT6Ee2_n5XNBGdaxw" base_Element="_2IkaVET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IlBYkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IlocUT6Ee2_n5XNBGdaxw" base_Element="_2IlocET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IlockT6Ee2_n5XNBGdaxw" base_Element="_2IlocET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Iloc0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ImPgUT6Ee2_n5XNBGdaxw" base_Element="_2IlodET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ImPgkT6Ee2_n5XNBGdaxw" base_Element="_2IlodET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ImPg0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ItkQET6Ee2_n5XNBGdaxw" base_Element="_2Is9MET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ItkQUT6Ee2_n5XNBGdaxw" base_Element="_2Is9MET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ItkQkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IuLUUT6Ee2_n5XNBGdaxw" base_Element="_2IuLUET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IuLUkT6Ee2_n5XNBGdaxw" base_Element="_2IuLUET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IuLU0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IuyYET6Ee2_n5XNBGdaxw" base_Element="_2IuLVET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IuyYUT6Ee2_n5XNBGdaxw" base_Element="_2IuLVET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IuyYkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IvZcET6Ee2_n5XNBGdaxw" base_Element="_2IuyY0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IvZcUT6Ee2_n5XNBGdaxw" base_Element="_2IuyY0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IvZckT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IwAgET6Ee2_n5XNBGdaxw" base_Element="_2IvZc0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IwAgUT6Ee2_n5XNBGdaxw" base_Element="_2IvZc0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IwAgkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IwAhET6Ee2_n5XNBGdaxw" base_Element="_2IwAg0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IwnkET6Ee2_n5XNBGdaxw" base_Element="_2IwAg0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IwnkUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IwnlET6Ee2_n5XNBGdaxw" base_Element="_2IwnkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IxOoET6Ee2_n5XNBGdaxw" base_Element="_2IwnkkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IxOoUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IxOpET6Ee2_n5XNBGdaxw" base_Element="_2IxOokT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Ix1sET6Ee2_n5XNBGdaxw" base_Element="_2IxOokT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Ix1sUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IycwET6Ee2_n5XNBGdaxw" base_Element="_2Ix1skT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IycwUT6Ee2_n5XNBGdaxw" base_Element="_2Ix1skT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IycwkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IycxET6Ee2_n5XNBGdaxw" base_Element="_2Iycw0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2IzD0ET6Ee2_n5XNBGdaxw" base_Element="_2Iycw0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2IzD0UT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2IzD00T6Ee2_n5XNBGdaxw" base_Element="_2IzD0kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Izq4ET6Ee2_n5XNBGdaxw" base_Element="_2IzD0kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Izq4UT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2Izq5ET6Ee2_n5XNBGdaxw" base_Element="_2Izq4kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2I0R8ET6Ee2_n5XNBGdaxw" base_Element="_2Izq4kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2I0R8UT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2I05AET6Ee2_n5XNBGdaxw" base_Element="_2I0R8kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2I05AUT6Ee2_n5XNBGdaxw" base_Element="_2I0R8kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2I05AkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2I1gEUT6Ee2_n5XNBGdaxw" base_Element="_2I05A0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2I1gEkT6Ee2_n5XNBGdaxw" base_Element="_2I05A0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2I1gE0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2I2HIUT6Ee2_n5XNBGdaxw" base_Element="_2I1gFET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2I2HIkT6Ee2_n5XNBGdaxw" base_Element="_2I1gFET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2I2HI0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2I2uMET6Ee2_n5XNBGdaxw" base_Element="_2I2HJET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2I2uMUT6Ee2_n5XNBGdaxw" base_Element="_2I2HJET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2I2uMkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_2JGl0kT6Ee2_n5XNBGdaxw" base_Element="_2JF-wET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_2JHz8UT6Ee2_n5XNBGdaxw" base_Element="_2JHM4kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_2JIbBET6Ee2_n5XNBGdaxw" base_Element="_2JIbAET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_2JKQMkT6Ee2_n5XNBGdaxw" base_Element="_2JJpI0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2JbV8ET6Ee2_n5XNBGdaxw" genericsValue="InstructionParameters" base_Element="_2Jau4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2JdyMET6Ee2_n5XNBGdaxw" genericsValue="InstructionParameters" base_Element="_2JdLIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_2JmVEET6Ee2_n5XNBGdaxw" base_Element="_2JluAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2JwGEET6Ee2_n5XNBGdaxw" base_Element="_2JvfAET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2JwtIET6Ee2_n5XNBGdaxw" base_Element="_2JvfAET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2JwtIUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2JwtI0T6Ee2_n5XNBGdaxw" base_Element="_2JwtIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2JxUMET6Ee2_n5XNBGdaxw" base_Element="_2JwtIkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2JxUMUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2Jx7QET6Ee2_n5XNBGdaxw" base_Element="_2JxUMkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2Jx7QUT6Ee2_n5XNBGdaxw" base_Element="_2JxUMkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2Jx7QkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2JyiUET6Ee2_n5XNBGdaxw" base_Element="_2Jx7Q0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2JyiUUT6Ee2_n5XNBGdaxw" base_Element="_2Jx7Q0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2JyiUkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2JzJYET6Ee2_n5XNBGdaxw" base_Element="_2JyiU0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2JzJYUT6Ee2_n5XNBGdaxw" base_Element="_2JyiU0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2JzJYkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2JzwcET6Ee2_n5XNBGdaxw" base_Element="_2JzJY0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2JzwcUT6Ee2_n5XNBGdaxw" base_Element="_2JzJY0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2JzwckT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J0XgET6Ee2_n5XNBGdaxw" base_Element="_2Jzwc0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J0XgUT6Ee2_n5XNBGdaxw" base_Element="_2Jzwc0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J0XgkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J0-kET6Ee2_n5XNBGdaxw" base_Element="_2J0Xg0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J0-kUT6Ee2_n5XNBGdaxw" base_Element="_2J0Xg0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J0-kkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J1loET6Ee2_n5XNBGdaxw" base_Element="_2J0-k0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J1loUT6Ee2_n5XNBGdaxw" base_Element="_2J0-k0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J1lokT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J2MsET6Ee2_n5XNBGdaxw" base_Element="_2J1lo0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J2MsUT6Ee2_n5XNBGdaxw" base_Element="_2J1lo0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J2MskT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J2zwET6Ee2_n5XNBGdaxw" base_Element="_2J2Ms0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J2zwUT6Ee2_n5XNBGdaxw" base_Element="_2J2Ms0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J2zwkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J3a0ET6Ee2_n5XNBGdaxw" base_Element="_2J2zw0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J3a0UT6Ee2_n5XNBGdaxw" base_Element="_2J2zw0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J3a0kT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J4B4ET6Ee2_n5XNBGdaxw" base_Element="_2J3a00T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J4B4UT6Ee2_n5XNBGdaxw" base_Element="_2J3a00T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J4B4kT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J4B5ET6Ee2_n5XNBGdaxw" base_Element="_2J4B40T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J4o8ET6Ee2_n5XNBGdaxw" base_Element="_2J4B40T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J4o8UT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J4o80T6Ee2_n5XNBGdaxw" base_Element="_2J4o8kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J5QAET6Ee2_n5XNBGdaxw" base_Element="_2J4o8kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J5QAUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J5QA0T6Ee2_n5XNBGdaxw" base_Element="_2J5QAkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J53EET6Ee2_n5XNBGdaxw" base_Element="_2J5QAkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J53EUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J53E0T6Ee2_n5XNBGdaxw" base_Element="_2J53EkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J6eIET6Ee2_n5XNBGdaxw" base_Element="_2J53EkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J6eIUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J6eI0T6Ee2_n5XNBGdaxw" base_Element="_2J6eIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J7FMET6Ee2_n5XNBGdaxw" base_Element="_2J6eIkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J7FMUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J7FM0T6Ee2_n5XNBGdaxw" base_Element="_2J7FMkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J7FNET6Ee2_n5XNBGdaxw" base_Element="_2J7FMkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J7sQET6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J7sQkT6Ee2_n5XNBGdaxw" base_Element="_2J7sQUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J8TUET6Ee2_n5XNBGdaxw" base_Element="_2J7sQUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J8TUUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J86YET6Ee2_n5XNBGdaxw" base_Element="_2J8TUkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J86YUT6Ee2_n5XNBGdaxw" base_Element="_2J8TUkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J86YkT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2J9hcUT6Ee2_n5XNBGdaxw" base_Element="_2J9hcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2J-IgET6Ee2_n5XNBGdaxw" base_Element="_2J9hcET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2J-IgUT6Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2KE2MET6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2KEPIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dDckET6Ee2_n5XNBGdaxw" base_Element="_2dC1gET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dEqsUT6Ee2_n5XNBGdaxw" base_Element="_2dEqsET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dFRwUT6Ee2_n5XNBGdaxw" base_Element="_2dFRwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dF40UT6Ee2_n5XNBGdaxw" base_Element="_2dF40ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dGf4ET6Ee2_n5XNBGdaxw" base_Element="_2dF40kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dI8IET6Ee2_n5XNBGdaxw" base_Element="_2dIVEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dI8IUT6Ee2_n5XNBGdaxw" base_Element="_2dIVEUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dI8IkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2dKxUET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2dKKRET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2dLYYET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2dKxUkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2dObsUT6Ee2_n5XNBGdaxw" genericsValue="String, Activation" base_Element="_2dObsET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dStIUT6Ee2_n5XNBGdaxw" base_Element="_2dStIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dTUMET6Ee2_n5XNBGdaxw" base_Element="_2dStIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dVJYET6Ee2_n5XNBGdaxw" base_Element="_2dUiUET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dYMsUT6Ee2_n5XNBGdaxw" base_Element="_2dXlpkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dYMskT6Ee2_n5XNBGdaxw" base_Element="_2dXlpkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dYMs0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2dbQAUT6Ee2_n5XNBGdaxw" base_Element="_2dbQAET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ddFMUT6Ee2_n5XNBGdaxw" base_Element="_2dceIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2ddFMkT6Ee2_n5XNBGdaxw" base_Element="_2dceIET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2ddFM0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2de6YET6Ee2_n5XNBGdaxw" base_Element="_2deTUET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2de6YkT6Ee2_n5XNBGdaxw" base_Element="_2de6YUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2de6ZET6Ee2_n5XNBGdaxw" base_Element="_2de6Y0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dgIgET6Ee2_n5XNBGdaxw" base_Element="_2de6ZUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dgIgkT6Ee2_n5XNBGdaxw" base_Element="_2dgIgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dgvkUT6Ee2_n5XNBGdaxw" base_Element="_2dgvkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dhWoET6Ee2_n5XNBGdaxw" base_Element="_2dgvkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dhWokT6Ee2_n5XNBGdaxw" base_Element="_2dhWoUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2djy4UT6Ee2_n5XNBGdaxw" base_Element="_2djL0kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2djy4kT6Ee2_n5XNBGdaxw" base_Element="_2djL0kT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2djy40T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2dndQET6Ee2_n5XNBGdaxw" genericsValue="String, Flow" base_Element="_2dm2MET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2doEUET6Ee2_n5XNBGdaxw" genericsValue="Node, Activation" base_Element="_2dndQUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dqgkUT6Ee2_n5XNBGdaxw" base_Element="_2dqgkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2drHoET6Ee2_n5XNBGdaxw" base_Element="_2dqgkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2drHokT6Ee2_n5XNBGdaxw" base_Element="_2drHoUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2drusET6Ee2_n5XNBGdaxw" base_Element="_2drHo0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2druskT6Ee2_n5XNBGdaxw" base_Element="_2drusUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dsVwUT6Ee2_n5XNBGdaxw" base_Element="_2dsVwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2ds80ET6Ee2_n5XNBGdaxw" base_Element="_2dsVwkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2dtj4ET6Ee2_n5XNBGdaxw" base_Element="_2ds80UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2duyAET6Ee2_n5XNBGdaxw" base_Element="_2duK9UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2duyA0T6Ee2_n5XNBGdaxw" base_Element="_2duyAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2duyBET6Ee2_n5XNBGdaxw" base_Element="_2duyAUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2duyBUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2dvZEET6Ee2_n5XNBGdaxw" base_Element="_2duyBkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dwAIET6Ee2_n5XNBGdaxw" base_Element="_2dvZEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dwAIUT6Ee2_n5XNBGdaxw" base_Element="_2dvZEUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dwAIkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2dwAJET6Ee2_n5XNBGdaxw" base_Element="_2dwAI0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dwnMET6Ee2_n5XNBGdaxw" base_Element="_2dwAJUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dwnMUT6Ee2_n5XNBGdaxw" base_Element="_2dwAJUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dwnMkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2dwnNET6Ee2_n5XNBGdaxw" base_Element="_2dwnM0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dxOQUT6Ee2_n5XNBGdaxw" base_Element="_2dwnNUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dxOQkT6Ee2_n5XNBGdaxw" base_Element="_2dwnNUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dxOQ0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2dx1UET6Ee2_n5XNBGdaxw" base_Element="_2dxORET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dx1U0T6Ee2_n5XNBGdaxw" base_Element="_2dx1UUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dycYET6Ee2_n5XNBGdaxw" base_Element="_2dx1UUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dycYUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2dycY0T6Ee2_n5XNBGdaxw" base_Element="_2dycYkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2dzDcET6Ee2_n5XNBGdaxw" base_Element="_2dycZET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2dzDcUT6Ee2_n5XNBGdaxw" base_Element="_2dycZET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2dzDckT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2d0RkET6Ee2_n5XNBGdaxw" base_Element="_2dzqgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2d04oET6Ee2_n5XNBGdaxw" base_Element="_2d0RkUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2d2t0UT6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2d2t0ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2d3U4UT6Ee2_n5XNBGdaxw" base_Element="_2d3U4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2d6_Q0T6Ee2_n5XNBGdaxw" base_Element="_2d6_QET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2d7mUET6Ee2_n5XNBGdaxw" base_Element="_2d6_QET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2d7mUUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2d9bgET6Ee2_n5XNBGdaxw" genericsValue="String, Node" base_Element="_2d80cET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2d_QsET6Ee2_n5XNBGdaxw" base_Element="_2d-poET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2eDiJkT6Ee2_n5XNBGdaxw" base_Element="_2eDiI0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2eEJMET6Ee2_n5XNBGdaxw" base_Element="_2eDiI0T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2eEJMUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2eEwRUT6Ee2_n5XNBGdaxw" genericsValue="ScheduleTime" base_Element="_2eEwQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2eGlc0T6Ee2_n5XNBGdaxw" base_Element="_2eGlcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2eHMgET6Ee2_n5XNBGdaxw" base_Element="_2eGlcET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2eHMgUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2eJBsET6Ee2_n5XNBGdaxw" base_Element="_2eIaoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2eJowET6Ee2_n5XNBGdaxw" base_Element="_2eJBsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2eZgYET6Ee2_n5XNBGdaxw" genericsValue="String,InstructionTimeSlot" base_Element="_2eY5UET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2ecjsET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2eb8oUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2edx0ET6Ee2_n5XNBGdaxw" genericsValue="Double" base_Element="_2edKwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2ee_8ET6Ee2_n5XNBGdaxw" genericsValue="Double,ReliabilityRow" base_Element="_2eeY4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2eqmIET6Ee2_n5XNBGdaxw" genericsValue="Activation,Row&lt;Activation>" base_Element="_2ep_EET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2erNM0T6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2eqmIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2er0QkT6Ee2_n5XNBGdaxw" base_Element="_2er0QUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2euQgET6Ee2_n5XNBGdaxw" base_Element="_2etpcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2eu3kET6Ee2_n5XNBGdaxw" base_Element="_2euQgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e1lRET6Ee2_n5XNBGdaxw" base_Element="_2e1lQkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e2MUET6Ee2_n5XNBGdaxw" base_Element="_2e1lQkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e2MUUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e2zYET6Ee2_n5XNBGdaxw" base_Element="_2e2MUkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e2zYUT6Ee2_n5XNBGdaxw" base_Element="_2e2MUkT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e2zYkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2e3acET6Ee2_n5XNBGdaxw" base_Element="_2e2zY0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e3ac0T6Ee2_n5XNBGdaxw" base_Element="_2e3acUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e4BgET6Ee2_n5XNBGdaxw" base_Element="_2e3acUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e4BgUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2e4Bg0T6Ee2_n5XNBGdaxw" base_Element="_2e4BgkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e4okET6Ee2_n5XNBGdaxw" base_Element="_2e4BhET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e4okUT6Ee2_n5XNBGdaxw" base_Element="_2e4BhET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e4okkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2e4olET6Ee2_n5XNBGdaxw" base_Element="_2e4ok0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e5PokT6Ee2_n5XNBGdaxw" base_Element="_2e5PoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e5Po0T6Ee2_n5XNBGdaxw" base_Element="_2e5PoET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e5PpET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2e52sET6Ee2_n5XNBGdaxw" base_Element="_2e5PpUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e52s0T6Ee2_n5XNBGdaxw" base_Element="_2e52sUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e52tET6Ee2_n5XNBGdaxw" base_Element="_2e52sUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e52tUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e6dwkT6Ee2_n5XNBGdaxw" base_Element="_2e6dwET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e6dw0T6Ee2_n5XNBGdaxw" base_Element="_2e6dwET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e6dxET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e7E0kT6Ee2_n5XNBGdaxw" base_Element="_2e7E0ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e7E00T6Ee2_n5XNBGdaxw" base_Element="_2e7E0ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e7r4ET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2e7r40T6Ee2_n5XNBGdaxw" base_Element="_2e7r4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2e8S8ET6Ee2_n5XNBGdaxw" base_Element="_2e7r4UT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2e8S8UT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fDAoUT6Ee2_n5XNBGdaxw" base_Element="_2fDAoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fDnsET6Ee2_n5XNBGdaxw" base_Element="_2fDAokT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fDnskT6Ee2_n5XNBGdaxw" base_Element="_2fDnsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fEOwET6Ee2_n5XNBGdaxw" base_Element="_2fDns0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2fGD8ET6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2fFc4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fMKkET6Ee2_n5XNBGdaxw" base_Element="_2fLjgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fMKk0T6Ee2_n5XNBGdaxw" base_Element="_2fMKkUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fMKlET6Ee2_n5XNBGdaxw" base_Element="_2fMKkUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fMKlUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fMxokT6Ee2_n5XNBGdaxw" base_Element="_2fMxoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fMxo0T6Ee2_n5XNBGdaxw" base_Element="_2fMxoET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fMxpET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fNYsUT6Ee2_n5XNBGdaxw" base_Element="_2fNYsET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fN_wET6Ee2_n5XNBGdaxw" base_Element="_2fNYskT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fN_wUT6Ee2_n5XNBGdaxw" base_Element="_2fNYskT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fN_wkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fN_xET6Ee2_n5XNBGdaxw" base_Element="_2fN_w0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fOm0UT6Ee2_n5XNBGdaxw" base_Element="_2fN_xUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fOm0kT6Ee2_n5XNBGdaxw" base_Element="_2fN_xUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fOm00T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fPN4ET6Ee2_n5XNBGdaxw" base_Element="_2fOm1ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fPN40T6Ee2_n5XNBGdaxw" base_Element="_2fPN4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fPN5ET6Ee2_n5XNBGdaxw" base_Element="_2fPN4UT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fP08ET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fP08kT6Ee2_n5XNBGdaxw" base_Element="_2fP08UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fQcAUT6Ee2_n5XNBGdaxw" base_Element="_2fP080T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fQcAkT6Ee2_n5XNBGdaxw" base_Element="_2fP080T6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fQcA0T6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fRDEET6Ee2_n5XNBGdaxw" base_Element="_2fQcBET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2fRDE0T6Ee2_n5XNBGdaxw" base_Element="_2fRDEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2fRDFET6Ee2_n5XNBGdaxw" base_Element="_2fRDEUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2fRDFUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2fTfUET6Ee2_n5XNBGdaxw" base_Element="_2fS4QET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fTfUkT6Ee2_n5XNBGdaxw" base_Element="_2fTfUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fUGYET6Ee2_n5XNBGdaxw" base_Element="_2fTfU0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fUGYkT6Ee2_n5XNBGdaxw" base_Element="_2fUGYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fUtcET6Ee2_n5XNBGdaxw" base_Element="_2fUGY0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fZl8UT6Ee2_n5XNBGdaxw" base_Element="_2fZl8ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2faNAET6Ee2_n5XNBGdaxw" base_Element="_2fZl8kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2fyAcET6Ee2_n5XNBGdaxw" genericsValue="T, E" base_Element="_2fxZYET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2fzOkET6Ee2_n5XNBGdaxw" base_Element="_2fyngUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2fz1oET6Ee2_n5XNBGdaxw" genericsValue="Activation" base_Element="_2fzOkUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f1DwET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2f0csUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f2R4ET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2f1q0UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f248ET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2f2R4kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f3gAET6Ee2_n5XNBGdaxw" genericsValue="ScheduleTime" base_Element="_2f248kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f6jUET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2f58QET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f9moET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2f8_kkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f-NsET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2f8_k0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f-0wET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2f-Ns0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2f_b0ET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2f-0wkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gAp8ET6Ee2_n5XNBGdaxw" genericsValue="Activation" base_Element="_2gAC4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gB4EkT6Ee2_n5XNBGdaxw" base_Element="_2gBRAET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gB4E0T6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2gB4EET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gCfIET6Ee2_n5XNBGdaxw" base_Element="_2gBRAET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gCfIUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2gDGMET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gCfIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2gDGMkT6Ee2_n5XNBGdaxw" base_Element="_2gDGMUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gDtRET6Ee2_n5XNBGdaxw" base_Element="_2gDtQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gEUUET6Ee2_n5XNBGdaxw" base_Element="_2gDtQET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gEUUUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2gE7YET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2gEUUkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gGJgET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2gFicET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gH-sET6Ee2_n5XNBGdaxw" genericsValue="Flow" base_Element="_2gHXoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gJM0kT6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2gJM0UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gKa8ET6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2gJz4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2gNeQET6Ee2_n5XNBGdaxw" base_Element="_2gM3MET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gQhkET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gP6gET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gRIokT6Ee2_n5XNBGdaxw" base_Element="_2gQhkUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gRIo0T6Ee2_n5XNBGdaxw" base_Element="_2gQhkUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gRvsET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2gSWwET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gRvsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gS90UT6Ee2_n5XNBGdaxw" base_Element="_2gSWwUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gS90kT6Ee2_n5XNBGdaxw" base_Element="_2gSWwUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gTk4ET6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2gUL8ET6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2gTk4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gWBIET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gVaEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gWoM0T6Ee2_n5XNBGdaxw" base_Element="_2gWBIUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gWoNET6Ee2_n5XNBGdaxw" base_Element="_2gWBIUT6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gWoNUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2gZEcET6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2gX2U0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_2gZEdUT6Ee2_n5XNBGdaxw" base_Element="_2gZEcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gZrgET6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2gZEckT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2gbgsET6Ee2_n5XNBGdaxw" base_Element="_2ga5oET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gdV4ET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gcu0UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gd89ET6Ee2_n5XNBGdaxw" base_Element="_2gd88ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gekAET6Ee2_n5XNBGdaxw" base_Element="_2gd88ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gekAUT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_2gfyIET6Ee2_n5XNBGdaxw" base_Element="_2gfLEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2ghnU0T6Ee2_n5XNBGdaxw" base_Element="_2ghnUkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gkDkUT6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gkDkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gkqpET6Ee2_n5XNBGdaxw" base_Element="_2gkqoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gkqpUT6Ee2_n5XNBGdaxw" base_Element="_2gkqoET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gkqpkT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2goVAET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gnt9kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gpjIET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2go8EUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gqKM0T6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gpjIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gqxQET6Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_2gpjI0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gsmckT6Ee2_n5XNBGdaxw" genericsValue="E" base_Element="_2gsmcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2gtNgUT6Ee2_n5XNBGdaxw" base_Element="_2gtNgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2gt0lET6Ee2_n5XNBGdaxw" base_Element="_2gt0k0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_2gvCsUT6Ee2_n5XNBGdaxw" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_2gubpkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gvCskT6Ee2_n5XNBGdaxw" base_Element="_2gubpkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2gw340T6Ee2_n5XNBGdaxw" base_Element="_2gw34ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2gxe8ET6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2gw34UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_2gxe8UT6Ee2_n5XNBGdaxw" base_Element="_2gw34ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2gxe8kT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_2g2XdUT6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2g2XcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2g4zsUT6Ee2_n5XNBGdaxw" base_Element="_2g4zsET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hG2IET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2hGPEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hIEQET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2hHdMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hIrUET6Ee2_n5XNBGdaxw" genericsValue="ScheduleTime" base_Element="_2hIEQUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hLHkUT6Ee2_n5XNBGdaxw" base_Element="_2hLHkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hLuoET6Ee2_n5XNBGdaxw" base_Element="_2hLHkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hLuokT6Ee2_n5XNBGdaxw" base_Element="_2hLuoUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hNj0ET6Ee2_n5XNBGdaxw" base_Element="_2hM8w0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hNj0kT6Ee2_n5XNBGdaxw" base_Element="_2hNj0UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hOx8UT6Ee2_n5XNBGdaxw" base_Element="_2hOx8ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hPZAET6Ee2_n5XNBGdaxw" base_Element="_2hOx8kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hQAEET6Ee2_n5XNBGdaxw" genericsValue="ChannelSet" base_Element="_2hPZAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hQAEUT6Ee2_n5XNBGdaxw" base_Element="_2hPZAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hQnIkT6Ee2_n5XNBGdaxw" base_Element="_2hQnIET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hTDYET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2hScUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hTDYUT6Ee2_n5XNBGdaxw" base_Element="_2hScUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hTqcUT6Ee2_n5XNBGdaxw" base_Element="_2hTqcET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hU4kET6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2hTqckT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hU4kUT6Ee2_n5XNBGdaxw" base_Element="_2hTqckT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hVfoUT6Ee2_n5XNBGdaxw" base_Element="_2hVfoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hWGsET6Ee2_n5XNBGdaxw" base_Element="_2hVfokT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hYi8ET6Ee2_n5XNBGdaxw" base_Element="_2hXU0ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hZKAET6Ee2_n5XNBGdaxw" base_Element="_2hYi8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hZKAkT6Ee2_n5XNBGdaxw" base_Element="_2hZKAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hZxEUT6Ee2_n5XNBGdaxw" base_Element="_2hZxEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2heCgUT6Ee2_n5XNBGdaxw" base_Element="_2heCgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hgewET6Ee2_n5XNBGdaxw" base_Element="_2hf3skT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hgewkT6Ee2_n5XNBGdaxw" base_Element="_2hgewUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hhF0UT6Ee2_n5XNBGdaxw" base_Element="_2hhF0ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hhs4ET6Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_2hhF0kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hiT8ET6Ee2_n5XNBGdaxw" base_Element="_2hhF0kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hiT8kT6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2hiT8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hi7AET6Ee2_n5XNBGdaxw" base_Element="_2hiT8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hi7AkT6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2hi7AUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hjiEET6Ee2_n5XNBGdaxw" base_Element="_2hi7AUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hkJIET6Ee2_n5XNBGdaxw" base_Element="_2hjiEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hkJIkT6Ee2_n5XNBGdaxw" base_Element="_2hkJIUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hlXRUT6Ee2_n5XNBGdaxw" base_Element="_2hlXRET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hl-UUT6Ee2_n5XNBGdaxw" base_Element="_2hl-UET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hl-U0T6Ee2_n5XNBGdaxw" base_Element="_2hl-UkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hmlYET6Ee2_n5XNBGdaxw" base_Element="_2hl-VET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hmlYkT6Ee2_n5XNBGdaxw" base_Element="_2hmlYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hnMcET6Ee2_n5XNBGdaxw" base_Element="_2hmlY0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hnzgUT6Ee2_n5XNBGdaxw" base_Element="_2hnzgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hpBoET6Ee2_n5XNBGdaxw" base_Element="_2hoakkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hposET6Ee2_n5XNBGdaxw" base_Element="_2hpBokT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hqPwET6Ee2_n5XNBGdaxw" base_Element="_2hposUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hrd4ET6Ee2_n5XNBGdaxw" base_Element="_2hq20ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hrd4kT6Ee2_n5XNBGdaxw" base_Element="_2hrd4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hsE8UT6Ee2_n5XNBGdaxw" base_Element="_2hsE8ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hssAET6Ee2_n5XNBGdaxw" base_Element="_2hsE8kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hssAkT6Ee2_n5XNBGdaxw" base_Element="_2hssAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2htTEET6Ee2_n5XNBGdaxw" base_Element="_2hssA0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2htTEkT6Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_2htTEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ht6IET6Ee2_n5XNBGdaxw" base_Element="_2htTEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2huhMkT6Ee2_n5XNBGdaxw" base_Element="_2huhMUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2huhNET6Ee2_n5XNBGdaxw" base_Element="_2huhM0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2hvvUET6Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_2hvIRET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hxkgkT6Ee2_n5XNBGdaxw" base_Element="_2hxkgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hyLkET6Ee2_n5XNBGdaxw" base_Element="_2hxkg0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hyLlUT6Ee2_n5XNBGdaxw" base_Element="_2hyLkUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hyypET6Ee2_n5XNBGdaxw" base_Element="_2hyyoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2hzZsET6Ee2_n5XNBGdaxw" base_Element="_2hyypUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2h0AwET6Ee2_n5XNBGdaxw" genericsValue="Activation" base_Element="_2hzZsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h0AwUT6Ee2_n5XNBGdaxw" base_Element="_2hzZsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2h0n0ET6Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_2h0AwkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h1O4ET6Ee2_n5XNBGdaxw" base_Element="_2h0AwkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h118ET6Ee2_n5XNBGdaxw" base_Element="_2h1O4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h3rIkT6Ee2_n5XNBGdaxw" base_Element="_2h3rIUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h4SMET6Ee2_n5XNBGdaxw" base_Element="_2h3rI0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h4SMkT6Ee2_n5XNBGdaxw" base_Element="_2h4SMUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h45QUT6Ee2_n5XNBGdaxw" base_Element="_2h45QET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h5gUET6Ee2_n5XNBGdaxw" base_Element="_2h45QkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h5gUkT6Ee2_n5XNBGdaxw" base_Element="_2h5gUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h5gVET6Ee2_n5XNBGdaxw" base_Element="_2h5gU0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h6HYUT6Ee2_n5XNBGdaxw" base_Element="_2h6HYET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h6HY0T6Ee2_n5XNBGdaxw" base_Element="_2h6HYkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h6ucUT6Ee2_n5XNBGdaxw" base_Element="_2h6ucET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h6uc0T6Ee2_n5XNBGdaxw" base_Element="_2h6uckT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h7VgET6Ee2_n5XNBGdaxw" base_Element="_2h6udET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h78kET6Ee2_n5XNBGdaxw" base_Element="_2h7VgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h-Y0ET6Ee2_n5XNBGdaxw" base_Element="_2h9xwkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h-Y0kT6Ee2_n5XNBGdaxw" base_Element="_2h-Y0UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2h-_4ET6Ee2_n5XNBGdaxw" base_Element="_2h-Y00T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iBcIET6Ee2_n5XNBGdaxw" base_Element="_2iA1FET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iBcIkT6Ee2_n5XNBGdaxw" base_Element="_2iBcIUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iCDM0T6Ee2_n5XNBGdaxw" base_Element="_2iCDMkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iCqQET6Ee2_n5XNBGdaxw" base_Element="_2iCDNET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iDRU0T6Ee2_n5XNBGdaxw" base_Element="_2iDRUkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iD4YET6Ee2_n5XNBGdaxw" base_Element="_2iDRVET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iD4Y0T6Ee2_n5XNBGdaxw" base_Element="_2iD4YUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iEfcET6Ee2_n5XNBGdaxw" base_Element="_2iD4ZET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iEfckT6Ee2_n5XNBGdaxw" base_Element="_2iEfcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iFGgUT6Ee2_n5XNBGdaxw" base_Element="_2iFGgET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iFGg0T6Ee2_n5XNBGdaxw" base_Element="_2iFGgkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iFtkUT6Ee2_n5XNBGdaxw" base_Element="_2iFtkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iIw4ET6Ee2_n5XNBGdaxw" base_Element="_2iIJ0ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iIw4kT6Ee2_n5XNBGdaxw" base_Element="_2iIw4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iJX8ET6Ee2_n5XNBGdaxw" base_Element="_2iIw40T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iJX8kT6Ee2_n5XNBGdaxw" base_Element="_2iJX8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iJ_AET6Ee2_n5XNBGdaxw" base_Element="_2iJX80T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iJ_AkT6Ee2_n5XNBGdaxw" base_Element="_2iJ_AUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iKmEUT6Ee2_n5XNBGdaxw" base_Element="_2iJ_A0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iLNIET6Ee2_n5XNBGdaxw" base_Element="_2iKmEkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iLNI0T6Ee2_n5XNBGdaxw" base_Element="_2iLNIUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iL0MUT6Ee2_n5XNBGdaxw" base_Element="_2iL0MET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iMbQET6Ee2_n5XNBGdaxw" base_Element="_2iL0MkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iMbQkT6Ee2_n5XNBGdaxw" base_Element="_2iMbQUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iNpYET6Ee2_n5XNBGdaxw" base_Element="_2iNCUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iOQcET6Ee2_n5XNBGdaxw" base_Element="_2iNpYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iPekET6Ee2_n5XNBGdaxw" base_Element="_2iO3g0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iPekkT6Ee2_n5XNBGdaxw" base_Element="_2iPekUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iQFoET6Ee2_n5XNBGdaxw" base_Element="_2iPek0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iQssUT6Ee2_n5XNBGdaxw" base_Element="_2iQssET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iRTwET6Ee2_n5XNBGdaxw" base_Element="_2iQsskT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iRTwkT6Ee2_n5XNBGdaxw" base_Element="_2iRTwUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iRTxET6Ee2_n5XNBGdaxw" base_Element="_2iRTw0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iR60UT6Ee2_n5XNBGdaxw" base_Element="_2iR60ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iR600T6Ee2_n5XNBGdaxw" base_Element="_2iR60kT6Ee2_n5XNBGdaxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_2iSh4ET6Ee2_n5XNBGdaxw" name="getNumChannels" method="_2jmJcET6Ee2_n5XNBGdaxw">
      <ownedParameter xmi:id="_2iSh4UT6Ee2_n5XNBGdaxw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_2iTI8ET6Ee2_n5XNBGdaxw" base_Element="_2iSh4ET6Ee2_n5XNBGdaxw">
    <annotations xmi:id="_2iTI8UT6Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iTwAET6Ee2_n5XNBGdaxw" base_Element="_2iTI8kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iTwA0T6Ee2_n5XNBGdaxw" base_Element="_2iTwAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iWMQkT6Ee2_n5XNBGdaxw" base_Element="_2iWMQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iWzU0T6Ee2_n5XNBGdaxw" base_Element="_2iWzUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iYBcET6Ee2_n5XNBGdaxw" base_Element="_2iXaYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2iYBckT6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2iYBcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2iYogUT6Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_2iYogET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2icS4kT6Ee2_n5XNBGdaxw" base_Element="_2icS4ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2idhAET6Ee2_n5XNBGdaxw" base_Element="_2ic58UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2idhAkT6Ee2_n5XNBGdaxw" genericsValue="InstructionParameters" base_Element="_2idhAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ieIEET6Ee2_n5XNBGdaxw" base_Element="_2idhAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ieIEkT6Ee2_n5XNBGdaxw" base_Element="_2ieIEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2igkUET6Ee2_n5XNBGdaxw" base_Element="_2if9RUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ihLYET6Ee2_n5XNBGdaxw" base_Element="_2igkUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ihLYkT6Ee2_n5XNBGdaxw" base_Element="_2ihLYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ihycET6Ee2_n5XNBGdaxw" base_Element="_2ihLY0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ihyckT6Ee2_n5XNBGdaxw" base_Element="_2ihycUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iiZgET6Ee2_n5XNBGdaxw" base_Element="_2ihyc0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2iiZgkT6Ee2_n5XNBGdaxw" base_Element="_2iiZgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ijAkUT6Ee2_n5XNBGdaxw" base_Element="_2ijAkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ijAk0T6Ee2_n5XNBGdaxw" base_Element="_2ijAkkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ijnoET6Ee2_n5XNBGdaxw" base_Element="_2ijAlET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ijnokT6Ee2_n5XNBGdaxw" base_Element="_2ijnoUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ijnpET6Ee2_n5XNBGdaxw" base_Element="_2ijno0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ikOsET6Ee2_n5XNBGdaxw" base_Element="_2ijnpUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ikOs0T6Ee2_n5XNBGdaxw" base_Element="_2ikOsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ikOtUT6Ee2_n5XNBGdaxw" base_Element="_2ikOtET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ik1wET6Ee2_n5XNBGdaxw" base_Element="_2ikOtkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ik1wkT6Ee2_n5XNBGdaxw" base_Element="_2ik1wUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2imq8ET6Ee2_n5XNBGdaxw" base_Element="_2imD5kT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2inSAkT6Ee2_n5XNBGdaxw" base_Element="_2inSAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2in5EUT6Ee2_n5XNBGdaxw" base_Element="_2in5EET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2in5E0T6Ee2_n5XNBGdaxw" base_Element="_2in5EkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2ipHMUT6Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_2ipHMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_2ipuQET6Ee2_n5XNBGdaxw" base_Element="_2ipHMET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_2ipuQkT6Ee2_n5XNBGdaxw" genericsValue="SchedulableObject" base_Element="_2ipuQUT6Ee2_n5XNBGdaxw"/>
  <uml:OpaqueBehavior xmi:id="_2jmJcET6Ee2_n5XNBGdaxw" name="getNumChannels" specification="_2iSh4ET6Ee2_n5XNBGdaxw">
    <ownedParameter xmi:id="_2jmJcUT6Ee2_n5XNBGdaxw" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_2klA4ET6Ee2_n5XNBGdaxw" base_Element="_2kjywET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kln8ET6Ee2_n5XNBGdaxw" base_Element="_2klA4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kmPAET6Ee2_n5XNBGdaxw" base_Element="_2kln8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2km2EET6Ee2_n5XNBGdaxw" base_Element="_2kmPAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kndIET6Ee2_n5XNBGdaxw" base_Element="_2km2EUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kndI0T6Ee2_n5XNBGdaxw" base_Element="_2kndIUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2koEMET6Ee2_n5XNBGdaxw" base_Element="_2kndJET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2korQET6Ee2_n5XNBGdaxw" base_Element="_2koEMUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kpSUET6Ee2_n5XNBGdaxw" base_Element="_2korQUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kp5YET6Ee2_n5XNBGdaxw" base_Element="_2kpSUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kqgcET6Ee2_n5XNBGdaxw" base_Element="_2kp5YUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2krHgET6Ee2_n5XNBGdaxw" base_Element="_2kqgcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2krukET6Ee2_n5XNBGdaxw" base_Element="_2krHgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kruk0T6Ee2_n5XNBGdaxw" base_Element="_2krukUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2ksVokT6Ee2_n5XNBGdaxw" base_Element="_2ksVoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2ks8sET6Ee2_n5XNBGdaxw" base_Element="_2ksVo0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2ktjwET6Ee2_n5XNBGdaxw" base_Element="_2ks8sUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2ktjw0T6Ee2_n5XNBGdaxw" base_Element="_2ktjwUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kuK0ET6Ee2_n5XNBGdaxw" base_Element="_2ktjxET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kuK00T6Ee2_n5XNBGdaxw" base_Element="_2kuK0UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kux4ET6Ee2_n5XNBGdaxw" base_Element="_2kuK1ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kux40T6Ee2_n5XNBGdaxw" base_Element="_2kux4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kvY8ET6Ee2_n5XNBGdaxw" base_Element="_2kux5ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kvY80T6Ee2_n5XNBGdaxw" base_Element="_2kvY8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kwAAkT6Ee2_n5XNBGdaxw" base_Element="_2kwAAET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kwABUT6Ee2_n5XNBGdaxw" base_Element="_2kwAA0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kwnEkT6Ee2_n5XNBGdaxw" base_Element="_2kwnEET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kwnFUT6Ee2_n5XNBGdaxw" base_Element="_2kwnE0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kxOIUT6Ee2_n5XNBGdaxw" base_Element="_2kwnFkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kxOJET6Ee2_n5XNBGdaxw" base_Element="_2kxOIkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kx1MkT6Ee2_n5XNBGdaxw" base_Element="_2kx1MET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kx1NUT6Ee2_n5XNBGdaxw" base_Element="_2kx1M0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kycQkT6Ee2_n5XNBGdaxw" base_Element="_2kycQET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kycRUT6Ee2_n5XNBGdaxw" base_Element="_2kycQ0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kzDUET6Ee2_n5XNBGdaxw" base_Element="_2kycRkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kzDU0T6Ee2_n5XNBGdaxw" base_Element="_2kzDUUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2kzqYET6Ee2_n5XNBGdaxw" base_Element="_2kzDVET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k0RcET6Ee2_n5XNBGdaxw" base_Element="_2kzqYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k04gET6Ee2_n5XNBGdaxw" base_Element="_2k0RcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k1fkET6Ee2_n5XNBGdaxw" base_Element="_2k04gUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k1fk0T6Ee2_n5XNBGdaxw" base_Element="_2k1fkUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k2GokT6Ee2_n5XNBGdaxw" base_Element="_2k2GoET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k2tsET6Ee2_n5XNBGdaxw" base_Element="_2k2Go0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k2ts0T6Ee2_n5XNBGdaxw" base_Element="_2k2tsUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k3UwET6Ee2_n5XNBGdaxw" base_Element="_2k2ttET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k370ET6Ee2_n5XNBGdaxw" base_Element="_2k3UwUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k3700T6Ee2_n5XNBGdaxw" base_Element="_2k370UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k4i4ET6Ee2_n5XNBGdaxw" base_Element="_2k371ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k4i40T6Ee2_n5XNBGdaxw" base_Element="_2k4i4UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k5J8ET6Ee2_n5XNBGdaxw" base_Element="_2k4i5ET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k5xAET6Ee2_n5XNBGdaxw" base_Element="_2k5J8UT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k5xA0T6Ee2_n5XNBGdaxw" base_Element="_2k5xAUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k5xBkT6Ee2_n5XNBGdaxw" base_Element="_2k5xBET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k5xCUT6Ee2_n5XNBGdaxw" base_Element="_2k5xB0T6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k6YEET6Ee2_n5XNBGdaxw" base_Element="_2k5xCkT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k6YE0T6Ee2_n5XNBGdaxw" base_Element="_2k6YEUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k6_IET6Ee2_n5XNBGdaxw" base_Element="_2k6YFET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k6_I0T6Ee2_n5XNBGdaxw" base_Element="_2k6_IUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k7mMET6Ee2_n5XNBGdaxw" base_Element="_2k6_JET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k7mM0T6Ee2_n5XNBGdaxw" base_Element="_2k7mMUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k8NQET6Ee2_n5XNBGdaxw" base_Element="_2k7mNET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k8NQ0T6Ee2_n5XNBGdaxw" base_Element="_2k8NQUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k80UET6Ee2_n5XNBGdaxw" base_Element="_2k8NRET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k9bYET6Ee2_n5XNBGdaxw" base_Element="_2k80UUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k9bY0T6Ee2_n5XNBGdaxw" base_Element="_2k9bYUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k-CcET6Ee2_n5XNBGdaxw" base_Element="_2k9bZET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k-Cc0T6Ee2_n5XNBGdaxw" base_Element="_2k-CcUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k-pgET6Ee2_n5XNBGdaxw" base_Element="_2k-CdET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k-pg0T6Ee2_n5XNBGdaxw" base_Element="_2k-pgUT6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_2k_QkkT6Ee2_n5XNBGdaxw" base_Element="_2k_QkET6Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Patch xmi:id="__mx-0Ec3Ee2VGuPmUBocQA" base_Element="_2FR1wET6Ee2_n5XNBGdaxw" patchText="@@ -359,12 +359,8 @@&#xA; tate&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="__myl4Ec3Ee2VGuPmUBocQA" base_Element="_2GFHAET6Ee2_n5XNBGdaxw" patchText="@@ -192,22 +192,25 @@&#xA; is %7B%0D%0A%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="__mzM8Ec3Ee2VGuPmUBocQA" base_Element="_2H_ykET6Ee2_n5XNBGdaxw" patchText="@@ -117,12 +117,8 @@&#xA; ices&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="__mz0AEc3Ee2VGuPmUBocQA" base_Element="_2IL_0ET6Ee2_n5XNBGdaxw" patchText="@@ -145,28 +145,24 @@&#xA; ystemChoices&#xA;-()()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -288,12 +288,8 @@&#xA; ices&#xA;-()()&#xA;  %7B%0D%0A&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="__m0bEEc3Ee2VGuPmUBocQA" base_Element="_2JUoQET6Ee2_n5XNBGdaxw" patchText="@@ -136,122 +136,8 @@&#xA;  */%0D&#xA;-%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D&#xA; %0A%0D%0Ai&#xA;" conflicting="false"/>
</xmi:XMI>
