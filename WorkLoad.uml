<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_xiqe0ET9Ee2_n5XNBGdaxw" name="WorkLoad">
    <eAnnotations xmi:id="_xlKZMET9Ee2_n5XNBGdaxw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_xlKZMUT9Ee2_n5XNBGdaxw" source="codegen">
        <details xmi:id="_xlKZMkT9Ee2_n5XNBGdaxw" key="codegenDirectory" value="/cs2820-fall22/src"/>
        <details xmi:id="_zksA8ET9Ee2_n5XNBGdaxw" key="AssociatedSourceCode" value="/cs2820-fall22/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall22/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1458608893/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Channels.java;105405152/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ChannelsTest.java;3718395581/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall22/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall22/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FileManager.java;2522714670/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Flow.java;889275975/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall22/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall22/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall22/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall22/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall22/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall22/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Program.java;2871276497/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ProgramVisualization.java;867879725/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;384175461/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;2067458194/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall22/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1561738288/1;/cs2820-fall22/src/edu/uiowa/cs/warp/VisualizationObject.java;823199562/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1981400958/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoad.java;727085344/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall22/src/edu/uiowa/cs/warp/Warp.java;418770348/1;/cs2820-fall22/src/edu/uiowa/cs/warp/WorkLoadTest.java;2456256290/1;/cs2820-fall22/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_0L4o0Ec3Ee2VGuPmUBocQA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_0L4o0Uc3Ee2VGuPmUBocQA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_0L5P4Ec3Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_0L5P4Uc3Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_0L5P4kc3Ee2VGuPmUBocQA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_yOuTkET9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_yOuTkUT9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_yOuTkkT9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_yOuTk0T9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_yOuTlET9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_yOuTlUT9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_yOuTlkT9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_yOuTl0T9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_yOu6oET9Ee2_n5XNBGdaxw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_yOGBcET9Ee2_n5XNBGdaxw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_yOGBcUT9Ee2_n5XNBGdaxw" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_yOGBckT9Ee2_n5XNBGdaxw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_yOGogkT9Ee2_n5XNBGdaxw" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_yOzzIET9Ee2_n5XNBGdaxw" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_yfeFUET9Ee2_n5XNBGdaxw" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_yPcsUET9Ee2_n5XNBGdaxw" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_ygDUIET9Ee2_n5XNBGdaxw" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_yPfvoET9Ee2_n5XNBGdaxw" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_ygEiQET9Ee2_n5XNBGdaxw" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_ygFJUUT9Ee2_n5XNBGdaxw" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yRy1sET9Ee2_n5XNBGdaxw" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_yg5osET9Ee2_n5XNBGdaxw" general="_yeQkYET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiBqEET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiBqEUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjC9wET9Ee2_n5XNBGdaxw" name="AbstractMap" specification="_yRzcwUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjC9wUT9Ee2_n5XNBGdaxw" type="_yRy1sET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yRzcwUT9Ee2_n5XNBGdaxw" name="AbstractMap" method="_yjC9wET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yR0D0ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yR0D0UT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yR0D0kT9Ee2_n5XNBGdaxw" type="_yRy1sET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yR0D00T9Ee2_n5XNBGdaxw" name="Activation">
              <generalization xmi:id="_yeXSEUT9Ee2_n5XNBGdaxw" general="_yU50EET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiBqEkT9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw" isReadOnly="true" association="_ykKYEET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiCRIUT9Ee2_n5XNBGdaxw" name="edges" type="_yeRygET9Ee2_n5XNBGdaxw" isReadOnly="true" association="_ykK_IUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiC4MUT9Ee2_n5XNBGdaxw" name="additionalScheduleTimes" type="_yeRygET9Ee2_n5XNBGdaxw" isReadOnly="true" association="_ykLmMUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiDfQUT9Ee2_n5XNBGdaxw" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yiDfQkT9Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yg6Pw0T9Ee2_n5XNBGdaxw" client="_yR0D00T9Ee2_n5XNBGdaxw" supplier="_yg6PwUT9Ee2_n5XNBGdaxw" contract="_yg6PwUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjC9wkT9Ee2_n5XNBGdaxw" name="Activation" specification="_yR0q4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjC9w0T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjC9xET9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjC9xUT9Ee2_n5XNBGdaxw" name="Activation" specification="_yeTAo0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjC9xkT9Ee2_n5XNBGdaxw" name="elem" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjC9x0T9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjC9yET9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjC9yUT9Ee2_n5XNBGdaxw" name="clone" specification="_yR0q5UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjC9ykT9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk0ET9Ee2_n5XNBGdaxw" name="getEdgesByReleaseTime" specification="_yR1R80T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk0UT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk0kT9Ee2_n5XNBGdaxw" name="getEdgesByLatestReleaseTime" specification="_yR1R9UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk00T9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk1ET9Ee2_n5XNBGdaxw" name="getEdgesByPeriod" specification="_yR15AUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk1UT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk1kT9Ee2_n5XNBGdaxw" name="getEdgesByDeadline" specification="_yR15A0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk10T9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk2ET9Ee2_n5XNBGdaxw" name="getEdgesByPriority" specification="_yR2gEUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk2UT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk2kT9Ee2_n5XNBGdaxw" name="addEdges" specification="_yg7d4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk20T9Ee2_n5XNBGdaxw" name="edges" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk3ET9Ee2_n5XNBGdaxw" name="addEdge" specification="_yeTntET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk3UT9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk3kT9Ee2_n5XNBGdaxw" name="increaseEdgePhases" specification="_yR3uMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk30T9Ee2_n5XNBGdaxw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk4ET9Ee2_n5XNBGdaxw" name="updatePriorityAndRelease" specification="_yR3uMkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk4UT9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk4kT9Ee2_n5XNBGdaxw" name="addConflict" specification="_yR4VQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk40T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjDk5ET9Ee2_n5XNBGdaxw" name="addConflicts" specification="_yg8E8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjDk5UT9Ee2_n5XNBGdaxw" name="conflicts" type="_yeTAoUT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL4ET9Ee2_n5XNBGdaxw" name="addCoordinator" specification="_yR4VQkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL4UT9Ee2_n5XNBGdaxw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL4kT9Ee2_n5XNBGdaxw" name="addCoordinators" specification="_yg8sAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL40T9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL5ET9Ee2_n5XNBGdaxw" name="addScheduleTimes" specification="_yg8sA0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL5UT9Ee2_n5XNBGdaxw" name="scheduleTime" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL5kT9Ee2_n5XNBGdaxw" name="getNextScheduleTime" specification="_yR48UET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL50T9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjEL6ET9Ee2_n5XNBGdaxw" type="_yT02AET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL6UT9Ee2_n5XNBGdaxw" name="getMatchingEndTime" specification="_yR48UkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL6kT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjEL60T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL7ET9Ee2_n5XNBGdaxw" name="getNextStartTime" specification="_yR5jYUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL7UT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjEL7kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL70T9Ee2_n5XNBGdaxw" name="getNextEndTime" specification="_yR5jZET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL8ET9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjEL8UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL8kT9Ee2_n5XNBGdaxw" name="getNumEdges" specification="_yR6KckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL80T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL9ET9Ee2_n5XNBGdaxw" name="compareTo" specification="_yeUOwUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL9UT9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjEL9kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEL90T9Ee2_n5XNBGdaxw" name="conflictExists" specification="_yeU100T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEL-ET9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjEL-UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy8ET9Ee2_n5XNBGdaxw" name="canCombine" specification="_yeVc4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEy8UT9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjEy8kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy80T9Ee2_n5XNBGdaxw" name="getDelta" specification="_yR6xgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEy9ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy9UT9Ee2_n5XNBGdaxw" name="getExecutionDuration" specification="_yR6xgkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEy9kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy90T9Ee2_n5XNBGdaxw" name="getCombinedExecutionDuration" specification="_yeVc40T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEy-ET9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjEy-UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy-kT9Ee2_n5XNBGdaxw" name="printAll" specification="_yR6xhET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEy-0T9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy_ET9Ee2_n5XNBGdaxw" name="printAll" specification="_yR7YkUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEy_UT9Ee2_n5XNBGdaxw" name="printEdges" specification="_yeVc5kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEy_kT9Ee2_n5XNBGdaxw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjEy_0T9Ee2_n5XNBGdaxw" name="edges" type="_yThUAET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjEzAET9Ee2_n5XNBGdaxw" name="printEdges" specification="_yeWrAUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjEzAUT9Ee2_n5XNBGdaxw" name="edges" type="_yThUAET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yR0q4ET9Ee2_n5XNBGdaxw" name="Activation" visibility="package" method="_yjC9wkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yR0q4kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yR0q40T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yR0q4UT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yR0q5ET9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR0q5UT9Ee2_n5XNBGdaxw" name="clone" method="_yjC9yUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeTAqUT9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR1R80T9Ee2_n5XNBGdaxw" name="getEdgesByReleaseTime" method="_yjDk0ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBwET9Ee2_n5XNBGdaxw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yeTAqkT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR1R9UT9Ee2_n5XNBGdaxw" name="getEdgesByLatestReleaseTime" method="_yjDk0kT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBwUT9Ee2_n5XNBGdaxw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yeTnsET9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR15AUT9Ee2_n5XNBGdaxw" name="getEdgesByPeriod" method="_yjDk1ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBwkT9Ee2_n5XNBGdaxw">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_yeTnsUT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR15A0T9Ee2_n5XNBGdaxw" name="getEdgesByDeadline" method="_yjDk1kT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBw0T9Ee2_n5XNBGdaxw">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_yeTnskT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR2gEUT9Ee2_n5XNBGdaxw" name="getEdgesByPriority" method="_yjDk2ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBxET9Ee2_n5XNBGdaxw">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yeTns0T9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR3uMET9Ee2_n5XNBGdaxw" name="increaseEdgePhases" method="_yjDk3kT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBxUT9Ee2_n5XNBGdaxw">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yR3uMUT9Ee2_n5XNBGdaxw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR3uMkT9Ee2_n5XNBGdaxw" name="updatePriorityAndRelease" method="_yjDk4ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBxkT9Ee2_n5XNBGdaxw">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_yR3uM0T9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR4VQET9Ee2_n5XNBGdaxw" name="addConflict" method="_yjDk4kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yR4VQUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR4VQkT9Ee2_n5XNBGdaxw" name="addCoordinator" method="_yjEL4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yR4VQ0T9Ee2_n5XNBGdaxw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR48UET9Ee2_n5XNBGdaxw" name="getNextScheduleTime" method="_yjEL5kT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqByET9Ee2_n5XNBGdaxw">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yR48UUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yeUOwET9Ee2_n5XNBGdaxw" type="_yT02AET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yR48UkT9Ee2_n5XNBGdaxw" name="getMatchingEndTime" method="_yjEL6UT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqByUT9Ee2_n5XNBGdaxw">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yR48U0T9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yR5jYET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR5jYUT9Ee2_n5XNBGdaxw" name="getNextStartTime" method="_yjEL7ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo0ET9Ee2_n5XNBGdaxw">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yR5jYkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yR5jY0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR5jZET9Ee2_n5XNBGdaxw" name="getNextEndTime" method="_yjEL70T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo0UT9Ee2_n5XNBGdaxw">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yR6KcET9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yR6KcUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR6KckT9Ee2_n5XNBGdaxw" name="getNumEdges" method="_yjEL8kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yR6Kc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR6xgET9Ee2_n5XNBGdaxw" name="getDelta" method="_yjEy80T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo0kT9Ee2_n5XNBGdaxw">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yR6xgUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR6xgkT9Ee2_n5XNBGdaxw" name="getExecutionDuration" method="_yjEy9UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yR6xg0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR6xhET9Ee2_n5XNBGdaxw" name="printAll" method="_yjEy-kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yR7YkET9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yR7YkUT9Ee2_n5XNBGdaxw" name="printAll" method="_yjEy_ET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yeTAo0T9Ee2_n5XNBGdaxw" name="Activation" visibility="package" method="_yjC9xUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yeTApkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yeTAp0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yeTApET9Ee2_n5XNBGdaxw" name="elem" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeTApUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yeTAqET9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yeTntET9Ee2_n5XNBGdaxw" name="addEdge" method="_yjDk3ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeTntUT9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yeUOwUT9Ee2_n5XNBGdaxw" name="compareTo" method="_yjEL9ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeUOwkT9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeUOw0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yeU100T9Ee2_n5XNBGdaxw" name="conflictExists" method="_yjEL90T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeU11ET9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeU11UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yeVc4ET9Ee2_n5XNBGdaxw" name="canCombine" method="_yjEy8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeVc4UT9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeVc4kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yeVc40T9Ee2_n5XNBGdaxw" name="getCombinedExecutionDuration" method="_yjEy90T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeVc5ET9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeVc5UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yeVc5kT9Ee2_n5XNBGdaxw" name="printEdges" visibility="private" method="_yjEy_UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeWD8ET9Ee2_n5XNBGdaxw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yeWD8UT9Ee2_n5XNBGdaxw" name="edges" type="_yThUAET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yeWrAUT9Ee2_n5XNBGdaxw" name="printEdges" visibility="private" method="_yjEzAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yeWrAkT9Ee2_n5XNBGdaxw" name="edges" type="_yThUAET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yg7d4ET9Ee2_n5XNBGdaxw" name="addEdges" method="_yjDk2kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yg7d4UT9Ee2_n5XNBGdaxw" name="edges" type="_yeRygET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yg8E8ET9Ee2_n5XNBGdaxw" name="addConflicts" method="_yjDk5ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yg8E8UT9Ee2_n5XNBGdaxw" name="conflicts" type="_yeTAoUT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yg8sAET9Ee2_n5XNBGdaxw" name="addCoordinators" method="_yjEL4kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yg8sAUT9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yg8sA0T9Ee2_n5XNBGdaxw" name="addScheduleTimes" method="_yjEL5ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqBx0T9Ee2_n5XNBGdaxw">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yg9TEET9Ee2_n5XNBGdaxw" name="scheduleTime" type="_yeRygET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yR_C8ET9Ee2_n5XNBGdaxw" name="Activations">
              <generalization xmi:id="_yeZuUET9Ee2_n5XNBGdaxw" general="_yRy1sET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiEGUET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiEGUUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yR_qAET9Ee2_n5XNBGdaxw" name="BasicPoset">
              <ownedComment xmi:id="_yjqo00T9Ee2_n5XNBGdaxw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_yeaVZUT9Ee2_n5XNBGdaxw" general="_yTF2MET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjFaAET9Ee2_n5XNBGdaxw" name="BasicPoset" specification="_yeaVYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjFaAUT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjFaAkT9Ee2_n5XNBGdaxw" type="_yR_qAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yeaVYET9Ee2_n5XNBGdaxw" name="BasicPoset" visibility="package" method="_yjFaAET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yeaVYkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yeaVY0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yeaVYUT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeaVZET9Ee2_n5XNBGdaxw" type="_yR_qAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySAREET9Ee2_n5XNBGdaxw" name="ChannelAnalysis">
              <ownedComment xmi:id="_0e-j8Ec3Ee2VGuPmUBocQA">
                <body>&lt;h1>Implementation of the ChannelAnalysis class&lt;/h1>&#xD;
Used to analyze either Program or WarpInterface by converting to program.&#xD;
Can be used to detect channel conflicts.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yiEGUkT9Ee2_n5XNBGdaxw" name="program" visibility="private" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykLmNET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiEGVET9Ee2_n5XNBGdaxw" name="programTable" visibility="private" type="_yTcbgET9Ee2_n5XNBGdaxw" association="_ykMNQUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiFUcET9Ee2_n5XNBGdaxw" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjFaA0T9Ee2_n5XNBGdaxw" name="ChannelAnalysis" specification="_yea8cET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjFaBET9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjFaBUT9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjFaBkT9Ee2_n5XNBGdaxw" name="ChannelAnalysis" specification="_yebjgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjFaB0T9Ee2_n5XNBGdaxw" name="program" type="_yTPnMET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjFaCET9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGBEET9Ee2_n5XNBGdaxw" name="isChannelConflict" specification="_ySAREUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGBEUT9Ee2_n5XNBGdaxw" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySAREUT9Ee2_n5XNBGdaxw" name="isChannelConflict" method="_yjGBEET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_0e_LAUc3Ee2VGuPmUBocQA">
                  <body>Determines whether or not there is a channel conflict.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return boolean based on if there is a channel conflict or not</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySA4IET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yea8cET9Ee2_n5XNBGdaxw" name="ChannelAnalysis" visibility="package" method="_yjFaA0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yea8ckT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yea8c0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_0e-j8Uc3Ee2VGuPmUBocQA">
                  <body>Constructor that takes in a WarpInterface and converts it to a a program then sets the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_yea8cUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yea8dET9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yebjgET9Ee2_n5XNBGdaxw" name="ChannelAnalysis" visibility="package" method="_yjFaBkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yebjgkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yebjg0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_0e-j8kc3Ee2VGuPmUBocQA">
                  <body>Constructor to set the program and it's schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param program The program to analyze</body>
                </ownedComment>
                <ownedParameter xmi:id="_yebjgUT9Ee2_n5XNBGdaxw" name="program" type="_yTPnMET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yebjhET9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_0mS0QEc0Ee2rgspmIFjL-A" name="getChannelAnalysisTable">
                <ownedComment xmi:id="_0e_LAEc3Ee2VGuPmUBocQA">
                  <body>Method to be implemented that gets channelAnalysisTable.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return ProgramSchedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_0mTbUEc0Ee2rgspmIFjL-A" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySBfMET9Ee2_n5XNBGdaxw" name="ChannelVisualization">
              <ownedComment xmi:id="_yjqo2ET9Ee2_n5XNBGdaxw">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yecKlUT9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiFUckT9Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiFUc0T9Ee2_n5XNBGdaxw" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiFUdET9Ee2_n5XNBGdaxw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiFUdUT9Ee2_n5XNBGdaxw" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiF7gET9Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_yUI_EET9Ee2_n5XNBGdaxw" association="_ykMNRET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiF7gkT9Ee2_n5XNBGdaxw" name="ca" visibility="private" type="_ySAREET9Ee2_n5XNBGdaxw" association="_ykM0UUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGBEkT9Ee2_n5XNBGdaxw" name="ChannelVisualization" specification="_yecKkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGBE0T9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjGBFET9Ee2_n5XNBGdaxw" type="_ySBfMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yecKkET9Ee2_n5XNBGdaxw" name="ChannelVisualization" visibility="package" method="_yjGBEkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yecKkkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yecKk0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yecKkUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yecKlET9Ee2_n5XNBGdaxw" type="_ySBfMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySCGQET9Ee2_n5XNBGdaxw" name="Channels">
              <ownedComment xmi:id="_yjqo2UT9Ee2_n5XNBGdaxw">
                <body>&lt;h1>Implementation of the Channel class.&lt;/h1>&#xD;
 The Channel class allows the user to handle the amount of wireless channels that are available for&#xD;
 scheduling using the private sub class ChannelSet and methods that can add or remove channel sets or&#xD;
 channels individually.&lt;p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yiGikkT9Ee2_n5XNBGdaxw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiGilET9Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiHJoUT9Ee2_n5XNBGdaxw" name="channelsAvailable" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykM0VET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGBGkT9Ee2_n5XNBGdaxw" name="Channels" specification="_ySEigET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGBG0T9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGBHET9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGBHUT9Ee2_n5XNBGdaxw" type="_ySCGQET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGBHkT9Ee2_n5XNBGdaxw" name="getChannelSet" specification="_ySEihkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGBH0T9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGBIET9Ee2_n5XNBGdaxw" type="_yeRygkT9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return null;&#xD;
 }&#xD;
&#xD;
 /* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoIET9Ee2_n5XNBGdaxw" name="addNewChannelSet" specification="_ySFJkUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoIUT9Ee2_n5XNBGdaxw" name="isEmpty" specification="_ySFJkkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGoIkT9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoI0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoJET9Ee2_n5XNBGdaxw" name="removeChannel" specification="_ySFwoUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGoJUT9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoJkT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoJ0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
&#xD;
 if(!checkIfChannelExists(channels, channel)){&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel removal failed, channel '%s' does not exist\n&quot;, channel);&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoKET9Ee2_n5XNBGdaxw" name="addChannel" specification="_ySFwpUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGoKUT9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoKkT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoK0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(checkIfTimeslotIsOutOfBounds(timeSlot)){&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
&#xD;
 if(checkIfChannelExists(channels, channel)){ // returns false if channel exists&#xD;
   if(verbose)&#xD;
     System.err.printf(&quot;Channel add failed, channel '%s' already exists\n&quot;, channel);&#xD;
   return false;&#xD;
 }&#xD;
&#xD;
 boolean result;&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoLET9Ee2_n5XNBGdaxw" name="getNumChannels" specification="_ySGXsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGoLUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoLkT9Ee2_n5XNBGdaxw" name="checkIfTimeslotIsOutOfBounds" specification="_ySGXskT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGoL0T9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoMET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(timeSlot &lt; 0 || timeSlot >= channelsAvailable.size()){&#xD;
   if (verbose)&#xD;
     System.err.printf(&quot;Time slot '%d' does not exist\n&quot;, timeSlot);&#xD;
   return true;&#xD;
 }&#xD;
&#xD;
 return false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGoMUT9Ee2_n5XNBGdaxw" name="checkIfChannelExists" specification="_yedYsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjGoMkT9Ee2_n5XNBGdaxw" name="channels" type="_ySCtUET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjGoM0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjGoNET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return channels.contains(channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySEigET9Ee2_n5XNBGdaxw" name="Channels" visibility="package" method="_yjGBGkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySEig0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySEihET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjqo3UT9Ee2_n5XNBGdaxw">
                  <body>Constructor that takes in number of channels and verbose flag.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param nChannels amount of channels&#xD;
   * @param verbose if true, prints data to the screen</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySEigUT9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySEigkT9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySEihUT9Ee2_n5XNBGdaxw" type="_ySCGQET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySEihkT9Ee2_n5XNBGdaxw" name="getChannelSet" method="_yjGBHkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo3kT9Ee2_n5XNBGdaxw">
                  <body>Gets the channel set for selected timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to retrieve channel set for&#xD;
   * @return HashSet of channels based on timeslot</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySEih0T9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yg_IQET9Ee2_n5XNBGdaxw" type="_yeRygkT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySFJkUT9Ee2_n5XNBGdaxw" name="addNewChannelSet" method="_yjGoIET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo30T9Ee2_n5XNBGdaxw">
                  <body>Adds a new channel set to available channels.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ySFJkkT9Ee2_n5XNBGdaxw" name="isEmpty" method="_yjGoIUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo4ET9Ee2_n5XNBGdaxw">
                  <body>Checks if the channelSet is empty with the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot time slot to check channelSet&#xD;
   * @return boolean value based on if the channelSet at the given timeSlot is empty</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySFJk0T9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySFwoET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySFwoUT9Ee2_n5XNBGdaxw" name="removeChannel" method="_yjGoJET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo4UT9Ee2_n5XNBGdaxw">
                  <body>Removes channel from available channels at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to get channelSet&#xD;
   * @param channel Channel to remove&#xD;
   * @return boolean value based on the success of the channel removal at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySFwokT9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySFwo0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySFwpET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySFwpUT9Ee2_n5XNBGdaxw" name="addChannel" method="_yjGoKET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo4kT9Ee2_n5XNBGdaxw">
                  <body>Adds channel at the given timeSlot.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param timeSlot timeSlot to add channel at&#xD;
   * @param channel the channel to add&#xD;
   * @return boolean value based on success of channel being added at the given timeSlot</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySFwpkT9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySFwp0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySFwqET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySGXsET9Ee2_n5XNBGdaxw" name="getNumChannels" method="_yjGoLET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjqo40T9Ee2_n5XNBGdaxw">
                  <body>Gets the number of channels.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return Integer representing the number of channels</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySGXsUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySGXskT9Ee2_n5XNBGdaxw" name="checkIfTimeslotIsOutOfBounds" visibility="private" method="_yjGoLkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySGXs0T9Ee2_n5XNBGdaxw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySGXtET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yedYsET9Ee2_n5XNBGdaxw" name="checkIfChannelExists" visibility="private" method="_yjGoMUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yedYsUT9Ee2_n5XNBGdaxw" name="channels" type="_ySCtUET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yedYskT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yedYs0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ySCtUET9Ee2_n5XNBGdaxw" name="ChannelSet" visibility="private">
                <ownedComment xmi:id="_yjqo2kT9Ee2_n5XNBGdaxw">
                  <body>Private class that extends a string HashSet to keep track of channels as a set.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
                <generalization xmi:id="_yg-hMET9Ee2_n5XNBGdaxw" general="_yeRygkT9Ee2_n5XNBGdaxw"/>
                <ownedAttribute xmi:id="_yiGikET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiGikUT9Ee2_n5XNBGdaxw" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGBFUT9Ee2_n5XNBGdaxw" name="ChannelSet" specification="_ySDUYET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjGBFkT9Ee2_n5XNBGdaxw" type="_ySCtUET9Ee2_n5XNBGdaxw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjGBF0T9Ee2_n5XNBGdaxw" name="ChannelSet" specification="_ySD7cET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjGBGET9Ee2_n5XNBGdaxw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yjGBGUT9Ee2_n5XNBGdaxw" type="_ySCtUET9Ee2_n5XNBGdaxw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ySDUYET9Ee2_n5XNBGdaxw" name="ChannelSet" visibility="private" method="_yjGBFUT9Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_ySDUYUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ySDUYkT9Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yjqo20T9Ee2_n5XNBGdaxw">
                    <body>Default Constructor&#xD;
     * &#xD;
     * @author sgoddard</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ySDUY0T9Ee2_n5XNBGdaxw" type="_ySCtUET9Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySD7cET9Ee2_n5XNBGdaxw" name="ChannelSet" visibility="private" method="_yjGBF0T9Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_ySD7ckT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ySD7c0T9Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yjqo3ET9Ee2_n5XNBGdaxw">
                    <body>Constructor that takes in a channel amount on creation.&#xD;
     * &#xD;
     * @author sgoddard&#xD;
     * @param nChannels number of channels to add</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ySD7cUT9Ee2_n5XNBGdaxw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ySD7dET9Ee2_n5XNBGdaxw" type="_ySCtUET9Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySHl0ET9Ee2_n5XNBGdaxw" name="ChannelsTest" visibility="package">
              <ownedAttribute xmi:id="_yiHwsUT9Ee2_n5XNBGdaxw" name="channelSize" visibility="package" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiHwskT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPMET9Ee2_n5XNBGdaxw" name="testGetChannelSetByChannelSetSize" specification="_ySHl0UT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var size = 10; // How many channelSets to be added.&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
&#xD;
		// Loop creates 'size' amount of channel sets, each timeSlot get i amount of channels added.&#xD;
		// timeSlot 0 = channelSet size of 0, timeSlot 1 = channelSet size of 1, ...timeSlot n = channelSet size of n&#xD;
		for(int i = 0; i &lt; size; i++){&#xD;
			channels.addNewChannelSet();&#xD;
			for(int j = 0; j &lt; i; j++) {&#xD;
				channels.addChannel(i,Integer.toString(j)); //add j as a filler channel&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Checks if getChannelSet works by comparing the timeSlot with channel size which should be equal from above loop&#xD;
		for(var i = 0; i &lt; size; i++){&#xD;
			var channelSet = channels.getChannelSet(i);&#xD;
			System.out.println(channelSet.size());&#xD;
			assertEquals(i, channelSet.size(), &quot;Error in getChannelSet returning correct Channel&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPMUT9Ee2_n5XNBGdaxw" name="testGetChannelSetByChannel" specification="_ySIM40T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		channels.addChannel(0, &quot;Test 0&quot;);&#xD;
		channels.addChannel(1, &quot;Test 1&quot;);&#xD;
&#xD;
		assertTrue(channels.getChannelSet(0).contains(&quot;Test 0&quot;));&#xD;
		assertTrue(channels.getChannelSet(1).contains(&quot;Test 1&quot;));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPMkT9Ee2_n5XNBGdaxw" name="testAddNewChannelSetBySize" specification="_ySIz8kT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		final var channelSetSize = 10;&#xD;
&#xD;
		// Checks if initial size is 0&#xD;
		assertEquals(0, channels.channelsAvailable.size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
&#xD;
		for(int i = 0; i &lt; channelSetSize; i++){ // Adds the channelSets&#xD;
			channels.addNewChannelSet();&#xD;
		}&#xD;
&#xD;
		// Checks if the channelSet count is accurate&#xD;
		assertEquals(channelSetSize, channels.channelsAvailable.size(), &quot;ChannelSet size error&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPM0T9Ee2_n5XNBGdaxw" name="testIsEmptyWhenCreatingEmptyChannels" specification="_ySIz9kT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.isEmpty(0), &quot;IsEmpty failed on zero ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPNET9Ee2_n5XNBGdaxw" name="testIsEmptyWhenChannelsStartAboveZero" specification="_ySJbA0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertFalse(channels.isEmpty(0), &quot;IsEmpty retuned true on an non empty ChannelSet Size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPNUT9Ee2_n5XNBGdaxw" name="testEmptyAfterAdd" specification="_ySKCEET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
&#xD;
		assertTrue(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
		assertFalse(channels.isEmpty(0), &quot;ChannelSet empty after adding channel&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPNkT9Ee2_n5XNBGdaxw" name="testEmptyAfterRemove" specification="_ySKCFET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 1;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created is not empty&#xD;
		assertFalse(channels.isEmpty(0), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.removeChannel(0, &quot;0&quot;);&#xD;
&#xD;
		// Checks if removal of the only channel makes an empty ChannelSet&#xD;
		assertTrue(channels.isEmpty(0), &quot;ChannelSet not empty after channel removal&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPN0T9Ee2_n5XNBGdaxw" name="testRemoveChannel" specification="_ySKpIkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if created channelSet is 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if channel was added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
&#xD;
		// Checks if removeChannel returns true&#xD;
		assertTrue(channels.removeChannel(0, &quot;Test&quot;), &quot;Channel removal failed&quot;);&#xD;
&#xD;
		// Checks if channel was removed by size&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Channel removal failed&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPOET9Ee2_n5XNBGdaxw" name="testAddChannelTimeSlots" specification="_ySKpJkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true); // Creates a channels class with no channels&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if channelSet is indeed 0&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;); //Adds a test channel&#xD;
&#xD;
		// Checks if the channel count increased for timeSlot 0 channelSet&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPOUT9Ee2_n5XNBGdaxw" name="testAddChannelDuplicates" specification="_ySLQMkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, false);&#xD;
		channels.addNewChannelSet();&#xD;
&#xD;
		// Checks if initial is zero&#xD;
		assertEquals(0, channels.getChannelSet(0).size(), &quot;Error in new ChannelSet Size&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Checks if adding channel worked&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
		channels.addChannel(0, &quot;Test&quot;);&#xD;
&#xD;
		// Confirms duplicate channels aren't added&#xD;
		assertEquals(1, channels.getChannelSet(0).size(), &quot;Error, channel duplicate added&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPOkT9Ee2_n5XNBGdaxw" name="testAddChannel" specification="_ySLQNkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var channels = new Channels(channelSize, true);&#xD;
		channels.addNewChannelSet();&#xD;
		assertTrue(channels.addChannel(0, &quot;Test&quot;), &quot;Channel add failed, ChannelSet is empty&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPO0T9Ee2_n5XNBGdaxw" name="testGetNumChannelsNew" specification="_ySL3QkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
		assertEquals(channelSize, channels.getNumChannels(), &quot;NumChannels has incorrect size&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPPET9Ee2_n5XNBGdaxw" name="testGetNumChannelsNChannels" specification="_ySL3RkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>final var channelSize = 10;&#xD;
		var channels = new Channels(channelSize, true);&#xD;
&#xD;
		// getNumChannels returns nChannels, so this should never fail&#xD;
		assertEquals(channels.nChannels, channels.getNumChannels(), &quot;GetNumChannels does not equal nChannels&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySHl0UT9Ee2_n5XNBGdaxw" name="testGetChannelSetByChannelSetSize" visibility="package" method="_yjHPMET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySIM40T9Ee2_n5XNBGdaxw" name="testGetChannelSetByChannel" visibility="package" method="_yjHPMUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySIz8kT9Ee2_n5XNBGdaxw" name="testAddNewChannelSetBySize" visibility="package" method="_yjHPMkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySIz9kT9Ee2_n5XNBGdaxw" name="testIsEmptyWhenCreatingEmptyChannels" visibility="package" method="_yjHPM0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySJbA0T9Ee2_n5XNBGdaxw" name="testIsEmptyWhenChannelsStartAboveZero" visibility="package" method="_yjHPNET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySKCEET9Ee2_n5XNBGdaxw" name="testEmptyAfterAdd" visibility="package" method="_yjHPNUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySKCFET9Ee2_n5XNBGdaxw" name="testEmptyAfterRemove" visibility="package" method="_yjHPNkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySKpIkT9Ee2_n5XNBGdaxw" name="testRemoveChannel" visibility="package" method="_yjHPN0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySKpJkT9Ee2_n5XNBGdaxw" name="testAddChannelTimeSlots" visibility="package" method="_yjHPOET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySLQMkT9Ee2_n5XNBGdaxw" name="testAddChannelDuplicates" visibility="package" method="_yjHPOUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySLQNkT9Ee2_n5XNBGdaxw" name="testAddChannel" visibility="package" method="_yjHPOkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySL3QkT9Ee2_n5XNBGdaxw" name="testGetNumChannelsNew" visibility="package" method="_yjHPO0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySL3RkT9Ee2_n5XNBGdaxw" name="testGetNumChannelsNChannels" visibility="package" method="_yjHPPET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySMeUET9Ee2_n5XNBGdaxw" name="CodeFragment">
              <ownedAttribute xmi:id="_yiIXwET9Ee2_n5XNBGdaxw" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiIXwUT9Ee2_n5XNBGdaxw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiIXwkT9Ee2_n5XNBGdaxw" name="edges" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykNbYUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiI-0kT9Ee2_n5XNBGdaxw" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiJl4ET9Ee2_n5XNBGdaxw" name="codeFragment" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykNbZET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiJl40T9Ee2_n5XNBGdaxw" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiKM8UT9Ee2_n5XNBGdaxw" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjHPPUT9Ee2_n5XNBGdaxw" name="CodeFragment" specification="_ySNFYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjHPPkT9Ee2_n5XNBGdaxw" type="_ySMeUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2QET9Ee2_n5XNBGdaxw" name="CodeFragment" specification="_yg_vUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2QUT9Ee2_n5XNBGdaxw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2QkT9Ee2_n5XNBGdaxw" name="edges" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjH2Q0T9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjH2RET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2RUT9Ee2_n5XNBGdaxw" type="_ySMeUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2RkT9Ee2_n5XNBGdaxw" name="getCoordinator" specification="_ySNsckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2R0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2SET9Ee2_n5XNBGdaxw" name="instructions" specification="_ySNsdET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2SUT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2SkT9Ee2_n5XNBGdaxw" name="size" specification="_ySOTgUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2S0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2TET9Ee2_n5XNBGdaxw" name="generateCodeFragment" specification="_ySO6kET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2TUT9Ee2_n5XNBGdaxw" name="getBaseInstruction" specification="_ySO6kUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2TkT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2T0T9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2UET9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2UUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2UkT9Ee2_n5XNBGdaxw" name="push" specification="_ySPhoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2U0T9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2VET9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2VUT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2VkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2V0T9Ee2_n5XNBGdaxw" name="pull" specification="_ySQIsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2WET9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2WUT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2WkT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2W0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2XET9Ee2_n5XNBGdaxw" name="ifHas" specification="_ySQItUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2XUT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2XkT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2X0T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2YET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjH2YUT9Ee2_n5XNBGdaxw" name="ifNotHas" specification="_ySQvw0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjH2YkT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2Y0T9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2ZET9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjH2ZUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdUET9Ee2_n5XNBGdaxw" name="wait" specification="_ySRW0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdUUT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjIdUkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdU0T9Ee2_n5XNBGdaxw" name="sleep" specification="_ySRW00T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdVET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdVUT9Ee2_n5XNBGdaxw" name="reportIfDifferentCoordinators" specification="_yhBkgUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdVkT9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdV0T9Ee2_n5XNBGdaxw" name="multipleCoordinators" specification="_yhCLkUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdWET9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIdWUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySNFYET9Ee2_n5XNBGdaxw" name="CodeFragment" visibility="package" method="_yjHPPUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySNFYUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySNscET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjrP4ET9Ee2_n5XNBGdaxw">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySNscUT9Ee2_n5XNBGdaxw" type="_ySMeUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySNsckT9Ee2_n5XNBGdaxw" name="getCoordinator" method="_yjH2RkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjrP4kT9Ee2_n5XNBGdaxw">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySNsc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySNsdET9Ee2_n5XNBGdaxw" name="instructions" method="_yjH2SET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjrP40T9Ee2_n5XNBGdaxw">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhBkgET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySOTgUT9Ee2_n5XNBGdaxw" name="size" method="_yjH2SkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjrP5ET9Ee2_n5XNBGdaxw">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySOTgkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySO6kET9Ee2_n5XNBGdaxw" name="generateCodeFragment" visibility="private" method="_yjH2TET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySO6kUT9Ee2_n5XNBGdaxw" name="getBaseInstruction" visibility="private" method="_yjH2TUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySO6kkT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySO6k0T9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySO6lET9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySO6lUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySPhoET9Ee2_n5XNBGdaxw" name="push" visibility="private" method="_yjH2UkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySPhoUT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySPhokT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySPho0T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySPhpET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySQIsET9Ee2_n5XNBGdaxw" name="pull" visibility="private" method="_yjH2V0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySQIsUT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQIskT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQIs0T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQItET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySQItUT9Ee2_n5XNBGdaxw" name="ifHas" visibility="private" method="_yjH2XET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySQItkT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQvwET9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQvwUT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQvwkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySQvw0T9Ee2_n5XNBGdaxw" name="ifNotHas" visibility="private" method="_yjH2YUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySQvxET9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQvxUT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQvxkT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySQvx0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySRW0ET9Ee2_n5XNBGdaxw" name="wait" method="_yjIdUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySRW0UT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySRW0kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySRW00T9Ee2_n5XNBGdaxw" name="sleep" isStatic="true" method="_yjIdU0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySRW1ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yg_vUET9Ee2_n5XNBGdaxw" name="CodeFragment" visibility="package" method="_yjH2QET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhAWYUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhAWYkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjrP4UT9Ee2_n5XNBGdaxw">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yg_vUUT9Ee2_n5XNBGdaxw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yg_vUkT9Ee2_n5XNBGdaxw" name="edges" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yg_vU0T9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhAWYET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhAWY0T9Ee2_n5XNBGdaxw" type="_ySMeUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhBkgUT9Ee2_n5XNBGdaxw" name="reportIfDifferentCoordinators" visibility="private" method="_yjIdVUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhBkgkT9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhCLkUT9Ee2_n5XNBGdaxw" name="multipleCoordinators" visibility="private" method="_yjIdV0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhCLkkT9Ee2_n5XNBGdaxw" name="coordinators" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhCLk0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySTMAET9Ee2_n5XNBGdaxw" name="CombinedActivation">
              <generalization xmi:id="_yejfVkT9Ee2_n5XNBGdaxw" general="_yR0D00T9Ee2_n5XNBGdaxw"/>
              <interfaceRealization xmi:id="_yhDZsET9Ee2_n5XNBGdaxw" client="_ySTMAET9Ee2_n5XNBGdaxw" supplier="_yg6PwUT9Ee2_n5XNBGdaxw" contract="_yg6PwUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdWkT9Ee2_n5XNBGdaxw" name="CombinedActivation" specification="_ySTzEET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdW0T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjIdXET9Ee2_n5XNBGdaxw" type="_ySTMAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdXUT9Ee2_n5XNBGdaxw" name="CombinedActivation" specification="_yeiRMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdXkT9Ee2_n5XNBGdaxw" name="elem" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIdX0T9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjIdYET9Ee2_n5XNBGdaxw" type="_ySTMAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdYUT9Ee2_n5XNBGdaxw" name="CombinedActivation" specification="_yei4QkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdYkT9Ee2_n5XNBGdaxw" name="priorEntry" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIdY0T9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIdZET9Ee2_n5XNBGdaxw" type="_ySTMAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdZUT9Ee2_n5XNBGdaxw" name="canCombine" specification="_yejfUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdZkT9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIdZ0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySTzEET9Ee2_n5XNBGdaxw" name="CombinedActivation" visibility="package" method="_yjIdWkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySTzEkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySTzE0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySTzEUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySTzFET9Ee2_n5XNBGdaxw" type="_ySTMAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yeiRMET9Ee2_n5XNBGdaxw" name="CombinedActivation" visibility="package" method="_yjIdXUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yeiRM0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yei4QET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yeiRMUT9Ee2_n5XNBGdaxw" name="elem" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yeiRMkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yei4QUT9Ee2_n5XNBGdaxw" type="_ySTMAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yei4QkT9Ee2_n5XNBGdaxw" name="CombinedActivation" visibility="package" method="_yjIdYUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yei4RUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yei4RkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yei4Q0T9Ee2_n5XNBGdaxw" name="priorEntry" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yei4RET9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yei4R0T9Ee2_n5XNBGdaxw" type="_ySTMAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yejfUET9Ee2_n5XNBGdaxw" name="canCombine" method="_yjIdZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yejfUUT9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yejfUkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySVBMET9Ee2_n5XNBGdaxw" name="CommunicationGraph">
              <ownedComment xmi:id="_yjrP5UT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yelUg0T9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiK0AET9Ee2_n5XNBGdaxw" name="wfm" visibility="package" type="_ySh1gET9Ee2_n5XNBGdaxw" association="_ykOCcUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiK0AkT9Ee2_n5XNBGdaxw" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiLbEUT9Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiLbE0T9Ee2_n5XNBGdaxw" name="workLoad" visibility="package" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykOCdET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjIdaET9Ee2_n5XNBGdaxw" name="CommunicationGraph" specification="_yekGYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjIdaUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIdakT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjIda0T9Ee2_n5XNBGdaxw" type="_ySVBMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEYET9Ee2_n5XNBGdaxw" name="CommunicationGraph" specification="_yektc0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEYUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJEYkT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJEY0T9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJEZET9Ee2_n5XNBGdaxw" type="_ySVBMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEZUT9Ee2_n5XNBGdaxw" name="createHeader" specification="_ySVoQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEZkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEZ0T9Ee2_n5XNBGdaxw" name="createFooter" specification="_ySWPU0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEaET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEaUT9Ee2_n5XNBGdaxw" name="visualization" specification="_ySW2Y0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEakT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEa0T9Ee2_n5XNBGdaxw" name="createWarpFileContent" specification="_ySXdckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEbET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySVoQET9Ee2_n5XNBGdaxw" name="createHeader" method="_yjJEZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yelUgET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySWPU0T9Ee2_n5XNBGdaxw" name="createFooter" method="_yjJEZ0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yelUgUT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySW2Y0T9Ee2_n5XNBGdaxw" name="visualization" method="_yjJEaUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yelUgkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySXdckT9Ee2_n5XNBGdaxw" name="createWarpFileContent" method="_yjJEa0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySXdc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yekGYET9Ee2_n5XNBGdaxw" name="CommunicationGraph" method="_yjIdaET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yektcET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yektcUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yekGYUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yekGYkT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yektckT9Ee2_n5XNBGdaxw" type="_ySVBMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yektc0T9Ee2_n5XNBGdaxw" name="CommunicationGraph" method="_yjJEYET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yektd0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yekteET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yektdET9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yektdUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yektdkT9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yekteUT9Ee2_n5XNBGdaxw" type="_ySVBMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySYrkET9Ee2_n5XNBGdaxw" name="ConnectivityPoset">
              <ownedComment xmi:id="_yjrP5kT9Ee2_n5XNBGdaxw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_yel7lUT9Ee2_n5XNBGdaxw" general="_yTF2MET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEbUT9Ee2_n5XNBGdaxw" name="ConnectivityPoset" specification="_yel7kET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEbkT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJEb0T9Ee2_n5XNBGdaxw" type="_ySYrkET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJEcET9Ee2_n5XNBGdaxw" name="findCoordinator" specification="_yhEAwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJEcUT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJEckT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yel7kET9Ee2_n5XNBGdaxw" name="ConnectivityPoset" visibility="package" method="_yjJEbUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yel7kkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yel7k0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yel7kUT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yel7lET9Ee2_n5XNBGdaxw" type="_ySYrkET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhEAwET9Ee2_n5XNBGdaxw" name="findCoordinator" visibility="protected" method="_yjJEcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhEAwUT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhEAwkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySZ5sET9Ee2_n5XNBGdaxw" name="DeadlineComparator">
              <interfaceRealization xmi:id="_yhFO4UT9Ee2_n5XNBGdaxw" client="_ySZ5sET9Ee2_n5XNBGdaxw" supplier="_yel7lkT9Ee2_n5XNBGdaxw" contract="_yel7lkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrcET9Ee2_n5XNBGdaxw" name="compare" specification="_yhGdAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrcUT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJrckT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJrc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhGdAET9Ee2_n5XNBGdaxw" name="compare" method="_yjJrcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhGdAUT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhGdAkT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhGdA0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySagwET9Ee2_n5XNBGdaxw" name="Description">
              <ownedComment xmi:id="_yjr28ET9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yhHEEkT9Ee2_n5XNBGdaxw" general="_yeRygET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiMCIET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiMCIUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrdET9Ee2_n5XNBGdaxw" name="Description" specification="_ySbH0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrdUT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrdkT9Ee2_n5XNBGdaxw" name="Description" specification="_ySbu4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrd0T9Ee2_n5XNBGdaxw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJreET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJreUT9Ee2_n5XNBGdaxw" name="toString" specification="_ySbu5UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrekT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySbH0ET9Ee2_n5XNBGdaxw" name="Description" method="_yjJrdET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySbH0UT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySbH0kT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySbH00T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySbu4ET9Ee2_n5XNBGdaxw" name="Description" method="_yjJrdkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySbu4kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySbu40T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySbu4UT9Ee2_n5XNBGdaxw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySbu5ET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySbu5UT9Ee2_n5XNBGdaxw" name="toString" method="_yjJreUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySbu5kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySc9AET9Ee2_n5XNBGdaxw" name="Edge">
              <generalization xmi:id="_yfBZYkT9Ee2_n5XNBGdaxw" general="_yU50EET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiMCIkT9Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiMCI0T9Ee2_n5XNBGdaxw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiMpMET9Ee2_n5XNBGdaxw" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiMpMUT9Ee2_n5XNBGdaxw" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiMpMkT9Ee2_n5XNBGdaxw" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiMpM0T9Ee2_n5XNBGdaxw" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiMpNET9Ee2_n5XNBGdaxw" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiNQQET9Ee2_n5XNBGdaxw" name="state" type="_ySdkEET9Ee2_n5XNBGdaxw" association="_yjr28UT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiNQQUT9Ee2_n5XNBGdaxw" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yhHEFET9Ee2_n5XNBGdaxw" client="_ySc9AET9Ee2_n5XNBGdaxw" supplier="_yg6PwUT9Ee2_n5XNBGdaxw" contract="_yg6PwUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJre0T9Ee2_n5XNBGdaxw" name="Edge" specification="_ySeLIET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrfET9Ee2_n5XNBGdaxw" type="_ySc9AET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrfUT9Ee2_n5XNBGdaxw" name="Edge" specification="_ySeLJET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrfkT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrf0T9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrgET9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrgUT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrgkT9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrg0T9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrhET9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrhUT9Ee2_n5XNBGdaxw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjJrhkT9Ee2_n5XNBGdaxw" type="_ySc9AET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrh0T9Ee2_n5XNBGdaxw" name="compareTo" specification="_yenJsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJriET9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjJriUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrikT9Ee2_n5XNBGdaxw" name="toString" specification="_ySeyN0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJri0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjJrjET9Ee2_n5XNBGdaxw" name="print" specification="_ySfZRET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjJrjUT9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSgET9Ee2_n5XNBGdaxw" name="print" specification="_ySgAUkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySeLIET9Ee2_n5XNBGdaxw" name="Edge" visibility="package" method="_yjJre0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySeLIUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySeLIkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySeLI0T9Ee2_n5XNBGdaxw" type="_ySc9AET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySeLJET9Ee2_n5XNBGdaxw" name="Edge" visibility="package" method="_yjJrfUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySeyNET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySeyNUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySeLJUT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeLJkT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeLJ0T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeLKET9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeyMET9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeyMUT9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeyMkT9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeyM0T9Ee2_n5XNBGdaxw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySeyNkT9Ee2_n5XNBGdaxw" type="_ySc9AET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySeyN0T9Ee2_n5XNBGdaxw" name="toString" method="_yjJrikT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySfZQET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySfZRET9Ee2_n5XNBGdaxw" name="print" method="_yjJrjET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySfZRUT9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySgAUkT9Ee2_n5XNBGdaxw" name="print" method="_yjKSgET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yenJsET9Ee2_n5XNBGdaxw" name="compareTo" method="_yjJrh0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yenJsUT9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yenwwET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ySdkEET9Ee2_n5XNBGdaxw" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_ySdkEkT9Ee2_n5XNBGdaxw" name="RELEASED"/>
                <ownedLiteral xmi:id="_ySdkE0T9Ee2_n5XNBGdaxw" name="EXECUTING"/>
                <ownedLiteral xmi:id="_ySdkFET9Ee2_n5XNBGdaxw" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySh1gET9Ee2_n5XNBGdaxw" name="FileManager">
              <ownedComment xmi:id="_yjseAET9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yiN3UET9Ee2_n5XNBGdaxw" name="COURSE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiN3UUT9Ee2_n5XNBGdaxw" value="&quot;// Course CS2820 Authentication Tag&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiN3UkT9Ee2_n5XNBGdaxw" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiN3U0T9Ee2_n5XNBGdaxw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSgUT9Ee2_n5XNBGdaxw" name="FileManager" specification="_ySickET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKSgkT9Ee2_n5XNBGdaxw" type="_ySh1gET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class	&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSg0T9Ee2_n5XNBGdaxw" name="FileManager" specification="_ySiclET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKShET9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKShUT9Ee2_n5XNBGdaxw" type="_ySh1gET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the base directory&#xD;
		// constructor for this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKShkT9Ee2_n5XNBGdaxw" name="getDocumentsDirectory" specification="_ySjDoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKSh0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
		String documentsDirectory;&#xD;
		if ( OSValidator.isWindows() ) {&#xD;
			documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
		} else if ( OSValidator.isMac() ) {&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;)+File.separator+&quot;Documents&quot;;&#xD;
		} else { // for all other Unix systems&#xD;
			documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not MACOS)&#xD;
		}&#xD;
		return documentsDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSiET9Ee2_n5XNBGdaxw" name="getCurrentDirectory" specification="_ySjDokT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKSiUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSikT9Ee2_n5XNBGdaxw" name="createFile" specification="_ySjDpET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKSi0T9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSjET9Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSjUT9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSjkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* we don't actually create the file...it will be created when written to&#xD;
		 * this routine really just creates the file name ;-)&#xD;
		 */&#xD;
		Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex); // get the file string sans the suffix&#xD;
		}&#xD;
		/* fileString has no suffix at this point (removed if it existed)&#xD;
		 * Now add file name extension and suffix&#xD;
		 */&#xD;
		fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSj0T9Ee2_n5XNBGdaxw" name="createFile" specification="_ySjqskT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKSkET9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSkUT9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSkkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
		String fileString = file;&#xD;
		if (suffixIndex > 0) {  // if a suffix exists, index will be > 0&#xD;
			fileString = file.substring(0,suffixIndex-1); // get the file string sans the suffix&#xD;
		}&#xD;
		// fileString has no suffix at this point (removed if it existed)&#xD;
		// Now add file name extension and suffix&#xD;
		fileString = fileString + suffix;&#xD;
		// we don't actually create the file...it will be created when written to&#xD;
		// this routine really just creates the file name ;-)&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
		}&#xD;
		return fileString; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjKSk0T9Ee2_n5XNBGdaxw" name="createDirectory" specification="_ySjqtkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjKSlET9Ee2_n5XNBGdaxw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSlUT9Ee2_n5XNBGdaxw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjKSlkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory; &#xD;
		if (subDirectory.startsWith(&quot;/&quot;)) {  // check if full path provided&#xD;
			newDirectory = subDirectory ; // if subDirectory is a full path, use it.&#xD;
		} else { // subDirectory has relative path, so just append&#xD;
			newDirectory = directory + File.separator + subDirectory;&#xD;
		}&#xD;
		try {&#xD;
			Path path = Paths.get(newDirectory);&#xD;
			Files.createDirectories(path);&#xD;
			if (verbose) {&#xD;
				System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
			newDirectory = directory;  // in case of error, just use the initial directory&#xD;
		}&#xD;
		return newDirectory;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5kET9Ee2_n5XNBGdaxw" name="writeFile" specification="_ySkRwUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5kUT9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjK5kkT9Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Authentication tag = new Authentication(COURSE_TAG);&#xD;
		Path fileName = Path.of(file);&#xD;
		try {&#xD;
			Files.writeString(fileName, tag.sign(fileContents));&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5k0T9Ee2_n5XNBGdaxw" name="readFile" specification="_ySkRxET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5lET9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjK5lUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
		Path fileName = Path.of(file);&#xD;
		String contents = null;&#xD;
		try {&#xD;
			contents = Files.readString(fileName);&#xD;
		} catch (IOException e) {&#xD;
			// handle error&#xD;
			System.err.println(&quot;Error on reading file&quot; + file +&quot;: &quot; + e.getMessage());&#xD;
		} // the file will be closed automatically upon exit of this try block&#xD;
		return contents;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySickET9Ee2_n5XNBGdaxw" name="FileManager" method="_yjKSgUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySickUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySickkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjseAUT9Ee2_n5XNBGdaxw">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySick0T9Ee2_n5XNBGdaxw" type="_ySh1gET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySiclET9Ee2_n5XNBGdaxw" name="FileManager" method="_yjKSg0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySiclkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySicl0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ySiclUT9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySicmET9Ee2_n5XNBGdaxw" type="_ySh1gET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySjDoET9Ee2_n5XNBGdaxw" name="getDocumentsDirectory" method="_yjKShkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySjDoUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySjDokT9Ee2_n5XNBGdaxw" name="getCurrentDirectory" method="_yjKSiET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySjDo0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySjDpET9Ee2_n5XNBGdaxw" name="createFile" method="_yjKSikT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjseAkT9Ee2_n5XNBGdaxw">
                  <body>Build the name extension used for all files created by this tool.&#xD;
	 * The nameExtension will be added to the base input file name&#xD;
	 * so that all of the output files can be associated with the input file&#xD;
	 * The file naming pattern is:&#xD;
	 * baseFileNameFileType-NonDefaultParameterList&#xD;
	 * where FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray&#xD;
	 * Default parameters are not identified in the NameExtension&#xD;
	 * All parameters used to create the file, should be listed near the top&#xD;
	 * of the file in the Parameter Section, followed by the file contents.&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySjDpUT9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySjDpkT9Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySjqsET9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySjqsUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySjqskT9Ee2_n5XNBGdaxw" name="createFile" method="_yjKSj0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySjqs0T9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySjqtET9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySjqtUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySjqtkT9Ee2_n5XNBGdaxw" name="createDirectory" method="_yjKSk0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySjqt0T9Ee2_n5XNBGdaxw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySjquET9Ee2_n5XNBGdaxw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySkRwET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySkRwUT9Ee2_n5XNBGdaxw" name="writeFile" method="_yjK5kET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySkRwkT9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySkRw0T9Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySkRxET9Ee2_n5XNBGdaxw" name="readFile" method="_yjK5k0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySkRxUT9Ee2_n5XNBGdaxw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySkRxkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySk40ET9Ee2_n5XNBGdaxw" name="Flow">
              <ownedComment xmi:id="_yjseA0T9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfLxckT9Ee2_n5XNBGdaxw" general="_yU50EET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiN3VUT9Ee2_n5XNBGdaxw" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiN3VkT9Ee2_n5XNBGdaxw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiN3V0T9Ee2_n5XNBGdaxw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiN3WET9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiN3WUT9Ee2_n5XNBGdaxw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiN3WkT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiOeYET9Ee2_n5XNBGdaxw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiOeYUT9Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiOeYkT9Ee2_n5XNBGdaxw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiOeY0T9Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiOeZET9Ee2_n5XNBGdaxw" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiOeZUT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiOeZkT9Ee2_n5XNBGdaxw" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiOeZ0T9Ee2_n5XNBGdaxw" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiPFcUT9Ee2_n5XNBGdaxw" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiPFc0T9Ee2_n5XNBGdaxw" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiPsgUT9Ee2_n5XNBGdaxw" name="nodes" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykOpgUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiQTkET9Ee2_n5XNBGdaxw" name="linkTxAndTotalCost" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykOphET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiQTk0T9Ee2_n5XNBGdaxw" name="edges" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykPQkUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiQ6okT9Ee2_n5XNBGdaxw" name="nodePredecessor" visibility="package" type="_yS96YET9Ee2_n5XNBGdaxw" association="_ykPQlET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiRhsUT9Ee2_n5XNBGdaxw" name="edgePredecessor" visibility="package" type="_ySc9AET9Ee2_n5XNBGdaxw" association="_ykP3oET9Ee2_n5XNBGdaxw"/>
              <interfaceRealization xmi:id="_yhJgUET9Ee2_n5XNBGdaxw" client="_ySk40ET9Ee2_n5XNBGdaxw" supplier="_yg6PwUT9Ee2_n5XNBGdaxw" contract="_yg6PwUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5lkT9Ee2_n5XNBGdaxw" name="Flow" specification="_ySmG8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5l0T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjK5mET9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjK5mUT9Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjK5mkT9Ee2_n5XNBGdaxw" type="_ySk40ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5m0T9Ee2_n5XNBGdaxw" name="Flow" specification="_ySmG90T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5nET9Ee2_n5XNBGdaxw" type="_ySk40ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5nUT9Ee2_n5XNBGdaxw" name="getInitialPriority" specification="_ySmuAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5nkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5n0T9Ee2_n5XNBGdaxw" name="getIndex" specification="_ySmuAkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5oET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5oUT9Ee2_n5XNBGdaxw" name="getNumTxPerLink" specification="_ySmuBET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5okT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5o0T9Ee2_n5XNBGdaxw" name="getNodes" specification="_ySmuBkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5pET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5pUT9Ee2_n5XNBGdaxw" name="getEdges" specification="_ySnVEUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5pkT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjK5p0T9Ee2_n5XNBGdaxw" name="addEdge" specification="_yfJ8QET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjK5qET9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgoET9Ee2_n5XNBGdaxw" name="addNode" specification="_yfKjUUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgoUT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgokT9Ee2_n5XNBGdaxw" name="getLinkTxAndTotalCost" specification="_ySojMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgo0T9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgpET9Ee2_n5XNBGdaxw" name="setInitialPriority" specification="_ySpKQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgpUT9Ee2_n5XNBGdaxw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgpkT9Ee2_n5XNBGdaxw" name="setIndex" specification="_ySpKQkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgp0T9Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgqET9Ee2_n5XNBGdaxw" name="setNumTxPerLink" specification="_ySpKRET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgqUT9Ee2_n5XNBGdaxw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgqkT9Ee2_n5XNBGdaxw" name="setNodes" specification="_yhLVgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgq0T9Ee2_n5XNBGdaxw" name="nodes" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgrET9Ee2_n5XNBGdaxw" name="setLinkTxAndTotalCost" specification="_yhLVg0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgrUT9Ee2_n5XNBGdaxw" name="linkTxAndTotalCost" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgrkT9Ee2_n5XNBGdaxw" name="compareTo" specification="_yfLKYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgr0T9Ee2_n5XNBGdaxw" name="flow" type="_ySk40ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjLgsET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgsUT9Ee2_n5XNBGdaxw" name="toString" specification="_ySpxUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgskT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySmG8ET9Ee2_n5XNBGdaxw" name="Flow" visibility="package" method="_yjK5lkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySmG9ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySmG9UT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjseBET9Ee2_n5XNBGdaxw">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmG8UT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySmG8kT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySmG80T9Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySmG9kT9Ee2_n5XNBGdaxw" type="_ySk40ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmG90T9Ee2_n5XNBGdaxw" name="Flow" visibility="package" method="_yjK5m0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ySmG-ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ySmG-UT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjseBUT9Ee2_n5XNBGdaxw">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmG-kT9Ee2_n5XNBGdaxw" type="_ySk40ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmuAET9Ee2_n5XNBGdaxw" name="getInitialPriority" method="_yjK5nUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjseBkT9Ee2_n5XNBGdaxw">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmuAUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmuAkT9Ee2_n5XNBGdaxw" name="getIndex" method="_yjK5n0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjseB0T9Ee2_n5XNBGdaxw">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmuA0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmuBET9Ee2_n5XNBGdaxw" name="getNumTxPerLink" method="_yjK5oUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFEET9Ee2_n5XNBGdaxw">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySmuBUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySmuBkT9Ee2_n5XNBGdaxw" name="getNodes" method="_yjK5o0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFEUT9Ee2_n5XNBGdaxw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhKucET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySnVEUT9Ee2_n5XNBGdaxw" name="getEdges" method="_yjK5pUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFEkT9Ee2_n5XNBGdaxw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhKucUT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySojMET9Ee2_n5XNBGdaxw" name="getLinkTxAndTotalCost" method="_yjLgokT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFFUT9Ee2_n5XNBGdaxw">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhKuckT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySpKQET9Ee2_n5XNBGdaxw" name="setInitialPriority" method="_yjLgpET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFFkT9Ee2_n5XNBGdaxw">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySpKQUT9Ee2_n5XNBGdaxw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySpKQkT9Ee2_n5XNBGdaxw" name="setIndex" method="_yjLgpkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFF0T9Ee2_n5XNBGdaxw">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySpKQ0T9Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySpKRET9Ee2_n5XNBGdaxw" name="setNumTxPerLink" method="_yjLgqET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFGET9Ee2_n5XNBGdaxw">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySpKRUT9Ee2_n5XNBGdaxw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySpxUET9Ee2_n5XNBGdaxw" name="toString" method="_yjLgsUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySpxUUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfJ8QET9Ee2_n5XNBGdaxw" name="addEdge" method="_yjK5p0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFE0T9Ee2_n5XNBGdaxw">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfKjUET9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfKjUUT9Ee2_n5XNBGdaxw" name="addNode" method="_yjLgoET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFFET9Ee2_n5XNBGdaxw">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfKjUkT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfLKYET9Ee2_n5XNBGdaxw" name="compareTo" method="_yjLgrkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfLKYUT9Ee2_n5XNBGdaxw" name="flow" type="_ySk40ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfLKYkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yhLVgET9Ee2_n5XNBGdaxw" name="setNodes" method="_yjLgqkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFGUT9Ee2_n5XNBGdaxw">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhLVgUT9Ee2_n5XNBGdaxw" name="nodes" type="_yeRygET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhLVg0T9Ee2_n5XNBGdaxw" name="setLinkTxAndTotalCost" method="_yjLgrET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtFGkT9Ee2_n5XNBGdaxw">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhL8kET9Ee2_n5XNBGdaxw" name="linkTxAndTotalCost" type="_yeRygET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySsNkET9Ee2_n5XNBGdaxw" name="FlowMap">
              <ownedComment xmi:id="_yjtFG0T9Ee2_n5XNBGdaxw">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfONsET9Ee2_n5XNBGdaxw" general="_yRy1sET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiSIwET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiSIwUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySs0oET9Ee2_n5XNBGdaxw" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_yjtFHET9Ee2_n5XNBGdaxw">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfO0wUT9Ee2_n5XNBGdaxw" general="_yRy1sET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiSIwkT9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiSIw0T9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yStbsET9Ee2_n5XNBGdaxw" name="GraphViz">
              <ownedComment xmi:id="_yjtFHUT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfQp8UT9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiSIxET9Ee2_n5XNBGdaxw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiSIxUT9Ee2_n5XNBGdaxw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiSv0ET9Ee2_n5XNBGdaxw" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiSv0UT9Ee2_n5XNBGdaxw" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiSv0kT9Ee2_n5XNBGdaxw" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiSv1ET9Ee2_n5XNBGdaxw" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiTW4UT9Ee2_n5XNBGdaxw" name="wfm" visibility="package" type="_ySh1gET9Ee2_n5XNBGdaxw" association="_ykP3o0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiTW40T9Ee2_n5XNBGdaxw" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiT98ET9Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiT98kT9Ee2_n5XNBGdaxw" name="gv" visibility="package" type="_yStbsET9Ee2_n5XNBGdaxw" association="_ykP3pkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjLgs0T9Ee2_n5XNBGdaxw" name="GraphViz" specification="_yfPb0UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjLgtET9Ee2_n5XNBGdaxw" name="wfm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjLgtUT9Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjLgtkT9Ee2_n5XNBGdaxw" type="_yStbsET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHsET9Ee2_n5XNBGdaxw" name="GraphViz" specification="_yfQC5UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHsUT9Ee2_n5XNBGdaxw" name="wfm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjMHskT9Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjMHs0T9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjMHtET9Ee2_n5XNBGdaxw" type="_yStbsET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHtUT9Ee2_n5XNBGdaxw" name="visualization" specification="_ySuCwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHtkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHt0T9Ee2_n5XNBGdaxw" name="initializeGraphVizContent" specification="_ySup00T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHuET9Ee2_n5XNBGdaxw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHuUT9Ee2_n5XNBGdaxw" name="finalizeGraphVizContent" specification="_ySvQ4ET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHukT9Ee2_n5XNBGdaxw" name="getGraphVizContent" specification="_ySvQ4UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHu0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHvET9Ee2_n5XNBGdaxw" name="createGraphVizContent" specification="_ySvQ40T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHvUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHvkT9Ee2_n5XNBGdaxw" name="addFlowToGraphViz" specification="_ySv38ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHv0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHwET9Ee2_n5XNBGdaxw" name="addSrcNodeToGraphViz" specification="_ySv38kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHwUT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHwkT9Ee2_n5XNBGdaxw" name="addSnkNodeToGraphViz" specification="_ySv39ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHw0T9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHxET9Ee2_n5XNBGdaxw" name="finalizeCurrentFlowInGraphViz" specification="_ySwfAET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMHxUT9Ee2_n5XNBGdaxw" name="addNodeName" specification="_ySwfAUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMHxkT9Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjMHx0T9Ee2_n5XNBGdaxw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySuCwET9Ee2_n5XNBGdaxw" name="visualization" method="_yjMHtUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfQp8ET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ySup00T9Ee2_n5XNBGdaxw" name="initializeGraphVizContent" method="_yjMHt0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySup1ET9Ee2_n5XNBGdaxw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySvQ4ET9Ee2_n5XNBGdaxw" name="finalizeGraphVizContent" method="_yjMHuUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySvQ4UT9Ee2_n5XNBGdaxw" name="getGraphVizContent" method="_yjMHukT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjtsIET9Ee2_n5XNBGdaxw">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_ySvQ4kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySvQ40T9Ee2_n5XNBGdaxw" name="createGraphVizContent" method="_yjMHvET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySvQ5ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySv38ET9Ee2_n5XNBGdaxw" name="addFlowToGraphViz" method="_yjMHvkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySv38UT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySv38kT9Ee2_n5XNBGdaxw" name="addSrcNodeToGraphViz" method="_yjMHwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySv380T9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySv39ET9Ee2_n5XNBGdaxw" name="addSnkNodeToGraphViz" method="_yjMHwkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySv39UT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ySwfAET9Ee2_n5XNBGdaxw" name="finalizeCurrentFlowInGraphViz" method="_yjMHxET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ySwfAUT9Ee2_n5XNBGdaxw" name="addNodeName" visibility="private" method="_yjMHxUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ySwfAkT9Ee2_n5XNBGdaxw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ySwfA0T9Ee2_n5XNBGdaxw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfPb0UT9Ee2_n5XNBGdaxw" name="GraphViz" visibility="package" method="_yjLgs0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfQC4kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfQC40T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfQC4ET9Ee2_n5XNBGdaxw" name="wfm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfQC4UT9Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfQC5ET9Ee2_n5XNBGdaxw" type="_yStbsET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfQC5UT9Ee2_n5XNBGdaxw" name="GraphViz" visibility="package" method="_yjMHsET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfQC6UT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfQC6kT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfQC5kT9Ee2_n5XNBGdaxw" name="wfm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfQC50T9Ee2_n5XNBGdaxw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfQC6ET9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfQC60T9Ee2_n5XNBGdaxw" type="_yStbsET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySxtIET9Ee2_n5XNBGdaxw" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_yjtsIUT9Ee2_n5XNBGdaxw">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_yhNKsET9Ee2_n5XNBGdaxw" general="_yfUUUUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiUlAET9Ee2_n5XNBGdaxw" name="gv" visibility="package" type="_yStbsET9Ee2_n5XNBGdaxw" association="_ykQeskT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuwET9Ee2_n5XNBGdaxw" name="GraphVizListener" specification="_yfVicUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuwUT9Ee2_n5XNBGdaxw" name="gv" type="_yStbsET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjMuwkT9Ee2_n5XNBGdaxw" type="_ySxtIET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuw0T9Ee2_n5XNBGdaxw" name="buildGraphViz" specification="_yfWJgUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuxET9Ee2_n5XNBGdaxw" name="gv" type="_yStbsET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuxUT9Ee2_n5XNBGdaxw" name="enterWarpName" specification="_yfWwkUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuxkT9Ee2_n5XNBGdaxw" name="ctx" type="_yfWJg0T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMux0T9Ee2_n5XNBGdaxw" name="exitWarp" specification="_yfXXokT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuyET9Ee2_n5XNBGdaxw" name="ctx" type="_yfXXoET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuyUT9Ee2_n5XNBGdaxw" name="enterFlowName" specification="_yfYlwUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuykT9Ee2_n5XNBGdaxw" name="ctx" type="_yfX-s0T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuy0T9Ee2_n5XNBGdaxw" name="exitSrcNode" specification="_yfZM00T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuzET9Ee2_n5XNBGdaxw" name="ctx" type="_yfZM0UT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuzUT9Ee2_n5XNBGdaxw" name="exitSnkNode" specification="_yfZz5ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMuzkT9Ee2_n5XNBGdaxw" name="ctx" type="_yfZz4kT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMuz0T9Ee2_n5XNBGdaxw" name="exitFlow" specification="_yfaa9UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMu0ET9Ee2_n5XNBGdaxw" name="ctx" type="_yfaa80T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yfVicUT9Ee2_n5XNBGdaxw" name="GraphVizListener" visibility="private" method="_yjMuwET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfVic0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfVidET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfVickT9Ee2_n5XNBGdaxw" name="gv" type="_yStbsET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfWJgET9Ee2_n5XNBGdaxw" type="_ySxtIET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfWJgUT9Ee2_n5XNBGdaxw" name="buildGraphViz" isStatic="true" method="_yjMuw0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfWJgkT9Ee2_n5XNBGdaxw" name="gv" type="_yStbsET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfWwkUT9Ee2_n5XNBGdaxw" name="enterWarpName" method="_yjMuxUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfWwkkT9Ee2_n5XNBGdaxw" name="ctx" type="_yfWJg0T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfXXokT9Ee2_n5XNBGdaxw" name="exitWarp" method="_yjMux0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfXXo0T9Ee2_n5XNBGdaxw" name="ctx" type="_yfXXoET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfYlwUT9Ee2_n5XNBGdaxw" name="enterFlowName" method="_yjMuyUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfYlwkT9Ee2_n5XNBGdaxw" name="ctx" type="_yfX-s0T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfZM00T9Ee2_n5XNBGdaxw" name="exitSrcNode" method="_yjMuy0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfZM1ET9Ee2_n5XNBGdaxw" name="ctx" type="_yfZM0UT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfZz5ET9Ee2_n5XNBGdaxw" name="exitSnkNode" method="_yjMuzUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfZz5UT9Ee2_n5XNBGdaxw" name="ctx" type="_yfZz4kT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfaa9UT9Ee2_n5XNBGdaxw" name="exitFlow" method="_yjMuz0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfaa9kT9Ee2_n5XNBGdaxw" name="ctx" type="_yfaa80T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySziUET9Ee2_n5XNBGdaxw" name="InputGraphFile">
              <ownedComment xmi:id="_yjtsIkT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yiVMEET9Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiVMEUT9Ee2_n5XNBGdaxw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiVMEkT9Ee2_n5XNBGdaxw" name="wfm" visibility="private" type="_ySh1gET9Ee2_n5XNBGdaxw" association="_ykQetUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiVzIUT9Ee2_n5XNBGdaxw" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiVzIkT9Ee2_n5XNBGdaxw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiWaMET9Ee2_n5XNBGdaxw" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiWaMUT9Ee2_n5XNBGdaxw" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMu0UT9Ee2_n5XNBGdaxw" name="InputGraphFile" specification="_yfcQIUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMu0kT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjMu00T9Ee2_n5XNBGdaxw" type="_ySziUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjMu1ET9Ee2_n5XNBGdaxw" name="InputGraphFile" specification="_yfc3MET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjMu1UT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjMu1kT9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjMu10T9Ee2_n5XNBGdaxw" type="_ySziUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV0ET9Ee2_n5XNBGdaxw" name="setGraphFileName" specification="_yS0JYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV0UT9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV0kT9Ee2_n5XNBGdaxw" name="verifyGraphFileName" specification="_yS0JYkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV00T9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV1ET9Ee2_n5XNBGdaxw" name="readGraphFile" specification="_yS0wcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV1UT9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV1kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV10T9Ee2_n5XNBGdaxw" name="getInputGraphFileName" specification="_yS0wc0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV2ET9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV2UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV2kT9Ee2_n5XNBGdaxw" name="readGraphFileContents" specification="_yS1XgUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV20T9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV3ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV3UT9Ee2_n5XNBGdaxw" name="printVerboseMessage" specification="_yS1XhET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV3kT9Ee2_n5XNBGdaxw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV30T9Ee2_n5XNBGdaxw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV4ET9Ee2_n5XNBGdaxw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yS0JYET9Ee2_n5XNBGdaxw" name="setGraphFileName" visibility="private" method="_yjNV0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS0JYUT9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS0JYkT9Ee2_n5XNBGdaxw" name="verifyGraphFileName" visibility="private" method="_yjNV0kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS0JY0T9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS0wcET9Ee2_n5XNBGdaxw" name="readGraphFile" method="_yjNV1ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS0wcUT9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS0wckT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS0wc0T9Ee2_n5XNBGdaxw" name="getInputGraphFileName" visibility="private" method="_yjNV10T9Ee2_n5XNBGdaxw" raisedException="_yhNKsUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS0wdET9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS1XgET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS1XgUT9Ee2_n5XNBGdaxw" name="readGraphFileContents" visibility="private" method="_yjNV2kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS1XgkT9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS1Xg0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS1XhET9Ee2_n5XNBGdaxw" name="printVerboseMessage" visibility="private" method="_yjNV3UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS1-kET9Ee2_n5XNBGdaxw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS1-kUT9Ee2_n5XNBGdaxw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS1-kkT9Ee2_n5XNBGdaxw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfcQIUT9Ee2_n5XNBGdaxw" name="InputGraphFile" method="_yjMu0UT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfcQI0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfcQJET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfcQIkT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfcQJUT9Ee2_n5XNBGdaxw" type="_ySziUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfc3MET9Ee2_n5XNBGdaxw" name="InputGraphFile" method="_yjMu1ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfc3M0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfc3NET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfc3MUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfc3MkT9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfc3NUT9Ee2_n5XNBGdaxw" type="_ySziUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yS2loET9Ee2_n5XNBGdaxw" name="InstructionTimeSlot">
              <generalization xmi:id="_yfdeQET9Ee2_n5XNBGdaxw" general="_yTp24ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiWaM0T9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiWaNET9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV4UT9Ee2_n5XNBGdaxw" name="InstructionTimeSlot" specification="_yS3MsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV4kT9Ee2_n5XNBGdaxw" type="_yS2loET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjNV40T9Ee2_n5XNBGdaxw" name="InstructionTimeSlot" specification="_yS3MtET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjNV5ET9Ee2_n5XNBGdaxw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV5UT9Ee2_n5XNBGdaxw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjNV5kT9Ee2_n5XNBGdaxw" type="_yS2loET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN84ET9Ee2_n5XNBGdaxw" name="InstructionTimeSlot" specification="_yS3zwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN84UT9Ee2_n5XNBGdaxw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjN84kT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjN840T9Ee2_n5XNBGdaxw" type="_yS2loET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yS3MsET9Ee2_n5XNBGdaxw" name="InstructionTimeSlot" method="_yjNV4UT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yS3MsUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yS3MskT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yS3Ms0T9Ee2_n5XNBGdaxw" type="_yS2loET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS3MtET9Ee2_n5XNBGdaxw" name="InstructionTimeSlot" visibility="package" method="_yjNV40T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yS3Mt0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yS3MuET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yS3MtUT9Ee2_n5XNBGdaxw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS3MtkT9Ee2_n5XNBGdaxw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS3MuUT9Ee2_n5XNBGdaxw" type="_yS2loET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS3zwET9Ee2_n5XNBGdaxw" name="InstructionTimeSlot" visibility="package" method="_yjN84ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yS3zwkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yS3zw0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yS3zwUT9Ee2_n5XNBGdaxw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yS3zxUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS3zxET9Ee2_n5XNBGdaxw" type="_yS2loET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yS3zxkT9Ee2_n5XNBGdaxw" name="LatencyAnalysis">
              <ownedComment xmi:id="_yjtsI0T9Ee2_n5XNBGdaxw">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yiXBQET9Ee2_n5XNBGdaxw" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiXBQUT9Ee2_n5XNBGdaxw" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiXBQ0T9Ee2_n5XNBGdaxw" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiXoUET9Ee2_n5XNBGdaxw" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiXoUUT9Ee2_n5XNBGdaxw" name="latencyReport" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykRFwUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiXoU0T9Ee2_n5XNBGdaxw" name="program" visibility="private" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykRs0ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiYPYUT9Ee2_n5XNBGdaxw" name="workload" visibility="private" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykRs00T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiYPY0T9Ee2_n5XNBGdaxw" name="programTable" visibility="private" type="_yTcbgET9Ee2_n5XNBGdaxw" association="_ykRs1kT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiYPZUT9Ee2_n5XNBGdaxw" name="nodeIndex" visibility="private" type="_yeQkYET9Ee2_n5XNBGdaxw" association="_ykST4UT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN85ET9Ee2_n5XNBGdaxw" name="LatencyAnalysis" specification="_yfesYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN85UT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjN85kT9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN850T9Ee2_n5XNBGdaxw" name="LatencyAnalysis" specification="_yfesZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN86ET9Ee2_n5XNBGdaxw" name="program" type="_yTPnMET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjN86UT9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN86kT9Ee2_n5XNBGdaxw" name="latencyReport" specification="_yS5B4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN860T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN87ET9Ee2_n5XNBGdaxw" name="numMatchingTx" specification="_yS5B4UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN87UT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjN87kT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjN870T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjN88ET9Ee2_n5XNBGdaxw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjN88UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yS5B4ET9Ee2_n5XNBGdaxw" name="latencyReport" method="_yjN86kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yffTc0T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS5B4UT9Ee2_n5XNBGdaxw" name="numMatchingTx" method="_yjN87ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS5B4kT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS5B40T9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS5B5ET9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS5B5UT9Ee2_n5XNBGdaxw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS5B5kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfesYET9Ee2_n5XNBGdaxw" name="LatencyAnalysis" visibility="package" method="_yjN85ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfesYkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfesY0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfesYUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfesZET9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfesZUT9Ee2_n5XNBGdaxw" name="LatencyAnalysis" visibility="package" method="_yjN850T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yffTcET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yffTcUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfesZkT9Ee2_n5XNBGdaxw" name="program" type="_yTPnMET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yffTckT9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yS6QAET9Ee2_n5XNBGdaxw" name="LatencyVisualization">
              <ownedComment xmi:id="_yjtsJET9Ee2_n5XNBGdaxw">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yff6hUT9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiY2ckT9Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiZdgET9Ee2_n5XNBGdaxw" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiZdgUT9Ee2_n5XNBGdaxw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiZdgkT9Ee2_n5XNBGdaxw" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiZdg0T9Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_yUI_EET9Ee2_n5XNBGdaxw" association="_ykST5ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiZdhUT9Ee2_n5XNBGdaxw" name="la" visibility="private" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykS68UT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN88kT9Ee2_n5XNBGdaxw" name="LatencyVisualization" specification="_yff6gET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN880T9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjN89ET9Ee2_n5XNBGdaxw" type="_yS6QAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yff6gET9Ee2_n5XNBGdaxw" name="LatencyVisualization" visibility="package" method="_yjN88kT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yff6gkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yff6g0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yff6gUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yff6hET9Ee2_n5XNBGdaxw" type="_yS6QAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yS7eIET9Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_yhOY0ET9Ee2_n5XNBGdaxw" client="_yS7eIET9Ee2_n5XNBGdaxw" supplier="_yel7lkT9Ee2_n5XNBGdaxw" contract="_yel7lkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjN89UT9Ee2_n5XNBGdaxw" name="compare" specification="_yhO_4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjN89kT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjN890T9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjN8-ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhO_4ET9Ee2_n5XNBGdaxw" name="compare" method="_yjN89UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhO_4UT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhO_4kT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhO_40T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yS8sQET9Ee2_n5XNBGdaxw" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_yhPm8kT9Ee2_n5XNBGdaxw" client="_yS8sQET9Ee2_n5XNBGdaxw" supplier="_yel7lkT9Ee2_n5XNBGdaxw" contract="_yel7lkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOj8ET9Ee2_n5XNBGdaxw" name="compare" specification="_yhQOAUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOj8UT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjOj8kT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjOj80T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhQOAUT9Ee2_n5XNBGdaxw" name="compare" method="_yjOj8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhQOAkT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhQOA0T9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhQOBET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yS96YET9Ee2_n5XNBGdaxw" name="Node">
              <generalization xmi:id="_yfiWwET9Ee2_n5XNBGdaxw" general="_yU50EET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiaEkUT9Ee2_n5XNBGdaxw" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiaEkkT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiaEk0T9Ee2_n5XNBGdaxw" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiaElET9Ee2_n5XNBGdaxw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiaroET9Ee2_n5XNBGdaxw" name="edges" type="_yeRygET9Ee2_n5XNBGdaxw" isReadOnly="true" association="_ykS69ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiarokT9Ee2_n5XNBGdaxw" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yiaro0T9Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yhQ1EkT9Ee2_n5XNBGdaxw" client="_yS96YET9Ee2_n5XNBGdaxw" supplier="_yg6PwUT9Ee2_n5XNBGdaxw" contract="_yg6PwUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOj9ET9Ee2_n5XNBGdaxw" name="Node" specification="_yS-hcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOj9UT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjOj9kT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjOj90T9Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjOj-ET9Ee2_n5XNBGdaxw" type="_yS96YET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOj-UT9Ee2_n5XNBGdaxw" name="compareTo" specification="_yfhIoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOj-kT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjOj-0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOj_ET9Ee2_n5XNBGdaxw" name="toString" specification="_yS_IgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOj_UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOj_kT9Ee2_n5XNBGdaxw" name="addEdge" specification="_yfhvs0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOj_0T9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOkAET9Ee2_n5XNBGdaxw" name="addConflict" specification="_yS_IhUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOkAUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjOkAkT9Ee2_n5XNBGdaxw" name="numEdges" specification="_yS_vkUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjOkA0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPLAET9Ee2_n5XNBGdaxw" name="print" specification="_yS_vk0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPLAUT9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPLAkT9Ee2_n5XNBGdaxw" name="print" specification="_yTAWo0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yS-hcET9Ee2_n5XNBGdaxw" name="Node" visibility="package" method="_yjOj9ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yS-hdET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yS-hdUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yS-hcUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS-hckT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS-hc0T9Ee2_n5XNBGdaxw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yS-hdkT9Ee2_n5XNBGdaxw" type="_yS96YET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_IgET9Ee2_n5XNBGdaxw" name="toString" method="_yjOj_ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS_IgUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_IhUT9Ee2_n5XNBGdaxw" name="addConflict" method="_yjOkAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS_vkET9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_vkUT9Ee2_n5XNBGdaxw" name="numEdges" method="_yjOkAkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS_vkkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yS_vk0T9Ee2_n5XNBGdaxw" name="print" method="_yjPLAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yS_vlET9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTAWo0T9Ee2_n5XNBGdaxw" name="print" method="_yjPLAkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yfhIoET9Ee2_n5XNBGdaxw" name="compareTo" method="_yjOj-UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfhIoUT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfhIokT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfhvs0T9Ee2_n5XNBGdaxw" name="addEdge" method="_yjOj_kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfhvtET9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTBkwET9Ee2_n5XNBGdaxw" name="NodeMap">
              <ownedComment xmi:id="_yjuTMET9Ee2_n5XNBGdaxw">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfi90ET9Ee2_n5XNBGdaxw" general="_yRy1sET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yibSsET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yibSsUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTCL0ET9Ee2_n5XNBGdaxw" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_yjuTMUT9Ee2_n5XNBGdaxw">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfjk5kT9Ee2_n5XNBGdaxw" general="_yTthQET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPLA0T9Ee2_n5XNBGdaxw" name="NonPreemptiveSchedule" specification="_yfjk4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPLBET9Ee2_n5XNBGdaxw" name="poset" type="_yTF2MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjPLBUT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjPLBkT9Ee2_n5XNBGdaxw" type="_yTCL0ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yfjk4ET9Ee2_n5XNBGdaxw" name="NonPreemptiveSchedule" visibility="package" method="_yjPLA0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfjk40T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfjk5ET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfjk4UT9Ee2_n5XNBGdaxw" name="poset" type="_yTF2MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfjk4kT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfjk5UT9Ee2_n5XNBGdaxw" type="_yTCL0ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTCy4ET9Ee2_n5XNBGdaxw" name="NotImplentedVisualization">
              <generalization xmi:id="_yfkL8UT9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yibSskT9Ee2_n5XNBGdaxw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yibSs0T9Ee2_n5XNBGdaxw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yib5wET9Ee2_n5XNBGdaxw" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yib5wUT9Ee2_n5XNBGdaxw" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yib5wkT9Ee2_n5XNBGdaxw" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yib5w0T9Ee2_n5XNBGdaxw" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPLB0T9Ee2_n5XNBGdaxw" name="NotImplentedVisualization" specification="_yTDZ8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPLCET9Ee2_n5XNBGdaxw" type="_yTCy4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPLCUT9Ee2_n5XNBGdaxw" name="NotImplentedVisualization" specification="_yTDZ9ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPLCkT9Ee2_n5XNBGdaxw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjPLC0T9Ee2_n5XNBGdaxw" type="_yTCy4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPLDET9Ee2_n5XNBGdaxw" name="visualization" specification="_yTDZ-UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPLDUT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTDZ8ET9Ee2_n5XNBGdaxw" name="NotImplentedVisualization" visibility="package" method="_yjPLB0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTDZ8UT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTDZ8kT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTDZ80T9Ee2_n5XNBGdaxw" type="_yTCy4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTDZ9ET9Ee2_n5XNBGdaxw" name="NotImplentedVisualization" visibility="package" method="_yjPLCUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTDZ9kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTDZ90T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTDZ9UT9Ee2_n5XNBGdaxw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTDZ-ET9Ee2_n5XNBGdaxw" type="_yTCy4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTDZ-UT9Ee2_n5XNBGdaxw" name="visualization" method="_yjPLDET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfkL8ET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTEoEET9Ee2_n5XNBGdaxw" name="PeriodComparator">
              <interfaceRealization xmi:id="_yhSDMET9Ee2_n5XNBGdaxw" client="_yTEoEET9Ee2_n5XNBGdaxw" supplier="_yel7lkT9Ee2_n5XNBGdaxw" contract="_yel7lkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyEET9Ee2_n5XNBGdaxw" name="compare" specification="_yhSDMkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPyEUT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjPyEkT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjPyE0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhSDMkT9Ee2_n5XNBGdaxw" name="compare" method="_yjPyEET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhSDM0T9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhSqQET9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhSqQUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTF2MET9Ee2_n5XNBGdaxw" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_yjuTMkT9Ee2_n5XNBGdaxw">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yib5xET9Ee2_n5XNBGdaxw" name="activations" visibility="private" type="_yR_C8ET9Ee2_n5XNBGdaxw" association="_ykTiAUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yicg0ET9Ee2_n5XNBGdaxw" name="workload" visibility="private" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykTiBET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yicg0kT9Ee2_n5XNBGdaxw" name="flows" visibility="protected" type="_ySk40ET9Ee2_n5XNBGdaxw" association="_ykUJEUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yicg1ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yicg1UT9Ee2_n5XNBGdaxw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yicg00T9Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yidH4UT9Ee2_n5XNBGdaxw" name="nodes" visibility="private" type="_yS96YET9Ee2_n5XNBGdaxw" association="_ykUJFET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yidH40T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yidH5ET9Ee2_n5XNBGdaxw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yidH4kT9Ee2_n5XNBGdaxw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yidH5kT9Ee2_n5XNBGdaxw" name="nodeMap" visibility="private" type="_yTBkwET9Ee2_n5XNBGdaxw" association="_ykUwIUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yidu8ET9Ee2_n5XNBGdaxw" name="priorityQueue" visibility="private" type="_yTiiI0T9Ee2_n5XNBGdaxw" association="_ykUwJET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yidu80T9Ee2_n5XNBGdaxw" name="nodeConnectivityMap" visibility="protected" type="_yeQkYET9Ee2_n5XNBGdaxw" association="_ykVXMUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yieWAkT9Ee2_n5XNBGdaxw" name="activationMap" visibility="package" type="_ySs0oET9Ee2_n5XNBGdaxw" association="_ykVXNET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyFET9Ee2_n5XNBGdaxw" name="Poset" specification="_yflaEET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPyFUT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjPyFkT9Ee2_n5XNBGdaxw" type="_yTF2MET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyF0T9Ee2_n5XNBGdaxw" name="getNodeConnectivity" specification="_yTGdQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPyGET9Ee2_n5XNBGdaxw" type="_yeQkYET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyGUT9Ee2_n5XNBGdaxw" name="getNodeNames" specification="_yTHEUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPyGkT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyG0T9Ee2_n5XNBGdaxw" name="getNodesNamesOrderedAlphabetically" specification="_yTHEUkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPyHET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjPyHUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyHkT9Ee2_n5XNBGdaxw" name="buildPosetOfActivations" specification="_yTHrY0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyH0T9Ee2_n5XNBGdaxw" name="createEdgeLists" specification="_yTHrZET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyIET9Ee2_n5XNBGdaxw" name="createConflictLists" specification="_yTHrZUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyIUT9Ee2_n5XNBGdaxw" name="createGlobalConflictLists" specification="_yTIScET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyIkT9Ee2_n5XNBGdaxw" name="createLocalConflictLists" specification="_yTIScUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjPyI0T9Ee2_n5XNBGdaxw" name="findCoordinator" specification="_yhT4YET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjPyJET9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjPyJUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZIET9Ee2_n5XNBGdaxw" name="buildTxArray" specification="_yhUfcUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZIUT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjQZIkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjQZI0T9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZJET9Ee2_n5XNBGdaxw" name="createInitialActivations" specification="_yTISckT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZJUT9Ee2_n5XNBGdaxw" name="getMaxTx" specification="_yfmBIUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZJkT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjQZJ0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZKET9Ee2_n5XNBGdaxw" name="getActivation" specification="_yfmBJET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZKUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjQZKkT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjQZK0T9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZLET9Ee2_n5XNBGdaxw" name="getHyperPeriod" specification="_yTI5gET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZLUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZLkT9Ee2_n5XNBGdaxw" name="getMaxPhase" specification="_yTI5gkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZL0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZMET9Ee2_n5XNBGdaxw" name="orderActivations" specification="_yTI5hET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZMUT9Ee2_n5XNBGdaxw" name="getNextActivation" specification="_yTJgkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZMkT9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZM0T9Ee2_n5XNBGdaxw" name="addActivation" specification="_yfmoMkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZNET9Ee2_n5XNBGdaxw" name="activation" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjQZNUT9Ee2_n5XNBGdaxw" name="findBaseStation" specification="_yTJgkUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjQZNkT9Ee2_n5XNBGdaxw" type="_yS96YET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTGdQET9Ee2_n5XNBGdaxw" name="getNodeConnectivity" visibility="private" method="_yjPyF0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhTRUET9Ee2_n5XNBGdaxw" type="_yeQkYET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTHEUET9Ee2_n5XNBGdaxw" name="getNodeNames" method="_yjPyGUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhTRUUT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTHEUkT9Ee2_n5XNBGdaxw" name="getNodesNamesOrderedAlphabetically" method="_yjPyG0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTHrYET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yTHrYUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTHrY0T9Ee2_n5XNBGdaxw" name="buildPosetOfActivations" method="_yjPyHkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTHrZET9Ee2_n5XNBGdaxw" name="createEdgeLists" visibility="private" method="_yjPyH0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTHrZUT9Ee2_n5XNBGdaxw" name="createConflictLists" visibility="private" method="_yjPyIET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTIScET9Ee2_n5XNBGdaxw" name="createGlobalConflictLists" visibility="private" method="_yjPyIUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTIScUT9Ee2_n5XNBGdaxw" name="createLocalConflictLists" visibility="private" method="_yjPyIkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTISckT9Ee2_n5XNBGdaxw" name="createInitialActivations" visibility="private" method="_yjQZJET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTI5gET9Ee2_n5XNBGdaxw" name="getHyperPeriod" method="_yjQZLET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTI5gUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTI5gkT9Ee2_n5XNBGdaxw" name="getMaxPhase" method="_yjQZLkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTI5g0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTI5hET9Ee2_n5XNBGdaxw" name="orderActivations" method="_yjQZMET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTJgkET9Ee2_n5XNBGdaxw" name="getNextActivation" method="_yjQZMUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjuTNUT9Ee2_n5XNBGdaxw">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfmoMUT9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTJgkUT9Ee2_n5XNBGdaxw" name="findBaseStation" visibility="protected" method="_yjQZNUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjuTN0T9Ee2_n5XNBGdaxw">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfmoNET9Ee2_n5XNBGdaxw" type="_yS96YET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yflaEET9Ee2_n5XNBGdaxw" name="Poset" visibility="package" method="_yjPyFET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yflaEkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yflaE0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjuTM0T9Ee2_n5XNBGdaxw">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_yflaEUT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfmBIET9Ee2_n5XNBGdaxw" type="_yTF2MET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfmBIUT9Ee2_n5XNBGdaxw" name="getMaxTx" visibility="private" method="_yjQZJUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfmBIkT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfmBI0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfmBJET9Ee2_n5XNBGdaxw" name="getActivation" visibility="private" method="_yjQZKET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfmBJUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfmBJkT9Ee2_n5XNBGdaxw" name="node" type="_yS96YET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfmoMET9Ee2_n5XNBGdaxw" type="_yR0D00T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfmoMkT9Ee2_n5XNBGdaxw" name="addActivation" method="_yjQZM0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjuTNkT9Ee2_n5XNBGdaxw">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfmoM0T9Ee2_n5XNBGdaxw" name="activation" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhT4YET9Ee2_n5XNBGdaxw" name="findCoordinator" visibility="protected" method="_yjPyI0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjuTNET9Ee2_n5XNBGdaxw">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhT4YUT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhT4YkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yhUfcUT9Ee2_n5XNBGdaxw" name="buildTxArray" visibility="private" method="_yjQZIET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhUfckT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhUfc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yhUfdET9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTLVwET9Ee2_n5XNBGdaxw" name="PreemptiveSchedule">
              <ownedComment xmi:id="_yjuTOET9Ee2_n5XNBGdaxw">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yfrgtkT9Ee2_n5XNBGdaxw" general="_yTthQET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRAMET9Ee2_n5XNBGdaxw" name="PreemptiveSchedule" specification="_yfn2UET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRAMUT9Ee2_n5XNBGdaxw" name="poset" type="_yTF2MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAMkT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAM0T9Ee2_n5XNBGdaxw" type="_yTLVwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRANET9Ee2_n5XNBGdaxw" name="continueSearch" specification="_yfodYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRANUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRANkT9Ee2_n5XNBGdaxw" name="activation" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAN0T9Ee2_n5XNBGdaxw" type="_yhWUoET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRAOET9Ee2_n5XNBGdaxw" name="toProgram" specification="_yTL80ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRAOUT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRAOkT9Ee2_n5XNBGdaxw" name="findPreeptiveChannelAndTime" specification="_yfpEc0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRAO0T9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAPET9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAPUT9Ee2_n5XNBGdaxw" type="_yhWUoET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRAPkT9Ee2_n5XNBGdaxw" name="findAdditionalTime" specification="_yfpEdkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRAP0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAQET9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAQUT9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAQkT9Ee2_n5XNBGdaxw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAQ0T9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRARET9Ee2_n5XNBGdaxw" name="findMaxTimeAvailable" specification="_yfqSkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRARUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRARkT9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAR0T9Ee2_n5XNBGdaxw" type="_yhWUoET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRASET9Ee2_n5XNBGdaxw" name="availableTime" specification="_yfqSk0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRASUT9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRASkT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAS0T9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRATET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRATUT9Ee2_n5XNBGdaxw" name="addToSchedule" specification="_yfq5okT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRATkT9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAT0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAUET9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAUUT9Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRAUkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRAU0T9Ee2_n5XNBGdaxw" name="addToSchedule" specification="_yfrgsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRAVET9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRAVUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTL80ET9Ee2_n5XNBGdaxw" name="toProgram" method="_yjRAOET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfpEckT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfn2UET9Ee2_n5XNBGdaxw" name="PreemptiveSchedule" visibility="package" method="_yjRAMET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yfn2U0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yfn2VET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yfn2UUT9Ee2_n5XNBGdaxw" name="poset" type="_yTF2MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfn2UkT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfn2VUT9Ee2_n5XNBGdaxw" type="_yTLVwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfodYET9Ee2_n5XNBGdaxw" name="continueSearch" visibility="protected" method="_yjRANET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfodYUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfodYkT9Ee2_n5XNBGdaxw" name="activation" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhWUokT9Ee2_n5XNBGdaxw" type="_yhWUoET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfpEc0T9Ee2_n5XNBGdaxw" name="findPreeptiveChannelAndTime" visibility="private" method="_yjRAOkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfpEdET9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfpEdUT9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhWUo0T9Ee2_n5XNBGdaxw" type="_yhWUoET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfpEdkT9Ee2_n5XNBGdaxw" name="findAdditionalTime" visibility="private" method="_yjRAPkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfpEd0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfprgET9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfprgUT9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfprgkT9Ee2_n5XNBGdaxw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhW7sET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfqSkET9Ee2_n5XNBGdaxw" name="findMaxTimeAvailable" visibility="private" method="_yjRARET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfqSkUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfqSkkT9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhW7sUT9Ee2_n5XNBGdaxw" type="_yhWUoET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfqSk0T9Ee2_n5XNBGdaxw" name="availableTime" visibility="private" method="_yjRASET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfqSlET9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfqSlUT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfq5oET9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfq5oUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfq5okT9Ee2_n5XNBGdaxw" name="addToSchedule" visibility="private" method="_yjRATUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfq5o0T9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfq5pET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfq5pUT9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfq5pkT9Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfq5p0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfrgsET9Ee2_n5XNBGdaxw" name="addToSchedule" visibility="protected" method="_yjRAU0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfrgsUT9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfrgskT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTOZEET9Ee2_n5XNBGdaxw" name="PriorityComparator">
              <interfaceRealization xmi:id="_yhW7skT9Ee2_n5XNBGdaxw" client="_yTOZEET9Ee2_n5XNBGdaxw" supplier="_yel7lkT9Ee2_n5XNBGdaxw" contract="_yel7lkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnQET9Ee2_n5XNBGdaxw" name="compare" specification="_yhXiwUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnQUT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnQkT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnQ0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhXiwUT9Ee2_n5XNBGdaxw" name="compare" method="_yjRnQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhXiwkT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhXiw0T9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhYJ0ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTPnMET9Ee2_n5XNBGdaxw" name="Program">
              <ownedComment xmi:id="_yju6QET9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yifkIET9Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yifkIUT9Ee2_n5XNBGdaxw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yifkIkT9Ee2_n5XNBGdaxw" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yifkI0T9Ee2_n5XNBGdaxw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yifkJET9Ee2_n5XNBGdaxw" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yifkJUT9Ee2_n5XNBGdaxw" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yifkJkT9Ee2_n5XNBGdaxw" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yigLMET9Ee2_n5XNBGdaxw" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yigLMUT9Ee2_n5XNBGdaxw" name="workLoad" visibility="package" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykV-QUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yigLM0T9Ee2_n5XNBGdaxw" name="scheduleBuilt" visibility="package" type="_yTcbgET9Ee2_n5XNBGdaxw" association="_ykV-RET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yigyQUT9Ee2_n5XNBGdaxw" name="SchedulerSelected" visibility="package" type="_yhYw4ET9Ee2_n5XNBGdaxw" association="_ykWlUET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yigyQ0T9Ee2_n5XNBGdaxw" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yigyRUT9Ee2_n5XNBGdaxw" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yihZUUT9Ee2_n5XNBGdaxw" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yihZU0T9Ee2_n5XNBGdaxw" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiiAYUT9Ee2_n5XNBGdaxw" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiiAY0T9Ee2_n5XNBGdaxw" name="channelsAvailable" visibility="package" type="_ySCGQET9Ee2_n5XNBGdaxw" association="_ykWlU0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiiAZUT9Ee2_n5XNBGdaxw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiincUT9Ee2_n5XNBGdaxw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiinc0T9Ee2_n5XNBGdaxw" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yijOgUT9Ee2_n5XNBGdaxw" name="deadlineMisses" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykXMYET9Ee2_n5XNBGdaxw"/>
              <interfaceRealization xmi:id="_yftV40T9Ee2_n5XNBGdaxw" client="_yTPnMET9Ee2_n5XNBGdaxw" supplier="_yT3SQUT9Ee2_n5XNBGdaxw" contract="_yT3SQUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnRET9Ee2_n5XNBGdaxw" name="Program" specification="_yhZX8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnRUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnRkT9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnR0T9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnSET9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnSUT9Ee2_n5XNBGdaxw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnSkT9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnS0T9Ee2_n5XNBGdaxw" name="Program" specification="_yhamEET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnTET9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnTUT9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnTkT9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnT0T9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnUET9Ee2_n5XNBGdaxw" name="setDefaultParameters" specification="_yfukAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnUUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjRnUkT9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnU0T9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnVET9Ee2_n5XNBGdaxw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnVUT9Ee2_n5XNBGdaxw" name="toWorkLoad" specification="_yTQ1UET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnVkT9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnV0T9Ee2_n5XNBGdaxw" name="buildProgram" specification="_yhamF0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnWET9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnWUT9Ee2_n5XNBGdaxw" name="buildOriginalProgram" specification="_yTQ1UUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjRnWkT9Ee2_n5XNBGdaxw" name="waitInstruction" specification="_yTRcYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjRnW0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjRnXET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOUET9Ee2_n5XNBGdaxw" name="elseWaitInstruction" specification="_yTRcY0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOUUT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOUkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOU0T9Ee2_n5XNBGdaxw" name="elsePullClause" specification="_yTSDcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOVET9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOVUT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOVkT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOV0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOWET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOWUT9Ee2_n5XNBGdaxw" name="hasPushInstruction" specification="_yTSDdkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOWkT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOW0T9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOXET9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOXUT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOXkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOX0T9Ee2_n5XNBGdaxw" name="pushInstruction" specification="_yTSqhET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOYET9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOYUT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOYkT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOY0T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOZET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOZUT9Ee2_n5XNBGdaxw" name="getFirstChannelInInstruction" specification="_yTTRkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOZkT9Ee2_n5XNBGdaxw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOZ0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOaET9Ee2_n5XNBGdaxw" name="findNextAvailableInstructionTimeSlot" specification="_yfvLEUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOaUT9Ee2_n5XNBGdaxw" name="schedule" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjSOakT9Ee2_n5XNBGdaxw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOa0T9Ee2_n5XNBGdaxw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSObET9Ee2_n5XNBGdaxw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSObUT9Ee2_n5XNBGdaxw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSObkT9Ee2_n5XNBGdaxw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjSOb0T9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOcET9Ee2_n5XNBGdaxw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjSOcUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOckT9Ee2_n5XNBGdaxw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOc0T9Ee2_n5XNBGdaxw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOdET9Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOdUT9Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOdkT9Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOd0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjSOeET9Ee2_n5XNBGdaxw" name="slotIsAvailable" specification="_yfwZMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjSOeUT9Ee2_n5XNBGdaxw" name="currentInstructionTimeSlot" type="_yS2loET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjSOekT9Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOe0T9Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjSOfET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1YET9Ee2_n5XNBGdaxw" name="findNextAvailableChannel" specification="_yfxAQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1YUT9Ee2_n5XNBGdaxw" name="schedule" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjS1YkT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjS1Y0T9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjS1ZET9Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjS1ZUT9Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjS1ZkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1Z0T9Ee2_n5XNBGdaxw" name="selectPriority" specification="_yTT4oET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1aET9Ee2_n5XNBGdaxw" name="selectRM" specification="_yTT4oUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1aUT9Ee2_n5XNBGdaxw" name="selectDM" specification="_yTT4okT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1akT9Ee2_n5XNBGdaxw" name="selectRtHART" specification="_yTT4o0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1a0T9Ee2_n5XNBGdaxw" name="setScheduleSelected" specification="_yhbNIET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1bET9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1bUT9Ee2_n5XNBGdaxw" name="setSchedule" specification="_yfxnUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1bkT9Ee2_n5XNBGdaxw" name="schedule" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1b0T9Ee2_n5XNBGdaxw" name="getSchedule" specification="_yTUfsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1cET9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1cUT9Ee2_n5XNBGdaxw" name="getSchedulerName" specification="_yTUfsUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1ckT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1c0T9Ee2_n5XNBGdaxw" name="getSchChoice" specification="_yTVGwkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1dET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1dUT9Ee2_n5XNBGdaxw" name="getNumChannels" specification="_yTVGxET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1dkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1d0T9Ee2_n5XNBGdaxw" name="getNumTransmissions" specification="_yTVGyUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1eET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjS1eUT9Ee2_n5XNBGdaxw" name="getRealTimeHartFlag" specification="_yTVt1ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjS1ekT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTccET9Ee2_n5XNBGdaxw" name="setRealTimeHartFlag" specification="_yTVt1kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTccUT9Ee2_n5XNBGdaxw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTcckT9Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" specification="_yTWU4UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTcc0T9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTcdET9Ee2_n5XNBGdaxw" name="getE2e" specification="_yTWU5UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTcdUT9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTcdkT9Ee2_n5XNBGdaxw" name="getName" specification="_yTW780T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTcd0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTceET9Ee2_n5XNBGdaxw" name="getOptimizationFlag" specification="_yTXjAkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTceUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTcekT9Ee2_n5XNBGdaxw" name="deadlineMisses" specification="_yTXjB0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTce0T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTcfET9Ee2_n5XNBGdaxw" name="getNumFaults" specification="_yTXjCET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTcfUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjTcfkT9Ee2_n5XNBGdaxw" name="getNodeMapIndex" specification="_yTYKFET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjTcf0T9Ee2_n5XNBGdaxw" type="_yeQkYET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 																 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 												   // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTQ1UET9Ee2_n5XNBGdaxw" name="toWorkLoad" method="_yjRnVUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yju6QUT9Ee2_n5XNBGdaxw">
                  <body>Method to cast compatible classes' objects to WorkLoad object.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return workLoad object</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfvLEET9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTQ1UUT9Ee2_n5XNBGdaxw" name="buildOriginalProgram" method="_yjRnWUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTRcYET9Ee2_n5XNBGdaxw" name="waitInstruction" visibility="private" method="_yjRnWkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTRcYUT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTRcYkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTRcY0T9Ee2_n5XNBGdaxw" name="elseWaitInstruction" visibility="private" method="_yjSOUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTRcZET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTRcZUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTSDcET9Ee2_n5XNBGdaxw" name="elsePullClause" visibility="private" method="_yjSOU0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTSDcUT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSDckT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSDc0T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSDdET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSDdUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTSDdkT9Ee2_n5XNBGdaxw" name="hasPushInstruction" visibility="private" method="_yjSOWUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTSDd0T9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqgET9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqgUT9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqgkT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqg0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTSqhET9Ee2_n5XNBGdaxw" name="pushInstruction" visibility="private" method="_yjSOX0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTSqhUT9Ee2_n5XNBGdaxw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqhkT9Ee2_n5XNBGdaxw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqh0T9Ee2_n5XNBGdaxw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqiET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTSqiUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTTRkET9Ee2_n5XNBGdaxw" name="getFirstChannelInInstruction" visibility="private" method="_yjSOZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTTRkUT9Ee2_n5XNBGdaxw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTTRkkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTT4oET9Ee2_n5XNBGdaxw" name="selectPriority" method="_yjS1Z0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTT4oUT9Ee2_n5XNBGdaxw" name="selectRM" method="_yjS1aET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTT4okT9Ee2_n5XNBGdaxw" name="selectDM" method="_yjS1aUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTT4o0T9Ee2_n5XNBGdaxw" name="selectRtHART" method="_yjS1akT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTUfsET9Ee2_n5XNBGdaxw" name="getSchedule" method="_yjS1b0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yju6QkT9Ee2_n5XNBGdaxw">
                  <body>Method to get the Table of the current schedule.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return scheduleBuilt, a ProgramSchedule object</body>
                </ownedComment>
                <ownedParameter xmi:id="_yfxnUkT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTUfsUT9Ee2_n5XNBGdaxw" name="getSchedulerName" method="_yjS1cUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTUfskT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTVGwkT9Ee2_n5XNBGdaxw" name="getSchChoice" method="_yjS1c0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTVGw0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTVGxET9Ee2_n5XNBGdaxw" name="getNumChannels" method="_yjS1dUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTVGxUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTVGyUT9Ee2_n5XNBGdaxw" name="getNumTransmissions" method="_yjS1d0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTVt0ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTVt1ET9Ee2_n5XNBGdaxw" name="getRealTimeHartFlag" visibility="private" method="_yjS1eUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTVt1UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTVt1kT9Ee2_n5XNBGdaxw" name="setRealTimeHartFlag" visibility="private" method="_yjTccET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTWU4ET9Ee2_n5XNBGdaxw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTWU4UT9Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" method="_yjTcckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhb0MkT9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTWU5UT9Ee2_n5XNBGdaxw" name="getE2e" method="_yjTcdET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhb0M0T9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTW780T9Ee2_n5XNBGdaxw" name="getName" method="_yjTcdkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTW79ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTXjAkT9Ee2_n5XNBGdaxw" name="getOptimizationFlag" method="_yjTceET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTXjA0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTXjB0T9Ee2_n5XNBGdaxw" name="deadlineMisses" method="_yjTcekT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfxnU0T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTXjCET9Ee2_n5XNBGdaxw" name="getNumFaults" method="_yjTcfET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTYKEET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTYKFET9Ee2_n5XNBGdaxw" name="getNodeMapIndex" method="_yjTcfkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yju6Q0T9Ee2_n5XNBGdaxw">
                  <body>This method creates an array of node names sorted alphabetically and a new mapping from node names to index&#xD;
   * in the schedule table. Then it adds the name, index mapping to nodeIndexMap, the HashMap to be returned.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @return HashMap of node to index mapping</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhcbQET9Ee2_n5XNBGdaxw" type="_yeQkYET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yfukAET9Ee2_n5XNBGdaxw" name="setDefaultParameters" visibility="private" method="_yjRnUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfukAUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfukAkT9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfukA0T9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfukBET9Ee2_n5XNBGdaxw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfvLEUT9Ee2_n5XNBGdaxw" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_yjSOaET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfvLEkT9Ee2_n5XNBGdaxw" name="schedule" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfvLE0T9Ee2_n5XNBGdaxw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvLFET9Ee2_n5XNBGdaxw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvLFUT9Ee2_n5XNBGdaxw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvLFkT9Ee2_n5XNBGdaxw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvLF0T9Ee2_n5XNBGdaxw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yfvyJUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvLGET9Ee2_n5XNBGdaxw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yfvyJkT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvLGUT9Ee2_n5XNBGdaxw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvyIET9Ee2_n5XNBGdaxw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvyIUT9Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvyIkT9Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvyI0T9Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfvyJET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfwZMET9Ee2_n5XNBGdaxw" name="slotIsAvailable" visibility="private" method="_yjSOeET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfwZMUT9Ee2_n5XNBGdaxw" name="currentInstructionTimeSlot" type="_yS2loET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfwZMkT9Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfwZM0T9Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfwZNET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfxAQET9Ee2_n5XNBGdaxw" name="findNextAvailableChannel" visibility="private" method="_yjS1YET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfxAQUT9Ee2_n5XNBGdaxw" name="schedule" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yfxAQkT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfxAQ0T9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfxARET9Ee2_n5XNBGdaxw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfxARUT9Ee2_n5XNBGdaxw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yfxARkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yfxnUET9Ee2_n5XNBGdaxw" name="setSchedule" visibility="private" method="_yjS1bUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yfxnUUT9Ee2_n5XNBGdaxw" name="schedule" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhZX8ET9Ee2_n5XNBGdaxw" name="Program" visibility="package" method="_yjRnRET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhZ_BET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhZ_BUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhZX8UT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhZ_AET9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhZ_AUT9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhZ_AkT9Ee2_n5XNBGdaxw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhZ_A0T9Ee2_n5XNBGdaxw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhZ_BkT9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhamEET9Ee2_n5XNBGdaxw" name="Program" visibility="package" method="_yjRnS0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhamFET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhamFUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhamEUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhamEkT9Ee2_n5XNBGdaxw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhamE0T9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhamFkT9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhamF0T9Ee2_n5XNBGdaxw" name="buildProgram" method="_yjRnV0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhamGET9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhbNIET9Ee2_n5XNBGdaxw" name="setScheduleSelected" visibility="private" method="_yjS1a0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhbNIUT9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTcbgET9Ee2_n5XNBGdaxw" name="ProgramSchedule">
              <generalization xmi:id="_yfzcgET9Ee2_n5XNBGdaxw" general="_yT5ugET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yij1kET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yij1kUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUDgET9Ee2_n5XNBGdaxw" name="ProgramSchedule" specification="_yTdCkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUDgUT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUDgkT9Ee2_n5XNBGdaxw" name="ProgramSchedule" specification="_yTdClET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUDg0T9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjUDhET9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjUDhUT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTdCkET9Ee2_n5XNBGdaxw" name="ProgramSchedule" method="_yjUDgET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTdCkUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTdCkkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTdCk0T9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTdClET9Ee2_n5XNBGdaxw" name="ProgramSchedule" visibility="package" method="_yjUDgkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTdpoET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTdpoUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTdClUT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTdClkT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTdpokT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTdpo0T9Ee2_n5XNBGdaxw" name="ProgramVisualization">
              <ownedComment xmi:id="_yju6RET9Ee2_n5XNBGdaxw">
                <body>&lt;h1>Implementation of Program Visualization.&lt;/h1>&#xD;
&lt;p>The ProgramVisualization class allows a warp Interface to be converted to program and visualized.&lt;/p>&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.2</body>
              </ownedComment>
              <generalization xmi:id="_yf0qqET9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yij1kkT9Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yikcoET9Ee2_n5XNBGdaxw" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yikcoUT9Ee2_n5XNBGdaxw" name="sourceCode" visibility="private" type="_yTcbgET9Ee2_n5XNBGdaxw" association="_ykXMY0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yikco0T9Ee2_n5XNBGdaxw" name="program" visibility="private" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykXzcET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yikcpUT9Ee2_n5XNBGdaxw" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUDhkT9Ee2_n5XNBGdaxw" name="ProgramVisualization" specification="_yf0qoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUDh0T9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjUDiET9Ee2_n5XNBGdaxw" type="_yTdpo0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUDiUT9Ee2_n5XNBGdaxw" name="visualization" specification="_yTeQsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUDikT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
&#xD;
 /* create schedule output header of column node names in order, with \t as separator */&#xD;
 String nodeString = &quot;Time Slot\t&quot;;&#xD;
 /* loop through the node names, stopping just before last name */&#xD;
 for (int i = 0; i &lt; orderedNodes.length - 1; i++) {&#xD;
   /* add each name to the string, with \t between each name */&#xD;
   nodeString += String.format(&quot;%s\t&quot;, orderedNodes[i]);&#xD;
 }&#xD;
 /* add the last name with \n instead of \t at the end */&#xD;
 nodeString += String.format(&quot;%s\n&quot;, orderedNodes[orderedNodes.length - 1]);&#xD;
 content.add(nodeString);&#xD;
&#xD;
 for (int rowIndex = 0; rowIndex &lt; sourceCode.size(); rowIndex++) {&#xD;
   ArrayList&lt;String> rowArrayList = sourceCode.get(rowIndex);&#xD;
   var row = rowArrayList.toArray(new String[rowArrayList.size()]);&#xD;
   String rowString = String.format(&quot;%d\t&quot;, rowIndex) + String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
   content.add(rowString);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUDi0T9Ee2_n5XNBGdaxw" name="createHeader" specification="_yTe3w0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUDjET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(String.format(&quot;WARP system for graph %s created with the following parameters:\n&quot;,&#xD;
     program.getName()));&#xD;
 header.add(String.format(&quot;Scheduler Name:\t%s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
   header.add(String.format(&quot;nTransmissions:\t%d\n&quot;, program.getNumTransmissions()));&#xD;
 } else if (program.getNumFaults() > 0) {&#xD;
   header.add(String.format(&quot;numFaults:\t%d\n&quot;, program.getNumFaults()));&#xD;
 } else {&#xD;
   header.add(String.format(&quot;M:\t%s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
   header.add(String.format(&quot;E2E:\t%s\n&quot;, String.valueOf(program.getE2e())));&#xD;
   header.add(String.format(&quot;nChannels:\t%d\n&quot;, program.getNumChannels()));&#xD;
 }&#xD;
 if (!program.getOptimizationFlag()) { // only specify when optimization not requested&#xD;
   header.add(&quot;Optimization Requested:\tFalse\n&quot;);&#xD;
 }&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUDjUT9Ee2_n5XNBGdaxw" name="createFooter" specification="_yTfe00T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUDjkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTeQsET9Ee2_n5XNBGdaxw" name="visualization" method="_yjUDiUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf0qpUT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTe3w0T9Ee2_n5XNBGdaxw" name="createHeader" method="_yjUDi0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf0qpkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTfe00T9Ee2_n5XNBGdaxw" name="createFooter" method="_yjUDjUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf0qp0T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf0qoET9Ee2_n5XNBGdaxw" name="ProgramVisualization" visibility="package" method="_yjUDhkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yf0qokT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yf0qo0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yju6RUT9Ee2_n5XNBGdaxw">
                  <body>Constructor converts WarpInterface to Program for visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp WarpInterface to convert to program for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf0qoUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf0qpET9Ee2_n5XNBGdaxw" type="_yTdpo0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTgs8ET9Ee2_n5XNBGdaxw" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_yhdpYET9Ee2_n5XNBGdaxw" client="_yTgs8ET9Ee2_n5XNBGdaxw" supplier="_yel7lkT9Ee2_n5XNBGdaxw" contract="_yel7lkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqkET9Ee2_n5XNBGdaxw" name="compare" specification="_yhe3gET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqkUT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjUqkkT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjUqk0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhe3gET9Ee2_n5XNBGdaxw" name="compare" method="_yjUqkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhe3gUT9Ee2_n5XNBGdaxw" name="obj1" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhe3gkT9Ee2_n5XNBGdaxw" name="obj2" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhe3g0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yThUAET9Ee2_n5XNBGdaxw" name="ReleaseTimeQueue">
              <generalization xmi:id="_yTjJMET9Ee2_n5XNBGdaxw" general="_yTiiI0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yilDsUT9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yilDskT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqlET9Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" specification="_yTh7EUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqlUT9Ee2_n5XNBGdaxw" type="_yThUAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqlkT9Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" specification="_yf14wET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUql0T9Ee2_n5XNBGdaxw" name="schedulableObjects" type="_yfkzAET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjUqmET9Ee2_n5XNBGdaxw" type="_yThUAET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTh7EUT9Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" visibility="package" method="_yjUqlET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTiiIET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTiiIUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTiiIkT9Ee2_n5XNBGdaxw" type="_yThUAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf14wET9Ee2_n5XNBGdaxw" name="ReleaseTimeQueue" visibility="package" method="_yjUqlkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yf14wkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yf14w0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yf14wUT9Ee2_n5XNBGdaxw" name="schedulableObjects" type="_yfkzAET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf14xET9Ee2_n5XNBGdaxw" type="_yThUAET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTjwQET9Ee2_n5XNBGdaxw" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_yjvhUET9Ee2_n5XNBGdaxw">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in WarpTester.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqmUT9Ee2_n5XNBGdaxw" name="ReliabilityAnalysis" specification="_yf2f0UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqmkT9Ee2_n5XNBGdaxw" name="program" type="_yTPnMET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjUqm0T9Ee2_n5XNBGdaxw" type="_yTjwQET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqnET9Ee2_n5XNBGdaxw" name="verifyReliabilities" specification="_yTjwQUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqnUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTjwQUT9Ee2_n5XNBGdaxw" name="verifyReliabilities" method="_yjUqnET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yTjwQkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf2f0UT9Ee2_n5XNBGdaxw" name="ReliabilityAnalysis" method="_yjUqmUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yf2f00T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yf3G4ET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yf2f0kT9Ee2_n5XNBGdaxw" name="program" type="_yTPnMET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf3G4UT9Ee2_n5XNBGdaxw" type="_yTjwQET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yTkXUET9Ee2_n5XNBGdaxw" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_yjvhUUT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yTkXUUT9Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_yhb0MET9Ee2_n5XNBGdaxw" isReadOnly="true"/>
              <ownedAttribute xmi:id="_yTkXUkT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTk-YET9Ee2_n5XNBGdaxw" name="ReliabilityRow">
              <generalization xmi:id="_yf3G4kT9Ee2_n5XNBGdaxw" general="_yTp24ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yilDs0T9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yilqwET9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqnkT9Ee2_n5XNBGdaxw" name="ReliabilityRow" specification="_yTk-YUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqn0T9Ee2_n5XNBGdaxw" type="_yTk-YET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqoET9Ee2_n5XNBGdaxw" name="ReliabilityRow" specification="_yhgFoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqoUT9Ee2_n5XNBGdaxw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjUqokT9Ee2_n5XNBGdaxw" name="element" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjUqo0T9Ee2_n5XNBGdaxw" type="_yTk-YET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqpET9Ee2_n5XNBGdaxw" name="ReliabilityRow" specification="_yhgFpkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqpUT9Ee2_n5XNBGdaxw" name="rowArray" type="_yhb0MET9Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjUqpkT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjUqp0T9Ee2_n5XNBGdaxw" type="_yTk-YET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTk-YUT9Ee2_n5XNBGdaxw" name="ReliabilityRow" method="_yjUqnkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTllcET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTllcUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTllckT9Ee2_n5XNBGdaxw" type="_yTk-YET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhgFoET9Ee2_n5XNBGdaxw" name="ReliabilityRow" visibility="package" method="_yjUqoET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhgFo0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhgFpET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhgFoUT9Ee2_n5XNBGdaxw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhgFokT9Ee2_n5XNBGdaxw" name="element" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhgFpUT9Ee2_n5XNBGdaxw" type="_yTk-YET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhgFpkT9Ee2_n5XNBGdaxw" name="ReliabilityRow" visibility="package" method="_yjUqpET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhgFqET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhgFqUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhgFp0T9Ee2_n5XNBGdaxw" name="rowArray" type="_yhb0MET9Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yhgssUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhgssET9Ee2_n5XNBGdaxw" type="_yTk-YET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTmMgET9Ee2_n5XNBGdaxw" name="ReliabilityTable">
              <generalization xmi:id="_yf3t8ET9Ee2_n5XNBGdaxw" general="_yT5ugET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yilqwUT9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yilqwkT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqqET9Ee2_n5XNBGdaxw" name="ReliabilityTable" specification="_yTmMgUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqqUT9Ee2_n5XNBGdaxw" type="_yTmMgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjUqqkT9Ee2_n5XNBGdaxw" name="ReliabilityTable" specification="_yTmzkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjUqq0T9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjUqrET9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjUqrUT9Ee2_n5XNBGdaxw" type="_yTmMgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTmMgUT9Ee2_n5XNBGdaxw" name="ReliabilityTable" method="_yjUqqET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTmMgkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTmMg0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTmMhET9Ee2_n5XNBGdaxw" type="_yTmMgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTmzkET9Ee2_n5XNBGdaxw" name="ReliabilityTable" visibility="package" method="_yjUqqkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTmzk0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTmzlET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTmzkUT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTmzkkT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTmzlUT9Ee2_n5XNBGdaxw" type="_yTmMgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTnaoET9Ee2_n5XNBGdaxw" name="ReliabilityVisualization">
              <ownedComment xmi:id="_yjvhUkT9Ee2_n5XNBGdaxw">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2021 Project: Implement this class to create&#xD;
the file visualization that is requested in WarpTester.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yf48FUT9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yilqw0T9Ee2_n5XNBGdaxw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yilqxET9Ee2_n5XNBGdaxw" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yilqxUT9Ee2_n5XNBGdaxw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yilqxkT9Ee2_n5XNBGdaxw" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yimR0ET9Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_yUI_EET9Ee2_n5XNBGdaxw" association="_ykXzc0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yimR0kT9Ee2_n5XNBGdaxw" name="ra" visibility="private" type="_yTjwQET9Ee2_n5XNBGdaxw" association="_ykXzdkT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRoET9Ee2_n5XNBGdaxw" name="ReliabilityVisualization" specification="_yf48EET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRoUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjVRokT9Ee2_n5XNBGdaxw" type="_yTnaoET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yf48EET9Ee2_n5XNBGdaxw" name="ReliabilityVisualization" visibility="package" method="_yjVRoET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yf48EkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yf48E0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yf48EUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf48FET9Ee2_n5XNBGdaxw" type="_yTnaoET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yToBsET9Ee2_n5XNBGdaxw" name="ReportVisualization">
              <generalization xmi:id="_yf6KMkT9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yim44ET9Ee2_n5XNBGdaxw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yim44UT9Ee2_n5XNBGdaxw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yim44kT9Ee2_n5XNBGdaxw" name="content" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykYagUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yim45ET9Ee2_n5XNBGdaxw" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRo0T9Ee2_n5XNBGdaxw" name="ReportVisualization" specification="_yf5jIET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRpET9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjVRpUT9Ee2_n5XNBGdaxw" name="warp" type="_yT3SQUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjVRpkT9Ee2_n5XNBGdaxw" name="content" type="_ySagwET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjVRp0T9Ee2_n5XNBGdaxw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjVRqET9Ee2_n5XNBGdaxw" type="_yToBsET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRqUT9Ee2_n5XNBGdaxw" name="visualization" specification="_yToowET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRqkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRq0T9Ee2_n5XNBGdaxw" name="createReport" specification="_yTpP0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRrET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yToowET9Ee2_n5XNBGdaxw" name="visualization" method="_yjVRqUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf6KMET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTpP0ET9Ee2_n5XNBGdaxw" name="createReport" visibility="private" method="_yjVRq0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf6KMUT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf5jIET9Ee2_n5XNBGdaxw" name="ReportVisualization" visibility="package" method="_yjVRo0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yf5jJUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yf5jJkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yf5jIUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf5jIkT9Ee2_n5XNBGdaxw" name="warp" type="_yT3SQUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf5jI0T9Ee2_n5XNBGdaxw" name="content" type="_ySagwET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf5jJET9Ee2_n5XNBGdaxw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf5jJ0T9Ee2_n5XNBGdaxw" type="_yToBsET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTp24ET9Ee2_n5XNBGdaxw" name="Row">
              <generalization xmi:id="_yhh61ET9Ee2_n5XNBGdaxw" general="_yeRygET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yinf8UT9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yinf8kT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRrUT9Ee2_n5XNBGdaxw" name="Row" specification="_yTqd8UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRrkT9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRr0T9Ee2_n5XNBGdaxw" name="Row" specification="_yhhTwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRsET9Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjVRsUT9Ee2_n5XNBGdaxw" name="element" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjVRskT9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRs0T9Ee2_n5XNBGdaxw" name="Row" specification="_yhhTxkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRtET9Ee2_n5XNBGdaxw" name="rowArray" type="_yhF18UT9Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjVRtUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjVRtkT9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRt0T9Ee2_n5XNBGdaxw" name="Row" specification="_yTrFAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRuET9Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjVRuUT9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTqd8UT9Ee2_n5XNBGdaxw" name="Row" method="_yjVRrUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTqd8kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTqd80T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTqd9ET9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTrFAET9Ee2_n5XNBGdaxw" name="Row" visibility="package" method="_yjVRt0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yTrFAkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yTrFA0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yTrFAUT9Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTrFBET9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhhTwET9Ee2_n5XNBGdaxw" name="Row" visibility="package" method="_yjVRr0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhhTw0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhhTxET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhhTwUT9Ee2_n5XNBGdaxw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhhTwkT9Ee2_n5XNBGdaxw" name="element" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhhTxUT9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhhTxkT9Ee2_n5XNBGdaxw" name="Row" visibility="package" method="_yjVRs0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhh60ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhh60UT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhhTx0T9Ee2_n5XNBGdaxw" name="rowArray" type="_yhF18UT9Ee2_n5XNBGdaxw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yhh600T9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhh60kT9Ee2_n5XNBGdaxw" type="_yTp24ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTrsEET9Ee2_n5XNBGdaxw" name="SchedulableObjectQueue">
              <generalization xmi:id="_yTs6MET9Ee2_n5XNBGdaxw" general="_yTiiI0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yinf80T9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yinf9ET9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjVRukT9Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" specification="_yhih4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjVRu0T9Ee2_n5XNBGdaxw" name="comparitor" type="_yel7lkT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjVRvET9Ee2_n5XNBGdaxw" type="_yTrsEET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4sET9Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" specification="_yhjI8UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjV4sUT9Ee2_n5XNBGdaxw" name="comparitor" type="_yel7lkT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjV4skT9Ee2_n5XNBGdaxw" name="schedulableObjects" type="_yfkzAET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjV4s0T9Ee2_n5XNBGdaxw" type="_yTrsEET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yhih4ET9Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" visibility="package" method="_yjVRukT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhih4kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhih40T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhih4UT9Ee2_n5XNBGdaxw" name="comparitor" type="_yel7lkT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhih5ET9Ee2_n5XNBGdaxw" type="_yTrsEET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhjI8UT9Ee2_n5XNBGdaxw" name="SchedulableObjectQueue" visibility="package" method="_yjV4sET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhjI9ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhjI9UT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhjI8kT9Ee2_n5XNBGdaxw" name="comparitor" type="_yel7lkT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhjI80T9Ee2_n5XNBGdaxw" name="schedulableObjects" type="_yfkzAET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhjI9kT9Ee2_n5XNBGdaxw" type="_yTrsEET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTthQET9Ee2_n5XNBGdaxw" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_yjvhU0T9Ee2_n5XNBGdaxw">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yioHAET9Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yioHAUT9Ee2_n5XNBGdaxw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yioHAkT9Ee2_n5XNBGdaxw" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yioHBET9Ee2_n5XNBGdaxw" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiouEUT9Ee2_n5XNBGdaxw" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiouEkT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiouFET9Ee2_n5XNBGdaxw" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yipVIUT9Ee2_n5XNBGdaxw" name="schedule" visibility="protected" type="_yTzn4ET9Ee2_n5XNBGdaxw" association="_ykYahET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yipVI0T9Ee2_n5XNBGdaxw" name="poset" visibility="protected" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykZBkUT9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4tET9Ee2_n5XNBGdaxw" name="Schedule" specification="_yf7YUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjV4tUT9Ee2_n5XNBGdaxw" name="poset" type="_yTF2MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjV4tkT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjV4t0T9Ee2_n5XNBGdaxw" type="_yTthQET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4wkT9Ee2_n5XNBGdaxw" name="getSchedule" specification="_yTvWcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjV4w0T9Ee2_n5XNBGdaxw" type="_yTzn4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4xET9Ee2_n5XNBGdaxw" name="buildSchedule" specification="_yTvWcUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4xUT9Ee2_n5XNBGdaxw" name="toProgram" specification="_yTvWckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjV4xkT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4x0T9Ee2_n5XNBGdaxw" name="replaceNullWithSleep" specification="_yf7_ZkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjV4yET9Ee2_n5XNBGdaxw" name="program" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWfwET9Ee2_n5XNBGdaxw" name="fakeSchedulingToTestRest" specification="_yf8mcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWfwUT9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWfwkT9Ee2_n5XNBGdaxw" name="getChannelAndSetStartTime" specification="_yf8mckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWfw0T9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWfxET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWfxUT9Ee2_n5XNBGdaxw" name="findChannelAndTime" specification="_yf8mdUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWfxkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWfx0T9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWfyET9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWfyUT9Ee2_n5XNBGdaxw" name="continueSearch" specification="_yf9Ng0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWfykT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWfy0T9Ee2_n5XNBGdaxw" name="activation" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWfzET9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWfzUT9Ee2_n5XNBGdaxw" name="noOtherChannelConflicts" specification="_yf9Nh0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWfzkT9Ee2_n5XNBGdaxw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWfz0T9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWf0ET9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf0UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWf0kT9Ee2_n5XNBGdaxw" name="conflictsExist" specification="_yf90lET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWf00T9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWf1ET9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf1UT9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf1kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWf10T9Ee2_n5XNBGdaxw" name="freeOfCoordinatorConflicts" specification="_yf-boET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWf2ET9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWf2UT9Ee2_n5XNBGdaxw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf2kT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf20T9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf3ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjWf3UT9Ee2_n5XNBGdaxw" name="isAvailable" specification="_yf-bpkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjWf3kT9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjWf30T9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf4ET9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf4UT9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjWf4kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG0ET9Ee2_n5XNBGdaxw" name="isAvailable" specification="_yf_CskT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXG0UT9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXG0kT9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXG00T9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXG1ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG1UT9Ee2_n5XNBGdaxw" name="timeRemaining" specification="_yTv9gET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXG1kT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXG10T9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXG2ET9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXG2UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG2kT9Ee2_n5XNBGdaxw" name="canCombineEntriesInPlace" specification="_yf_Ct0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXG20T9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXG3ET9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXG3UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG3kT9Ee2_n5XNBGdaxw" name="combinedEntriesInPlace" specification="_yf_pw0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXG30T9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXG4ET9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXG4UT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXG4kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG40T9Ee2_n5XNBGdaxw" name="addToSchedule" specification="_yf_pyET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXG5ET9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXG5UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG5kT9Ee2_n5XNBGdaxw" name="reportNotSchedulable" specification="_ygAQ0kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXG50T9Ee2_n5XNBGdaxw" name="object" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG6ET9Ee2_n5XNBGdaxw" name="printVerbose" specification="_yTwkkUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXG6UT9Ee2_n5XNBGdaxw" name="print" specification="_yTxLoET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTvWcET9Ee2_n5XNBGdaxw" name="getSchedule" method="_yjV4wkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjvhVkT9Ee2_n5XNBGdaxw">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf7_ZET9Ee2_n5XNBGdaxw" type="_yTzn4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTvWcUT9Ee2_n5XNBGdaxw" name="buildSchedule" visibility="private" method="_yjV4xET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTvWckT9Ee2_n5XNBGdaxw" name="toProgram" method="_yjV4xUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf7_ZUT9Ee2_n5XNBGdaxw" type="_yTcbgET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yTv9gET9Ee2_n5XNBGdaxw" name="timeRemaining" visibility="protected" method="_yjXG1UT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwIY0T9Ee2_n5XNBGdaxw">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_yTv9gUT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTv9gkT9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTv9g0T9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yTwkkET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yTwkkUT9Ee2_n5XNBGdaxw" name="printVerbose" method="_yjXG6ET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yTxLoET9Ee2_n5XNBGdaxw" name="print" method="_yjXG6UT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yf7YUET9Ee2_n5XNBGdaxw" name="Schedule" visibility="package" method="_yjV4tET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yf7_YUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yf7_YkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yf7YUUT9Ee2_n5XNBGdaxw" name="poset" type="_yTF2MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf7_YET9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf7_Y0T9Ee2_n5XNBGdaxw" type="_yTthQET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf7_ZkT9Ee2_n5XNBGdaxw" name="replaceNullWithSleep" visibility="private" method="_yjV4x0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjvhV0T9Ee2_n5XNBGdaxw">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf7_Z0T9Ee2_n5XNBGdaxw" name="program" type="_yTcbgET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf8mcET9Ee2_n5XNBGdaxw" name="fakeSchedulingToTestRest" visibility="private" method="_yjWfwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf8mcUT9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf8mckT9Ee2_n5XNBGdaxw" name="getChannelAndSetStartTime" visibility="protected" method="_yjWfwkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjvhWET9Ee2_n5XNBGdaxw">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf8mc0T9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf8mdET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf8mdUT9Ee2_n5XNBGdaxw" name="findChannelAndTime" visibility="protected" method="_yjWfxUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf9NgET9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf9NgUT9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf9NgkT9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf9Ng0T9Ee2_n5XNBGdaxw" name="continueSearch" visibility="protected" method="_yjWfyUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwIYET9Ee2_n5XNBGdaxw">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf9NhET9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf9NhUT9Ee2_n5XNBGdaxw" name="activation" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf9NhkT9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yf9Nh0T9Ee2_n5XNBGdaxw" name="noOtherChannelConflicts" visibility="protected" method="_yjWfzUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf90kET9Ee2_n5XNBGdaxw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf90kUT9Ee2_n5XNBGdaxw" name="schedulableObject" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf90kkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf90k0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf90lET9Ee2_n5XNBGdaxw" name="conflictsExist" visibility="protected" method="_yjWf0kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf90lUT9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf90lkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf90l0T9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf90mET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf-boET9Ee2_n5XNBGdaxw" name="freeOfCoordinatorConflicts" visibility="protected" method="_yjWf10T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf-boUT9Ee2_n5XNBGdaxw" name="obj" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf-bokT9Ee2_n5XNBGdaxw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf-bo0T9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf-bpET9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf-bpUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf-bpkT9Ee2_n5XNBGdaxw" name="isAvailable" visibility="protected" method="_yjWf3UT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwIYUT9Ee2_n5XNBGdaxw">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf-bp0T9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf-bqET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf-bqUT9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf_CsET9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf_CsUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf_CskT9Ee2_n5XNBGdaxw" name="isAvailable" visibility="protected" method="_yjXG0ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwIYkT9Ee2_n5XNBGdaxw">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yf_Cs0T9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf_CtET9Ee2_n5XNBGdaxw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf_CtUT9Ee2_n5XNBGdaxw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf_CtkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf_Ct0T9Ee2_n5XNBGdaxw" name="canCombineEntriesInPlace" visibility="private" method="_yjXG2kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf_pwET9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf_pwUT9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf_pwkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf_pw0T9Ee2_n5XNBGdaxw" name="combinedEntriesInPlace" visibility="private" method="_yjXG3kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yf_pxET9Ee2_n5XNBGdaxw" name="a1" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf_pxUT9Ee2_n5XNBGdaxw" name="a2" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yf_pxkT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yf_px0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yf_pyET9Ee2_n5XNBGdaxw" name="addToSchedule" visibility="protected" method="_yjXG40T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygAQ0ET9Ee2_n5XNBGdaxw" name="next" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygAQ0UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygAQ0kT9Ee2_n5XNBGdaxw" name="reportNotSchedulable" visibility="private" method="_yjXG5kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygAQ00T9Ee2_n5XNBGdaxw" name="object" type="_yR0D00T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yTuIUET9Ee2_n5XNBGdaxw" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_yip8MET9Ee2_n5XNBGdaxw" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yip8MkT9Ee2_n5XNBGdaxw" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4uET9Ee2_n5XNBGdaxw" name="ScheduleLocation" specification="_yTuIUUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjV4uUT9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4ukT9Ee2_n5XNBGdaxw" name="ScheduleLocation" specification="_yTuvYET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjV4u0T9Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yjV4vET9Ee2_n5XNBGdaxw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yjV4vUT9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4vkT9Ee2_n5XNBGdaxw" name="getChannel" specification="_yTuvZkT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjV4v0T9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjV4wET9Ee2_n5XNBGdaxw" name="getTime" specification="_yTuvaET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjV4wUT9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yTuIUUT9Ee2_n5XNBGdaxw" name="ScheduleLocation" visibility="package" method="_yjV4uET9Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_yTuIUkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yTuIU0T9Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yTuIVET9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yTuvYET9Ee2_n5XNBGdaxw" name="ScheduleLocation" visibility="package" method="_yjV4ukT9Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_yTuvY0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yTuvZET9Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yTuvYUT9Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yTuvYkT9Ee2_n5XNBGdaxw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yTuvZUT9Ee2_n5XNBGdaxw" type="_yTuIUET9Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yTuvZkT9Ee2_n5XNBGdaxw" name="getChannel" visibility="protected" method="_yjV4vkT9Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_yjvhVET9Ee2_n5XNBGdaxw">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yTuvZ0T9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yTuvaET9Ee2_n5XNBGdaxw" name="getTime" visibility="protected" method="_yjV4wET9Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_yjvhVUT9Ee2_n5XNBGdaxw">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yTuvaUT9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTzn4ET9Ee2_n5XNBGdaxw" name="ScheduleTable">
              <generalization xmi:id="_ygBe8ET9Ee2_n5XNBGdaxw" general="_yT5ugET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiqjQET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiqjQUT9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt4ET9Ee2_n5XNBGdaxw" name="ScheduleTable" specification="_yT0O8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt4UT9Ee2_n5XNBGdaxw" type="_yTzn4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt4kT9Ee2_n5XNBGdaxw" name="ScheduleTable" specification="_yT0O9ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt40T9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXt5ET9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXt5UT9Ee2_n5XNBGdaxw" type="_yTzn4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yT0O8ET9Ee2_n5XNBGdaxw" name="ScheduleTable" visibility="package" method="_yjXt4ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yT0O8UT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT0O8kT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT0O80T9Ee2_n5XNBGdaxw" type="_yTzn4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yT0O9ET9Ee2_n5XNBGdaxw" name="ScheduleTable" visibility="package" method="_yjXt4kT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yT0O90T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT0O-ET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT0O9UT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT0O9kT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT0O-UT9Ee2_n5XNBGdaxw" type="_yTzn4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT02AET9Ee2_n5XNBGdaxw" name="ScheduleTime">
              <ownedAttribute xmi:id="_yirKUET9Ee2_n5XNBGdaxw" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yirKUUT9Ee2_n5XNBGdaxw" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt5kT9Ee2_n5XNBGdaxw" name="ScheduleTime" specification="_yT02AUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt50T9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXt6ET9Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXt6UT9Ee2_n5XNBGdaxw" type="_yT02AET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yT02AUT9Ee2_n5XNBGdaxw" name="ScheduleTime" visibility="package" method="_yjXt5kT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yT1dEkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT1dE0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT1dEET9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT1dEUT9Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT1dFET9Ee2_n5XNBGdaxw" type="_yT02AET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT1dFUT9Ee2_n5XNBGdaxw" name="SimulatorInput">
              <ownedComment xmi:id="_yjwIZET9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT2EIET9Ee2_n5XNBGdaxw" name="SortedPeriodQueue">
              <generalization xmi:id="_yT2rNET9Ee2_n5XNBGdaxw" general="_yTiiI0T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yirKUkT9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yirKU0T9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt6kT9Ee2_n5XNBGdaxw" name="SortedPeriodQueue" specification="_yT2rMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt60T9Ee2_n5XNBGdaxw" type="_yT2EIET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt7ET9Ee2_n5XNBGdaxw" name="SortedPeriodQueue" specification="_ygCGAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt7UT9Ee2_n5XNBGdaxw" name="schedulableObjects" type="_yfkzAET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXt7kT9Ee2_n5XNBGdaxw" type="_yT2EIET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yT2rMET9Ee2_n5XNBGdaxw" name="SortedPeriodQueue" visibility="package" method="_yjXt6kT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yT2rMUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT2rMkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT2rM0T9Ee2_n5XNBGdaxw" type="_yT2EIET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygCGAET9Ee2_n5XNBGdaxw" name="SortedPeriodQueue" visibility="package" method="_yjXt7ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygCGAkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygCGA0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygCGAUT9Ee2_n5XNBGdaxw" name="schedulableObjects" type="_yfkzAET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygCGBET9Ee2_n5XNBGdaxw" type="_yT2EIET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yT3SQUT9Ee2_n5XNBGdaxw" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_ygCtEUT9Ee2_n5XNBGdaxw" general="_yTkXUET9Ee2_n5XNBGdaxw"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yT35UET9Ee2_n5XNBGdaxw" name="ScheduleChoices">
                <ownedLiteral xmi:id="_yT35UkT9Ee2_n5XNBGdaxw" name="PRIORITY"/>
                <ownedLiteral xmi:id="_yT35U0T9Ee2_n5XNBGdaxw" name="RM"/>
                <ownedLiteral xmi:id="_yT35VET9Ee2_n5XNBGdaxw" name="DM"/>
                <ownedLiteral xmi:id="_yT4gYET9Ee2_n5XNBGdaxw" name="RTHART"/>
                <ownedLiteral xmi:id="_yT4gYUT9Ee2_n5XNBGdaxw" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yT4gYkT9Ee2_n5XNBGdaxw" name="POSET_RM"/>
                <ownedLiteral xmi:id="_yT4gY0T9Ee2_n5XNBGdaxw" name="POSET_DM"/>
                <ownedLiteral xmi:id="_yT4gZET9Ee2_n5XNBGdaxw" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yT4gZUT9Ee2_n5XNBGdaxw" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_yT4gZkT9Ee2_n5XNBGdaxw" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_yT4gZ0T9Ee2_n5XNBGdaxw" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_yT4gaET9Ee2_n5XNBGdaxw" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_yT4gaUT9Ee2_n5XNBGdaxw" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_yT4gakT9Ee2_n5XNBGdaxw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT4ga0T9Ee2_n5XNBGdaxw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT5HcET9Ee2_n5XNBGdaxw" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT5HcUT9Ee2_n5XNBGdaxw" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT5HckT9Ee2_n5XNBGdaxw" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yT5Hc0T9Ee2_n5XNBGdaxw" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT5HdET9Ee2_n5XNBGdaxw" name="SystemFactory">
              <ownedComment xmi:id="_yjwIZUT9Ee2_n5XNBGdaxw">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt70T9Ee2_n5XNBGdaxw" name="create" specification="_ygDUIkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt8ET9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXt8UT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjXt8kT9Ee2_n5XNBGdaxw" name="choice" type="_yT35UET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjXt80T9Ee2_n5XNBGdaxw" type="_yUI_EET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ygDUIkT9Ee2_n5XNBGdaxw" name="create" isStatic="true" method="_yjXt70T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygD7MET9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygD7MUT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygD7MkT9Ee2_n5XNBGdaxw" name="choice" type="_yT35UET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygD7M0T9Ee2_n5XNBGdaxw" type="_yUI_EET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT5ugET9Ee2_n5XNBGdaxw" name="Table">
              <generalization xmi:id="_yhllMUT9Ee2_n5XNBGdaxw" general="_yeRygET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yirKVET9Ee2_n5XNBGdaxw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yirxYET9Ee2_n5XNBGdaxw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjXt9ET9Ee2_n5XNBGdaxw" name="Table" specification="_yT6VkUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjXt9UT9Ee2_n5XNBGdaxw" type="_yT5ugET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYU8ET9Ee2_n5XNBGdaxw" name="Table" specification="_yT6VlUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYU8UT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYU8kT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYU80T9Ee2_n5XNBGdaxw" type="_yT5ugET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYU9ET9Ee2_n5XNBGdaxw" name="getNumRows" specification="_yT68o0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYU9UT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYU9kT9Ee2_n5XNBGdaxw" name="getNumColumns" specification="_yT68pUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYU90T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYU-ET9Ee2_n5XNBGdaxw" name="set" specification="_yhk-IET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYU-UT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYU-kT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYU-0T9Ee2_n5XNBGdaxw" name="element" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYU_ET9Ee2_n5XNBGdaxw" name="get" specification="_yT68p0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYU_UT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYU_kT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYU_0T9Ee2_n5XNBGdaxw" type="_yhF18UT9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yT6VkUT9Ee2_n5XNBGdaxw" name="Table" method="_yjXt9ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yT6VkkT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT6Vk0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT6VlET9Ee2_n5XNBGdaxw" type="_yT5ugET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yT6VlUT9Ee2_n5XNBGdaxw" name="Table" method="_yjYU8ET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yT68oET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yT68oUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yT6VlkT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT6Vl0T9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT68okT9Ee2_n5XNBGdaxw" type="_yT5ugET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yT68o0T9Ee2_n5XNBGdaxw" name="getNumRows" method="_yjYU9ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yT68pET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yT68pUT9Ee2_n5XNBGdaxw" name="getNumColumns" method="_yjYU9kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yT68pkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yT68p0T9Ee2_n5XNBGdaxw" name="get" method="_yjYU_ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yT68qET9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT68qUT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhllMET9Ee2_n5XNBGdaxw" type="_yhF18UT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhk-IET9Ee2_n5XNBGdaxw" name="set" method="_yjYU-ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhk-IUT9Ee2_n5XNBGdaxw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhk-IkT9Ee2_n5XNBGdaxw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhk-I0T9Ee2_n5XNBGdaxw" name="element" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yT7jsET9Ee2_n5XNBGdaxw" name="Visualization">
              <ownedComment xmi:id="_yjwIZkT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yT7jsUT9Ee2_n5XNBGdaxw" name="SystemChoices">
                <ownedLiteral xmi:id="_yT8KwUT9Ee2_n5XNBGdaxw" name="SOURCE"/>
                <ownedLiteral xmi:id="_yT8KwkT9Ee2_n5XNBGdaxw" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_yT8Kw0T9Ee2_n5XNBGdaxw" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_yT8KxET9Ee2_n5XNBGdaxw" name="LATENCY"/>
                <ownedLiteral xmi:id="_yT8KxUT9Ee2_n5XNBGdaxw" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_yT8KxkT9Ee2_n5XNBGdaxw" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_yT8Kx0T9Ee2_n5XNBGdaxw" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yT8KyET9Ee2_n5XNBGdaxw" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_yT8KykT9Ee2_n5XNBGdaxw" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_yT8Ky0T9Ee2_n5XNBGdaxw" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_yT8KzET9Ee2_n5XNBGdaxw" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_yT8x0ET9Ee2_n5XNBGdaxw" name="toDisplay"/>
              <ownedOperation xmi:id="_yT8x0UT9Ee2_n5XNBGdaxw" name="toFile"/>
              <ownedOperation xmi:id="_yT8x0kT9Ee2_n5XNBGdaxw" name="toString">
                <ownedParameter xmi:id="_yT8x00T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT8x1ET9Ee2_n5XNBGdaxw" name="VisualizationFactory">
              <ownedComment xmi:id="_yjwIZ0T9Ee2_n5XNBGdaxw">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYVAET9Ee2_n5XNBGdaxw" name="createProgramVisualization" specification="_ygFwYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYVAUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjYVAkT9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYVA0T9Ee2_n5XNBGdaxw" name="choice" type="_yT7jsUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjYVBET9Ee2_n5XNBGdaxw" type="_yT7jsET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjYVBUT9Ee2_n5XNBGdaxw" name="createWorkLoadVisualization" specification="_ygFwZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjYVBkT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjYVB0T9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjYVCET9Ee2_n5XNBGdaxw" name="choice" type="_yT8KyET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjYVCUT9Ee2_n5XNBGdaxw" type="_yT7jsET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ygFwYET9Ee2_n5XNBGdaxw" name="createProgramVisualization" isStatic="true" method="_yjYVAET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygFwYUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygFwYkT9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygFwY0T9Ee2_n5XNBGdaxw" name="choice" type="_yT7jsUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygFwZET9Ee2_n5XNBGdaxw" type="_yT7jsET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygFwZUT9Ee2_n5XNBGdaxw" name="createWorkLoadVisualization" isStatic="true" method="_yjYVBUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygGXcET9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygGXcUT9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygGXckT9Ee2_n5XNBGdaxw" name="choice" type="_yT8KyET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygGXc0T9Ee2_n5XNBGdaxw" type="_yT7jsET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yT9Y4ET9Ee2_n5XNBGdaxw" name="VisualizationImplementation">
              <ownedComment xmi:id="_yjwIaET9Ee2_n5XNBGdaxw">
                <body>&lt;h1>Implementation of the Visualization Interface.&lt;/h1>&#xD;
&lt;p>The VisualizationImplementation class allows the user to request visualizations of various aspects of the given file content in Description object.&#xD;
Methods to print Workload Descriptions to the console, write to a file, and create string are defined.&#xD;
Visualizations are created based on system choices of SOURCE, RELIABILITIES, SIMULATOR_INPUT, LATENCY, LATENCY_REPORT, &#xD;
DEADLINE_REPORT, and CHANNEL. Workload choices include INPUT_GRAPH, COMUNICATION_GRAPH, GRAPHVIZ.&lt;/p>&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yirxYUT9Ee2_n5XNBGdaxw" name="visualization" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykZBlET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yisYcET9Ee2_n5XNBGdaxw" name="fileContent" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykZooUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yisYckT9Ee2_n5XNBGdaxw" name="displayContent" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykZopET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yisYdET9Ee2_n5XNBGdaxw" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yis_gUT9Ee2_n5XNBGdaxw" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yis_g0T9Ee2_n5XNBGdaxw" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yis_hUT9Ee2_n5XNBGdaxw" name="fm" visibility="private" type="_ySh1gET9Ee2_n5XNBGdaxw" association="_ykaPsUT9Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yitmkET9Ee2_n5XNBGdaxw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yitmkkT9Ee2_n5XNBGdaxw" name="warp" visibility="private" type="_yUI_EET9Ee2_n5XNBGdaxw" association="_ykaPtET9Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yitmk0T9Ee2_n5XNBGdaxw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yitmlUT9Ee2_n5XNBGdaxw" name="workLoad" visibility="private" type="_yUWacET9Ee2_n5XNBGdaxw" association="_yka2wUT9Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yitmlkT9Ee2_n5XNBGdaxw" value="null"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ygGXdET9Ee2_n5XNBGdaxw" client="_yT9Y4ET9Ee2_n5XNBGdaxw" supplier="_yT7jsET9Ee2_n5XNBGdaxw" contract="_yT7jsET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8AET9Ee2_n5XNBGdaxw" name="VisualizationImplementation" specification="_yhmzUUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjY8AUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjY8AkT9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjY8A0T9Ee2_n5XNBGdaxw" name="choice" type="_yhmMQET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjY8BET9Ee2_n5XNBGdaxw" type="_yT9Y4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8BUT9Ee2_n5XNBGdaxw" name="VisualizationImplementation" specification="_yhoBcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjY8BkT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjY8B0T9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjY8CET9Ee2_n5XNBGdaxw" name="choice" type="_yhnaYET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjY8CUT9Ee2_n5XNBGdaxw" type="_yT9Y4ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8CkT9Ee2_n5XNBGdaxw" name="toDisplay" specification="_yT9_8ET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.println(displayContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8C0T9Ee2_n5XNBGdaxw" name="toFile" specification="_yT-nA0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8DET9Ee2_n5XNBGdaxw" name="toString" specification="_yT-nB0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjY8DUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8DkT9Ee2_n5XNBGdaxw" name="createVisualization" specification="_yhoBd0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjY8D0T9Ee2_n5XNBGdaxw" name="choice" type="_yhmMQET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8EET9Ee2_n5XNBGdaxw" name="createVisualization" specification="_yhoogET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjY8EUT9Ee2_n5XNBGdaxw" name="choice" type="_yhnaYET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjY8EkT9Ee2_n5XNBGdaxw" name="createVisualization" specification="_yhoogkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjY8E0T9Ee2_n5XNBGdaxw" name="obj" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 displayContent = obj.displayVisualization();&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjEET9Ee2_n5XNBGdaxw" name="createFileNameTemplate" specification="_yT_OE0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjEUT9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjEkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yT9_8ET9Ee2_n5XNBGdaxw" name="toDisplay" method="_yjY8CkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yT-nA0T9Ee2_n5XNBGdaxw" name="toFile" method="_yjY8C0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yT-nB0T9Ee2_n5XNBGdaxw" name="toString" method="_yjY8DET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yT-nCET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yT_OE0T9Ee2_n5XNBGdaxw" name="createFileNameTemplate" visibility="private" method="_yjZjEET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwvdET9Ee2_n5XNBGdaxw">
                  <body>Creates the fileNameTemplate using the full output path and input filename.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param outputDirectory The output used to create a new directory.&#xD;
   * @return fileNameTemplate, a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_yT_OFET9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yT_OFUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yhmzUUT9Ee2_n5XNBGdaxw" name="VisualizationImplementation" method="_yjY8AET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhmzVUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhmzVkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjwvcET9Ee2_n5XNBGdaxw">
                  <body>The first constructor method sets up the inputFileName and fileNameTemplate based on the WarpInterface&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The interface to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhmzUkT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhmzU0T9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhmzVET9Ee2_n5XNBGdaxw" name="choice" type="_yhmMQET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhmzV0T9Ee2_n5XNBGdaxw" type="_yT9Y4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhoBcET9Ee2_n5XNBGdaxw" name="VisualizationImplementation" method="_yjY8BUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhoBdET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhoBdUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjwvcUT9Ee2_n5XNBGdaxw">
                  <body>The second constructor method sets up the inputFileName and fileNameTemplate based on the Workload&#xD;
   * object passed in. It then calls createVisualization using the given choice enumeration value passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The work load to be visualized.&#xD;
   * @param outputDirectory The file to be written to.&#xD;
   * @param choice The work load visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhoBcUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhoBckT9Ee2_n5XNBGdaxw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhoBc0T9Ee2_n5XNBGdaxw" name="choice" type="_yhnaYET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhoBdkT9Ee2_n5XNBGdaxw" type="_yT9Y4ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhoBd0T9Ee2_n5XNBGdaxw" name="createVisualization" visibility="private" method="_yjY8DkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwvckT9Ee2_n5XNBGdaxw">
                  <body>Given the SystemChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The system visualization choice.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhoBeET9Ee2_n5XNBGdaxw" name="choice" type="_yhmMQET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhoogET9Ee2_n5XNBGdaxw" name="createVisualization" visibility="private" method="_yjY8EET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwvc0T9Ee2_n5XNBGdaxw">
                  <body>Given the WorkLoadChoices enum value passed in, creates the requested visualization.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param choice The work load visualization selected.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhoogUT9Ee2_n5XNBGdaxw" name="choice" type="_yhnaYET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhoogkT9Ee2_n5XNBGdaxw" name="createVisualization" visibility="private" method="_yjY8EkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhoog0T9Ee2_n5XNBGdaxw" name="obj" type="_yhF18UT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUAcMET9Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_yjwvdUT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yiuNoUT9Ee2_n5XNBGdaxw" name="fm" visibility="private" type="_ySh1gET9Ee2_n5XNBGdaxw" association="_yka2xET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiu0sET9Ee2_n5XNBGdaxw" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiu0skT9Ee2_n5XNBGdaxw" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiu0tET9Ee2_n5XNBGdaxw" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiu0tUT9Ee2_n5XNBGdaxw" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjE0T9Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_ygIMoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjFET9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjFUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjFkT9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjF0T9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,String.valueOf(workLoad.getMinPacketReceptionRate()),String.valueOf(workLoad.getE2e())); &#xD;
		this.suffix = suffix; &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjGET9Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_ygIztUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjGUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjGkT9Ee2_n5XNBGdaxw" name="warp" type="_yT3SQUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjG0T9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjHET9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()); &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()); &#xD;
		}&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjHUT9Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_ygJawET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjHkT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjH0T9Ee2_n5XNBGdaxw" name="warp" type="_yT3SQUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjIET9Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjIUT9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjIkT9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		if (warp.getNumFaults() > 0) {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getNumFaults()) + nameExtension; &#xD;
		} else {&#xD;
			this.nameExtension = nameExtension(warp.getSchedulerName(),&#xD;
					warp.getMinPacketReceptionRate(),&#xD;
					warp.getE2e()) + nameExtension; &#xD;
		}&#xD;
		&#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjI0T9Ee2_n5XNBGdaxw" name="VisualizationObject" specification="_ygJayET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjJET9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjJUT9Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjJkT9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjJ0T9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
		this.nameExtension = nameExtension; &#xD;
		this.suffix = suffix;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjKET9Ee2_n5XNBGdaxw" name="nameExtension" specification="_yhp2oET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjKUT9Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjKkT9Ee2_n5XNBGdaxw" name="m" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjZjK0T9Ee2_n5XNBGdaxw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjLET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sM-%sE2E&quot;,&#xD;
				schName,&#xD;
				String.valueOf(m),&#xD;
				String.valueOf(e2e)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjLUT9Ee2_n5XNBGdaxw" name="nameExtension" specification="_yUBqUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjLkT9Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjL0T9Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjZjMET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;,&#xD;
				schName,&#xD;
				String.valueOf(numFaults)); &#xD;
		return extension;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjMUT9Ee2_n5XNBGdaxw" name="getFileManager" specification="_yUBqVET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjMkT9Ee2_n5XNBGdaxw" type="_ySh1gET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZjM0T9Ee2_n5XNBGdaxw" name="visualization" specification="_yUCRYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjZjNET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
		content.add(NOT_IMPLEMENTED);&#xD;
		return content;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKIET9Ee2_n5XNBGdaxw" name="createFile" specification="_yUCRYUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKIUT9Ee2_n5XNBGdaxw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjaKIkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix );&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKI0T9Ee2_n5XNBGdaxw" name="fileVisualization" specification="_yUCRZET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKJET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 	fileContent.addAll(visualization());&#xD;
 	fileContent.addAll(createFooter());&#xD;
 	return fileContent;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKJUT9Ee2_n5XNBGdaxw" name="displayVisualization" specification="_yUCRZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKJkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return visualization();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKJ0T9Ee2_n5XNBGdaxw" name="createHeader" specification="_yUCRZkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKKET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKKUT9Ee2_n5XNBGdaxw" name="createFooter" specification="_yUC4cET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKKkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUBqUET9Ee2_n5XNBGdaxw" name="nameExtension" visibility="private" method="_yjZjLUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUBqUUT9Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUBqUkT9Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUBqU0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUBqVET9Ee2_n5XNBGdaxw" name="getFileManager" method="_yjZjMUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjwvdkT9Ee2_n5XNBGdaxw">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygKB00T9Ee2_n5XNBGdaxw" type="_ySh1gET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCRYET9Ee2_n5XNBGdaxw" name="visualization" method="_yjZjM0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygKB1ET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCRYUT9Ee2_n5XNBGdaxw" name="createFile" method="_yjaKIET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUCRYkT9Ee2_n5XNBGdaxw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUCRY0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCRZET9Ee2_n5XNBGdaxw" name="fileVisualization" method="_yjaKI0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygKB1UT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCRZUT9Ee2_n5XNBGdaxw" name="displayVisualization" method="_yjaKJUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygKB1kT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUCRZkT9Ee2_n5XNBGdaxw" name="createHeader" method="_yjaKJ0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygKB10T9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUC4cET9Ee2_n5XNBGdaxw" name="createFooter" method="_yjaKKUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygKB2ET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygIMoET9Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_yjZjE0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygIzskT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygIzs0T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygIMoUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygIzsET9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygIzsUT9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygIztET9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygIztUT9Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_yjZjGET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygIzuUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygIzukT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygIztkT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygIzt0T9Ee2_n5XNBGdaxw" name="warp" type="_yT3SQUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygIzuET9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygIzu0T9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygJawET9Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_yjZjHUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygJaxUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygJaxkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygJawUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygJawkT9Ee2_n5XNBGdaxw" name="warp" type="_yT3SQUT9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygJaw0T9Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygJaxET9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygJax0T9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygJayET9Ee2_n5XNBGdaxw" name="VisualizationObject" visibility="package" method="_yjZjI0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygKB0ET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygKB0UT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygJayUT9Ee2_n5XNBGdaxw" name="fm" type="_ySh1gET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygJaykT9Ee2_n5XNBGdaxw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygJay0T9Ee2_n5XNBGdaxw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygKB0kT9Ee2_n5XNBGdaxw" type="_yUAcMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhp2oET9Ee2_n5XNBGdaxw" name="nameExtension" visibility="private" method="_yjZjKET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhp2oUT9Ee2_n5XNBGdaxw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhp2okT9Ee2_n5XNBGdaxw" name="m" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhp2o0T9Ee2_n5XNBGdaxw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhp2pET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUEGkET9Ee2_n5XNBGdaxw" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_yjwvd0T9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_yhqdsET9Ee2_n5XNBGdaxw" general="_yfUUUUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yivbwET9Ee2_n5XNBGdaxw" name="workLoad" visibility="package" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykbd0UT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yivbwkT9Ee2_n5XNBGdaxw" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKK0T9Ee2_n5XNBGdaxw" name="WorkLoadListener" specification="_ygKo4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKLET9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjaKLUT9Ee2_n5XNBGdaxw" type="_yUEGkET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKLkT9Ee2_n5XNBGdaxw" name="buildNodesAndFlows" specification="_ygKo5UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKL0T9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKMET9Ee2_n5XNBGdaxw" name="testPrintStdOut" specification="_yUEtoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKMUT9Ee2_n5XNBGdaxw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKMkT9Ee2_n5XNBGdaxw" name="enterWarpName" specification="_ygLP8UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKM0T9Ee2_n5XNBGdaxw" name="ctx" type="_yfWJg0T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKNET9Ee2_n5XNBGdaxw" name="enterFlowName" specification="_ygL3AET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKNUT9Ee2_n5XNBGdaxw" name="ctx" type="_yfX-s0T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaKNkT9Ee2_n5XNBGdaxw" name="exitPriority" specification="_ygMeEUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaKN0T9Ee2_n5XNBGdaxw" name="ctx" type="_ygL3BUT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxMET9Ee2_n5XNBGdaxw" name="exitPeriod" specification="_ygNFIUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxMUT9Ee2_n5XNBGdaxw" name="ctx" type="_ygMeFkT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxMkT9Ee2_n5XNBGdaxw" name="exitDeadline" specification="_ygNsNET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxM0T9Ee2_n5XNBGdaxw" name="ctx" type="_ygNsMkT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxNET9Ee2_n5XNBGdaxw" name="exitPhase" specification="_ygO6UET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxNUT9Ee2_n5XNBGdaxw" name="ctx" type="_ygOTQ0T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxNkT9Ee2_n5XNBGdaxw" name="exitSrcNode" specification="_ygO6VUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxN0T9Ee2_n5XNBGdaxw" name="ctx" type="_yfZM0UT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxOET9Ee2_n5XNBGdaxw" name="exitSnkNode" specification="_ygPhY0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxOUT9Ee2_n5XNBGdaxw" name="ctx" type="_yfZz4kT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxOkT9Ee2_n5XNBGdaxw" name="exitFlow" specification="_ygQIcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxO0T9Ee2_n5XNBGdaxw" name="ctx" type="_yfaa80T9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUEtoET9Ee2_n5XNBGdaxw" name="testPrintStdOut" method="_yjaKMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUEtoUT9Ee2_n5XNBGdaxw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygKo4ET9Ee2_n5XNBGdaxw" name="WorkLoadListener" visibility="private" method="_yjaKK0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygKo4kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygKo40T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygKo4UT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygKo5ET9Ee2_n5XNBGdaxw" type="_yUEGkET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygKo5UT9Ee2_n5XNBGdaxw" name="buildNodesAndFlows" isStatic="true" method="_yjaKLkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygLP8ET9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygLP8UT9Ee2_n5XNBGdaxw" name="enterWarpName" method="_yjaKMkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygLP8kT9Ee2_n5XNBGdaxw" name="ctx" type="_yfWJg0T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygL3AET9Ee2_n5XNBGdaxw" name="enterFlowName" method="_yjaKNET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygL3AUT9Ee2_n5XNBGdaxw" name="ctx" type="_yfX-s0T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygMeEUT9Ee2_n5XNBGdaxw" name="exitPriority" method="_yjaKNkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygMeEkT9Ee2_n5XNBGdaxw" name="ctx" type="_ygL3BUT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygNFIUT9Ee2_n5XNBGdaxw" name="exitPeriod" method="_yjaxMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygNFIkT9Ee2_n5XNBGdaxw" name="ctx" type="_ygMeFkT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygNsNET9Ee2_n5XNBGdaxw" name="exitDeadline" method="_yjaxMkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygNsNUT9Ee2_n5XNBGdaxw" name="ctx" type="_ygNsMkT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygO6UET9Ee2_n5XNBGdaxw" name="exitPhase" method="_yjaxNET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygO6UUT9Ee2_n5XNBGdaxw" name="ctx" type="_ygOTQ0T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygO6VUT9Ee2_n5XNBGdaxw" name="exitSrcNode" method="_yjaxNkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygO6VkT9Ee2_n5XNBGdaxw" name="ctx" type="_yfZM0UT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygPhY0T9Ee2_n5XNBGdaxw" name="exitSnkNode" method="_yjaxOET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygPhZET9Ee2_n5XNBGdaxw" name="ctx" type="_yfZz4kT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygQIcET9Ee2_n5XNBGdaxw" name="exitFlow" method="_yjaxOkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygQIcUT9Ee2_n5XNBGdaxw" name="ctx" type="_yfaa80T9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUF7wET9Ee2_n5XNBGdaxw" name="WorkLoadDescription">
              <ownedComment xmi:id="_yjwveET9Ee2_n5XNBGdaxw">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_ygR9oET9Ee2_n5XNBGdaxw" general="_yUAcMET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiwp4ET9Ee2_n5XNBGdaxw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiwp4UT9Ee2_n5XNBGdaxw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiwp4kT9Ee2_n5XNBGdaxw" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yixQ8ET9Ee2_n5XNBGdaxw" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yixQ8UT9Ee2_n5XNBGdaxw" name="description" visibility="private" type="_ySagwET9Ee2_n5XNBGdaxw" association="_ykcE4UT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yixQ80T9Ee2_n5XNBGdaxw" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yixQ9UT9Ee2_n5XNBGdaxw" name="fm" visibility="private" type="_ySh1gET9Ee2_n5XNBGdaxw" association="_ykcr8ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yix4AUT9Ee2_n5XNBGdaxw" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxPET9Ee2_n5XNBGdaxw" name="WorkLoadDescription" specification="_yUGi0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxPUT9Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjaxPkT9Ee2_n5XNBGdaxw" type="_yUF7wET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxP0T9Ee2_n5XNBGdaxw" name="visualization" specification="_yUGi1UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxQET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxQUT9Ee2_n5XNBGdaxw" name="fileVisualization" specification="_yUHJ40T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxQkT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjaxQ0T9Ee2_n5XNBGdaxw" name="toString" specification="_yUHw8kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjaxRET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjbYQET9Ee2_n5XNBGdaxw" name="initialize" specification="_yUHw90T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjbYQUT9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUGi0ET9Ee2_n5XNBGdaxw" name="WorkLoadDescription" visibility="package" method="_yjaxPET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yUGi0kT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yUGi00T9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yUGi0UT9Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUGi1ET9Ee2_n5XNBGdaxw" type="_yUF7wET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUGi1UT9Ee2_n5XNBGdaxw" name="visualization" method="_yjaxP0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygRWkET9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUHJ40T9Ee2_n5XNBGdaxw" name="fileVisualization" method="_yjaxQUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygRWkUT9Ee2_n5XNBGdaxw" type="_ySagwET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUHw8kT9Ee2_n5XNBGdaxw" name="toString" method="_yjaxQ0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUHw80T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUHw90T9Ee2_n5XNBGdaxw" name="initialize" visibility="private" method="_yjbYQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUHw-ET9Ee2_n5XNBGdaxw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yUI_EET9Ee2_n5XNBGdaxw" name="WarpInterface">
              <ownedComment xmi:id="_yjxWgET9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_ygR9oUT9Ee2_n5XNBGdaxw" general="_yT3SQUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUI_EUT9Ee2_n5XNBGdaxw" name="toWorkload">
                <ownedParameter xmi:id="_ygR9okT9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUJmIET9Ee2_n5XNBGdaxw" name="toProgram">
                <ownedParameter xmi:id="_ygSksET9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUJmIUT9Ee2_n5XNBGdaxw" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_ygSksUT9Ee2_n5XNBGdaxw" type="_yTjwQET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUJmIkT9Ee2_n5XNBGdaxw" name="toSimulator">
                <ownedParameter xmi:id="_ygSkskT9Ee2_n5XNBGdaxw" type="_yT1dFUT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUJmI0T9Ee2_n5XNBGdaxw" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_ygSks0T9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUKNMET9Ee2_n5XNBGdaxw" name="toChannelAnalysis">
                <ownedParameter xmi:id="_ygSktET9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUKNMUT9Ee2_n5XNBGdaxw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_yUKNMkT9Ee2_n5XNBGdaxw" name="reliabilitiesMet">
                <ownedParameter xmi:id="_yUKNM0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUKNNET9Ee2_n5XNBGdaxw" name="deadlinesMet">
                <ownedParameter xmi:id="_yUKNNUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yULbUET9Ee2_n5XNBGdaxw" name="WarpPoset">
              <ownedComment xmi:id="_yjxWgUT9Ee2_n5XNBGdaxw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ygTLw0T9Ee2_n5XNBGdaxw" general="_yTF2MET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjbYQkT9Ee2_n5XNBGdaxw" name="WarpPoset" specification="_ygSktUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjbYQ0T9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjbYRET9Ee2_n5XNBGdaxw" type="_yULbUET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjbYRUT9Ee2_n5XNBGdaxw" name="findCoordinator" specification="_yhrEwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjbYRkT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjbYR0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ygSktUT9Ee2_n5XNBGdaxw" name="WarpPoset" visibility="package" method="_yjbYQkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygTLwET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygTLwUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ygSktkT9Ee2_n5XNBGdaxw" name="workload" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygTLwkT9Ee2_n5XNBGdaxw" type="_yULbUET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhrEwET9Ee2_n5XNBGdaxw" name="findCoordinator" visibility="protected" method="_yjbYRUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhrEwUT9Ee2_n5XNBGdaxw" name="nodesInFlow" type="_yeRygET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhrr0ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUMCYET9Ee2_n5XNBGdaxw" name="WarpSystem">
              <ownedComment xmi:id="_yjxWgkT9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yix4AkT9Ee2_n5XNBGdaxw" name="program" visibility="private" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykcr80T9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yix4BET9Ee2_n5XNBGdaxw" name="workLoad" visibility="private" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykdTAUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiyfEET9Ee2_n5XNBGdaxw" name="ra" visibility="private" type="_yTjwQET9Ee2_n5XNBGdaxw" association="_ykdTBET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiyfEkT9Ee2_n5XNBGdaxw" name="la" visibility="private" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykd6EUT9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiyfFET9Ee2_n5XNBGdaxw" name="ca" visibility="private" type="_ySAREET9Ee2_n5XNBGdaxw" association="_ykd6FET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiyfFkT9Ee2_n5XNBGdaxw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yizGJET9Ee2_n5XNBGdaxw" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yizGJUT9Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yiztMUT9Ee2_n5XNBGdaxw" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yiztMkT9Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ygTLxET9Ee2_n5XNBGdaxw" client="_yUMCYET9Ee2_n5XNBGdaxw" supplier="_yUI_EET9Ee2_n5XNBGdaxw" contract="_yUI_EET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjbYSkT9Ee2_n5XNBGdaxw" name="WarpSystem" specification="_yhsS4kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjbYS0T9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjbYTET9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjbYTUT9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjbYTkT9Ee2_n5XNBGdaxw" type="_yUMCYET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_UET9Ee2_n5XNBGdaxw" name="toWorkload" specification="_yUNQgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_UUT9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_UkT9Ee2_n5XNBGdaxw" name="toProgram" specification="_yUNQhET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_U0T9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_VET9Ee2_n5XNBGdaxw" name="toReliabilityAnalysis" specification="_yUN3k0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_VUT9Ee2_n5XNBGdaxw" type="_yTjwQET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_VkT9Ee2_n5XNBGdaxw" name="toSimulator" specification="_yUOeoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_V0T9Ee2_n5XNBGdaxw" type="_yT1dFUT9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_WET9Ee2_n5XNBGdaxw" name="toLatencyAnalysis" specification="_yUOepET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_WUT9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_WkT9Ee2_n5XNBGdaxw" name="toChannelAnalysis" specification="_yUPFskT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_W0T9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_XET9Ee2_n5XNBGdaxw" name="reliabilitiesMet" specification="_yUPFtkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_XUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_XkT9Ee2_n5XNBGdaxw" name="deadlinesMet" specification="_yUPsxET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_X0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_YET9Ee2_n5XNBGdaxw" name="createProgram" specification="_yhs59kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_YUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjb_YkT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjb_Y0T9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_ZET9Ee2_n5XNBGdaxw" name="getNumFaults" specification="_yUQT00T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_ZUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_ZkT9Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" specification="_yUQ640T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_Z0T9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjb_aET9Ee2_n5XNBGdaxw" name="getE2e" specification="_yURh8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjb_aUT9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmYET9Ee2_n5XNBGdaxw" name="getName" specification="_yURh9ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjcmYUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmYkT9Ee2_n5XNBGdaxw" name="getSchedulerName" specification="_yUSJBET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjcmY0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmZET9Ee2_n5XNBGdaxw" name="getNumTransmissions" specification="_yUSwE0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjcmZUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmZkT9Ee2_n5XNBGdaxw" name="getOptimizationFlag" specification="_yUTXIkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjcmZ0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUNQgET9Ee2_n5XNBGdaxw" name="toWorkload" method="_yjb_UET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygTy0ET9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUNQhET9Ee2_n5XNBGdaxw" name="toProgram" method="_yjb_UkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygUZ4ET9Ee2_n5XNBGdaxw" type="_yTPnMET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUN3k0T9Ee2_n5XNBGdaxw" name="toReliabilityAnalysis" method="_yjb_VET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygUZ4UT9Ee2_n5XNBGdaxw" type="_yTjwQET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUOeoET9Ee2_n5XNBGdaxw" name="toSimulator" method="_yjb_VkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygUZ4kT9Ee2_n5XNBGdaxw" type="_yT1dFUT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUOepET9Ee2_n5XNBGdaxw" name="toLatencyAnalysis" method="_yjb_WET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygUZ40T9Ee2_n5XNBGdaxw" type="_yS3zxkT9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUPFskT9Ee2_n5XNBGdaxw" name="toChannelAnalysis" method="_yjb_WkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygUZ5ET9Ee2_n5XNBGdaxw" type="_ySAREET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUPFtkT9Ee2_n5XNBGdaxw" name="reliabilitiesMet" method="_yjb_XET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUPswET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUPsxET9Ee2_n5XNBGdaxw" name="deadlinesMet" method="_yjb_XkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUPsxUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUQT00T9Ee2_n5XNBGdaxw" name="getNumFaults" method="_yjb_ZET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUQT1ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUQ640T9Ee2_n5XNBGdaxw" name="getMinPacketReceptionRate" method="_yjb_ZkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhthAkT9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yURh8ET9Ee2_n5XNBGdaxw" name="getE2e" method="_yjb_aET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhthA0T9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yURh9ET9Ee2_n5XNBGdaxw" name="getName" method="_yjcmYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUSJAET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUSJBET9Ee2_n5XNBGdaxw" name="getSchedulerName" method="_yjcmYkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUSJBUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUSwE0T9Ee2_n5XNBGdaxw" name="getNumTransmissions" method="_yjcmZET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUSwFET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUTXIkT9Ee2_n5XNBGdaxw" name="getOptimizationFlag" method="_yjcmZkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUTXI0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUT-MET9Ee2_n5XNBGdaxw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_yhsS4kT9Ee2_n5XNBGdaxw" name="WarpSystem" method="_yjbYSkT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhs580T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhs59ET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yhs58ET9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhs58UT9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhs58kT9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhs59UT9Ee2_n5XNBGdaxw" type="_yUMCYET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhs59kT9Ee2_n5XNBGdaxw" name="createProgram" visibility="private" method="_yjb_YET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhs590T9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhthAET9Ee2_n5XNBGdaxw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhthAUT9Ee2_n5XNBGdaxw" name="choice" type="_yhYw4ET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUWacET9Ee2_n5XNBGdaxw" name="WorkLoad">
              <ownedComment xmi:id="_yjxWg0T9Ee2_n5XNBGdaxw">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ygbHkUT9Ee2_n5XNBGdaxw" general="_yUF7wET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yiztNET9Ee2_n5XNBGdaxw" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi0UQET9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi0UQUT9Ee2_n5XNBGdaxw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi0UQkT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi0UQ0T9Ee2_n5XNBGdaxw" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi0URET9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi0URUT9Ee2_n5XNBGdaxw" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi0URkT9Ee2_n5XNBGdaxw" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi0UR0T9Ee2_n5XNBGdaxw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi0USET9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi0USUT9Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_yhb0MET9Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi0USkT9Ee2_n5XNBGdaxw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi0US0T9Ee2_n5XNBGdaxw" name="e2e" visibility="private" type="_yhb0MET9Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi07UET9Ee2_n5XNBGdaxw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi07UkT9Ee2_n5XNBGdaxw" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi07U0T9Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi07VET9Ee2_n5XNBGdaxw" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi07VUT9Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi07V0T9Ee2_n5XNBGdaxw" name="flows" type="_ySsNkET9Ee2_n5XNBGdaxw" association="_yjxWhET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yi07WET9Ee2_n5XNBGdaxw" name="nodes" type="_yTBkwET9Ee2_n5XNBGdaxw" association="_yjx9kET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yi1iYET9Ee2_n5XNBGdaxw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi1iYkT9Ee2_n5XNBGdaxw" name="flowNamesInOriginalOrder" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykd6F0T9Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi1iZET9Ee2_n5XNBGdaxw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi1iZUT9Ee2_n5XNBGdaxw" name="flowNamesInPriorityOrder" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykehIUT9Ee2_n5XNBGdaxw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi2JcUT9Ee2_n5XNBGdaxw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ygYEQUT9Ee2_n5XNBGdaxw" client="_yUWacET9Ee2_n5XNBGdaxw" supplier="_yTkXUET9Ee2_n5XNBGdaxw" contract="_yTkXUET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmaET9Ee2_n5XNBGdaxw" name="WorkLoad" specification="_yhvWMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjcmaUT9Ee2_n5XNBGdaxw" name="m" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjcmakT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjcma0T9Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjcmbET9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmbUT9Ee2_n5XNBGdaxw" name="WorkLoad" specification="_yhv9QET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjcmbkT9Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjcmb0T9Ee2_n5XNBGdaxw" name="m" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjcmcET9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjcmcUT9Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjcmckT9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjcmc0T9Ee2_n5XNBGdaxw" name="setDefaultParameters" specification="_yUXokET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNcET9Ee2_n5XNBGdaxw" name="getE2e" specification="_yUYPoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNcUT9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNckT9Ee2_n5XNBGdaxw" name="getIntForFlowNames" specification="_yUYPoUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNdET9Ee2_n5XNBGdaxw" name="getName" specification="_yUYPo0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNdUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNdkT9Ee2_n5XNBGdaxw" name="setMinPacketReceptionRate" specification="_yhwkU0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNd0T9Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNeET9Ee2_n5XNBGdaxw" name="getMaxPhase" specification="_yUY2sUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNeUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNekT9Ee2_n5XNBGdaxw" name="getMinPeriod" specification="_yUY2s0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNe0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNfET9Ee2_n5XNBGdaxw" name="setE2e" specification="_yhxLYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNfUT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNfkT9Ee2_n5XNBGdaxw" name="setIntForFlowNames" specification="_yUZdwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNf0T9Ee2_n5XNBGdaxw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNgET9Ee2_n5XNBGdaxw" name="setName" specification="_yUZdwkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNgUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNgkT9Ee2_n5XNBGdaxw" name="setNodeChannel" specification="_yUZdxET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNg0T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjdNhET9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNhUT9Ee2_n5XNBGdaxw" name="getNodeChannel" specification="_yUaE0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNhkT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjdNh0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNiET9Ee2_n5XNBGdaxw" name="addFlow" specification="_yUaE00T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNiUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNikT9Ee2_n5XNBGdaxw" name="isIntForNodeNames" specification="_yUaE1UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNi0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjdNjET9Ee2_n5XNBGdaxw" name="isIntForFlowNames" specification="_yUar4UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjdNjUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0gET9Ee2_n5XNBGdaxw" name="addNodeToFlow" specification="_yUar40T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0gUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0gkT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0g0T9Ee2_n5XNBGdaxw" name="getFlowPriority" specification="_yUbS8ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0hET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0hUT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0hkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0h0T9Ee2_n5XNBGdaxw" name="setFlowPriority" specification="_yUbS9ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0iET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0iUT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0ikT9Ee2_n5XNBGdaxw" name="setFlowPeriod" specification="_yUb6AET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0i0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0jET9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0jUT9Ee2_n5XNBGdaxw" name="setFlowDeadline" specification="_yUb6A0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0jkT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0j0T9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0kET9Ee2_n5XNBGdaxw" name="setFlowPhase" specification="_yUchEET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0kUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0kkT9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0k0T9Ee2_n5XNBGdaxw" name="getFlowIndex" specification="_yUchE0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0lET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0lUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0lkT9Ee2_n5XNBGdaxw" name="getFlowPriority" specification="_yUdIIET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0l0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0mET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0mUT9Ee2_n5XNBGdaxw" name="getFlowPeriod" specification="_yUdII0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0mkT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0m0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0nET9Ee2_n5XNBGdaxw" name="getFlowDeadline" specification="_yUdIJkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0nUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0nkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjd0n0T9Ee2_n5XNBGdaxw" name="getFlowPhase" specification="_yUdvMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjd0oET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjd0oUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebkET9Ee2_n5XNBGdaxw" name="getFlowTxAttemptsPerLink" specification="_yUdvM0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebkUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjebkkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebk0T9Ee2_n5XNBGdaxw" name="setFlowsInPriorityOrder" specification="_yUdvNkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjeblET9Ee2_n5XNBGdaxw" name="setFlowsInDMorder" specification="_yUdvN0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjeblUT9Ee2_n5XNBGdaxw" name="setFlowsInRMorder" specification="_yUdvOET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjeblkT9Ee2_n5XNBGdaxw" name="setFlowsInRealTimeHARTorder" specification="_yUdvOUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebl0T9Ee2_n5XNBGdaxw" name="finalizeCurrentFlow" specification="_yUeWQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebmET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebmUT9Ee2_n5XNBGdaxw" name="nextReleaseTime" specification="_yUeWQkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebmkT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjebm0T9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjebnET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebnUT9Ee2_n5XNBGdaxw" name="nextAbsoluteDeadline" specification="_yUeWRkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebnkT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjebn0T9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjeboET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjeboUT9Ee2_n5XNBGdaxw" name="finalizeFlowWithE2eParameters" specification="_yUe9UET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebokT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebo0T9Ee2_n5XNBGdaxw" name="finalizeFlowWithFixedFaultTolerance" specification="_yUe9UkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebpET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebpUT9Ee2_n5XNBGdaxw" name="getFixedTxPerLinkAndTotalTxCost" specification="_ygZSYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebpkT9Ee2_n5XNBGdaxw" name="flow" type="_ySk40ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjebp0T9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjebqET9Ee2_n5XNBGdaxw" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_yhxycET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjebqUT9Ee2_n5XNBGdaxw" name="flow" type="_ySk40ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjebqkT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjebq0T9Ee2_n5XNBGdaxw" name="M" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjebrET9Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjebrUT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCoET9Ee2_n5XNBGdaxw" name="getNodeNamesOrderedAlphabetically" specification="_yUe9VET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCoUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjfCokT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCo0T9Ee2_n5XNBGdaxw" name="getFlow" specification="_yUfkY0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCpET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjfCpUT9Ee2_n5XNBGdaxw" type="_ySk40ET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCpkT9Ee2_n5XNBGdaxw" name="getFlowNames" specification="_yUfkZUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCp0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjfCqET9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCqUT9Ee2_n5XNBGdaxw" name="getNodeIndex" specification="_yUgLcET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCqkT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjfCq0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCrET9Ee2_n5XNBGdaxw" name="getNodesInFlow" specification="_yUgLc0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCrUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjfCrkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjfCr0T9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCsET9Ee2_n5XNBGdaxw" name="getHyperPeriod" specification="_yUgLeET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCsUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCskT9Ee2_n5XNBGdaxw" name="getTotalTxAttemptsInFlow" specification="_yUgygUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCs0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjfCtET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCtUT9Ee2_n5XNBGdaxw" name="getNumTxAttemptsPerLink" specification="_yUgyhET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCtkT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjfCt0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjfCuET9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCuUT9Ee2_n5XNBGdaxw" name="addEdge" specification="_ygaggUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCukT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjfCu0T9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfCvET9Ee2_n5XNBGdaxw" name="maxFlowLength" specification="_yUhZkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfCvUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfpsET9Ee2_n5XNBGdaxw" name="parser" specification="_ygaghET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfpsUT9Ee2_n5XNBGdaxw" name="wkldDesc" type="_ySagwET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjfpskT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// loops through the workload description to find the flow name&#xD;
	  // that matches a specific flow name passed as the second input parameter.&#xD;
	  // prints the matching flow line&#xD;
	  for (String flowLine : wkldDesc) {&#xD;
		  if (flowLine.startsWith(flowName + ' ') || &#xD;
				  flowLine.startsWith(flowName + ':')) {   //accounts for .txt files where a colon follows flow name&#xD;
			  System.out.print(flowLine);&#xD;
		  }&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjfps0T9Ee2_n5XNBGdaxw" name="main" specification="_yUhZkkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjfptET9Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjfptUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	  System.out.println(wkld.name);&#xD;
	  wkld.setFlowsInDMorder();&#xD;
	  // loops through the sorted ArrayList of flow names calling parser &#xD;
	  // to match each flow name with associated workload description&#xD;
	  for (String flowName : wkld.getFlowNamesInPriorityOrder()) {&#xD;
		  parser(wkld.visualization(), flowName);&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUXokET9Ee2_n5XNBGdaxw" name="setDefaultParameters" visibility="private" method="_yjcmc0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUYPoET9Ee2_n5XNBGdaxw" name="getE2e" method="_yjdNcET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9lET9Ee2_n5XNBGdaxw">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhwkUkT9Ee2_n5XNBGdaxw" type="_yhb0MET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUYPoUT9Ee2_n5XNBGdaxw" name="getIntForFlowNames" method="_yjdNckT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9lUT9Ee2_n5XNBGdaxw">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUYPokT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUYPo0T9Ee2_n5XNBGdaxw" name="getName" method="_yjdNdET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9lkT9Ee2_n5XNBGdaxw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUY2sET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUY2sUT9Ee2_n5XNBGdaxw" name="getMaxPhase" method="_yjdNeET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9mET9Ee2_n5XNBGdaxw">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUY2skT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUY2s0T9Ee2_n5XNBGdaxw" name="getMinPeriod" method="_yjdNekT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9mUT9Ee2_n5XNBGdaxw">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUY2tET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUZdwET9Ee2_n5XNBGdaxw" name="setIntForFlowNames" method="_yjdNfkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9m0T9Ee2_n5XNBGdaxw">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUZdwUT9Ee2_n5XNBGdaxw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUZdwkT9Ee2_n5XNBGdaxw" name="setName" method="_yjdNgET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykoET9Ee2_n5XNBGdaxw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUZdw0T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUZdxET9Ee2_n5XNBGdaxw" name="setNodeChannel" method="_yjdNgkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykoUT9Ee2_n5XNBGdaxw">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUZdxUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUZdxkT9Ee2_n5XNBGdaxw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUaE0ET9Ee2_n5XNBGdaxw" name="getNodeChannel" method="_yjdNhUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykokT9Ee2_n5XNBGdaxw">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUaE0UT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUaE0kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUaE00T9Ee2_n5XNBGdaxw" name="addFlow" method="_yjdNiET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUaE1ET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUaE1UT9Ee2_n5XNBGdaxw" name="isIntForNodeNames" method="_yjdNikT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUar4ET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUar4UT9Ee2_n5XNBGdaxw" name="isIntForFlowNames" method="_yjdNjET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUar4kT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUar40T9Ee2_n5XNBGdaxw" name="addNodeToFlow" method="_yjd0gET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUar5ET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUar5UT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUbS8ET9Ee2_n5XNBGdaxw" name="getFlowPriority" method="_yjd0g0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjyko0T9Ee2_n5XNBGdaxw">
                  <body>Iterates through the given flow to find the input node name. When found,&#xD;
   * gets the node's priority and returns it.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param nodeName&#xD;
   * @return priority (Integer value) of input node</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUbS8UT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUbS8kT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUbS80T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUbS9ET9Ee2_n5XNBGdaxw" name="setFlowPriority" method="_yjd0h0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykpET9Ee2_n5XNBGdaxw">
                  <body>Method to set a given flow name to a new passed in priority value.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUbS9UT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUbS9kT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUb6AET9Ee2_n5XNBGdaxw" name="setFlowPeriod" method="_yjd0ikT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUb6AUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUb6AkT9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUb6A0T9Ee2_n5XNBGdaxw" name="setFlowDeadline" method="_yjd0jUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUb6BET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUb6BUT9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUchEET9Ee2_n5XNBGdaxw" name="setFlowPhase" method="_yjd0kET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUchEUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUchEkT9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUchE0T9Ee2_n5XNBGdaxw" name="getFlowIndex" method="_yjd0k0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUchFET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUchFUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdIIET9Ee2_n5XNBGdaxw" name="getFlowPriority" method="_yjd0lkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUdIIUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUdIIkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdII0T9Ee2_n5XNBGdaxw" name="getFlowPeriod" method="_yjd0mUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUdIJET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUdIJUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdIJkT9Ee2_n5XNBGdaxw" name="getFlowDeadline" method="_yjd0nET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykpUT9Ee2_n5XNBGdaxw">
                  <body>Method to return the deadline value (Integer) of the flow name passed in.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return deadline Integer value of flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUdIJ0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUdIKET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdvMET9Ee2_n5XNBGdaxw" name="getFlowPhase" method="_yjd0n0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUdvMUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUdvMkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdvM0T9Ee2_n5XNBGdaxw" name="getFlowTxAttemptsPerLink" method="_yjebkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUdvNET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUdvNUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdvNkT9Ee2_n5XNBGdaxw" name="setFlowsInPriorityOrder" method="_yjebk0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUdvN0T9Ee2_n5XNBGdaxw" name="setFlowsInDMorder" method="_yjeblET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykpkT9Ee2_n5XNBGdaxw">
                  <body>This method creates a list of Flow objects from the FlowMap using the stream interface, sorts by a&#xD;
   * secondary key, then sorts by a primary key. Finally, it creates a new flowNamesInPriorityOrder that&#xD;
   * contains the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdvOET9Ee2_n5XNBGdaxw" name="setFlowsInRMorder" method="_yjeblUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykp0T9Ee2_n5XNBGdaxw">
                  <body>This setter method creates a list of Flow objects from the FlowMap using the stream interface,&#xD;
   * sorting by a secondary key and primary key. Then it creates a new flowNamesInPriorityOrder that contains &#xD;
   * the flow names in the requested order.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yUdvOUT9Ee2_n5XNBGdaxw" name="setFlowsInRealTimeHARTorder" method="_yjeblkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUeWQET9Ee2_n5XNBGdaxw" name="finalizeCurrentFlow" method="_yjebl0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUeWQUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUeWQkT9Ee2_n5XNBGdaxw" name="nextReleaseTime" method="_yjebmUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUeWQ0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUeWRET9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUeWRUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUeWRkT9Ee2_n5XNBGdaxw" name="nextAbsoluteDeadline" method="_yjebnUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUeWR0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUeWSET9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUeWSUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUe9UET9Ee2_n5XNBGdaxw" name="finalizeFlowWithE2eParameters" visibility="private" method="_yjeboUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUe9UUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUe9UkT9Ee2_n5XNBGdaxw" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_yjebo0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUe9U0T9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUe9VET9Ee2_n5XNBGdaxw" name="getNodeNamesOrderedAlphabetically" method="_yjfCoET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUfkYET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUfkYUT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUfkY0T9Ee2_n5XNBGdaxw" name="getFlow" visibility="private" method="_yjfCo0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUfkZET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygaggET9Ee2_n5XNBGdaxw" type="_ySk40ET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yUfkZUT9Ee2_n5XNBGdaxw" name="getFlowNames" method="_yjfCpkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUfkZkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUfkZ0T9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUgLcET9Ee2_n5XNBGdaxw" name="getNodeIndex" method="_yjfCqUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUgLcUT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUgLckT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUgLc0T9Ee2_n5XNBGdaxw" name="getNodesInFlow" method="_yjfCrET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjykqET9Ee2_n5XNBGdaxw">
                  <body>This method creates a String array of the node names from the input parameter flowName&#xD;
   * in the same order as they exist in the flow specification.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param flowName&#xD;
   * @return Array of String node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUgLdET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUgLdUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUgLdkT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUgLeET9Ee2_n5XNBGdaxw" name="getHyperPeriod" method="_yjfCsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUgygET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUgygUT9Ee2_n5XNBGdaxw" name="getTotalTxAttemptsInFlow" method="_yjfCskT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUgygkT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUgyg0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUgyhET9Ee2_n5XNBGdaxw" name="getNumTxAttemptsPerLink" method="_yjfCtUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUgyhUT9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yUgyhkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUgyh0T9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUhZkET9Ee2_n5XNBGdaxw" name="maxFlowLength" method="_yjfCvET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUhZkUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUhZkkT9Ee2_n5XNBGdaxw" name="main" isStatic="true" method="_yjfps0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUhZk0T9Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUhZlET9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygZSYET9Ee2_n5XNBGdaxw" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_yjebpUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygZSYUT9Ee2_n5XNBGdaxw" name="flow" type="_ySk40ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhxLYkT9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygaggUT9Ee2_n5XNBGdaxw" name="addEdge" method="_yjfCuUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygaggkT9Ee2_n5XNBGdaxw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygagg0T9Ee2_n5XNBGdaxw" name="edge" type="_ySc9AET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygaghET9Ee2_n5XNBGdaxw" name="parser" visibility="private" isStatic="true" method="_yjfpsET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygaghUT9Ee2_n5XNBGdaxw" name="wkldDesc" type="_ySagwET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygbHkET9Ee2_n5XNBGdaxw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yhvWMET9Ee2_n5XNBGdaxw" name="WorkLoad" visibility="package" method="_yjcmaET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhvWNET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhvWNUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjx9kkT9Ee2_n5XNBGdaxw">
                  <body>The first constructor calls the parent class to set up file information. m and e2e are then initialized.&#xD;
   * Then it creates the listener object, which will read the workLoad description and then build the node and &#xD;
   * flow objects that instantiates the workLoad.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhvWMUT9Ee2_n5XNBGdaxw" name="m" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhvWMkT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhvWM0T9Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhvWNkT9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhv9QET9Ee2_n5XNBGdaxw" name="WorkLoad" visibility="package" method="_yjcmbUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yhv9RUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yhwkUET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yjx9k0T9Ee2_n5XNBGdaxw">
                  <body>The second constructor is identical to the first with the exception of initializing the optional&#xD;
   * numFaults input parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhv9QUT9Ee2_n5XNBGdaxw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhv9QkT9Ee2_n5XNBGdaxw" name="m" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhv9Q0T9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhv9RET9Ee2_n5XNBGdaxw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhwkUUT9Ee2_n5XNBGdaxw" type="_yUWacET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhwkU0T9Ee2_n5XNBGdaxw" name="setMinPacketReceptionRate" method="_yjdNdkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9l0T9Ee2_n5XNBGdaxw">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhwkVET9Ee2_n5XNBGdaxw" name="minPacketReceptionRate" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhxLYET9Ee2_n5XNBGdaxw" name="setE2e" method="_yjdNfET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjx9mkT9Ee2_n5XNBGdaxw">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yhxLYUT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yhxycET9Ee2_n5XNBGdaxw" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_yjebqET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yhxycUT9Ee2_n5XNBGdaxw" name="flow" type="_ySk40ET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhxyckT9Ee2_n5XNBGdaxw" name="e2e" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhxyc0T9Ee2_n5XNBGdaxw" name="M" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yhxydET9Ee2_n5XNBGdaxw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yhyZgET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUmSEET9Ee2_n5XNBGdaxw" name="WarpDSL">
              <ownedComment xmi:id="_yjzLsET9Ee2_n5XNBGdaxw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yi2wgET9Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi2wgUT9Ee2_n5XNBGdaxw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi2wgkT9Ee2_n5XNBGdaxw" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi2wg0T9Ee2_n5XNBGdaxw" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi2whET9Ee2_n5XNBGdaxw" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi2whUT9Ee2_n5XNBGdaxw" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg31kT9Ee2_n5XNBGdaxw" name="getInstructionParameters" specification="_yUpVYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjg310T9Ee2_n5XNBGdaxw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjg32ET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUpVYET9Ee2_n5XNBGdaxw" name="getInstructionParameters" method="_yjg31kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yUpVYUT9Ee2_n5XNBGdaxw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yh0OsET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yUm5IET9Ee2_n5XNBGdaxw" name="InstructionParameters">
                <ownedAttribute xmi:id="_yi3XkET9Ee2_n5XNBGdaxw" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3XkUT9Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3XkkT9Ee2_n5XNBGdaxw" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3Xk0T9Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3XlET9Ee2_n5XNBGdaxw" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3XlUT9Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3XlkT9Ee2_n5XNBGdaxw" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3Xl0T9Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3XmET9Ee2_n5XNBGdaxw" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3XmUT9Ee2_n5XNBGdaxw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3XmkT9Ee2_n5XNBGdaxw" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3Xm0T9Ee2_n5XNBGdaxw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3-oUT9Ee2_n5XNBGdaxw" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi3-okT9Ee2_n5XNBGdaxw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjgQwET9Ee2_n5XNBGdaxw" name="getCoordinator" specification="_yUm5IUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjgQwUT9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjgQwkT9Ee2_n5XNBGdaxw" name="setCoordinator" specification="_yUngMUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjgQw0T9Ee2_n5XNBGdaxw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjgQxET9Ee2_n5XNBGdaxw" name="setName" specification="_yUngM0T9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjgQxUT9Ee2_n5XNBGdaxw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjgQxkT9Ee2_n5XNBGdaxw" name="setFlow" specification="_yUngNUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjgQx0T9Ee2_n5XNBGdaxw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjgQyET9Ee2_n5XNBGdaxw" name="setSrc" specification="_yUoHQET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjgQyUT9Ee2_n5XNBGdaxw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg30ET9Ee2_n5XNBGdaxw" name="setSnk" specification="_yUoHQkT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg30UT9Ee2_n5XNBGdaxw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg30kT9Ee2_n5XNBGdaxw" name="setChannel" specification="_yUoHRET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg300T9Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg31ET9Ee2_n5XNBGdaxw" name="unused" specification="_yUoHRkT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg31UT9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yUm5IUT9Ee2_n5XNBGdaxw" name="getCoordinator" method="_yjgQwET9Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_yjzLsUT9Ee2_n5XNBGdaxw">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yUngMET9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUngMUT9Ee2_n5XNBGdaxw" name="setCoordinator" method="_yjgQwkT9Ee2_n5XNBGdaxw">
                  <ownedComment xmi:id="_yjzLskT9Ee2_n5XNBGdaxw">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yUngMkT9Ee2_n5XNBGdaxw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUngM0T9Ee2_n5XNBGdaxw" name="setName" visibility="private" method="_yjgQxET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yUngNET9Ee2_n5XNBGdaxw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUngNUT9Ee2_n5XNBGdaxw" name="setFlow" visibility="private" method="_yjgQxkT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yUngNkT9Ee2_n5XNBGdaxw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUoHQET9Ee2_n5XNBGdaxw" name="setSrc" visibility="private" method="_yjgQyET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yUoHQUT9Ee2_n5XNBGdaxw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUoHQkT9Ee2_n5XNBGdaxw" name="setSnk" visibility="private" method="_yjg30ET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yUoHQ0T9Ee2_n5XNBGdaxw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUoHRET9Ee2_n5XNBGdaxw" name="setChannel" visibility="private" method="_yjg30kT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yUoHRUT9Ee2_n5XNBGdaxw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yUoHRkT9Ee2_n5XNBGdaxw" name="unused" method="_yjg31ET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yUouUET9Ee2_n5XNBGdaxw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yUp8cET9Ee2_n5XNBGdaxw" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_yh01wUT9Ee2_n5XNBGdaxw" general="_yh0OsUT9Ee2_n5XNBGdaxw"/>
                <ownedAttribute xmi:id="_yi3-o0T9Ee2_n5XNBGdaxw" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yi3-pUT9Ee2_n5XNBGdaxw" name="instructionParametersArrayList" visibility="package" type="_yeRygET9Ee2_n5XNBGdaxw" association="_ykehJET9Ee2_n5XNBGdaxw"/>
                <ownedAttribute xmi:id="_yi4lskT9Ee2_n5XNBGdaxw" name="instructionParameters" visibility="package" type="_yUm5IET9Ee2_n5XNBGdaxw" association="_ykfIMUT9Ee2_n5XNBGdaxw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg32UT9Ee2_n5XNBGdaxw" name="ListenerDsl" specification="_yUp8cUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg32kT9Ee2_n5XNBGdaxw" type="_yUp8cET9Ee2_n5XNBGdaxw" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg320T9Ee2_n5XNBGdaxw" name="getInstructionParameters" specification="_yUp8dUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg33ET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg33UT9Ee2_n5XNBGdaxw" name="enterAction" specification="_ygfZAUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg33kT9Ee2_n5XNBGdaxw" name="ctx" type="_ygex8ET9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg330T9Ee2_n5XNBGdaxw" name="exitAction" specification="_yggAE0T9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg34ET9Ee2_n5XNBGdaxw" name="ctx" type="_ygex8ET9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjg34UT9Ee2_n5XNBGdaxw" name="exitFlowName" specification="_yggnJET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjg34kT9Ee2_n5XNBGdaxw" name="ctx" type="_yggnIkT9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjhe4ET9Ee2_n5XNBGdaxw" name="exitCmd" specification="_yghONUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjhe4UT9Ee2_n5XNBGdaxw" name="ctx" type="_yghOM0T9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjhe4kT9Ee2_n5XNBGdaxw" name="exitSrcNode" specification="_ygicUUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjhe40T9Ee2_n5XNBGdaxw" name="ctx" type="_ygh1Q0T9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjhe5ET9Ee2_n5XNBGdaxw" name="exitSnkNode" specification="_ygjDYUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjhe5UT9Ee2_n5XNBGdaxw" name="ctx" type="_ygicVkT9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjhe5kT9Ee2_n5XNBGdaxw" name="exitChannel" specification="_ygjqcUT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yjhe50T9Ee2_n5XNBGdaxw" name="ctx" type="_ygjDZkT9Ee2_n5XNBGdaxw"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yUp8cUT9Ee2_n5XNBGdaxw" name="ListenerDsl" visibility="package" method="_yjg32UT9Ee2_n5XNBGdaxw">
                  <eAnnotations xmi:id="_yUp8ckT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yUp8c0T9Ee2_n5XNBGdaxw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yUp8dET9Ee2_n5XNBGdaxw" type="_yUp8cET9Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yUp8dUT9Ee2_n5XNBGdaxw" name="getInstructionParameters" method="_yjg320T9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yh01wET9Ee2_n5XNBGdaxw" type="_yeRygET9Ee2_n5XNBGdaxw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ygfZAUT9Ee2_n5XNBGdaxw" name="enterAction" method="_yjg33UT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_ygfZAkT9Ee2_n5XNBGdaxw" name="ctx" type="_ygex8ET9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yggAE0T9Ee2_n5XNBGdaxw" name="exitAction" method="_yjg330T9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yggAFET9Ee2_n5XNBGdaxw" name="ctx" type="_ygex8ET9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yggnJET9Ee2_n5XNBGdaxw" name="exitFlowName" method="_yjg34UT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yggnJUT9Ee2_n5XNBGdaxw" name="ctx" type="_yggnIkT9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yghONUT9Ee2_n5XNBGdaxw" name="exitCmd" method="_yjhe4ET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_yghONkT9Ee2_n5XNBGdaxw" name="ctx" type="_yghOM0T9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ygicUUT9Ee2_n5XNBGdaxw" name="exitSrcNode" method="_yjhe4kT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_ygicUkT9Ee2_n5XNBGdaxw" name="ctx" type="_ygh1Q0T9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ygjDYUT9Ee2_n5XNBGdaxw" name="exitSnkNode" method="_yjhe5ET9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_ygjDYkT9Ee2_n5XNBGdaxw" name="ctx" type="_ygicVkT9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ygjqcUT9Ee2_n5XNBGdaxw" name="exitChannel" method="_yjhe5kT9Ee2_n5XNBGdaxw">
                  <ownedParameter xmi:id="_ygjqckT9Ee2_n5XNBGdaxw" name="ctx" type="_ygjDZkT9Ee2_n5XNBGdaxw"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUs_wET9Ee2_n5XNBGdaxw" name="Warp">
              <ownedComment xmi:id="_yjzywET9Ee2_n5XNBGdaxw">
                <body>&lt;h1>This is the main Java class for the Warp project.&lt;/h1>&#xD;
&lt;p>Takes an input file and creates either a WorkLoad or WarpInterface to process the file based&#xD;
on the arguments given on runtime. Outputs a file with visualization.&lt;/p>&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_yi5MwET9Ee2_n5XNBGdaxw" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi5MwUT9Ee2_n5XNBGdaxw" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5MwkT9Ee2_n5XNBGdaxw" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_yhb0MET9Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi5Mw0T9Ee2_n5XNBGdaxw" value="1.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5MxET9Ee2_n5XNBGdaxw" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_yhb0MET9Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi5MxUT9Ee2_n5XNBGdaxw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5MxkT9Ee2_n5XNBGdaxw" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi5Mx0T9Ee2_n5XNBGdaxw" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5MyET9Ee2_n5XNBGdaxw" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_yT35UET9Ee2_n5XNBGdaxw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi5z0ET9Ee2_n5XNBGdaxw" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5z0UT9Ee2_n5XNBGdaxw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi5z0kT9Ee2_n5XNBGdaxw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5z00T9Ee2_n5XNBGdaxw" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi5z1UT9Ee2_n5XNBGdaxw" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi6a4ET9Ee2_n5XNBGdaxw" name="minLQ" visibility="private" isStatic="true" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yi6a4kT9Ee2_n5XNBGdaxw" name="e2e" visibility="private" isStatic="true" type="_yhb0MET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yi6a5ET9Ee2_n5XNBGdaxw" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi6a5kT9Ee2_n5XNBGdaxw" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7B8UT9Ee2_n5XNBGdaxw" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7B80T9Ee2_n5XNBGdaxw" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7B9UT9Ee2_n5XNBGdaxw" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7pAET9Ee2_n5XNBGdaxw" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7pAkT9Ee2_n5XNBGdaxw" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7pBET9Ee2_n5XNBGdaxw" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi7pBkT9Ee2_n5XNBGdaxw" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi8QEET9Ee2_n5XNBGdaxw" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi8QEUT9Ee2_n5XNBGdaxw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi8QE0T9Ee2_n5XNBGdaxw" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi8QFUT9Ee2_n5XNBGdaxw" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi8QF0T9Ee2_n5XNBGdaxw" name="schedulerSelected" visibility="private" isStatic="true" type="_yT35UET9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjiF8ET9Ee2_n5XNBGdaxw" name="main" specification="_yUuN4ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjiF8UT9Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjiF8kT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjiF80T9Ee2_n5XNBGdaxw" name="visualize" specification="_ygmtwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjiF9ET9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjiF9UT9Ee2_n5XNBGdaxw" name="choice" type="_yT8KyET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjiF9kT9Ee2_n5XNBGdaxw" name="visualize" specification="_ygnU0UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjiF90T9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjiF-ET9Ee2_n5XNBGdaxw" name="choice" type="_yT7jsUT9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjiF-UT9Ee2_n5XNBGdaxw" name="verifyPerformanceRequirements" specification="_ygnU1ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjiF-kT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjiF-0T9Ee2_n5XNBGdaxw" name="verifyReliabilities" specification="_ygn74ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjiF_ET9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjiF_UT9Ee2_n5XNBGdaxw" name="verifyDeadlines" specification="_ygn74kT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjiF_kT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjitAET9Ee2_n5XNBGdaxw" name="verifyNoChannelConflicts" specification="_ygn75ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjitAUT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjitAkT9Ee2_n5XNBGdaxw" name="setWarpParameters" specification="_yUu08UT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjitA0T9Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yjitBET9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjitBUT9Ee2_n5XNBGdaxw" name="printWarpParameters" specification="_yUvcAUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUuN4ET9Ee2_n5XNBGdaxw" name="main" isStatic="true" method="_yjiF8ET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzywUT9Ee2_n5XNBGdaxw">
                  <body>The main method of Warp.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments passed in at runtime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUuN4UT9Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUuN4kT9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUu08UT9Ee2_n5XNBGdaxw" name="setWarpParameters" visibility="private" isStatic="true" method="_yjitAkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyyET9Ee2_n5XNBGdaxw">
                  <body>Sets the class variables based on the arguments given at runtime.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param args Arguments from the main method</body>
                </ownedComment>
                <ownedParameter xmi:id="_yUu08kT9Ee2_n5XNBGdaxw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yUvcAET9Ee2_n5XNBGdaxw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yUvcAUT9Ee2_n5XNBGdaxw" name="printWarpParameters" visibility="private" isStatic="true" method="_yjitBUT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyyUT9Ee2_n5XNBGdaxw">
                  <body>Prints all system configuration parameters to the screen.&#xD;
   * &#xD;
   * @author sgoddard</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ygmtwET9Ee2_n5XNBGdaxw" name="visualize" visibility="private" isStatic="true" method="_yjiF80T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzywkT9Ee2_n5XNBGdaxw">
                  <body>Outputs a file with a visual representation of the WorkLoad based on the choice parameter.&lt;br>&#xD;
   * If verbose mode is enabled it will also print the results to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param workLoad The WorkLoad to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off WorkLoadChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygmtwUT9Ee2_n5XNBGdaxw" name="workLoad" type="_yUWacET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygnU0ET9Ee2_n5XNBGdaxw" name="choice" type="_yT8KyET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygnU0UT9Ee2_n5XNBGdaxw" name="visualize" visibility="private" isStatic="true" method="_yjiF9kT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyw0T9Ee2_n5XNBGdaxw">
                  <body>Outputs a file with visual representation of the WarpInterface based on the choice parameter.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to be visualized&#xD;
   * @param choice Determines how the visualization will be created based off SystemChoices enum</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygnU0kT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygnU00T9Ee2_n5XNBGdaxw" name="choice" type="_yT7jsUT9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygnU1ET9Ee2_n5XNBGdaxw" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_yjiF-UT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyxET9Ee2_n5XNBGdaxw">
                  <body>Verifies the Deadlines, Reliabilities, and Channel Conflicts with their respective method calls.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygnU1UT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygn74ET9Ee2_n5XNBGdaxw" name="verifyReliabilities" visibility="private" isStatic="true" method="_yjiF-0T9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyxUT9Ee2_n5XNBGdaxw">
                  <body>Verifies that the WarpInterface reliabilities are met. If the WarpInterface fails to meet the reliabilities&#xD;
   * a system error will be printed out.&lt;br>&#xD;
   * If verbose mode is enabled and reliabilities are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygn74UT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygn74kT9Ee2_n5XNBGdaxw" name="verifyDeadlines" visibility="private" isStatic="true" method="_yjiF_UT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyxkT9Ee2_n5XNBGdaxw">
                  <body>Verifies that the WarpInterface meets all deadlines. If the WarpInterface fails to meet the deadlines&#xD;
   * a system error will be printed out as well as a visualization of the WarpInterface based on the&#xD;
   * DEADLINE_REPORT of SystemChoices enum.&lt;br>&#xD;
   * If verbose is enabled and deadlines are met verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to verify</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygn740T9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygn75ET9Ee2_n5XNBGdaxw" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_yjitAET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yjzyx0T9Ee2_n5XNBGdaxw">
                  <body>Verifies that the WarpInterface has no channel conflicts. If there is a channel conflict a system error&#xD;
   * will be printed to the screen along with a visualization of the WarpInterface based on CHANNEL of SystemChoice enum.&lt;br>&#xD;
   * If verbose mode is enabled and there are no channel conflicts verification will be printed to the screen.&#xD;
   * &#xD;
   * @author sgoddard&#xD;
   * @param warp The WarpInterface to check for channel conflicts</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygn75UT9Ee2_n5XNBGdaxw" name="warp" type="_yUI_EET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yUxRMET9Ee2_n5XNBGdaxw" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjitBkT9Ee2_n5XNBGdaxw" name="testSetFlowsInDMorder_StressTest" specification="_yUx4QET9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInDMorder&#xD;
		wkld.setFlowsInDMorder();&#xD;
		ArrayList&lt;String> DMorder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of DM order flow array&#xD;
		int DMorderLength = DMorder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, DMorderLength, &quot;Length after setting flows in DM Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the DM order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (DMorder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;Number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, DMorder, &quot;Check if setting in DM order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjitB0T9Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_NotEmpty" specification="_yUyfUUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if getter retrieved the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjitCET9Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_Empty" specification="_yUyfVUT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list and set flowNamesInPriorityOrder with it&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInPriorityOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInPriorityOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if getter retrieved the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUEET9Ee2_n5XNBGdaxw" name="testGetNodeChannel_ValidNode" specification="_yUzGY0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//The expected value of the node channel before setting to anything should be zero&#xD;
		int actualWithoutSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(0, actualWithoutSet, &quot;Node channel prior to setting:&quot;);&#xD;
		&#xD;
		//check to see if getter retrieves correct new value after setting&#xD;
		wkld.setNodeChannel(&quot;A&quot;, 44);&#xD;
		int actualWithSet = wkld.getNodeChannel(&quot;A&quot;);&#xD;
		assertEquals(44, actualWithSet, &quot;Node channel after setting:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUEUT9Ee2_n5XNBGdaxw" name="testGetNodeChannel_InvalidNode" specification="_yUzGZ0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>assertThrows(NullPointerException.class,&#xD;
	            ()->{&#xD;
	            	WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
	            	//if given an input that isn't a valid node, should throw NullPointerException&#xD;
	            	wkld.getNodeChannel(&quot;&quot;);&#xD;
	            });&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUEkT9Ee2_n5XNBGdaxw" name="testGetNodesInFlow_ValidFlow" specification="_yUztc0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with a correct flow name&#xD;
		String[] actual = wkld.getNodesInFlow(&quot;F9&quot;);&#xD;
		String actualWithCorrectInput = Arrays.toString(actual);&#xD;
		//hard code of the expected string&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		//Test to see if we got the node names in the same order as they exist in the flow specification&#xD;
		assertEquals(expected, actualWithCorrectInput, &quot;Order of nodes of flow F9 in StressTest.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUE0T9Ee2_n5XNBGdaxw" name="testGetNodesInFlow_InvalidFlow" specification="_yUztd0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//example case of getNodesInFlow with incorrect flow name&#xD;
		String[] actual2 = wkld.getNodesInFlow(&quot;test&quot;);&#xD;
		String actualWithIncorrectInput = Arrays.toString(actual2);&#xD;
		//hard code of the expected string&#xD;
		String expectedEmpty = &quot;[]&quot;;&#xD;
		//Test to see if we correctly went to the else case in getNodesInFlow&#xD;
		assertEquals(expectedEmpty, actualWithIncorrectInput, &quot;Check if using a non-valid flow name correctly returns empty array:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUFET9Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_NotEmpty" specification="_yU0Ug0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create a test array list for setFlowNamesInOriginalOrder. Test array list is arbitrary&#xD;
		ArrayList&lt;String> expectedNotEmpty = new ArrayList&lt;String>(Arrays.asList(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;test&quot;, &quot;.&quot;));&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedNotEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualNotEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from setter method are equal&#xD;
		assertEquals(expectedNotEmpty, actualNotEmpty, &quot;Check if setter created the proper Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUFUT9Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_Empty" specification="_yU07kkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//Create an empty array list for setFlowNamesInOriginalOrder&#xD;
		ArrayList&lt;String> expectedEmpty = new ArrayList&lt;>();&#xD;
		wkld.setFlowNamesInOriginalOrder(expectedEmpty);&#xD;
		//instantiation of actual array list using the proper getter method&#xD;
		ArrayList&lt;String> actualEmpty = wkld.getFlowNamesInOriginalOrder();&#xD;
		//check if the expected array list and array list created from getter method are equal&#xD;
		assertEquals(expectedEmpty, actualEmpty, &quot;Check if setter created the empty Array List:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUFkT9Ee2_n5XNBGdaxw" name="testSetFlowsInPriorityOrder" specification="_yU07lkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		&#xD;
		//create ArrayList of flows in their original order&#xD;
		ArrayList&lt;String> origOrder = wkld.getFlowNamesInOriginalOrder();&#xD;
		//create ArrayList of flows after calling setFlowsInPriorityorder&#xD;
		wkld.setFlowsInPriorityOrder();&#xD;
		ArrayList&lt;String> priorityOrder = wkld.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		//find length of original order flow array&#xD;
		int origOrderLength = origOrder.size();&#xD;
		//find length of priority order flow array&#xD;
		int priorityOrderLength = priorityOrder.size();&#xD;
		//check to see if the two lengths are equivalent after method call&#xD;
		assertEquals(origOrderLength, priorityOrderLength, &quot;length after setting flows in Priority Order:&quot;);&#xD;
		&#xD;
		//create a counter and loop to check if every element in the original array list is in the priority order array list&#xD;
		int containsCntr = 0;&#xD;
		for (String flowName : origOrder) {&#xD;
			if (priorityOrder.contains(flowName)) &#xD;
				containsCntr++;&#xD;
		}&#xD;
		//check to see if the counter matches the length of the original array list&#xD;
		assertEquals(origOrderLength, containsCntr, &quot;number of equivalent flows:&quot;);&#xD;
		&#xD;
		//hard code of the expected array after sorting in DM order&#xD;
		ArrayList&lt;String> expectedOrder = &#xD;
				new ArrayList&lt;String>(Arrays.asList(&quot;F1&quot;,&quot;AF1&quot;,&quot;F2&quot;,&quot;AF2&quot;,&quot;F3&quot;,&quot;F4&quot;,&quot;AF4&quot;,&quot;F5&quot;,&quot;AF5&quot;,&quot;F6&quot;,&quot;F7&quot;,&quot;F8&quot;,&quot;F9&quot;,&quot;F10&quot;,&quot;AF10&quot;));&#xD;
		//check if setFlowsInDMorder sorted in the expected order&#xD;
		assertEquals(expectedOrder, priorityOrder, &quot;Check if setting in Priority order matches the expected array list:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUF0T9Ee2_n5XNBGdaxw" name="testGetMinPeriod_Unique" specification="_yU1iokT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected minimum period in StreesTest.txt is 20&#xD;
		int testPeriod = wkld.getMinPeriod();&#xD;
		assertEquals(20, testPeriod, &quot;Minimum period gotten from StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUGET9Ee2_n5XNBGdaxw" name="testGetMinPeriod_Default" specification="_yU1ipkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default period which is 100&#xD;
		int testPeriodDefault = wkld2.getMinPeriod();&#xD;
		assertEquals(100, testPeriodDefault, &quot;Minimum period gotten from Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUGUT9Ee2_n5XNBGdaxw" name="testMaxFlowLength_StressTest" specification="_yU2Js0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		int actual = wkld.maxFlowLength();&#xD;
		assertEquals(8, actual, &quot;Max flow length for StressTest.txt&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUGkT9Ee2_n5XNBGdaxw" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" specification="_yU2Jt0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(5, actual2, &quot;Max flow length for WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUG0T9Ee2_n5XNBGdaxw" name="testMaxFlowLength_LongChain" specification="_yU2ww0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		int actual2 = wkld2.maxFlowLength();&#xD;
		assertEquals(26, actual2, &quot;Max flow length for LongChain.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUHET9Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Unique" specification="_yU2wx0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//The expected deadline of flow F9 in StressTest.txt is 100&#xD;
		int testDeadline = wkld.getFlowDeadline(&quot;F9&quot;);&#xD;
		assertEquals(100, testDeadline, &quot;deadline gotten for flow F9 in StressTest.txt:&quot;);&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjjUHUT9Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Default" specification="_yU3X00T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;Example.txt&quot;);&#xD;
		//This is a check for the default deadline which is 100&#xD;
		int testDeadlineDefault = wkld2.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(100, testDeadlineDefault, &quot;deadline gotten for flow F0 in Example.txt:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7IET9Ee2_n5XNBGdaxw" name="testGetFlowDeadline_InvalidInput" specification="_yU3X10T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		//Test the &quot;Bad situation&quot; where the flow name given does not exist&#xD;
		//Should give the default of 100&#xD;
		int testDeadlineFlowNameDNE = wkld3.getFlowDeadline(&quot;&quot;);&#xD;
		assertEquals(100, testDeadlineFlowNameDNE, &quot;check for a flow name that does not exist:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7IUT9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" specification="_yU3-40T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld1 = new WorkLoad(1, 0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
		String[] alphaOrder1 = wkld1.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual1 = Arrays.toString(alphaOrder1); &#xD;
		String expected1 = &quot;[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, Y]&quot;;&#xD;
		assertEquals(expected1, alphaOrderActual1, &quot;check if the node names in StressTest.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7IkT9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" specification="_yU4l8kT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld2 = new WorkLoad(1, 0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
		String[] alphaOrder2 = wkld2.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual2 = Arrays.toString(alphaOrder2);&#xD;
		String expected2 = &quot;[A, B, C, D, E, F, G, H, I, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, a]&quot;;&#xD;
		assertEquals(expected2, alphaOrderActual2, &quot;check if the node names in LongChain.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7I0T9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" specification="_yU4l9kT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld3 = new WorkLoad(1, 0.9, 0.99, &quot;WARP_MIX_Schedule0-WarpInput.txt&quot;);&#xD;
		String[] alphaOrder3 = wkld3.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual3 = Arrays.toString(alphaOrder3);&#xD;
		String expected3 = &quot;[0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, &quot;&#xD;
				+ &quot;38, 40, 41, 42, 48, 52, 53, 54, 55, 56, 58, 59, 64, 66, 68, 71, 72, 73, 74, 76, 80, 82, 83, 84]&quot;;&#xD;
		assertEquals(expected3, alphaOrderActual3, &#xD;
				&quot;check if the node names in WARP_MIX_Schedule0-WarpInput.txt were ordered alphabetically (numerically):&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7JET9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" specification="_yU5NAkT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>WorkLoad wkld4 = new WorkLoad(1, 0.9, 0.99, &quot;SeeSpray.txt&quot;);&#xD;
		String[] alphaOrder4 = wkld4.getNodeNamesOrderedAlphabetically();&#xD;
		String alphaOrderActual4 = Arrays.toString(alphaOrder4);&#xD;
		String expected4 = &quot;[B1, B2, B3, B4, B5, B6, B7, B8, C1, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C2, C20, C21, &quot;&#xD;
				+ &quot;C22, C23, C24, C25, C26, C27, C28, C29, C3, C30, C4, C5, C6, C7, C8, C9]&quot;;&#xD;
		assertEquals(expected4, alphaOrderActual4, &quot;check if the node names in SeeSpray.txt were ordered alphabetically:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yUx4QET9Ee2_n5XNBGdaxw" name="testSetFlowsInDMorder_StressTest" visibility="package" method="_yjitBkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUyfUUT9Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_NotEmpty" visibility="package" method="_yjitB0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUyfVUT9Ee2_n5XNBGdaxw" name="testGetFlowNamesInPriorityOrder_Empty" visibility="package" method="_yjitCET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUzGY0T9Ee2_n5XNBGdaxw" name="testGetNodeChannel_ValidNode" visibility="package" method="_yjjUEET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUzGZ0T9Ee2_n5XNBGdaxw" name="testGetNodeChannel_InvalidNode" method="_yjjUEUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUztc0T9Ee2_n5XNBGdaxw" name="testGetNodesInFlow_ValidFlow" visibility="package" method="_yjjUEkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yUztd0T9Ee2_n5XNBGdaxw" name="testGetNodesInFlow_InvalidFlow" visibility="package" method="_yjjUE0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU0Ug0T9Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_NotEmpty" visibility="package" method="_yjjUFET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU07kkT9Ee2_n5XNBGdaxw" name="testSetFlowNamesInOriginalOrder_Empty" visibility="package" method="_yjjUFUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU07lkT9Ee2_n5XNBGdaxw" name="testSetFlowsInPriorityOrder" visibility="package" method="_yjjUFkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU1iokT9Ee2_n5XNBGdaxw" name="testGetMinPeriod_Unique" visibility="package" method="_yjjUF0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU1ipkT9Ee2_n5XNBGdaxw" name="testGetMinPeriod_Default" visibility="package" method="_yjjUGET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU2Js0T9Ee2_n5XNBGdaxw" name="testMaxFlowLength_StressTest" visibility="package" method="_yjjUGUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU2Jt0T9Ee2_n5XNBGdaxw" name="testMaxFlowLength_WARPMIXSchedule0WarpInput" visibility="package" method="_yjjUGkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU2ww0T9Ee2_n5XNBGdaxw" name="testMaxFlowLength_LongChain" visibility="package" method="_yjjUG0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU2wx0T9Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Unique" visibility="package" method="_yjjUHET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU3X00T9Ee2_n5XNBGdaxw" name="testGetFlowDeadline_Default" visibility="package" method="_yjjUHUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU3X10T9Ee2_n5XNBGdaxw" name="testGetFlowDeadline_InvalidInput" visibility="package" method="_yjj7IET9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU3-40T9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllUpperCase" visibility="package" method="_yjj7IUT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU4l8kT9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_UpperAndLowerCase" visibility="package" method="_yjj7IkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU4l9kT9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_AllNumbers" visibility="package" method="_yjj7I0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU5NAkT9Ee2_n5XNBGdaxw" name="testGetNodeNamesOrderedAlphabetically_LettersAndNumbers" visibility="package" method="_yjj7JET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yU50EET9Ee2_n5XNBGdaxw" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_yi83IUT9Ee2_n5XNBGdaxw" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi83IkT9Ee2_n5XNBGdaxw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi83I0T9Ee2_n5XNBGdaxw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi83JET9Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi83JUT9Ee2_n5XNBGdaxw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi9eMET9Ee2_n5XNBGdaxw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi9eMUT9Ee2_n5XNBGdaxw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi9eMkT9Ee2_n5XNBGdaxw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi9eM0T9Ee2_n5XNBGdaxw" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi9eNET9Ee2_n5XNBGdaxw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi9eNUT9Ee2_n5XNBGdaxw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi9eN0T9Ee2_n5XNBGdaxw" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi9eOET9Ee2_n5XNBGdaxw" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi9eOUT9Ee2_n5XNBGdaxw" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi-FQET9Ee2_n5XNBGdaxw" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi-FQkT9Ee2_n5XNBGdaxw" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi-FRET9Ee2_n5XNBGdaxw" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi-FRkT9Ee2_n5XNBGdaxw" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi-sUET9Ee2_n5XNBGdaxw" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yi-sUUT9Ee2_n5XNBGdaxw" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yi-sUkT9Ee2_n5XNBGdaxw" name="predecessor" type="_yU50EET9Ee2_n5XNBGdaxw" association="_yj0Z0ET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yi-sU0T9Ee2_n5XNBGdaxw" name="endTimes" visibility="private" type="_yTiiI0T9Ee2_n5XNBGdaxw" association="_ykfINET9Ee2_n5XNBGdaxw"/>
              <ownedAttribute xmi:id="_yi_TYET9Ee2_n5XNBGdaxw" name="subObjects" type="_ygqYIkT9Ee2_n5XNBGdaxw" isReadOnly="true" association="_ykfIN0T9Ee2_n5XNBGdaxw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7JUT9Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_yU7CMET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjj7JkT9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7J0T9Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_ygq_MET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjj7KET9Ee2_n5XNBGdaxw" name="obj" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjj7KUT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjj7KkT9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjj7K0T9Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_yU7pQET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjj7LET9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjj7LUT9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjj7LkT9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjj7L0T9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjj7MET9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiMET9Ee2_n5XNBGdaxw" name="SchedulableObject" specification="_yU7pSET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjkiMUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjkiMkT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjkiM0T9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjkiNET9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjkiNUT9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjkiNkT9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiN0T9Ee2_n5XNBGdaxw" name="setDefaultParameters" specification="_yU8QV0T9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiOET9Ee2_n5XNBGdaxw" name="getAllEndTimes" specification="_yU8QWET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjkiOUT9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiOkT9Ee2_n5XNBGdaxw" name="addToEndTimes" specification="_yU83YUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjkiO0T9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiPET9Ee2_n5XNBGdaxw" name="peekEndTimes" specification="_yU9ecET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjkiPUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiPkT9Ee2_n5XNBGdaxw" name="pollEndTimes" specification="_yU9eckT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkiP0T9Ee2_n5XNBGdaxw" name="addSubObject" specification="_ygrmQUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjkiQET9Ee2_n5XNBGdaxw" name="obj" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJQET9Ee2_n5XNBGdaxw" name="getName" specification="_yU9ec0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJQUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJQkT9Ee2_n5XNBGdaxw" name="setName" specification="_yU9edUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJQ0T9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJRET9Ee2_n5XNBGdaxw" name="getReleaseTime" specification="_yU-FgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJRUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJRkT9Ee2_n5XNBGdaxw" name="getPhase" specification="_yU-FgkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJR0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJSET9Ee2_n5XNBGdaxw" name="getStartTime" specification="_yU-FhET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJSUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJSkT9Ee2_n5XNBGdaxw" name="setEndTime" specification="_yU-skET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJS0T9Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlJTET9Ee2_n5XNBGdaxw" name="setStartTime" specification="_yU-skkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlJTUT9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwUET9Ee2_n5XNBGdaxw" name="setReleaseTime" specification="_yU-slET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwUUT9Ee2_n5XNBGdaxw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwUkT9Ee2_n5XNBGdaxw" name="setPeriod" specification="_yU_ToET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwU0T9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwVET9Ee2_n5XNBGdaxw" name="setPhase" specification="_yU_TokT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwVUT9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwVkT9Ee2_n5XNBGdaxw" name="setNextReleaseTime" specification="_yU_TpET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwV0T9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwWET9Ee2_n5XNBGdaxw" name="maxPhaseComparison" specification="_ygrmQ0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwWUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjlwWkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwW0T9Ee2_n5XNBGdaxw" name="maxPhaseComparison" specification="_ygsNUET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwXET9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjlwXUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjlwXkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjlwX0T9Ee2_n5XNBGdaxw" name="deadlineComparison" specification="_ygsNVET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjlwYET9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjlwYUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXYET9Ee2_n5XNBGdaxw" name="deadlineComparison" specification="_ygs0YET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXYUT9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXYkT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXY0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXZET9Ee2_n5XNBGdaxw" name="periodComparison" specification="_ygs0ZET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXZUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXZkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXZ0T9Ee2_n5XNBGdaxw" name="periodComparison" specification="_ygs0Z0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXaET9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXaUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXakT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXa0T9Ee2_n5XNBGdaxw" name="priorityComparison" specification="_ygtbcUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXbET9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXbUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXbkT9Ee2_n5XNBGdaxw" name="priorityComparison" specification="_ygtbdET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXb0T9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXcET9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXcUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXckT9Ee2_n5XNBGdaxw" name="releaseTimeComparison" specification="_yguCgET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXc0T9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXdET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXdUT9Ee2_n5XNBGdaxw" name="releaseTimeComparison" specification="_yguCg0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXdkT9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXd0T9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXeET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjmXeUT9Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" specification="_ygupkET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjmXekT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjmXe0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjm-cET9Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" specification="_ygupk0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjm-cUT9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjm-ckT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yjm-c0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjm-dET9Ee2_n5XNBGdaxw" name="compareAscendingOrder" specification="_yVAhwET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjm-dUT9Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjm-dkT9Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjm-d0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjm-eET9Ee2_n5XNBGdaxw" name="compareDescendingOrder" specification="_yVAhxET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjm-eUT9Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjm-ekT9Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yjm-e0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjm-fET9Ee2_n5XNBGdaxw" name="print" specification="_yVBI0ET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yjm-fUT9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjm-fkT9Ee2_n5XNBGdaxw" name="print" specification="_yVBI0kT9Ee2_n5XNBGdaxw">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yU7CMET9Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_yjj7JUT9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yU7CMUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yU7CMkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yU7CM0T9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yU7pQET9Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_yjj7K0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yU7pRUT9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yU7pRkT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yU7pQUT9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7pQkT9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7pQ0T9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7pRET9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU7pR0T9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yU7pSET9Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_yjkiMET9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_yU8QVET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yU8QVUT9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yU7pSUT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU8QUET9Ee2_n5XNBGdaxw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU8QUUT9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU8QUkT9Ee2_n5XNBGdaxw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU8QU0T9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yU8QVkT9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yU8QV0T9Ee2_n5XNBGdaxw" name="setDefaultParameters" visibility="private" method="_yjkiN0T9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU8QWET9Ee2_n5XNBGdaxw" name="getAllEndTimes" method="_yjkiOET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj0Z00T9Ee2_n5XNBGdaxw">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygrmQET9Ee2_n5XNBGdaxw" type="_yTiiI0T9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yU83YUT9Ee2_n5XNBGdaxw" name="addToEndTimes" method="_yjkiOkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yU83YkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU9ecET9Ee2_n5XNBGdaxw" name="peekEndTimes" method="_yjkiPET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yU9ecUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU9eckT9Ee2_n5XNBGdaxw" name="pollEndTimes" method="_yjkiPkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_yU9ec0T9Ee2_n5XNBGdaxw" name="getName" method="_yjlJQET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj0Z1ET9Ee2_n5XNBGdaxw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU9edET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU9edUT9Ee2_n5XNBGdaxw" name="setName" method="_yjlJQkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj0Z1UT9Ee2_n5XNBGdaxw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU9edkT9Ee2_n5XNBGdaxw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU-FgET9Ee2_n5XNBGdaxw" name="getReleaseTime" method="_yjlJRET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj0Z1kT9Ee2_n5XNBGdaxw">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU-FgUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU-FgkT9Ee2_n5XNBGdaxw" name="getPhase" method="_yjlJRkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj0Z10T9Ee2_n5XNBGdaxw">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU-Fg0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU-FhET9Ee2_n5XNBGdaxw" name="getStartTime" method="_yjlJSET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj0Z2ET9Ee2_n5XNBGdaxw">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU-FhUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU-skET9Ee2_n5XNBGdaxw" name="setEndTime" method="_yjlJSkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj1A4ET9Ee2_n5XNBGdaxw">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU-skUT9Ee2_n5XNBGdaxw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU-skkT9Ee2_n5XNBGdaxw" name="setStartTime" method="_yjlJTET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj1A4UT9Ee2_n5XNBGdaxw">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU-sk0T9Ee2_n5XNBGdaxw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU-slET9Ee2_n5XNBGdaxw" name="setReleaseTime" method="_yjlwUET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj1A4kT9Ee2_n5XNBGdaxw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU-slUT9Ee2_n5XNBGdaxw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU_ToET9Ee2_n5XNBGdaxw" name="setPeriod" method="_yjlwUkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj1A40T9Ee2_n5XNBGdaxw">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU_ToUT9Ee2_n5XNBGdaxw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU_TokT9Ee2_n5XNBGdaxw" name="setPhase" method="_yjlwVET9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj1A5ET9Ee2_n5XNBGdaxw">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU_To0T9Ee2_n5XNBGdaxw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yU_TpET9Ee2_n5XNBGdaxw" name="setNextReleaseTime" method="_yjlwVkT9Ee2_n5XNBGdaxw">
                <ownedComment xmi:id="_yj1A5UT9Ee2_n5XNBGdaxw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yU_TpUT9Ee2_n5XNBGdaxw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yVAhwET9Ee2_n5XNBGdaxw" name="compareAscendingOrder" method="_yjm-dET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yVAhwUT9Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVAhwkT9Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVAhw0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yVAhxET9Ee2_n5XNBGdaxw" name="compareDescendingOrder" method="_yjm-eET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yVAhxUT9Ee2_n5XNBGdaxw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVAhxkT9Ee2_n5XNBGdaxw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yVAhx0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yVBI0ET9Ee2_n5XNBGdaxw" name="print" method="_yjm-fET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yVBI0UT9Ee2_n5XNBGdaxw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yVBI0kT9Ee2_n5XNBGdaxw" name="print" method="_yjm-fkT9Ee2_n5XNBGdaxw"/>
              <ownedOperation xmi:id="_ygq_MET9Ee2_n5XNBGdaxw" name="SchedulableObject" visibility="package" method="_yjj7J0T9Ee2_n5XNBGdaxw">
                <eAnnotations xmi:id="_ygq_M0T9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ygq_NET9Ee2_n5XNBGdaxw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yj0Z0kT9Ee2_n5XNBGdaxw">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_ygq_MUT9Ee2_n5XNBGdaxw" name="obj" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygq_MkT9Ee2_n5XNBGdaxw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ygq_NUT9Ee2_n5XNBGdaxw" type="_yU50EET9Ee2_n5XNBGdaxw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygrmQUT9Ee2_n5XNBGdaxw" name="addSubObject" method="_yjkiP0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygrmQkT9Ee2_n5XNBGdaxw" name="obj" type="_yU50EET9Ee2_n5XNBGdaxw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ygrmQ0T9Ee2_n5XNBGdaxw" name="maxPhaseComparison" method="_yjlwWET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygrmRET9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygrmRUT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygsNUET9Ee2_n5XNBGdaxw" name="maxPhaseComparison" method="_yjlwW0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygsNUUT9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygsNUkT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygsNU0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygsNVET9Ee2_n5XNBGdaxw" name="deadlineComparison" method="_yjlwX0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygsNVUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygsNVkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygs0YET9Ee2_n5XNBGdaxw" name="deadlineComparison" method="_yjmXYET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygs0YUT9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygs0YkT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygs0Y0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygs0ZET9Ee2_n5XNBGdaxw" name="periodComparison" method="_yjmXZET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygs0ZUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygs0ZkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygs0Z0T9Ee2_n5XNBGdaxw" name="periodComparison" method="_yjmXZ0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygs0aET9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygs0aUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygtbcET9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygtbcUT9Ee2_n5XNBGdaxw" name="priorityComparison" method="_yjmXa0T9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygtbckT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygtbc0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygtbdET9Ee2_n5XNBGdaxw" name="priorityComparison" method="_yjmXbkT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygtbdUT9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygtbdkT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygtbd0T9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yguCgET9Ee2_n5XNBGdaxw" name="releaseTimeComparison" method="_yjmXckT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yguCgUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yguCgkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yguCg0T9Ee2_n5XNBGdaxw" name="releaseTimeComparison" method="_yjmXdUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yguChET9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yguChUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yguChkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygupkET9Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" method="_yjmXeUT9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_ygupkUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_ygupkkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ygupk0T9Ee2_n5XNBGdaxw" name="LatestReleaseTimeComparison" method="_yjm-cET9Ee2_n5XNBGdaxw">
                <ownedParameter xmi:id="_yguplET9Ee2_n5XNBGdaxw" name="obj1" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yguplUT9Ee2_n5XNBGdaxw" name="obj2" type="_yU50EET9Ee2_n5XNBGdaxw"/>
                <ownedParameter xmi:id="_yguplkT9Ee2_n5XNBGdaxw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yhF18UT9Ee2_n5XNBGdaxw" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yhWUoET9Ee2_n5XNBGdaxw" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yhYw4ET9Ee2_n5XNBGdaxw" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yhmMQET9Ee2_n5XNBGdaxw" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yhnaYET9Ee2_n5XNBGdaxw" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_yjr28UT9Ee2_n5XNBGdaxw" name="" memberEnd="_yiNQQET9Ee2_n5XNBGdaxw _yjr28kT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_yjr28kT9Ee2_n5XNBGdaxw" name="" type="_ySc9AET9Ee2_n5XNBGdaxw" association="_yjr28UT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yjxWhET9Ee2_n5XNBGdaxw" name="" memberEnd="_yi07V0T9Ee2_n5XNBGdaxw _yjxWhUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_yjxWhUT9Ee2_n5XNBGdaxw" name="" type="_yUWacET9Ee2_n5XNBGdaxw" association="_yjxWhET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yjx9kET9Ee2_n5XNBGdaxw" name="" memberEnd="_yi07WET9Ee2_n5XNBGdaxw _yjx9kUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_yjx9kUT9Ee2_n5XNBGdaxw" name="" type="_yUWacET9Ee2_n5XNBGdaxw" association="_yjx9kET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yj0Z0ET9Ee2_n5XNBGdaxw" name="" memberEnd="_yi-sUkT9Ee2_n5XNBGdaxw _yj0Z0UT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_yj0Z0UT9Ee2_n5XNBGdaxw" name="" type="_yU50EET9Ee2_n5XNBGdaxw" association="_yj0Z0ET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykKYEET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykKYEUT9Ee2_n5XNBGdaxw _yiBqEkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykKYEUT9Ee2_n5XNBGdaxw" name="" type="_yR0D00T9Ee2_n5XNBGdaxw" association="_ykKYEET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykK_IUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykK_IkT9Ee2_n5XNBGdaxw _yiCRIUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykK_IkT9Ee2_n5XNBGdaxw" name="" type="_yR0D00T9Ee2_n5XNBGdaxw" association="_ykK_IUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykLmMUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykLmMkT9Ee2_n5XNBGdaxw _yiC4MUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykLmMkT9Ee2_n5XNBGdaxw" name="" type="_yR0D00T9Ee2_n5XNBGdaxw" association="_ykLmMUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykLmNET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykLmNUT9Ee2_n5XNBGdaxw _yiEGUkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykLmNUT9Ee2_n5XNBGdaxw" name="" type="_ySAREET9Ee2_n5XNBGdaxw" association="_ykLmNET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykMNQUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykMNQkT9Ee2_n5XNBGdaxw _yiEGVET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykMNQkT9Ee2_n5XNBGdaxw" name="" type="_ySAREET9Ee2_n5XNBGdaxw" association="_ykMNQUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykMNRET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykMNRUT9Ee2_n5XNBGdaxw _yiF7gET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykMNRUT9Ee2_n5XNBGdaxw" name="" type="_ySBfMET9Ee2_n5XNBGdaxw" association="_ykMNRET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykM0UUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykM0UkT9Ee2_n5XNBGdaxw _yiF7gkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykM0UkT9Ee2_n5XNBGdaxw" name="" type="_ySBfMET9Ee2_n5XNBGdaxw" association="_ykM0UUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykM0VET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykM0VUT9Ee2_n5XNBGdaxw _yiHJoUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykM0VUT9Ee2_n5XNBGdaxw" name="" type="_ySCGQET9Ee2_n5XNBGdaxw" association="_ykM0VET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykNbYUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykNbYkT9Ee2_n5XNBGdaxw _yiIXwkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykNbYkT9Ee2_n5XNBGdaxw" name="" type="_ySMeUET9Ee2_n5XNBGdaxw" association="_ykNbYUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykNbZET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykNbZUT9Ee2_n5XNBGdaxw _yiJl4ET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykNbZUT9Ee2_n5XNBGdaxw" name="" type="_ySMeUET9Ee2_n5XNBGdaxw" association="_ykNbZET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykOCcUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykOCckT9Ee2_n5XNBGdaxw _yiK0AET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykOCckT9Ee2_n5XNBGdaxw" name="" type="_ySVBMET9Ee2_n5XNBGdaxw" association="_ykOCcUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykOCdET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykOCdUT9Ee2_n5XNBGdaxw _yiLbE0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykOCdUT9Ee2_n5XNBGdaxw" name="" type="_ySVBMET9Ee2_n5XNBGdaxw" association="_ykOCdET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykOpgUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykOpgkT9Ee2_n5XNBGdaxw _yiPsgUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykOpgkT9Ee2_n5XNBGdaxw" name="" type="_ySk40ET9Ee2_n5XNBGdaxw" association="_ykOpgUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykOphET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykOphUT9Ee2_n5XNBGdaxw _yiQTkET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykOphUT9Ee2_n5XNBGdaxw" name="" type="_ySk40ET9Ee2_n5XNBGdaxw" association="_ykOphET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykPQkUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykPQkkT9Ee2_n5XNBGdaxw _yiQTk0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykPQkkT9Ee2_n5XNBGdaxw" name="" type="_ySk40ET9Ee2_n5XNBGdaxw" association="_ykPQkUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykPQlET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykPQlUT9Ee2_n5XNBGdaxw _yiQ6okT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykPQlUT9Ee2_n5XNBGdaxw" name="" type="_ySk40ET9Ee2_n5XNBGdaxw" association="_ykPQlET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykP3oET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykP3oUT9Ee2_n5XNBGdaxw _yiRhsUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykP3oUT9Ee2_n5XNBGdaxw" name="" type="_ySk40ET9Ee2_n5XNBGdaxw" association="_ykP3oET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykP3o0T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykP3pET9Ee2_n5XNBGdaxw _yiTW4UT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykP3pET9Ee2_n5XNBGdaxw" name="" type="_yStbsET9Ee2_n5XNBGdaxw" association="_ykP3o0T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykP3pkT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykQesET9Ee2_n5XNBGdaxw _yiT98kT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykQesET9Ee2_n5XNBGdaxw" name="" type="_yStbsET9Ee2_n5XNBGdaxw" association="_ykP3pkT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykQeskT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykQes0T9Ee2_n5XNBGdaxw _yiUlAET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykQes0T9Ee2_n5XNBGdaxw" name="" type="_ySxtIET9Ee2_n5XNBGdaxw" association="_ykQeskT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykQetUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykQetkT9Ee2_n5XNBGdaxw _yiVMEkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykQetkT9Ee2_n5XNBGdaxw" name="" type="_ySziUET9Ee2_n5XNBGdaxw" association="_ykQetUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykRFwUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykRFwkT9Ee2_n5XNBGdaxw _yiXoUUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykRFwkT9Ee2_n5XNBGdaxw" name="" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykRFwUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykRs0ET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykRs0UT9Ee2_n5XNBGdaxw _yiXoU0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykRs0UT9Ee2_n5XNBGdaxw" name="" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykRs0ET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykRs00T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykRs1ET9Ee2_n5XNBGdaxw _yiYPYUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykRs1ET9Ee2_n5XNBGdaxw" name="" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykRs00T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykRs1kT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykRs10T9Ee2_n5XNBGdaxw _yiYPY0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykRs10T9Ee2_n5XNBGdaxw" name="" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykRs1kT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykST4UT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykST4kT9Ee2_n5XNBGdaxw _yiYPZUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykST4kT9Ee2_n5XNBGdaxw" name="" type="_yS3zxkT9Ee2_n5XNBGdaxw" association="_ykST4UT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykST5ET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykST5UT9Ee2_n5XNBGdaxw _yiZdg0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykST5UT9Ee2_n5XNBGdaxw" name="" type="_yS6QAET9Ee2_n5XNBGdaxw" association="_ykST5ET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykS68UT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykS68kT9Ee2_n5XNBGdaxw _yiZdhUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykS68kT9Ee2_n5XNBGdaxw" name="" type="_yS6QAET9Ee2_n5XNBGdaxw" association="_ykS68UT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykS69ET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykS69UT9Ee2_n5XNBGdaxw _yiaroET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykS69UT9Ee2_n5XNBGdaxw" name="" type="_yS96YET9Ee2_n5XNBGdaxw" association="_ykS69ET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykTiAUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykTiAkT9Ee2_n5XNBGdaxw _yib5xET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykTiAkT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykTiAUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykTiBET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykTiBUT9Ee2_n5XNBGdaxw _yicg0ET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykTiBUT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykTiBET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykUJEUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykUJEkT9Ee2_n5XNBGdaxw _yicg0kT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykUJEkT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykUJEUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykUJFET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykUJFUT9Ee2_n5XNBGdaxw _yidH4UT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykUJFUT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykUJFET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykUwIUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykUwIkT9Ee2_n5XNBGdaxw _yidH5kT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykUwIkT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykUwIUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykUwJET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykUwJUT9Ee2_n5XNBGdaxw _yidu8ET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykUwJUT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykUwJET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykVXMUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykVXMkT9Ee2_n5XNBGdaxw _yidu80T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykVXMkT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykVXMUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykVXNET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykVXNUT9Ee2_n5XNBGdaxw _yieWAkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykVXNUT9Ee2_n5XNBGdaxw" name="" type="_yTF2MET9Ee2_n5XNBGdaxw" association="_ykVXNET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykV-QUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykV-QkT9Ee2_n5XNBGdaxw _yigLMUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykV-QkT9Ee2_n5XNBGdaxw" name="" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykV-QUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykV-RET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykV-RUT9Ee2_n5XNBGdaxw _yigLM0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykV-RUT9Ee2_n5XNBGdaxw" name="" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykV-RET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykWlUET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykWlUUT9Ee2_n5XNBGdaxw _yigyQUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykWlUUT9Ee2_n5XNBGdaxw" name="" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykWlUET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykWlU0T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykWlVET9Ee2_n5XNBGdaxw _yiiAY0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykWlVET9Ee2_n5XNBGdaxw" name="" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykWlU0T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykXMYET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykXMYUT9Ee2_n5XNBGdaxw _yijOgUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykXMYUT9Ee2_n5XNBGdaxw" name="" type="_yTPnMET9Ee2_n5XNBGdaxw" association="_ykXMYET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykXMY0T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykXMZET9Ee2_n5XNBGdaxw _yikcoUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykXMZET9Ee2_n5XNBGdaxw" name="" type="_yTdpo0T9Ee2_n5XNBGdaxw" association="_ykXMY0T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykXzcET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykXzcUT9Ee2_n5XNBGdaxw _yikco0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykXzcUT9Ee2_n5XNBGdaxw" name="" type="_yTdpo0T9Ee2_n5XNBGdaxw" association="_ykXzcET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykXzc0T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykXzdET9Ee2_n5XNBGdaxw _yimR0ET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykXzdET9Ee2_n5XNBGdaxw" name="" type="_yTnaoET9Ee2_n5XNBGdaxw" association="_ykXzc0T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykXzdkT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykXzd0T9Ee2_n5XNBGdaxw _yimR0kT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykXzd0T9Ee2_n5XNBGdaxw" name="" type="_yTnaoET9Ee2_n5XNBGdaxw" association="_ykXzdkT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykYagUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykYagkT9Ee2_n5XNBGdaxw _yim44kT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykYagkT9Ee2_n5XNBGdaxw" name="" type="_yToBsET9Ee2_n5XNBGdaxw" association="_ykYagUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykYahET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykYahUT9Ee2_n5XNBGdaxw _yipVIUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykYahUT9Ee2_n5XNBGdaxw" name="" type="_yTthQET9Ee2_n5XNBGdaxw" association="_ykYahET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykZBkUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykZBkkT9Ee2_n5XNBGdaxw _yipVI0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykZBkkT9Ee2_n5XNBGdaxw" name="" type="_yTthQET9Ee2_n5XNBGdaxw" association="_ykZBkUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykZBlET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykZBlUT9Ee2_n5XNBGdaxw _yirxYUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykZBlUT9Ee2_n5XNBGdaxw" name="" type="_yT9Y4ET9Ee2_n5XNBGdaxw" association="_ykZBlET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykZooUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykZookT9Ee2_n5XNBGdaxw _yisYcET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykZookT9Ee2_n5XNBGdaxw" name="" type="_yT9Y4ET9Ee2_n5XNBGdaxw" association="_ykZooUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykZopET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykZopUT9Ee2_n5XNBGdaxw _yisYckT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykZopUT9Ee2_n5XNBGdaxw" name="" type="_yT9Y4ET9Ee2_n5XNBGdaxw" association="_ykZopET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykaPsUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykaPskT9Ee2_n5XNBGdaxw _yis_hUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykaPskT9Ee2_n5XNBGdaxw" name="" type="_yT9Y4ET9Ee2_n5XNBGdaxw" association="_ykaPsUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykaPtET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykaPtUT9Ee2_n5XNBGdaxw _yitmkkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykaPtUT9Ee2_n5XNBGdaxw" name="" type="_yT9Y4ET9Ee2_n5XNBGdaxw" association="_ykaPtET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yka2wUT9Ee2_n5XNBGdaxw" name="" memberEnd="_yka2wkT9Ee2_n5XNBGdaxw _yitmlUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_yka2wkT9Ee2_n5XNBGdaxw" name="" type="_yT9Y4ET9Ee2_n5XNBGdaxw" association="_yka2wUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_yka2xET9Ee2_n5XNBGdaxw" name="" memberEnd="_yka2xUT9Ee2_n5XNBGdaxw _yiuNoUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_yka2xUT9Ee2_n5XNBGdaxw" name="" type="_yUAcMET9Ee2_n5XNBGdaxw" association="_yka2xET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykbd0UT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykbd0kT9Ee2_n5XNBGdaxw _yivbwET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykbd0kT9Ee2_n5XNBGdaxw" name="" type="_yUEGkET9Ee2_n5XNBGdaxw" association="_ykbd0UT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykcE4UT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykcE4kT9Ee2_n5XNBGdaxw _yixQ8UT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykcE4kT9Ee2_n5XNBGdaxw" name="" type="_yUF7wET9Ee2_n5XNBGdaxw" association="_ykcE4UT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykcr8ET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykcr8UT9Ee2_n5XNBGdaxw _yixQ9UT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykcr8UT9Ee2_n5XNBGdaxw" name="" type="_yUF7wET9Ee2_n5XNBGdaxw" association="_ykcr8ET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykcr80T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykcr9ET9Ee2_n5XNBGdaxw _yix4AkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykcr9ET9Ee2_n5XNBGdaxw" name="" type="_yUMCYET9Ee2_n5XNBGdaxw" association="_ykcr80T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykdTAUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykdTAkT9Ee2_n5XNBGdaxw _yix4BET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykdTAkT9Ee2_n5XNBGdaxw" name="" type="_yUMCYET9Ee2_n5XNBGdaxw" association="_ykdTAUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykdTBET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykdTBUT9Ee2_n5XNBGdaxw _yiyfEET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykdTBUT9Ee2_n5XNBGdaxw" name="" type="_yUMCYET9Ee2_n5XNBGdaxw" association="_ykdTBET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykd6EUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykd6EkT9Ee2_n5XNBGdaxw _yiyfEkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykd6EkT9Ee2_n5XNBGdaxw" name="" type="_yUMCYET9Ee2_n5XNBGdaxw" association="_ykd6EUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykd6FET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykd6FUT9Ee2_n5XNBGdaxw _yiyfFET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykd6FUT9Ee2_n5XNBGdaxw" name="" type="_yUMCYET9Ee2_n5XNBGdaxw" association="_ykd6FET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykd6F0T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykd6GET9Ee2_n5XNBGdaxw _yi1iYkT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykd6GET9Ee2_n5XNBGdaxw" name="" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykd6F0T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykehIUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykehIkT9Ee2_n5XNBGdaxw _yi1iZUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykehIkT9Ee2_n5XNBGdaxw" name="" type="_yUWacET9Ee2_n5XNBGdaxw" association="_ykehIUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykehJET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykehJUT9Ee2_n5XNBGdaxw _yi3-pUT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykehJUT9Ee2_n5XNBGdaxw" name="" type="_yUp8cET9Ee2_n5XNBGdaxw" association="_ykehJET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykfIMUT9Ee2_n5XNBGdaxw" name="" memberEnd="_ykfIMkT9Ee2_n5XNBGdaxw _yi4lskT9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykfIMkT9Ee2_n5XNBGdaxw" name="" type="_yUp8cET9Ee2_n5XNBGdaxw" association="_ykfIMUT9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykfINET9Ee2_n5XNBGdaxw" name="" memberEnd="_ykfINUT9Ee2_n5XNBGdaxw _yi-sU0T9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykfINUT9Ee2_n5XNBGdaxw" name="" type="_yU50EET9Ee2_n5XNBGdaxw" association="_ykfINET9Ee2_n5XNBGdaxw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ykfIN0T9Ee2_n5XNBGdaxw" name="" memberEnd="_ykfIOET9Ee2_n5XNBGdaxw _yi_TYET9Ee2_n5XNBGdaxw">
              <ownedEnd xmi:id="_ykfIOET9Ee2_n5XNBGdaxw" name="" type="_yU50EET9Ee2_n5XNBGdaxw" association="_ykfIN0T9Ee2_n5XNBGdaxw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_yOitYET9Ee2_n5XNBGdaxw" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_yfCngET9Ee2_n5XNBGdaxw" name="Authentication"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yfsu0ET9Ee2_n5XNBGdaxw" name="Utilities"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_yOtsgUT9Ee2_n5XNBGdaxw" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_yfUUUUT9Ee2_n5XNBGdaxw" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yfU7YET9Ee2_n5XNBGdaxw" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yfU7YkT9Ee2_n5XNBGdaxw" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yh0OsUT9Ee2_n5XNBGdaxw" name="WARPdslBaseListener"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yOGogET9Ee2_n5XNBGdaxw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_yOGogUT9Ee2_n5XNBGdaxw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_yOUq8ET9Ee2_n5XNBGdaxw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_yef08UT9Ee2_n5XNBGdaxw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_yPz4sET9Ee2_n5XNBGdaxw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_ygXdM0T9Ee2_n5XNBGdaxw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yTiiI0T9Ee2_n5XNBGdaxw" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yeQkYET9Ee2_n5XNBGdaxw" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yeRygET9Ee2_n5XNBGdaxw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yeRygkT9Ee2_n5XNBGdaxw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yeSZkUT9Ee2_n5XNBGdaxw" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yeTAoUT9Ee2_n5XNBGdaxw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yel7lkT9Ee2_n5XNBGdaxw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yfkzAET9Ee2_n5XNBGdaxw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yftV4UT9Ee2_n5XNBGdaxw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ygWPEET9Ee2_n5XNBGdaxw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ygW2IUT9Ee2_n5XNBGdaxw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ygXdMUT9Ee2_n5XNBGdaxw" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ygqYIET9Ee2_n5XNBGdaxw" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ygqYIkT9Ee2_n5XNBGdaxw" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yOitYUT9Ee2_n5XNBGdaxw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_yfDOkUT9Ee2_n5XNBGdaxw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yfFDwET9Ee2_n5XNBGdaxw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yfbpEET9Ee2_n5XNBGdaxw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yfbpEkT9Ee2_n5XNBGdaxw" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yOjUcET9Ee2_n5XNBGdaxw" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_yOjUcUT9Ee2_n5XNBGdaxw" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_yfFq0UT9Ee2_n5XNBGdaxw" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yfG48ET9Ee2_n5XNBGdaxw" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yfG48kT9Ee2_n5XNBGdaxw" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yg6PwET9Ee2_n5XNBGdaxw" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_yg6PwUT9Ee2_n5XNBGdaxw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yhNKsUT9Ee2_n5XNBGdaxw" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_yhb0MET9Ee2_n5XNBGdaxw" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yOSOsET9Ee2_n5XNBGdaxw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_yOSOsUT9Ee2_n5XNBGdaxw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_yOSOskT9Ee2_n5XNBGdaxw" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_yOSOs0T9Ee2_n5XNBGdaxw" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_yeem0ET9Ee2_n5XNBGdaxw" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yefN4UT9Ee2_n5XNBGdaxw" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yOtFcET9Ee2_n5XNBGdaxw" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_yOtFcUT9Ee2_n5XNBGdaxw" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_yOtFckT9Ee2_n5XNBGdaxw" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_yOtsgET9Ee2_n5XNBGdaxw" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_yfTGM0T9Ee2_n5XNBGdaxw" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_yfTtQUT9Ee2_n5XNBGdaxw" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yfR4EET9Ee2_n5XNBGdaxw" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yfSfIUT9Ee2_n5XNBGdaxw" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_yfTGMUT9Ee2_n5XNBGdaxw" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yOjUckT9Ee2_n5XNBGdaxw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_yOjUc0T9Ee2_n5XNBGdaxw" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_yfHgAUT9Ee2_n5XNBGdaxw" name="JFileChooser"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yOjUdET9Ee2_n5XNBGdaxw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_yOjUdUT9Ee2_n5XNBGdaxw" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_yOjUdkT9Ee2_n5XNBGdaxw" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_yfIHEUT9Ee2_n5XNBGdaxw" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yOu6oUT9Ee2_n5XNBGdaxw" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_yfWJg0T9Ee2_n5XNBGdaxw" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yfXXoET9Ee2_n5XNBGdaxw" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yfX-s0T9Ee2_n5XNBGdaxw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yfZM0UT9Ee2_n5XNBGdaxw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yfZz4kT9Ee2_n5XNBGdaxw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yfaa80T9Ee2_n5XNBGdaxw" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygL3BUT9Ee2_n5XNBGdaxw" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygMeFkT9Ee2_n5XNBGdaxw" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygNsMkT9Ee2_n5XNBGdaxw" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygOTQ0T9Ee2_n5XNBGdaxw" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yQEXYET9Ee2_n5XNBGdaxw" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ygex8ET9Ee2_n5XNBGdaxw" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yggnIkT9Ee2_n5XNBGdaxw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yghOM0T9Ee2_n5XNBGdaxw" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygh1Q0T9Ee2_n5XNBGdaxw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygicVkT9Ee2_n5XNBGdaxw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygjDZkT9Ee2_n5XNBGdaxw" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yQIo0ET9Ee2_n5XNBGdaxw" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ygk4kET9Ee2_n5XNBGdaxw" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yglfoUT9Ee2_n5XNBGdaxw" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_yglfo0T9Ee2_n5XNBGdaxw" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygmGsUT9Ee2_n5XNBGdaxw" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ygmGs0T9Ee2_n5XNBGdaxw" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_xlKZM0T9Ee2_n5XNBGdaxw">
      <eAnnotations xmi:id="_xlLAQET9Ee2_n5XNBGdaxw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_xlLAQUT9Ee2_n5XNBGdaxw" base_Package="_xiqe0ET9Ee2_n5XNBGdaxw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_yRzcwET9Ee2_n5XNBGdaxw" genericsValue="T,E" base_Element="_yRy1sET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR1R8ET9Ee2_n5XNBGdaxw" base_Element="_yR0q5UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yR1R8UT9Ee2_n5XNBGdaxw" base_Element="_yR0q5UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yR1R8kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yR1R9ET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yR1R80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yR15AET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yR1R9UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yR15AkT9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yR15AUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yR2gEET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yR15A0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yR3HIET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yR2gEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_ySFJkET9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_ySEihkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySIM4ET9Ee2_n5XNBGdaxw" base_Element="_ySHl0UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySIM4UT9Ee2_n5XNBGdaxw" base_Element="_ySHl0UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySIM4kT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySIM5ET9Ee2_n5XNBGdaxw" base_Element="_ySIM40T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySIz8ET9Ee2_n5XNBGdaxw" base_Element="_ySIM40T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySIz8UT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySIz80T9Ee2_n5XNBGdaxw" base_Element="_ySIz8kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySIz9ET9Ee2_n5XNBGdaxw" base_Element="_ySIz8kT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySIz9UT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySJbAET9Ee2_n5XNBGdaxw" base_Element="_ySIz9kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySJbAUT9Ee2_n5XNBGdaxw" base_Element="_ySIz9kT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySJbAkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySJbBET9Ee2_n5XNBGdaxw" base_Element="_ySJbA0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySJbBUT9Ee2_n5XNBGdaxw" base_Element="_ySJbA0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySJbBkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySKCEUT9Ee2_n5XNBGdaxw" base_Element="_ySKCEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySKCEkT9Ee2_n5XNBGdaxw" base_Element="_ySKCEET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySKCE0T9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySKCFUT9Ee2_n5XNBGdaxw" base_Element="_ySKCFET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySKpIET9Ee2_n5XNBGdaxw" base_Element="_ySKCFET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySKpIUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySKpI0T9Ee2_n5XNBGdaxw" base_Element="_ySKpIkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySKpJET9Ee2_n5XNBGdaxw" base_Element="_ySKpIkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySKpJUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySKpJ0T9Ee2_n5XNBGdaxw" base_Element="_ySKpJkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySLQMET9Ee2_n5XNBGdaxw" base_Element="_ySKpJkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySLQMUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySLQM0T9Ee2_n5XNBGdaxw" base_Element="_ySLQMkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySLQNET9Ee2_n5XNBGdaxw" base_Element="_ySLQMkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySLQNUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySLQN0T9Ee2_n5XNBGdaxw" base_Element="_ySLQNkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySL3QET9Ee2_n5XNBGdaxw" base_Element="_ySLQNkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySL3QUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySL3Q0T9Ee2_n5XNBGdaxw" base_Element="_ySL3QkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySL3RET9Ee2_n5XNBGdaxw" base_Element="_ySL3QkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySL3RUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySL3R0T9Ee2_n5XNBGdaxw" base_Element="_ySL3RkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySL3SET9Ee2_n5XNBGdaxw" base_Element="_ySL3RkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySL3SUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySOTgET9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_ySNsdET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySWPUET9Ee2_n5XNBGdaxw" base_Element="_ySVoQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySWPUUT9Ee2_n5XNBGdaxw" base_Element="_ySVoQET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySWPUkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySW2YET9Ee2_n5XNBGdaxw" base_Element="_ySWPU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySW2YUT9Ee2_n5XNBGdaxw" base_Element="_ySWPU0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySW2YkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySW2ZET9Ee2_n5XNBGdaxw" base_Element="_ySW2Y0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySXdcET9Ee2_n5XNBGdaxw" base_Element="_ySW2Y0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySXdcUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySZ5sUT9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_ySZ5sET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySbu50T9Ee2_n5XNBGdaxw" base_Element="_ySbu5UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yScV8ET9Ee2_n5XNBGdaxw" base_Element="_ySbu5UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yScV8UT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySdkEUT9Ee2_n5XNBGdaxw" base_Element="_ySdkEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySfZQUT9Ee2_n5XNBGdaxw" base_Element="_ySeyN0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySfZQkT9Ee2_n5XNBGdaxw" base_Element="_ySeyN0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySfZQ0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySfZRkT9Ee2_n5XNBGdaxw" base_Element="_ySfZRET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySgAUET9Ee2_n5XNBGdaxw" base_Element="_ySfZRET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySgAUUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySgAU0T9Ee2_n5XNBGdaxw" base_Element="_ySgAUkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySgAVET9Ee2_n5XNBGdaxw" base_Element="_ySgAUkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySgAVUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySnVEET9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_ySmuBkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_ySn8IET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_ySnVEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_ySojMUT9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_ySojMET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySpxUkT9Ee2_n5XNBGdaxw" base_Element="_ySpxUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySpxU0T9Ee2_n5XNBGdaxw" base_Element="_ySpxUET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySpxVET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySup0ET9Ee2_n5XNBGdaxw" base_Element="_ySuCwET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ySup0UT9Ee2_n5XNBGdaxw" base_Element="_ySuCwET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ySup0kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yS8FMET9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yS7eIET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yS9TUET9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yS8sQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yS_IgkT9Ee2_n5XNBGdaxw" base_Element="_yS_IgET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yS_Ig0T9Ee2_n5XNBGdaxw" base_Element="_yS_IgET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yS_IhET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTAWoET9Ee2_n5XNBGdaxw" base_Element="_yS_vk0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTAWoUT9Ee2_n5XNBGdaxw" base_Element="_yS_vk0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTAWokT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTAWpET9Ee2_n5XNBGdaxw" base_Element="_yTAWo0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTAWpUT9Ee2_n5XNBGdaxw" base_Element="_yTAWo0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTAWpkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTEBAET9Ee2_n5XNBGdaxw" base_Element="_yTDZ-UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTEBAUT9Ee2_n5XNBGdaxw" base_Element="_yTDZ-UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTEBAkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yTFPIET9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yTEoEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yTGdQUT9Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_yTGdQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yTHEUUT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yTHEUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_yTHrYkT9Ee2_n5XNBGdaxw" base_Element="_yTHEUkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTMj4ET9Ee2_n5XNBGdaxw" base_Element="_yTL80ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTMj4UT9Ee2_n5XNBGdaxw" base_Element="_yTL80ET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTMj4kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yTPAIET9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yTOZEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTUfs0T9Ee2_n5XNBGdaxw" base_Element="_yTUfsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTVGwET9Ee2_n5XNBGdaxw" base_Element="_yTUfsUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTVGwUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTVGxkT9Ee2_n5XNBGdaxw" base_Element="_yTVGxET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTVGx0T9Ee2_n5XNBGdaxw" base_Element="_yTVGxET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTVGyET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTVt0UT9Ee2_n5XNBGdaxw" base_Element="_yTVGyUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTVt0kT9Ee2_n5XNBGdaxw" base_Element="_yTVGyUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTVt00T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTWU4kT9Ee2_n5XNBGdaxw" base_Element="_yTWU4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTWU40T9Ee2_n5XNBGdaxw" base_Element="_yTWU4UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTWU5ET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTW78ET9Ee2_n5XNBGdaxw" base_Element="_yTWU5UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTW78UT9Ee2_n5XNBGdaxw" base_Element="_yTWU5UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTW78kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTW79UT9Ee2_n5XNBGdaxw" base_Element="_yTW780T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTXjAET9Ee2_n5XNBGdaxw" base_Element="_yTW780T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTXjAUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTXjBET9Ee2_n5XNBGdaxw" base_Element="_yTXjAkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTXjBUT9Ee2_n5XNBGdaxw" base_Element="_yTXjAkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTXjBkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTYKEUT9Ee2_n5XNBGdaxw" base_Element="_yTXjCET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTYKEkT9Ee2_n5XNBGdaxw" base_Element="_yTXjCET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTYKE0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yTYKFUT9Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_yTYKFET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTe3wET9Ee2_n5XNBGdaxw" base_Element="_yTeQsET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTe3wUT9Ee2_n5XNBGdaxw" base_Element="_yTeQsET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTe3wkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTfe0ET9Ee2_n5XNBGdaxw" base_Element="_yTe3w0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTfe0UT9Ee2_n5XNBGdaxw" base_Element="_yTe3w0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTfe0kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTfe1ET9Ee2_n5XNBGdaxw" base_Element="_yTfe00T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yTfe1UT9Ee2_n5XNBGdaxw" base_Element="_yTfe00T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yTfe1kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yTgs8UT9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yTgs8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yTh7EET9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yThUAET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yTiiJET9Ee2_n5XNBGdaxw" base_Element="_yTiiI0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yTjJMUT9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yTjJMET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yToowUT9Ee2_n5XNBGdaxw" base_Element="_yToowET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yToowkT9Ee2_n5XNBGdaxw" base_Element="_yToowET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yToow0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yTqd8ET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yTp24ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yTsTIET9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yTrsEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yTs6MUT9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yTs6MET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yT2EIUT9Ee2_n5XNBGdaxw" genericsValue="T extends SchedulableObject" base_Element="_yT2EIET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yT3SQET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yT2rNET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT35UUT9Ee2_n5XNBGdaxw" base_Element="_yT35UET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yT6VkET9Ee2_n5XNBGdaxw" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_yT5ugET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT8KwET9Ee2_n5XNBGdaxw" base_Element="_yT7jsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT8KyUT9Ee2_n5XNBGdaxw" base_Element="_yT8KyET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT-nAET9Ee2_n5XNBGdaxw" base_Element="_yT9_8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yT-nAUT9Ee2_n5XNBGdaxw" base_Element="_yT9_8ET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yT-nAkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT-nBET9Ee2_n5XNBGdaxw" base_Element="_yT-nA0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yT-nBUT9Ee2_n5XNBGdaxw" base_Element="_yT-nA0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yT-nBkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT_OEET9Ee2_n5XNBGdaxw" base_Element="_yT-nB0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yT_OEUT9Ee2_n5XNBGdaxw" base_Element="_yT-nB0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yT_OEkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUHJ4ET9Ee2_n5XNBGdaxw" base_Element="_yUGi1UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUHJ4UT9Ee2_n5XNBGdaxw" base_Element="_yUGi1UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUHJ4kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUHJ5ET9Ee2_n5XNBGdaxw" base_Element="_yUHJ40T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUHw8ET9Ee2_n5XNBGdaxw" base_Element="_yUHJ40T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUHw8UT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUHw9ET9Ee2_n5XNBGdaxw" base_Element="_yUHw8kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUHw9UT9Ee2_n5XNBGdaxw" base_Element="_yUHw8kT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUHw9kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUNQgUT9Ee2_n5XNBGdaxw" base_Element="_yUNQgET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUNQgkT9Ee2_n5XNBGdaxw" base_Element="_yUNQgET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUNQg0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUN3kET9Ee2_n5XNBGdaxw" base_Element="_yUNQhET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUN3kUT9Ee2_n5XNBGdaxw" base_Element="_yUNQhET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUN3kkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUN3lET9Ee2_n5XNBGdaxw" base_Element="_yUN3k0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUN3lUT9Ee2_n5XNBGdaxw" base_Element="_yUN3k0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUN3lkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOeoUT9Ee2_n5XNBGdaxw" base_Element="_yUOeoET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUOeokT9Ee2_n5XNBGdaxw" base_Element="_yUOeoET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUOeo0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOepUT9Ee2_n5XNBGdaxw" base_Element="_yUOepET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUPFsET9Ee2_n5XNBGdaxw" base_Element="_yUOepET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUPFsUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUPFs0T9Ee2_n5XNBGdaxw" base_Element="_yUPFskT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUPFtET9Ee2_n5XNBGdaxw" base_Element="_yUPFskT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUPFtUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUPswUT9Ee2_n5XNBGdaxw" base_Element="_yUPFtkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUPswkT9Ee2_n5XNBGdaxw" base_Element="_yUPFtkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUPsw0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUQT0ET9Ee2_n5XNBGdaxw" base_Element="_yUPsxET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUQT0UT9Ee2_n5XNBGdaxw" base_Element="_yUPsxET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUQT0kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUQ64ET9Ee2_n5XNBGdaxw" base_Element="_yUQT00T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUQ64UT9Ee2_n5XNBGdaxw" base_Element="_yUQT00T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUQ64kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUQ65ET9Ee2_n5XNBGdaxw" base_Element="_yUQ640T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUQ65UT9Ee2_n5XNBGdaxw" base_Element="_yUQ640T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUQ65kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yURh8UT9Ee2_n5XNBGdaxw" base_Element="_yURh8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yURh8kT9Ee2_n5XNBGdaxw" base_Element="_yURh8ET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yURh80T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUSJAUT9Ee2_n5XNBGdaxw" base_Element="_yURh9ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUSJAkT9Ee2_n5XNBGdaxw" base_Element="_yURh9ET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUSJA0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUSwEET9Ee2_n5XNBGdaxw" base_Element="_yUSJBET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUSwEUT9Ee2_n5XNBGdaxw" base_Element="_yUSJBET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUSwEkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUSwFUT9Ee2_n5XNBGdaxw" base_Element="_yUSwE0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUTXIET9Ee2_n5XNBGdaxw" base_Element="_yUSwE0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUTXIUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUTXJET9Ee2_n5XNBGdaxw" base_Element="_yUTXIkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUTXJUT9Ee2_n5XNBGdaxw" base_Element="_yUTXIkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUTXJkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUT-MUT9Ee2_n5XNBGdaxw" base_Element="_yUT-MET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUT-MkT9Ee2_n5XNBGdaxw" base_Element="_yUT-MET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUT-M0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yUfkYkT9Ee2_n5XNBGdaxw" base_Element="_yUe9VET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_yUfkaET9Ee2_n5XNBGdaxw" base_Element="_yUfkZUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_yUgLd0T9Ee2_n5XNBGdaxw" base_Element="_yUgLc0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_yUgyiET9Ee2_n5XNBGdaxw" base_Element="_yUgyhET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yUpVYkT9Ee2_n5XNBGdaxw" genericsValue="InstructionParameters" base_Element="_yUpVYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yUqjgET9Ee2_n5XNBGdaxw" genericsValue="InstructionParameters" base_Element="_yUp8dUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_yUu08ET9Ee2_n5XNBGdaxw" base_Element="_yUuN4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUx4QUT9Ee2_n5XNBGdaxw" base_Element="_yUx4QET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUx4QkT9Ee2_n5XNBGdaxw" base_Element="_yUx4QET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUyfUET9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUyfUkT9Ee2_n5XNBGdaxw" base_Element="_yUyfUUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUyfU0T9Ee2_n5XNBGdaxw" base_Element="_yUyfUUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUyfVET9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUzGYET9Ee2_n5XNBGdaxw" base_Element="_yUyfVUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUzGYUT9Ee2_n5XNBGdaxw" base_Element="_yUyfVUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUzGYkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUzGZET9Ee2_n5XNBGdaxw" base_Element="_yUzGY0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUzGZUT9Ee2_n5XNBGdaxw" base_Element="_yUzGY0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUzGZkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUztcET9Ee2_n5XNBGdaxw" base_Element="_yUzGZ0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUztcUT9Ee2_n5XNBGdaxw" base_Element="_yUzGZ0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUztckT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUztdET9Ee2_n5XNBGdaxw" base_Element="_yUztc0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yUztdUT9Ee2_n5XNBGdaxw" base_Element="_yUztc0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yUztdkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU0UgET9Ee2_n5XNBGdaxw" base_Element="_yUztd0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU0UgUT9Ee2_n5XNBGdaxw" base_Element="_yUztd0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU0UgkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU0UhET9Ee2_n5XNBGdaxw" base_Element="_yU0Ug0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU07kET9Ee2_n5XNBGdaxw" base_Element="_yU0Ug0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU07kUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU07k0T9Ee2_n5XNBGdaxw" base_Element="_yU07kkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU07lET9Ee2_n5XNBGdaxw" base_Element="_yU07kkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU07lUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU07l0T9Ee2_n5XNBGdaxw" base_Element="_yU07lkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU1ioET9Ee2_n5XNBGdaxw" base_Element="_yU07lkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU1ioUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU1io0T9Ee2_n5XNBGdaxw" base_Element="_yU1iokT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU1ipET9Ee2_n5XNBGdaxw" base_Element="_yU1iokT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU1ipUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU2JsET9Ee2_n5XNBGdaxw" base_Element="_yU1ipkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU2JsUT9Ee2_n5XNBGdaxw" base_Element="_yU1ipkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU2JskT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU2JtET9Ee2_n5XNBGdaxw" base_Element="_yU2Js0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU2JtUT9Ee2_n5XNBGdaxw" base_Element="_yU2Js0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU2JtkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU2wwET9Ee2_n5XNBGdaxw" base_Element="_yU2Jt0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU2wwUT9Ee2_n5XNBGdaxw" base_Element="_yU2Jt0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU2wwkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU2wxET9Ee2_n5XNBGdaxw" base_Element="_yU2ww0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU2wxUT9Ee2_n5XNBGdaxw" base_Element="_yU2ww0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU2wxkT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU3X0ET9Ee2_n5XNBGdaxw" base_Element="_yU2wx0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU3X0UT9Ee2_n5XNBGdaxw" base_Element="_yU2wx0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU3X0kT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU3X1ET9Ee2_n5XNBGdaxw" base_Element="_yU3X00T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU3X1UT9Ee2_n5XNBGdaxw" base_Element="_yU3X00T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU3X1kT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU3-4ET9Ee2_n5XNBGdaxw" base_Element="_yU3X10T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU3-4UT9Ee2_n5XNBGdaxw" base_Element="_yU3X10T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU3-4kT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU3-5ET9Ee2_n5XNBGdaxw" base_Element="_yU3-40T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU4l8ET9Ee2_n5XNBGdaxw" base_Element="_yU3-40T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU4l8UT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU4l80T9Ee2_n5XNBGdaxw" base_Element="_yU4l8kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU4l9ET9Ee2_n5XNBGdaxw" base_Element="_yU4l8kT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU4l9UT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU4l90T9Ee2_n5XNBGdaxw" base_Element="_yU4l9kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU5NAET9Ee2_n5XNBGdaxw" base_Element="_yU4l9kT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU5NAUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU5NA0T9Ee2_n5XNBGdaxw" base_Element="_yU5NAkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yU5NBET9Ee2_n5XNBGdaxw" base_Element="_yU5NAkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yU5NBUT9Ee2_n5XNBGdaxw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yU83YET9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_yU8QWET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yeRLcET9Ee2_n5XNBGdaxw" base_Element="_yeQkYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yeRygUT9Ee2_n5XNBGdaxw" base_Element="_yeRygET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yeSZkET9Ee2_n5XNBGdaxw" base_Element="_yeRygkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yeTAoET9Ee2_n5XNBGdaxw" base_Element="_yeSZkUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yeTAokT9Ee2_n5XNBGdaxw" base_Element="_yeTAoUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yeU10ET9Ee2_n5XNBGdaxw" base_Element="_yeUOwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yeU10UT9Ee2_n5XNBGdaxw" base_Element="_yeUOwUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yeU10kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yeWrAET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yeWD8UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yeXSEET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yeWrAkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yeZuUUT9Ee2_n5XNBGdaxw" genericsValue="String, Activation" base_Element="_yeZuUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yefN4ET9Ee2_n5XNBGdaxw" base_Element="_yeem0ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yef08ET9Ee2_n5XNBGdaxw" base_Element="_yefN4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yegcAET9Ee2_n5XNBGdaxw" base_Element="_yef08UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yejfU0T9Ee2_n5XNBGdaxw" base_Element="_yejfUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yejfVET9Ee2_n5XNBGdaxw" base_Element="_yejfUET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yejfVUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yemioET9Ee2_n5XNBGdaxw" base_Element="_yel7lkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfAyUET9Ee2_n5XNBGdaxw" base_Element="_yenJsET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfBZYET9Ee2_n5XNBGdaxw" base_Element="_yenJsET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfBZYUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfDOkET9Ee2_n5XNBGdaxw" base_Element="_yfCngET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfEcsET9Ee2_n5XNBGdaxw" base_Element="_yfDOkUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfFq0ET9Ee2_n5XNBGdaxw" base_Element="_yfFDwET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfGR4ET9Ee2_n5XNBGdaxw" base_Element="_yfFq0UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfG48UT9Ee2_n5XNBGdaxw" base_Element="_yfG48ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfHgAET9Ee2_n5XNBGdaxw" base_Element="_yfG48kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfIHEET9Ee2_n5XNBGdaxw" base_Element="_yfHgAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfIHEkT9Ee2_n5XNBGdaxw" base_Element="_yfIHEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfLKY0T9Ee2_n5XNBGdaxw" base_Element="_yfLKYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfLxcET9Ee2_n5XNBGdaxw" base_Element="_yfLKYET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfLxcUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yfO0wET9Ee2_n5XNBGdaxw" genericsValue="String, Flow" base_Element="_yfONsET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yfPb0ET9Ee2_n5XNBGdaxw" genericsValue="Node, Activation" base_Element="_yfO0wUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfSfIET9Ee2_n5XNBGdaxw" base_Element="_yfR4EET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfTGMET9Ee2_n5XNBGdaxw" base_Element="_yfSfIUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfTGMkT9Ee2_n5XNBGdaxw" base_Element="_yfTGMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfTtQET9Ee2_n5XNBGdaxw" base_Element="_yfTGM0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfUUUET9Ee2_n5XNBGdaxw" base_Element="_yfTtQUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfUUUkT9Ee2_n5XNBGdaxw" base_Element="_yfUUUUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfU7YUT9Ee2_n5XNBGdaxw" base_Element="_yfU7YET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfVicET9Ee2_n5XNBGdaxw" base_Element="_yfU7YkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfWwkET9Ee2_n5XNBGdaxw" base_Element="_yfWJg0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfWwk0T9Ee2_n5XNBGdaxw" base_Element="_yfWwkUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfWwlET9Ee2_n5XNBGdaxw" base_Element="_yfWwkUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfWwlUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfXXoUT9Ee2_n5XNBGdaxw" base_Element="_yfXXoET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfX-sET9Ee2_n5XNBGdaxw" base_Element="_yfXXokT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfX-sUT9Ee2_n5XNBGdaxw" base_Element="_yfXXokT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfX-skT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfYlwET9Ee2_n5XNBGdaxw" base_Element="_yfX-s0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfYlw0T9Ee2_n5XNBGdaxw" base_Element="_yfYlwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfYlxET9Ee2_n5XNBGdaxw" base_Element="_yfYlwUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfZM0ET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfZM0kT9Ee2_n5XNBGdaxw" base_Element="_yfZM0UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfZM1UT9Ee2_n5XNBGdaxw" base_Element="_yfZM00T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfZz4ET9Ee2_n5XNBGdaxw" base_Element="_yfZM00T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfZz4UT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfZz40T9Ee2_n5XNBGdaxw" base_Element="_yfZz4kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfaa8ET9Ee2_n5XNBGdaxw" base_Element="_yfZz5ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfaa8UT9Ee2_n5XNBGdaxw" base_Element="_yfZz5ET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfaa8kT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfaa9ET9Ee2_n5XNBGdaxw" base_Element="_yfaa80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfbCAET9Ee2_n5XNBGdaxw" base_Element="_yfaa9UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfbCAUT9Ee2_n5XNBGdaxw" base_Element="_yfaa9UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfbCAkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yfbpEUT9Ee2_n5XNBGdaxw" base_Element="_yfbpEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfcQIET9Ee2_n5XNBGdaxw" base_Element="_yfbpEkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yfdeQUT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yfdeQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfeFUUT9Ee2_n5XNBGdaxw" base_Element="_yfeFUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfhvsET9Ee2_n5XNBGdaxw" base_Element="_yfhIoET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfhvsUT9Ee2_n5XNBGdaxw" base_Element="_yfhIoET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfhvskT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yfi90UT9Ee2_n5XNBGdaxw" genericsValue="String, Node" base_Element="_yfi90ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yfkzAUT9Ee2_n5XNBGdaxw" base_Element="_yfkzAET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfodY0T9Ee2_n5XNBGdaxw" base_Element="_yfodYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfpEcET9Ee2_n5XNBGdaxw" base_Element="_yfodYET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfpEcUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yfprg0T9Ee2_n5XNBGdaxw" genericsValue="ScheduleTime" base_Element="_yfpEdkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yfrgs0T9Ee2_n5XNBGdaxw" base_Element="_yfrgsET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yfrgtET9Ee2_n5XNBGdaxw" base_Element="_yfrgsET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yfrgtUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yftV4ET9Ee2_n5XNBGdaxw" base_Element="_yfsu0ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yftV4kT9Ee2_n5XNBGdaxw" base_Element="_yftV4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yf0DkET9Ee2_n5XNBGdaxw" genericsValue="String,InstructionTimeSlot" base_Element="_yfzcgET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yf2f0ET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yf14wUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yf3G40T9Ee2_n5XNBGdaxw" genericsValue="Double" base_Element="_yf3G4kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yf4VAET9Ee2_n5XNBGdaxw" genericsValue="Double,ReliabilityRow" base_Element="_yf3t8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_ygBe8UT9Ee2_n5XNBGdaxw" genericsValue="Activation,Row&lt;Activation>" base_Element="_ygBe8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_ygCtEET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_ygCGAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygDUIUT9Ee2_n5XNBGdaxw" base_Element="_ygDUIET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygFJUET9Ee2_n5XNBGdaxw" base_Element="_ygEiQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygFJUkT9Ee2_n5XNBGdaxw" base_Element="_ygFJUUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygLP80T9Ee2_n5XNBGdaxw" base_Element="_ygLP8UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygLP9ET9Ee2_n5XNBGdaxw" base_Element="_ygLP8UT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygLP9UT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygL3AkT9Ee2_n5XNBGdaxw" base_Element="_ygL3AET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygL3A0T9Ee2_n5XNBGdaxw" base_Element="_ygL3AET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygL3BET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygMeEET9Ee2_n5XNBGdaxw" base_Element="_ygL3BUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygMeE0T9Ee2_n5XNBGdaxw" base_Element="_ygMeEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygMeFET9Ee2_n5XNBGdaxw" base_Element="_ygMeEUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygMeFUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygNFIET9Ee2_n5XNBGdaxw" base_Element="_ygMeFkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygNFI0T9Ee2_n5XNBGdaxw" base_Element="_ygNFIUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygNsMET9Ee2_n5XNBGdaxw" base_Element="_ygNFIUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygNsMUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygNsM0T9Ee2_n5XNBGdaxw" base_Element="_ygNsMkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygOTQET9Ee2_n5XNBGdaxw" base_Element="_ygNsNET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygOTQUT9Ee2_n5XNBGdaxw" base_Element="_ygNsNET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygOTQkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygOTRET9Ee2_n5XNBGdaxw" base_Element="_ygOTQ0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygO6UkT9Ee2_n5XNBGdaxw" base_Element="_ygO6UET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygO6U0T9Ee2_n5XNBGdaxw" base_Element="_ygO6UET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygO6VET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygPhYET9Ee2_n5XNBGdaxw" base_Element="_ygO6VUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygPhYUT9Ee2_n5XNBGdaxw" base_Element="_ygO6VUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygPhYkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygPhZUT9Ee2_n5XNBGdaxw" base_Element="_ygPhY0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygPhZkT9Ee2_n5XNBGdaxw" base_Element="_ygPhY0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygPhZ0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygQIckT9Ee2_n5XNBGdaxw" base_Element="_ygQIcET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygQIc0T9Ee2_n5XNBGdaxw" base_Element="_ygQIcET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygQvgET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygW2IET9Ee2_n5XNBGdaxw" base_Element="_ygWPEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygXdMET9Ee2_n5XNBGdaxw" base_Element="_ygW2IUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygXdMkT9Ee2_n5XNBGdaxw" base_Element="_ygXdMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygYEQET9Ee2_n5XNBGdaxw" base_Element="_ygXdM0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_ygZ5cET9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_ygZSYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygfZAET9Ee2_n5XNBGdaxw" base_Element="_ygex8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yggAEET9Ee2_n5XNBGdaxw" base_Element="_ygfZAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yggAEUT9Ee2_n5XNBGdaxw" base_Element="_ygfZAUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yggAEkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yggAFUT9Ee2_n5XNBGdaxw" base_Element="_yggAE0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yggnIET9Ee2_n5XNBGdaxw" base_Element="_yggAE0T9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yggnIUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yggnI0T9Ee2_n5XNBGdaxw" base_Element="_yggnIkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yghOMET9Ee2_n5XNBGdaxw" base_Element="_yggnJET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yghOMUT9Ee2_n5XNBGdaxw" base_Element="_yggnJET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yghOMkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yghONET9Ee2_n5XNBGdaxw" base_Element="_yghOM0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygh1QET9Ee2_n5XNBGdaxw" base_Element="_yghONUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygh1QUT9Ee2_n5XNBGdaxw" base_Element="_yghONUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygh1QkT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygicUET9Ee2_n5XNBGdaxw" base_Element="_ygh1Q0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygicU0T9Ee2_n5XNBGdaxw" base_Element="_ygicUUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygicVET9Ee2_n5XNBGdaxw" base_Element="_ygicUUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygicVUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygjDYET9Ee2_n5XNBGdaxw" base_Element="_ygicVkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygjDY0T9Ee2_n5XNBGdaxw" base_Element="_ygjDYUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygjDZET9Ee2_n5XNBGdaxw" base_Element="_ygjDYUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygjDZUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ygjqcET9Ee2_n5XNBGdaxw" base_Element="_ygjDZkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ygjqc0T9Ee2_n5XNBGdaxw" base_Element="_ygjqcUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_ygkRgET9Ee2_n5XNBGdaxw" base_Element="_ygjqcUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_ygkRgUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yglfoET9Ee2_n5XNBGdaxw" base_Element="_ygk4kET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yglfokT9Ee2_n5XNBGdaxw" base_Element="_yglfoUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygmGsET9Ee2_n5XNBGdaxw" base_Element="_yglfo0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygmGskT9Ee2_n5XNBGdaxw" base_Element="_ygmGsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygmGtET9Ee2_n5XNBGdaxw" base_Element="_ygmGs0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygqYIUT9Ee2_n5XNBGdaxw" base_Element="_ygqYIET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ygqYI0T9Ee2_n5XNBGdaxw" base_Element="_ygqYIkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg5osUT9Ee2_n5XNBGdaxw" genericsValue="T, E" base_Element="_yg5osET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yg6PwkT9Ee2_n5XNBGdaxw" base_Element="_yg6PwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg620ET9Ee2_n5XNBGdaxw" genericsValue="Activation" base_Element="_yg6Pw0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg7d4kT9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yg7d4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg8E8kT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yg8E8UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg8sAkT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yg8sAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg9TEUT9Ee2_n5XNBGdaxw" genericsValue="ScheduleTime" base_Element="_yg9TEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yg-hMUT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yg-hMET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhA9cET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yg_vUkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhA9cUT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yg_vU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhCLkET9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yhBkgkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhCyoET9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yhCLkkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhDZsUT9Ee2_n5XNBGdaxw" genericsValue="Activation" base_Element="_yhDZsET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhEn0ET9Ee2_n5XNBGdaxw" base_Element="_yhEAwET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhEn0UT9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yhEAwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhEn0kT9Ee2_n5XNBGdaxw" base_Element="_yhEAwET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhFO4ET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhF18ET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhFO4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yhF18kT9Ee2_n5XNBGdaxw" base_Element="_yhF18UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhGdBET9Ee2_n5XNBGdaxw" base_Element="_yhGdAET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhHEEET9Ee2_n5XNBGdaxw" base_Element="_yhGdAET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhHEEUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhHEE0T9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yhHEEkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhHrIET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yhHEFET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhKHYET9Ee2_n5XNBGdaxw" genericsValue="Flow" base_Element="_yhJgUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhLVgkT9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yhLVgUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhL8kUT9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_yhL8kET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yhNxwET9Ee2_n5XNBGdaxw" base_Element="_yhNKsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhOY0UT9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhOY0ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhO_5ET9Ee2_n5XNBGdaxw" base_Element="_yhO_4ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhPm8ET9Ee2_n5XNBGdaxw" base_Element="_yhO_4ET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhPm8UT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhQOAET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhPm8kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhQOBUT9Ee2_n5XNBGdaxw" base_Element="_yhQOAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhQ1EET9Ee2_n5XNBGdaxw" base_Element="_yhQOAUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhQ1EUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhQ1E0T9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yhQ1EkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhSDMUT9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhSDMET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhSqQkT9Ee2_n5XNBGdaxw" base_Element="_yhSDMkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhSqQ0T9Ee2_n5XNBGdaxw" base_Element="_yhSDMkT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhSqRET9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhUfcET9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yhT4YUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Array xmi:id="_yhVGgET9Ee2_n5XNBGdaxw" base_Element="_yhUfcUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhVtkET9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yhUfckT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yhWUoUT9Ee2_n5XNBGdaxw" base_Element="_yhWUoET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhXiwET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhW7skT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhYJ0UT9Ee2_n5XNBGdaxw" base_Element="_yhXiwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhYJ0kT9Ee2_n5XNBGdaxw" base_Element="_yhXiwUT9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhYJ00T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yhYw4UT9Ee2_n5XNBGdaxw" base_Element="_yhYw4ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yhb0MUT9Ee2_n5XNBGdaxw" base_Element="_yhb0MET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yheQcET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhdpYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhe3hET9Ee2_n5XNBGdaxw" base_Element="_yhe3gET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhfekET9Ee2_n5XNBGdaxw" base_Element="_yhe3gET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhfekUT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhh61UT9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhh61ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhjI8ET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhih4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhjwAET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhjI8kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhkXEET9Ee2_n5XNBGdaxw" genericsValue="T" base_Element="_yhjI80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhllMkT9Ee2_n5XNBGdaxw" genericsValue="E" base_Element="_yhllMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yhmzUET9Ee2_n5XNBGdaxw" base_Element="_yhmMQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yhnaYUT9Ee2_n5XNBGdaxw" base_Element="_yhnaYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_yhoohET9Ee2_n5XNBGdaxw" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_yhoogkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhpPkET9Ee2_n5XNBGdaxw" base_Element="_yhoogkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yhrr0UT9Ee2_n5XNBGdaxw" base_Element="_yhrEwET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yhrr0kT9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yhrEwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Annotations xmi:id="_yhsS4ET9Ee2_n5XNBGdaxw" base_Element="_yhrEwET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yhsS4UT9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yhxydUT9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_yhxycET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yh0OskT9Ee2_n5XNBGdaxw" base_Element="_yh0OsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiCRIET9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yiBqEkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiC4MET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yiCRIUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiDfQET9Ee2_n5XNBGdaxw" genericsValue="ScheduleTime" base_Element="_yiC4MUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiEGU0T9Ee2_n5XNBGdaxw" base_Element="_yiEGUkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiEGVUT9Ee2_n5XNBGdaxw" base_Element="_yiEGVET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiFUcUT9Ee2_n5XNBGdaxw" base_Element="_yiFUcET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiF7gUT9Ee2_n5XNBGdaxw" base_Element="_yiF7gET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiF7g0T9Ee2_n5XNBGdaxw" base_Element="_yiF7gkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiGik0T9Ee2_n5XNBGdaxw" base_Element="_yiGikkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiHJoET9Ee2_n5XNBGdaxw" base_Element="_yiGilET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiHJokT9Ee2_n5XNBGdaxw" genericsValue="ChannelSet" base_Element="_yiHJoUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiHwsET9Ee2_n5XNBGdaxw" base_Element="_yiHJoUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiHws0T9Ee2_n5XNBGdaxw" base_Element="_yiHwsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiI-0ET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yiIXwkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiI-0UT9Ee2_n5XNBGdaxw" base_Element="_yiIXwkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiI-00T9Ee2_n5XNBGdaxw" base_Element="_yiI-0kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiJl4UT9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yiJl4ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiJl4kT9Ee2_n5XNBGdaxw" base_Element="_yiJl4ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiKM8ET9Ee2_n5XNBGdaxw" base_Element="_yiJl40T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiKM8kT9Ee2_n5XNBGdaxw" base_Element="_yiKM8UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiK0AUT9Ee2_n5XNBGdaxw" base_Element="_yiK0AET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiLbEET9Ee2_n5XNBGdaxw" base_Element="_yiK0AkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiLbEkT9Ee2_n5XNBGdaxw" base_Element="_yiLbEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiLbFET9Ee2_n5XNBGdaxw" base_Element="_yiLbE0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiN3VET9Ee2_n5XNBGdaxw" base_Element="_yiN3U0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiPFcET9Ee2_n5XNBGdaxw" base_Element="_yiOeZkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiPFckT9Ee2_n5XNBGdaxw" base_Element="_yiPFcUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiPsgET9Ee2_n5XNBGdaxw" base_Element="_yiPFc0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiPsgkT9Ee2_n5XNBGdaxw" genericsValue="Node" base_Element="_yiPsgUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiPsg0T9Ee2_n5XNBGdaxw" base_Element="_yiPsgUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiQTkUT9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_yiQTkET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiQTkkT9Ee2_n5XNBGdaxw" base_Element="_yiQTkET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiQ6oET9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yiQTk0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiQ6oUT9Ee2_n5XNBGdaxw" base_Element="_yiQTk0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiRhsET9Ee2_n5XNBGdaxw" base_Element="_yiQ6okT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiRhskT9Ee2_n5XNBGdaxw" base_Element="_yiRhsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiSv00T9Ee2_n5XNBGdaxw" base_Element="_yiSv0kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiTW4ET9Ee2_n5XNBGdaxw" base_Element="_yiSv1ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiTW4kT9Ee2_n5XNBGdaxw" base_Element="_yiTW4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiTW5ET9Ee2_n5XNBGdaxw" base_Element="_yiTW40T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiT98UT9Ee2_n5XNBGdaxw" base_Element="_yiT98ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiT980T9Ee2_n5XNBGdaxw" base_Element="_yiT98kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiUlAUT9Ee2_n5XNBGdaxw" base_Element="_yiUlAET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiVzIET9Ee2_n5XNBGdaxw" base_Element="_yiVMEkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiVzI0T9Ee2_n5XNBGdaxw" base_Element="_yiVzIkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiWaMkT9Ee2_n5XNBGdaxw" base_Element="_yiWaMET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiXBQkT9Ee2_n5XNBGdaxw" base_Element="_yiXBQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiXBRET9Ee2_n5XNBGdaxw" base_Element="_yiXBQ0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiXoUkT9Ee2_n5XNBGdaxw" base_Element="_yiXoUUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiYPYET9Ee2_n5XNBGdaxw" base_Element="_yiXoU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiYPYkT9Ee2_n5XNBGdaxw" base_Element="_yiYPYUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiYPZET9Ee2_n5XNBGdaxw" base_Element="_yiYPY0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiY2cET9Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_yiYPZUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiY2cUT9Ee2_n5XNBGdaxw" base_Element="_yiYPZUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiZdhET9Ee2_n5XNBGdaxw" base_Element="_yiZdg0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiaEkET9Ee2_n5XNBGdaxw" base_Element="_yiZdhUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yiaroUT9Ee2_n5XNBGdaxw" genericsValue="Edge" base_Element="_yiaroET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yib5xUT9Ee2_n5XNBGdaxw" base_Element="_yib5xET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yicg0UT9Ee2_n5XNBGdaxw" base_Element="_yicg0ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yidH4ET9Ee2_n5XNBGdaxw" base_Element="_yicg0kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yidH5UT9Ee2_n5XNBGdaxw" base_Element="_yidH4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yidH50T9Ee2_n5XNBGdaxw" base_Element="_yidH5kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yidu8UT9Ee2_n5XNBGdaxw" genericsValue="Activation" base_Element="_yidu8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yidu8kT9Ee2_n5XNBGdaxw" base_Element="_yidu8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yieWAET9Ee2_n5XNBGdaxw" genericsValue="String, Integer" base_Element="_yidu80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yieWAUT9Ee2_n5XNBGdaxw" base_Element="_yidu80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yie9EET9Ee2_n5XNBGdaxw" base_Element="_yieWAkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yigLMkT9Ee2_n5XNBGdaxw" base_Element="_yigLMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yigyQET9Ee2_n5XNBGdaxw" base_Element="_yigLM0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yigyQkT9Ee2_n5XNBGdaxw" base_Element="_yigyQUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yigyRET9Ee2_n5XNBGdaxw" base_Element="_yigyQ0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yihZUET9Ee2_n5XNBGdaxw" base_Element="_yigyRUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yihZUkT9Ee2_n5XNBGdaxw" base_Element="_yihZUUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiiAYET9Ee2_n5XNBGdaxw" base_Element="_yihZU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiiAYkT9Ee2_n5XNBGdaxw" base_Element="_yiiAYUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiiAZET9Ee2_n5XNBGdaxw" base_Element="_yiiAY0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiincET9Ee2_n5XNBGdaxw" base_Element="_yiiAZUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiinckT9Ee2_n5XNBGdaxw" base_Element="_yiincUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yijOgET9Ee2_n5XNBGdaxw" base_Element="_yiinc0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yijOgkT9Ee2_n5XNBGdaxw" base_Element="_yijOgUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yikcokT9Ee2_n5XNBGdaxw" base_Element="_yikcoUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yikcpET9Ee2_n5XNBGdaxw" base_Element="_yikco0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yilDsET9Ee2_n5XNBGdaxw" base_Element="_yikcpUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yimR0UT9Ee2_n5XNBGdaxw" base_Element="_yimR0ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yimR00T9Ee2_n5XNBGdaxw" base_Element="_yimR0kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yim440T9Ee2_n5XNBGdaxw" base_Element="_yim44kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yinf8ET9Ee2_n5XNBGdaxw" base_Element="_yim45ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yioHA0T9Ee2_n5XNBGdaxw" base_Element="_yioHAkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiouEET9Ee2_n5XNBGdaxw" base_Element="_yioHBET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiouE0T9Ee2_n5XNBGdaxw" base_Element="_yiouEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yipVIET9Ee2_n5XNBGdaxw" base_Element="_yiouFET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yipVIkT9Ee2_n5XNBGdaxw" base_Element="_yipVIUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yipVJET9Ee2_n5XNBGdaxw" base_Element="_yipVI0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yip8MUT9Ee2_n5XNBGdaxw" base_Element="_yip8MET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yip8M0T9Ee2_n5XNBGdaxw" base_Element="_yip8MkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yirxYkT9Ee2_n5XNBGdaxw" base_Element="_yirxYUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yisYcUT9Ee2_n5XNBGdaxw" base_Element="_yisYcET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yisYc0T9Ee2_n5XNBGdaxw" base_Element="_yisYckT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yis_gET9Ee2_n5XNBGdaxw" base_Element="_yisYdET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yis_gkT9Ee2_n5XNBGdaxw" base_Element="_yis_gUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yis_hET9Ee2_n5XNBGdaxw" base_Element="_yis_g0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yitmkUT9Ee2_n5XNBGdaxw" base_Element="_yis_hUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yitmlET9Ee2_n5XNBGdaxw" base_Element="_yitmkkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiuNoET9Ee2_n5XNBGdaxw" base_Element="_yitmlUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiuNokT9Ee2_n5XNBGdaxw" base_Element="_yiuNoUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiu0sUT9Ee2_n5XNBGdaxw" base_Element="_yiu0sET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiu0s0T9Ee2_n5XNBGdaxw" base_Element="_yiu0skT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yivbwUT9Ee2_n5XNBGdaxw" base_Element="_yivbwET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiwC0ET9Ee2_n5XNBGdaxw" base_Element="_yivbwkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yixQ8kT9Ee2_n5XNBGdaxw" base_Element="_yixQ8UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yixQ9ET9Ee2_n5XNBGdaxw" base_Element="_yixQ80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yix4AET9Ee2_n5XNBGdaxw" base_Element="_yixQ9UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yix4A0T9Ee2_n5XNBGdaxw" base_Element="_yix4AkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yix4BUT9Ee2_n5XNBGdaxw" base_Element="_yix4BET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiyfEUT9Ee2_n5XNBGdaxw" base_Element="_yiyfEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiyfE0T9Ee2_n5XNBGdaxw" base_Element="_yiyfEkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiyfFUT9Ee2_n5XNBGdaxw" base_Element="_yiyfFET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiyfF0T9Ee2_n5XNBGdaxw" base_Element="_yiyfFkT9Ee2_n5XNBGdaxw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_yizGIET9Ee2_n5XNBGdaxw" name="getNumChannels" method="_yjbYSET9Ee2_n5XNBGdaxw">
      <ownedParameter xmi:id="_yizGIUT9Ee2_n5XNBGdaxw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_yizGIkT9Ee2_n5XNBGdaxw" base_Element="_yizGIET9Ee2_n5XNBGdaxw">
    <annotations xmi:id="_yizGI0T9Ee2_n5XNBGdaxw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiztMET9Ee2_n5XNBGdaxw" base_Element="_yizGJET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yiztM0T9Ee2_n5XNBGdaxw" base_Element="_yiztMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi07UUT9Ee2_n5XNBGdaxw" base_Element="_yi0US0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi07VkT9Ee2_n5XNBGdaxw" base_Element="_yi07VET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi1iYUT9Ee2_n5XNBGdaxw" base_Element="_yi1iYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yi1iY0T9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yi1iYkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yi2JcET9Ee2_n5XNBGdaxw" genericsValue="String" base_Element="_yi1iZUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi3-oET9Ee2_n5XNBGdaxw" base_Element="_yi3XmkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi3-pET9Ee2_n5XNBGdaxw" base_Element="_yi3-o0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yi4lsET9Ee2_n5XNBGdaxw" genericsValue="InstructionParameters" base_Element="_yi3-pUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi4lsUT9Ee2_n5XNBGdaxw" base_Element="_yi3-pUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi4ls0T9Ee2_n5XNBGdaxw" base_Element="_yi4lskT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi5z1ET9Ee2_n5XNBGdaxw" base_Element="_yi5z00T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi5z1kT9Ee2_n5XNBGdaxw" base_Element="_yi5z1UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi6a4UT9Ee2_n5XNBGdaxw" base_Element="_yi6a4ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi6a40T9Ee2_n5XNBGdaxw" base_Element="_yi6a4kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi6a5UT9Ee2_n5XNBGdaxw" base_Element="_yi6a5ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7B8ET9Ee2_n5XNBGdaxw" base_Element="_yi6a5kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7B8kT9Ee2_n5XNBGdaxw" base_Element="_yi7B8UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7B9ET9Ee2_n5XNBGdaxw" base_Element="_yi7B80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7B9kT9Ee2_n5XNBGdaxw" base_Element="_yi7B9UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7pAUT9Ee2_n5XNBGdaxw" base_Element="_yi7pAET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7pA0T9Ee2_n5XNBGdaxw" base_Element="_yi7pAkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7pBUT9Ee2_n5XNBGdaxw" base_Element="_yi7pBET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi7pB0T9Ee2_n5XNBGdaxw" base_Element="_yi7pBkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi8QEkT9Ee2_n5XNBGdaxw" base_Element="_yi8QEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi8QFET9Ee2_n5XNBGdaxw" base_Element="_yi8QE0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi8QFkT9Ee2_n5XNBGdaxw" base_Element="_yi8QFUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi83IET9Ee2_n5XNBGdaxw" base_Element="_yi8QF0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi9eNkT9Ee2_n5XNBGdaxw" base_Element="_yi9eNUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi-FQUT9Ee2_n5XNBGdaxw" base_Element="_yi-FQET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi-FQ0T9Ee2_n5XNBGdaxw" base_Element="_yi-FQkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi-FRUT9Ee2_n5XNBGdaxw" base_Element="_yi-FRET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yi-sVET9Ee2_n5XNBGdaxw" genericsValue="Integer" base_Element="_yi-sU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yi-sVUT9Ee2_n5XNBGdaxw" base_Element="_yi-sU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Generics xmi:id="_yi_TYUT9Ee2_n5XNBGdaxw" genericsValue="SchedulableObject" base_Element="_yi_TYET9Ee2_n5XNBGdaxw"/>
  <uml:OpaqueBehavior xmi:id="_yjbYSET9Ee2_n5XNBGdaxw" name="getNumChannels" specification="_yizGIET9Ee2_n5XNBGdaxw">
    <ownedParameter xmi:id="_yjbYSUT9Ee2_n5XNBGdaxw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_ykK_IET9Ee2_n5XNBGdaxw" base_Element="_ykKYEET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykLmMET9Ee2_n5XNBGdaxw" base_Element="_ykK_IUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykLmM0T9Ee2_n5XNBGdaxw" base_Element="_ykLmMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykMNQET9Ee2_n5XNBGdaxw" base_Element="_ykLmNET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykMNQ0T9Ee2_n5XNBGdaxw" base_Element="_ykMNQUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykM0UET9Ee2_n5XNBGdaxw" base_Element="_ykMNRET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykM0U0T9Ee2_n5XNBGdaxw" base_Element="_ykM0UUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykNbYET9Ee2_n5XNBGdaxw" base_Element="_ykM0VET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykNbY0T9Ee2_n5XNBGdaxw" base_Element="_ykNbYUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykOCcET9Ee2_n5XNBGdaxw" base_Element="_ykNbZET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykOCc0T9Ee2_n5XNBGdaxw" base_Element="_ykOCcUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykOpgET9Ee2_n5XNBGdaxw" base_Element="_ykOCdET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykOpg0T9Ee2_n5XNBGdaxw" base_Element="_ykOpgUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykPQkET9Ee2_n5XNBGdaxw" base_Element="_ykOphET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykPQk0T9Ee2_n5XNBGdaxw" base_Element="_ykPQkUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykPQlkT9Ee2_n5XNBGdaxw" base_Element="_ykPQlET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykP3okT9Ee2_n5XNBGdaxw" base_Element="_ykP3oET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykP3pUT9Ee2_n5XNBGdaxw" base_Element="_ykP3o0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykQesUT9Ee2_n5XNBGdaxw" base_Element="_ykP3pkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykQetET9Ee2_n5XNBGdaxw" base_Element="_ykQeskT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykRFwET9Ee2_n5XNBGdaxw" base_Element="_ykQetUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykRFw0T9Ee2_n5XNBGdaxw" base_Element="_ykRFwUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykRs0kT9Ee2_n5XNBGdaxw" base_Element="_ykRs0ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykRs1UT9Ee2_n5XNBGdaxw" base_Element="_ykRs00T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykST4ET9Ee2_n5XNBGdaxw" base_Element="_ykRs1kT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykST40T9Ee2_n5XNBGdaxw" base_Element="_ykST4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykS68ET9Ee2_n5XNBGdaxw" base_Element="_ykST5ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykS680T9Ee2_n5XNBGdaxw" base_Element="_ykS68UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykTiAET9Ee2_n5XNBGdaxw" base_Element="_ykS69ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykTiA0T9Ee2_n5XNBGdaxw" base_Element="_ykTiAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykUJEET9Ee2_n5XNBGdaxw" base_Element="_ykTiBET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykUJE0T9Ee2_n5XNBGdaxw" base_Element="_ykUJEUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykUwIET9Ee2_n5XNBGdaxw" base_Element="_ykUJFET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykUwI0T9Ee2_n5XNBGdaxw" base_Element="_ykUwIUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykVXMET9Ee2_n5XNBGdaxw" base_Element="_ykUwJET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykVXM0T9Ee2_n5XNBGdaxw" base_Element="_ykVXMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykV-QET9Ee2_n5XNBGdaxw" base_Element="_ykVXNET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykV-Q0T9Ee2_n5XNBGdaxw" base_Element="_ykV-QUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykV-RkT9Ee2_n5XNBGdaxw" base_Element="_ykV-RET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykWlUkT9Ee2_n5XNBGdaxw" base_Element="_ykWlUET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykWlVUT9Ee2_n5XNBGdaxw" base_Element="_ykWlU0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykXMYkT9Ee2_n5XNBGdaxw" base_Element="_ykXMYET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykXMZUT9Ee2_n5XNBGdaxw" base_Element="_ykXMY0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykXzckT9Ee2_n5XNBGdaxw" base_Element="_ykXzcET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykXzdUT9Ee2_n5XNBGdaxw" base_Element="_ykXzc0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykYagET9Ee2_n5XNBGdaxw" base_Element="_ykXzdkT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykYag0T9Ee2_n5XNBGdaxw" base_Element="_ykYagUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykZBkET9Ee2_n5XNBGdaxw" base_Element="_ykYahET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykZBk0T9Ee2_n5XNBGdaxw" base_Element="_ykZBkUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykZooET9Ee2_n5XNBGdaxw" base_Element="_ykZBlET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykZoo0T9Ee2_n5XNBGdaxw" base_Element="_ykZooUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykaPsET9Ee2_n5XNBGdaxw" base_Element="_ykZopET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykaPs0T9Ee2_n5XNBGdaxw" base_Element="_ykaPsUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yka2wET9Ee2_n5XNBGdaxw" base_Element="_ykaPtET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_yka2w0T9Ee2_n5XNBGdaxw" base_Element="_yka2wUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykbd0ET9Ee2_n5XNBGdaxw" base_Element="_yka2xET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykcE4ET9Ee2_n5XNBGdaxw" base_Element="_ykbd0UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykcE40T9Ee2_n5XNBGdaxw" base_Element="_ykcE4UT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykcr8kT9Ee2_n5XNBGdaxw" base_Element="_ykcr8ET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykdTAET9Ee2_n5XNBGdaxw" base_Element="_ykcr80T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykdTA0T9Ee2_n5XNBGdaxw" base_Element="_ykdTAUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykd6EET9Ee2_n5XNBGdaxw" base_Element="_ykdTBET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykd6E0T9Ee2_n5XNBGdaxw" base_Element="_ykd6EUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykd6FkT9Ee2_n5XNBGdaxw" base_Element="_ykd6FET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykehIET9Ee2_n5XNBGdaxw" base_Element="_ykd6F0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykehI0T9Ee2_n5XNBGdaxw" base_Element="_ykehIUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykfIMET9Ee2_n5XNBGdaxw" base_Element="_ykehJET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykfIM0T9Ee2_n5XNBGdaxw" base_Element="_ykfIMUT9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykfINkT9Ee2_n5XNBGdaxw" base_Element="_ykfINET9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Reference xmi:id="_ykfvQET9Ee2_n5XNBGdaxw" base_Element="_ykfIN0T9Ee2_n5XNBGdaxw"/>
  <UMLLabProfile:Patch xmi:id="_zkqLwET9Ee2_n5XNBGdaxw" base_Element="_ySc9AET9Ee2_n5XNBGdaxw" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_zkqy0ET9Ee2_n5XNBGdaxw" base_Element="_yS3zxkT9Ee2_n5XNBGdaxw" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_zkqy0UT9Ee2_n5XNBGdaxw" base_Element="_yT3SQUT9Ee2_n5XNBGdaxw" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_zkrZ4ET9Ee2_n5XNBGdaxw" base_Element="_yT7jsET9Ee2_n5XNBGdaxw" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
